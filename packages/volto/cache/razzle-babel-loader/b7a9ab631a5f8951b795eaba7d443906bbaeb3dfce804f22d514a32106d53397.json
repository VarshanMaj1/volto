{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/AppExtras/AppExtras.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport { matchPath } from 'react-router';\nimport config from '@plone/volto/registry';\nconst AppExtras = props => {\n  const {\n    settings\n  } = config;\n  const {\n    appExtras = []\n  } = settings;\n  const {\n    pathname\n  } = props;\n  const active = appExtras.map(reg => {\n    const ignored = matchPath(pathname, reg.ignore);\n    if (ignored) return null;\n    const match = matchPath(pathname, reg.match);\n    return match ? {\n      reg,\n      match\n    } : null;\n  }).filter(reg => reg);\n  return active.map(({\n    reg: {\n      component,\n      props: extraProps\n    },\n    match\n  }, i) => {\n    const Insert = component;\n    return __jsx(Insert, _extends({\n      key: `appextra-${i}`,\n      match: match\n    }, props, extraProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }));\n  });\n};\nexport default AppExtras;","map":{"version":3,"names":["React","matchPath","config","AppExtras","props","settings","appExtras","pathname","active","map","reg","ignored","ignore","match","filter","component","extraProps","i","Insert","__jsx","_extends","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/AppExtras/AppExtras.jsx"],"sourcesContent":["import React from 'react';\nimport { matchPath } from 'react-router';\nimport config from '@plone/volto/registry';\n\nconst AppExtras = (props) => {\n  const { settings } = config;\n  const { appExtras = [] } = settings;\n  const { pathname } = props;\n  const active = appExtras\n    .map((reg) => {\n      const ignored = matchPath(pathname, reg.ignore);\n      if (ignored) return null;\n      const match = matchPath(pathname, reg.match);\n      return match ? { reg, match } : null;\n    })\n    .filter((reg) => reg);\n\n  return active.map(({ reg: { component, props: extraProps }, match }, i) => {\n    const Insert = component;\n    return (\n      <Insert key={`appextra-${i}`} match={match} {...props} {...extraProps} />\n    );\n  });\n};\n\nexport default AppExtras;\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAC3B,MAAM;IAAEC;EAAS,CAAC,GAAGH,MAAM;EAC3B,MAAM;IAAEI,SAAS,GAAG;EAAG,CAAC,GAAGD,QAAQ;EACnC,MAAM;IAAEE;EAAS,CAAC,GAAGH,KAAK;EAC1B,MAAMI,MAAM,GAAGF,SAAS,CACrBG,GAAG,CAAEC,GAAG,IAAK;IACZ,MAAMC,OAAO,GAAGV,SAAS,CAACM,QAAQ,EAAEG,GAAG,CAACE,MAAM,CAAC;IAC/C,IAAID,OAAO,EAAE,OAAO,IAAI;IACxB,MAAME,KAAK,GAAGZ,SAAS,CAACM,QAAQ,EAAEG,GAAG,CAACG,KAAK,CAAC;IAC5C,OAAOA,KAAK,GAAG;MAAEH,GAAG;MAAEG;IAAM,CAAC,GAAG,IAAI;EACtC,CAAC,CAAC,CACDC,MAAM,CAAEJ,GAAG,IAAKA,GAAG,CAAC;EAEvB,OAAOF,MAAM,CAACC,GAAG,CAAC,CAAC;IAAEC,GAAG,EAAE;MAAEK,SAAS;MAAEX,KAAK,EAAEY;IAAW,CAAC;IAAEH;EAAM,CAAC,EAAEI,CAAC,KAAK;IACzE,MAAMC,MAAM,GAAGH,SAAS;IACxB,OACEI,KAAA,CAACD,MAAM,EAAAE,QAAA;MAACC,GAAG,EAAE,YAAYJ,CAAC,EAAG;MAACJ,KAAK,EAAEA;IAAM,GAAKT,KAAK,EAAMY,UAAU;MAAAM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAAG,CAAC;EAE7E,CAAC,CAAC;AACJ,CAAC;AAED,eAAexB,SAAS","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}