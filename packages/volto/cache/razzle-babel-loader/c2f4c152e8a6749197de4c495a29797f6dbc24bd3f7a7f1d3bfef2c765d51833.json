{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Image/View.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UniversalLink from '@plone/volto/components/manage/UniversalLink/UniversalLink';\nimport cx from 'classnames';\nimport { flattenToAppURL, isInternalURL } from '@plone/volto/helpers/Url/Url';\nimport { withBlockExtensions } from '@plone/volto/helpers/Extensions';\nimport config from '@plone/volto/registry';\nexport const View = ({\n  className,\n  data,\n  detached,\n  properties,\n  style\n}) => {\n  var _data$href, _data$href$;\n  const href = (data === null || data === void 0 ? void 0 : (_data$href = data.href) === null || _data$href === void 0 ? void 0 : (_data$href$ = _data$href[0]) === null || _data$href$ === void 0 ? void 0 : _data$href$['@id']) || '';\n  const Image = config.getComponent({\n    name: 'Image'\n  }).component;\n  return __jsx(\"p\", {\n    className: cx('block image align', {\n      center: !Boolean(data.align),\n      detached\n    }, data.align, className),\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, data.url && __jsx(React.Fragment, null, (() => {\n    const image = __jsx(Image, {\n      className: cx({\n        'full-width': data.align === 'full',\n        large: data.size === 'l',\n        medium: data.size === 'm',\n        small: data.size === 's'\n      }),\n      item: data.image_scales ? {\n        '@id': data.url,\n        image_field: data.image_field,\n        image_scales: data.image_scales\n      } : undefined,\n      src: data.image_scales ? undefined : isInternalURL(data.url) ?\n      // Backwards compat in the case that the block is storing the full server URL\n      (() => {\n        if (data.size === 'l') return `${flattenToAppURL(data.url)}/@@images/image`;\n        if (data.size === 'm') return `${flattenToAppURL(data.url)}/@@images/image/preview`;\n        if (data.size === 's') return `${flattenToAppURL(data.url)}/@@images/image/mini`;\n        return `${flattenToAppURL(data.url)}/@@images/image`;\n      })() : data.url,\n      sizes: config.blocks.blocksConfig.image.getSizes(data),\n      alt: data.alt || '',\n      loading: \"lazy\",\n      responsive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    });\n    if (href) {\n      return __jsx(UniversalLink, {\n        href: href,\n        openLinkInNewTab: data.openLinkInNewTab,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, image);\n    } else {\n      return image;\n    }\n  })()));\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_c = View;\nView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default _c2 = withBlockExtensions(View);\nvar _c, _c2;\n$RefreshReg$(_c, \"View\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","PropTypes","UniversalLink","cx","flattenToAppURL","isInternalURL","withBlockExtensions","config","View","className","data","detached","properties","style","_data$href","_data$href$","href","Image","getComponent","name","component","__jsx","center","Boolean","align","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","url","Fragment","image","large","size","medium","small","item","image_scales","image_field","undefined","src","sizes","blocks","blocksConfig","getSizes","alt","loading","responsive","openLinkInNewTab","_c","propTypes","objectOf","any","isRequired","_c2","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Image/View.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport UniversalLink from '@plone/volto/components/manage/UniversalLink/UniversalLink';\nimport cx from 'classnames';\nimport { flattenToAppURL, isInternalURL } from '@plone/volto/helpers/Url/Url';\nimport { withBlockExtensions } from '@plone/volto/helpers/Extensions';\nimport config from '@plone/volto/registry';\n\nexport const View = ({ className, data, detached, properties, style }) => {\n  const href = data?.href?.[0]?.['@id'] || '';\n\n  const Image = config.getComponent({ name: 'Image' }).component;\n\n  return (\n    <p\n      className={cx(\n        'block image align',\n        {\n          center: !Boolean(data.align),\n          detached,\n        },\n        data.align,\n        className,\n      )}\n      style={style}\n    >\n      {data.url && (\n        <>\n          {(() => {\n            const image = (\n              <Image\n                className={cx({\n                  'full-width': data.align === 'full',\n                  large: data.size === 'l',\n                  medium: data.size === 'm',\n                  small: data.size === 's',\n                })}\n                item={\n                  data.image_scales\n                    ? {\n                        '@id': data.url,\n                        image_field: data.image_field,\n                        image_scales: data.image_scales,\n                      }\n                    : undefined\n                }\n                src={\n                  data.image_scales\n                    ? undefined\n                    : isInternalURL(data.url)\n                      ? // Backwards compat in the case that the block is storing the full server URL\n                        (() => {\n                          if (data.size === 'l')\n                            return `${flattenToAppURL(data.url)}/@@images/image`;\n                          if (data.size === 'm')\n                            return `${flattenToAppURL(\n                              data.url,\n                            )}/@@images/image/preview`;\n                          if (data.size === 's')\n                            return `${flattenToAppURL(\n                              data.url,\n                            )}/@@images/image/mini`;\n                          return `${flattenToAppURL(data.url)}/@@images/image`;\n                        })()\n                      : data.url\n                }\n                sizes={config.blocks.blocksConfig.image.getSizes(data)}\n                alt={data.alt || ''}\n                loading=\"lazy\"\n                responsive={true}\n              />\n            );\n            if (href) {\n              return (\n                <UniversalLink\n                  href={href}\n                  openLinkInNewTab={data.openLinkInNewTab}\n                >\n                  {image}\n                </UniversalLink>\n              );\n            } else {\n              return image;\n            }\n          })()}\n        </>\n      )}\n    </p>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default withBlockExtensions(View);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}