{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Image/schema.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { defineMessages } from 'react-intl';\nconst messages = defineMessages({\n  Image: {\n    \"id\": \"Image\",\n    \"defaultMessage\": \"Image\"\n  },\n  AltText: {\n    \"id\": \"Alt text\",\n    \"defaultMessage\": \"Alt text\"\n  },\n  Align: {\n    \"id\": \"Alignment\",\n    \"defaultMessage\": \"Alignment\"\n  },\n  size: {\n    \"id\": \"Image size\",\n    \"defaultMessage\": \"Image size\"\n  },\n  LinkTo: {\n    \"id\": \"Link to\",\n    \"defaultMessage\": \"Link to\"\n  },\n  openLinkInNewTab: {\n    \"id\": \"Open in a new tab\",\n    \"defaultMessage\": \"Open in a new tab\"\n  },\n  AltTextHint: {\n    \"id\": \"Alt text hint\",\n    \"defaultMessage\": \"Leave empty if the image is purely decorative.\"\n  },\n  AltTextHintLinkText: {\n    \"id\": \"Alt text hint link text\",\n    \"defaultMessage\": \"Describe the purpose of the image.\"\n  },\n  linkSettings: {\n    \"id\": \"Link settings\",\n    \"defaultMessage\": \"Link settings\"\n  }\n});\nexport function ImageSchema({\n  formData,\n  intl\n}) {\n  return {\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: [...(formData.url ? ['alt', 'align', 'size'] : [])]\n    }, ...(formData.url ? [{\n      id: 'link_settings',\n      title: intl.formatMessage(messages.linkSettings),\n      fields: ['href', 'openLinkInNewTab']\n    }] : [])],\n    properties: {\n      alt: {\n        title: intl.formatMessage(messages.AltText),\n        description: __jsx(React.Fragment, null, __jsx(\"a\", {\n          href: \"https://www.w3.org/WAI/tutorials/images/decision-tree/\",\n          title: intl.formatMessage(messages.openLinkInNewTab),\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }\n        }, intl.formatMessage(messages.AltTextHintLinkText)), ' ', intl.formatMessage(messages.AltTextHint))\n      },\n      align: {\n        title: intl.formatMessage(messages.Align),\n        widget: 'align',\n        default: 'center'\n      },\n      size: {\n        title: intl.formatMessage(messages.size),\n        widget: 'image_size',\n        default: 'l'\n      },\n      href: {\n        title: intl.formatMessage(messages.LinkTo),\n        widget: 'object_browser',\n        mode: 'link',\n        selectedItemAttrs: ['Title', 'Description', 'hasPreviewImage'],\n        allowExternals: true\n      },\n      openLinkInNewTab: {\n        title: intl.formatMessage(messages.openLinkInNewTab),\n        type: 'boolean'\n      }\n    },\n    required: []\n  };\n}\n_c = ImageSchema;\nexport const gridImageDisableSizeAndPositionHandlersSchema = ({\n  schema,\n  formData,\n  intl\n}) => {\n  schema.fieldsets[0].fields = schema.fieldsets[0].fields.filter(item => !['align', 'size'].includes(item));\n  return schema;\n};\nvar _c;\n$RefreshReg$(_c, \"ImageSchema\");","map":{"version":3,"names":["defineMessages","messages","Image","AltText","Align","size","LinkTo","openLinkInNewTab","AltTextHint","AltTextHintLinkText","linkSettings","ImageSchema","formData","intl","fieldsets","id","title","fields","url","formatMessage","properties","alt","description","__jsx","React","Fragment","href","target","rel","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","align","widget","default","mode","selectedItemAttrs","allowExternals","type","required","_c","gridImageDisableSizeAndPositionHandlersSchema","schema","filter","item","includes","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Image/schema.jsx"],"sourcesContent":["import { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  Image: {\n    id: 'Image',\n    defaultMessage: 'Image',\n  },\n  AltText: {\n    id: 'Alt text',\n    defaultMessage: 'Alt text',\n  },\n  Align: {\n    id: 'Alignment',\n    defaultMessage: 'Alignment',\n  },\n  size: {\n    id: 'Image size',\n    defaultMessage: 'Image size',\n  },\n  LinkTo: {\n    id: 'Link to',\n    defaultMessage: 'Link to',\n  },\n  openLinkInNewTab: {\n    id: 'Open in a new tab',\n    defaultMessage: 'Open in a new tab',\n  },\n  AltTextHint: {\n    id: 'Alt text hint',\n    defaultMessage: 'Leave empty if the image is purely decorative.',\n  },\n  AltTextHintLinkText: {\n    id: 'Alt text hint link text',\n    defaultMessage: 'Describe the purpose of the image.',\n  },\n  linkSettings: {\n    id: 'Link settings',\n    defaultMessage: 'Link settings',\n  },\n});\n\nexport function ImageSchema({ formData, intl }) {\n  return {\n    fieldsets: [\n      {\n        id: 'default',\n        title: 'Default',\n        fields: [...(formData.url ? ['alt', 'align', 'size'] : [])],\n      },\n      ...(formData.url\n        ? [\n            {\n              id: 'link_settings',\n              title: intl.formatMessage(messages.linkSettings),\n              fields: ['href', 'openLinkInNewTab'],\n            },\n          ]\n        : []),\n    ],\n    properties: {\n      alt: {\n        title: intl.formatMessage(messages.AltText),\n        description: (\n          <>\n            <a\n              href=\"https://www.w3.org/WAI/tutorials/images/decision-tree/\"\n              title={intl.formatMessage(messages.openLinkInNewTab)}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {intl.formatMessage(messages.AltTextHintLinkText)}\n            </a>{' '}\n            {intl.formatMessage(messages.AltTextHint)}\n          </>\n        ),\n      },\n      align: {\n        title: intl.formatMessage(messages.Align),\n        widget: 'align',\n        default: 'center',\n      },\n      size: {\n        title: intl.formatMessage(messages.size),\n        widget: 'image_size',\n        default: 'l',\n      },\n      href: {\n        title: intl.formatMessage(messages.LinkTo),\n        widget: 'object_browser',\n        mode: 'link',\n        selectedItemAttrs: ['Title', 'Description', 'hasPreviewImage'],\n        allowExternals: true,\n      },\n      openLinkInNewTab: {\n        title: intl.formatMessage(messages.openLinkInNewTab),\n        type: 'boolean',\n      },\n    },\n    required: [],\n  };\n}\n\nexport const gridImageDisableSizeAndPositionHandlersSchema = ({\n  schema,\n  formData,\n  intl,\n}) => {\n  schema.fieldsets[0].fields = schema.fieldsets[0].fields.filter(\n    (item) => !['align', 'size'].includes(item),\n  );\n  return schema;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Image","defaultMessage":"Image"},{"id":"Alt text","defaultMessage":"Alt text"},{"id":"Alignment","defaultMessage":"Alignment"},{"id":"Image size","defaultMessage":"Image size"},{"id":"Link to","defaultMessage":"Link to"},{"id":"Open in a new tab","defaultMessage":"Open in a new tab"},{"id":"Alt text hint","defaultMessage":"Leave empty if the image is purely decorative."},{"id":"Alt text hint link text","defaultMessage":"Describe the purpose of the image."},{"id":"Link settings","defaultMessage":"Link settings"}]}},"sourceType":"module","externalDependencies":[]}