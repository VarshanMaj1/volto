{"ast":null,"code":"import _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Maps/MapsSidebar.jsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { MapsSchema } from './schema';\nimport { useIntl, defineMessages } from 'react-intl';\nimport globeSVG from '@plone/volto/icons/globe.svg';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { BlockDataForm } from '@plone/volto/components/manage/Form';\nimport { Segment } from 'semantic-ui-react';\nconst messages = defineMessages({\n  Maps: {\n    \"id\": \"Maps\",\n    \"defaultMessage\": \"Maps\"\n  },\n  NoMaps: {\n    \"id\": \"No map selected\",\n    \"defaultMessage\": \"No map selected\"\n  }\n});\nconst MapsSidebar = props => {\n  _s();\n  const {\n    data,\n    block,\n    blocksErrors,\n    onChangeBlock,\n    navRoot,\n    contentType\n  } = props;\n  const intl = useIntl();\n  const schema = MapsSchema(_objectSpread(_objectSpread({}, props), {}, {\n    intl\n  }));\n  return __jsx(React.Fragment, null, !data.url ? __jsx(Segment, {\n    className: \"sidebar-metadata-container\",\n    secondary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, props.intl.formatMessage(messages.NoMaps), __jsx(Icon, {\n    name: globeSVG,\n    size: \"100px\",\n    color: \"#b8c6c8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })) : __jsx(BlockDataForm, {\n    schema: schema,\n    title: intl.formatMessage(messages.Maps),\n    onChangeField: (id, value) => {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        [id]: value\n      }));\n    },\n    onChangeBlock: onChangeBlock,\n    formData: data,\n    block: block,\n    navRoot: navRoot,\n    contentType: contentType,\n    errors: blocksErrors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }));\n};\n_s(MapsSidebar, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n_c = MapsSidebar;\nexport default MapsSidebar;\nvar _c;\n$RefreshReg$(_c, \"MapsSidebar\");","map":{"version":3,"names":["React","MapsSchema","useIntl","defineMessages","globeSVG","Icon","BlockDataForm","Segment","messages","Maps","NoMaps","MapsSidebar","props","_s","data","block","blocksErrors","onChangeBlock","navRoot","contentType","intl","schema","_objectSpread","__jsx","Fragment","url","className","secondary","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","formatMessage","name","size","color","title","onChangeField","id","value","formData","errors","_c","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Maps/MapsSidebar.jsx"],"sourcesContent":["import React from 'react';\nimport { MapsSchema } from './schema';\nimport { useIntl, defineMessages } from 'react-intl';\nimport globeSVG from '@plone/volto/icons/globe.svg';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { BlockDataForm } from '@plone/volto/components/manage/Form';\nimport { Segment } from 'semantic-ui-react';\n\nconst messages = defineMessages({\n  Maps: {\n    id: 'Maps',\n    defaultMessage: 'Maps',\n  },\n  NoMaps: {\n    id: 'No map selected',\n    defaultMessage: 'No map selected',\n  },\n});\n\nconst MapsSidebar = (props) => {\n  const { data, block, blocksErrors, onChangeBlock, navRoot, contentType } =\n    props;\n  const intl = useIntl();\n  const schema = MapsSchema({ ...props, intl });\n\n  return (\n    <>\n      {!data.url ? (\n        <Segment className=\"sidebar-metadata-container\" secondary>\n          {props.intl.formatMessage(messages.NoMaps)}\n          <Icon name={globeSVG} size=\"100px\" color=\"#b8c6c8\" />\n        </Segment>\n      ) : (\n        <BlockDataForm\n          schema={schema}\n          title={intl.formatMessage(messages.Maps)}\n          onChangeField={(id, value) => {\n            onChangeBlock(block, {\n              ...data,\n              [id]: value,\n            });\n          }}\n          onChangeBlock={onChangeBlock}\n          formData={data}\n          block={block}\n          navRoot={navRoot}\n          contentType={contentType}\n          errors={blocksErrors}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MapsSidebar;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,UAAU;AACrC,SAASC,OAAO,EAAEC,cAAc,QAAQ,YAAY;AACpD,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,IAAI,MAAM,yCAAyC;AAC1D,SAASC,aAAa,QAAQ,qCAAqC;AACnE,SAASC,OAAO,QAAQ,mBAAmB;AAE3C,MAAMC,QAAQ,GAAGL,cAAc,CAAC;EAC9BM,IAAI;IAAA;IAAA;EAAA,CAGH;EACDC,MAAM;IAAA;IAAA;EAAA;AAIR,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC,YAAY;IAAEC,aAAa;IAAEC,OAAO;IAAEC;EAAY,CAAC,GACtEP,KAAK;EACP,MAAMQ,IAAI,GAAGlB,OAAO,CAAC,CAAC;EACtB,MAAMmB,MAAM,GAAGpB,UAAU,CAAAqB,aAAA,CAAAA,aAAA,KAAMV,KAAK;IAAEQ;EAAI,EAAE,CAAC;EAE7C,OACEG,KAAA,CAAAvB,KAAA,CAAAwB,QAAA,QACG,CAACV,IAAI,CAACW,GAAG,GACRF,KAAA,CAAChB,OAAO;IAACmB,SAAS,EAAC,4BAA4B;IAACC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtDrB,KAAK,CAACQ,IAAI,CAACc,aAAa,CAAC1B,QAAQ,CAACE,MAAM,CAAC,EAC1Ca,KAAA,CAAClB,IAAI;IAAC8B,IAAI,EAAE/B,QAAS;IAACgC,IAAI,EAAC,OAAO;IAACC,KAAK,EAAC,SAAS;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC7C,CAAC,GAEVV,KAAA,CAACjB,aAAa;IACZe,MAAM,EAAEA,MAAO;IACfiB,KAAK,EAAElB,IAAI,CAACc,aAAa,CAAC1B,QAAQ,CAACC,IAAI,CAAE;IACzC8B,aAAa,EAAEA,CAACC,EAAE,EAAEC,KAAK,KAAK;MAC5BxB,aAAa,CAACF,KAAK,EAAAO,aAAA,CAAAA,aAAA,KACdR,IAAI;QACP,CAAC0B,EAAE,GAAGC;MAAK,EACZ,CAAC;IACJ,CAAE;IACFxB,aAAa,EAAEA,aAAc;IAC7ByB,QAAQ,EAAE5B,IAAK;IACfC,KAAK,EAAEA,KAAM;IACbG,OAAO,EAAEA,OAAQ;IACjBC,WAAW,EAAEA,WAAY;IACzBwB,MAAM,EAAE3B,YAAa;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACtB,CAEH,CAAC;AAEP,CAAC;AAACpB,EAAA,CAjCIF,WAAW;EAAA,QAGFT,OAAO;AAAA;AAAA0C,EAAA,GAHhBjC,WAAW;AAmCjB,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Maps","defaultMessage":"Maps"},{"id":"No map selected","defaultMessage":"No map selected"}]}},"sourceType":"module","externalDependencies":[]}