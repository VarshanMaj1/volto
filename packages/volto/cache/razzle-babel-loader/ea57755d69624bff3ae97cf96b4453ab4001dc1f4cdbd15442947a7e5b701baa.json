{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Controlpanels/Relations/Relations.jsx\";\nvar __jsx = React.createElement;\n/**\n * Relations Control Panel\n */\nimport React, { useEffect, useState } from 'react';\nimport find from 'lodash/find';\nimport { useSelector } from 'react-redux';\nimport { createPortal } from 'react-dom';\nimport { useHistory } from 'react-router';\nimport { Link, useLocation } from 'react-router-dom';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\nimport { Divider, Message, Segment } from 'semantic-ui-react';\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport { messages } from '@plone/volto/helpers/MessageLabels/MessageLabels';\nimport { listActions } from '@plone/volto/actions/actions/actions';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nimport { getParentUrl } from '@plone/volto/helpers/Url/Url';\nimport RelationsMatrix from '@plone/volto/components/manage/Controlpanels/Relations/RelationsMatrix';\nimport backSVG from '@plone/volto/icons/back.svg';\nconst RelationsControlPanel = () => {\n  const intl = useIntl();\n  const history = useHistory();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const {\n    0: isClient,\n    1: setIsClient\n  } = useState(false);\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n  const brokenRelations = useSelector(state => {\n    var _state$relations, _state$relations$stat, _state$relations$stat2;\n    return (_state$relations = state.relations) === null || _state$relations === void 0 ? void 0 : (_state$relations$stat = _state$relations.stats) === null || _state$relations$stat === void 0 ? void 0 : (_state$relations$stat2 = _state$relations$stat.data) === null || _state$relations$stat2 === void 0 ? void 0 : _state$relations$stat2.broken;\n  });\n  const relations_stats = useSelector(state => {\n    var _state$relations2, _state$relations2$sta;\n    return (_state$relations2 = state.relations) === null || _state$relations2 === void 0 ? void 0 : (_state$relations2$sta = _state$relations2.stats) === null || _state$relations2$sta === void 0 ? void 0 : _state$relations2$sta.data;\n  });\n  const actions = useSelector(state => {\n    var _state$actions$action, _state$actions;\n    return (_state$actions$action = (_state$actions = state.actions) === null || _state$actions === void 0 ? void 0 : _state$actions.actions) !== null && _state$actions$action !== void 0 ? _state$actions$action : {};\n  });\n  const can_edit = find(actions.object, {\n    id: 'edit'\n  });\n  useEffect(() => {\n    dispatch(listActions('/'));\n  }, [dispatch]);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"ui container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"relations-control-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(Helmet, {\n    title: intl.formatMessage(messages.relations),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), can_edit ? __jsx(Segment.Group, {\n    raised: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, __jsx(Segment, {\n    className: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, brokenRelations && Object.keys(brokenRelations).length > 0 ? __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, __jsx(Message, {\n    warning: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Some relations are broken. Please fix.\",\n    defaultMessage: \"Some relations are broken. Please fix.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }\n  })), __jsx(Divider, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  })) : null, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Relations\",\n    defaultMessage: \"Relations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  })), relations_stats !== null && relations_stats !== void 0 && relations_stats.error ? __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }, __jsx(Divider, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }), __jsx(Message, {\n    warning: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Please upgrade to plone.restapi >= 8.39.0.\",\n    defaultMessage: \"Please upgrade to plone.restapi >= 8.39.0.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 23\n    }\n  }))) : null), __jsx(Segment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, __jsx(RelationsMatrix, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }))) : __jsx(Segment.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, __jsx(Segment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Relations\",\n    defaultMessage: \"Relations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), __jsx(Divider, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }), __jsx(FormattedMessage, {\n    id: \"You have not the required permission for this control panel.\",\n    defaultMessage: \"You have not the required permission for this control panel.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }))))), isClient && /*#__PURE__*/createPortal(__jsx(Toolbar, {\n    pathname: location.pathname,\n    hideDefaultViewButtons: true,\n    inner: __jsx(Link, {\n      className: \"item\",\n      to: \"#\",\n      onClick: () => {\n        history.push(getParentUrl(location.pathname));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      name: backSVG,\n      className: \"contents circled\",\n      size: \"30px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), document.getElementById('toolbar')));\n};\nexport default RelationsControlPanel;","map":{"version":3,"names":["React","useEffect","useState","find","useSelector","createPortal","useHistory","Link","useLocation","FormattedMessage","useIntl","useDispatch","Divider","Message","Segment","Helmet","messages","listActions","Icon","Toolbar","getParentUrl","RelationsMatrix","backSVG","RelationsControlPanel","intl","history","location","dispatch","isClient","setIsClient","brokenRelations","state","_state$relations","_state$relations$stat","_state$relations$stat2","relations","stats","data","broken","relations_stats","_state$relations2","_state$relations2$sta","actions","_state$actions$action","_state$actions","can_edit","object","id","__jsx","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","formatMessage","Group","raised","Object","keys","length","warning","defaultMessage","hidden","error","pathname","hideDefaultViewButtons","inner","to","onClick","push","name","size","document","getElementById"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Controlpanels/Relations/Relations.jsx"],"sourcesContent":["/**\n * Relations Control Panel\n */\nimport React, { useEffect, useState } from 'react';\nimport find from 'lodash/find';\nimport { useSelector } from 'react-redux';\nimport { createPortal } from 'react-dom';\nimport { useHistory } from 'react-router';\nimport { Link, useLocation } from 'react-router-dom';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\nimport { Divider, Message, Segment } from 'semantic-ui-react';\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport { messages } from '@plone/volto/helpers/MessageLabels/MessageLabels';\nimport { listActions } from '@plone/volto/actions/actions/actions';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nimport { getParentUrl } from '@plone/volto/helpers/Url/Url';\nimport RelationsMatrix from '@plone/volto/components/manage/Controlpanels/Relations/RelationsMatrix';\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst RelationsControlPanel = () => {\n  const intl = useIntl();\n  const history = useHistory();\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const [isClient, setIsClient] = useState(false);\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  const brokenRelations = useSelector(\n    (state) => state.relations?.stats?.data?.broken,\n  );\n\n  const relations_stats = useSelector((state) => state.relations?.stats?.data);\n  const actions = useSelector((state) => state.actions?.actions ?? {});\n  const can_edit = find(actions.object, {\n    id: 'edit',\n  });\n\n  useEffect(() => {\n    dispatch(listActions('/'));\n  }, [dispatch]);\n\n  return (\n    <>\n      <div className=\"ui container\">\n        <div className=\"relations-control-panel\">\n          <Helmet title={intl.formatMessage(messages.relations)} />\n          {can_edit ? (\n            <Segment.Group raised>\n              <Segment className=\"primary\">\n                {brokenRelations && Object.keys(brokenRelations).length > 0 ? (\n                  <React.Fragment>\n                    <Message warning>\n                      <FormattedMessage\n                        id=\"Some relations are broken. Please fix.\"\n                        defaultMessage=\"Some relations are broken. Please fix.\"\n                      />\n                    </Message>\n                    <Divider hidden />\n                  </React.Fragment>\n                ) : null}\n                <h1>\n                  <FormattedMessage id=\"Relations\" defaultMessage=\"Relations\" />\n                </h1>\n                {relations_stats?.error ? (\n                  <React.Fragment>\n                    <Divider hidden />\n                    <Message warning>\n                      <FormattedMessage\n                        id=\"Please upgrade to plone.restapi >= 8.39.0.\"\n                        defaultMessage=\"Please upgrade to plone.restapi >= 8.39.0.\"\n                      />\n                    </Message>\n                  </React.Fragment>\n                ) : null}\n              </Segment>\n              <Segment>\n                <RelationsMatrix />\n              </Segment>\n            </Segment.Group>\n          ) : (\n            <Segment.Group>\n              <Segment>\n                <FormattedMessage id=\"Relations\" defaultMessage=\"Relations\" />\n                <Divider hidden />\n                <FormattedMessage\n                  id=\"You have not the required permission for this control panel.\"\n                  defaultMessage=\"You have not the required permission for this control panel.\"\n                />\n              </Segment>\n            </Segment.Group>\n          )}\n        </div>\n      </div>\n\n      {isClient &&\n        createPortal(\n          <Toolbar\n            pathname={location.pathname}\n            hideDefaultViewButtons\n            inner={\n              <Link\n                className=\"item\"\n                to=\"#\"\n                onClick={() => {\n                  history.push(getParentUrl(location.pathname));\n                }}\n              >\n                <Icon name={backSVG} className=\"contents circled\" size=\"30px\" />\n              </Link>\n            }\n          />,\n          document.getElementById('toolbar'),\n        )}\n    </>\n  );\n};\n\nexport default RelationsControlPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Some relations are broken. Please fix.","defaultMessage":"Some relations are broken. Please fix."},{"id":"Relations","defaultMessage":"Relations"},{"id":"Please upgrade to plone.restapi >= 8.39.0.","defaultMessage":"Please upgrade to plone.restapi >= 8.39.0."},{"id":"You have not the required permission for this control panel.","defaultMessage":"You have not the required permission for this control panel."}]}},"sourceType":"module","externalDependencies":[]}