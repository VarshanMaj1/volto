{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Search/components/SortOn.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { compose } from 'redux';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { Option, DropdownIndicator } from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { selectTheme, sortOnSelectStyles } from './SelectStyling';\nimport upSVG from '@plone/volto/icons/sort-up.svg';\nimport downSVG from '@plone/volto/icons/sort-down.svg';\nconst messages = defineMessages({\n  noSelection: {\n    \"id\": \"No selection\",\n    \"defaultMessage\": \"No selection\"\n  },\n  sortOn: {\n    \"id\": \"Sort on\",\n    \"defaultMessage\": \"Sort on\"\n  },\n  ascending: {\n    \"id\": \"Ascending\",\n    \"defaultMessage\": \"Ascending\"\n  },\n  descending: {\n    \"id\": \"Descending\",\n    \"defaultMessage\": \"Descending\"\n  },\n  sortedOn: {\n    \"id\": \"Sorted on\",\n    \"defaultMessage\": \"Sorted on\"\n  }\n});\nconst SortOn = props => {\n  var _data$query, _sortable_indexes$act;\n  const {\n    data = {},\n    reactSelect,\n    sortOn = null,\n    sortOrder = null,\n    setSortOn,\n    setSortOrder,\n    isEditMode,\n    querystring = {},\n    intl\n  } = props;\n  const {\n    sortable_indexes\n  } = querystring;\n  const Select = reactSelect.default;\n  const defaultSortOn = (data === null || data === void 0 ? void 0 : (_data$query = data.query) === null || _data$query === void 0 ? void 0 : _data$query.sort_on) || '';\n  const activeSortOn = sortOn || defaultSortOn;\n  let {\n    sortOnOptions = []\n  } = data;\n  sortOnOptions = [defaultSortOn, ...sortOnOptions];\n  sortOnOptions = [...new Set(sortOnOptions)];\n  const showSelectField = sortOnOptions.length > 1;\n  if (!showSelectField && !activeSortOn) {\n    return null;\n  }\n  const value = {\n    value: activeSortOn || intl.formatMessage(messages.noSelection),\n    label: activeSortOn && sortable_indexes ? (_sortable_indexes$act = sortable_indexes[activeSortOn]) === null || _sortable_indexes$act === void 0 ? void 0 : _sortable_indexes$act.title : activeSortOn || intl.formatMessage(messages.noSelection)\n  };\n  return __jsx(\"div\", {\n    className: \"search-sort-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"search-sort-on\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, showSelectField ? __jsx(React.Fragment, null, __jsx(\"span\", {\n    className: \"sort-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, intl.formatMessage(messages.sortOn)), __jsx(Select, {\n    id: \"select-search-sort-on\",\n    name: \"select-searchblock-sort-on\",\n    className: \"search-react-select-container\",\n    classNamePrefix: \"react-select\",\n    placeholder: intl.formatMessage(messages.sortOn),\n    styles: sortOnSelectStyles,\n    theme: selectTheme,\n    components: {\n      DropdownIndicator,\n      Option\n    },\n    options: [...sortOnOptions.map(k => {\n      var _sortable_indexes$k;\n      return {\n        value: k,\n        label: ((_sortable_indexes$k = sortable_indexes[k]) === null || _sortable_indexes$k === void 0 ? void 0 : _sortable_indexes$k.title) || k || intl.formatMessage(messages.noSelection)\n      };\n    })],\n    isSearchable: false,\n    value: value,\n    onChange: data => {\n      !isEditMode && setSortOn(data.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  })) : __jsx(\"span\", {\n    className: \"sorted-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, intl.formatMessage(messages.sortedOn), __jsx(\"span\", {\n    className: \"sorted-label-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, value.label))), activeSortOn ? __jsx(React.Fragment, null, __jsx(Button, {\n    icon: true,\n    basic: true,\n    compact: true,\n    title: intl.formatMessage(messages.ascending),\n    className: cx({\n      active: sortOrder === 'ascending'\n    }),\n    onClick: () => {\n      !isEditMode && setSortOrder('ascending');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: downSVG,\n    size: \"25px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  })), __jsx(Button, {\n    icon: true,\n    basic: true,\n    compact: true,\n    title: intl.formatMessage(messages.descending),\n    className: cx({\n      active: sortOrder === 'descending'\n    }),\n    onClick: () => {\n      !isEditMode && setSortOrder('descending');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: upSVG,\n    size: \"25px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }))) : null);\n};\n_c = SortOn;\nexport default compose(injectIntl, injectLazyLibs(['reactSelect']))(SortOn);\nvar _c;\n$RefreshReg$(_c, \"SortOn\");","map":{"version":3,"names":["Button","defineMessages","injectIntl","cx","compose","Icon","Option","DropdownIndicator","injectLazyLibs","selectTheme","sortOnSelectStyles","upSVG","downSVG","messages","noSelection","sortOn","ascending","descending","sortedOn","SortOn","props","_data$query","_sortable_indexes$act","data","reactSelect","sortOrder","setSortOn","setSortOrder","isEditMode","querystring","intl","sortable_indexes","Select","default","defaultSortOn","query","sort_on","activeSortOn","sortOnOptions","Set","showSelectField","length","value","formatMessage","label","title","__jsx","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","React","Fragment","id","name","classNamePrefix","placeholder","styles","theme","components","options","map","k","_sortable_indexes$k","isSearchable","onChange","icon","basic","compact","active","onClick","size","_c","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Search/components/SortOn.jsx"],"sourcesContent":["import { Button } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { compose } from 'redux';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport {\n  Option,\n  DropdownIndicator,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { selectTheme, sortOnSelectStyles } from './SelectStyling';\n\nimport upSVG from '@plone/volto/icons/sort-up.svg';\nimport downSVG from '@plone/volto/icons/sort-down.svg';\n\nconst messages = defineMessages({\n  noSelection: {\n    id: 'No selection',\n    defaultMessage: 'No selection',\n  },\n  sortOn: {\n    id: 'Sort on',\n    defaultMessage: 'Sort on',\n  },\n  ascending: {\n    id: 'Ascending',\n    defaultMessage: 'Ascending',\n  },\n  descending: {\n    id: 'Descending',\n    defaultMessage: 'Descending',\n  },\n  sortedOn: {\n    id: 'Sorted on',\n    defaultMessage: 'Sorted on',\n  },\n});\n\nconst SortOn = (props) => {\n  const {\n    data = {},\n    reactSelect,\n    sortOn = null,\n    sortOrder = null,\n    setSortOn,\n    setSortOrder,\n    isEditMode,\n    querystring = {},\n    intl,\n  } = props;\n  const { sortable_indexes } = querystring;\n  const Select = reactSelect.default;\n\n  const defaultSortOn = data?.query?.sort_on || '';\n  const activeSortOn = sortOn || defaultSortOn;\n\n  let { sortOnOptions = [] } = data;\n  sortOnOptions = [defaultSortOn, ...sortOnOptions];\n  sortOnOptions = [...new Set(sortOnOptions)];\n\n  const showSelectField = sortOnOptions.length > 1;\n  if (!showSelectField && !activeSortOn) {\n    return null;\n  }\n  const value = {\n    value: activeSortOn || intl.formatMessage(messages.noSelection),\n    label:\n      activeSortOn && sortable_indexes\n        ? sortable_indexes[activeSortOn]?.title\n        : activeSortOn || intl.formatMessage(messages.noSelection),\n  };\n\n  return (\n    <div className=\"search-sort-wrapper\">\n      <div className=\"search-sort-on\">\n        {showSelectField ? (\n          <>\n            <span className=\"sort-label\">\n              {intl.formatMessage(messages.sortOn)}\n            </span>\n            <Select\n              id=\"select-search-sort-on\"\n              name=\"select-searchblock-sort-on\"\n              className=\"search-react-select-container\"\n              classNamePrefix=\"react-select\"\n              placeholder={intl.formatMessage(messages.sortOn)}\n              styles={sortOnSelectStyles}\n              theme={selectTheme}\n              components={{ DropdownIndicator, Option }}\n              options={[\n                ...sortOnOptions.map((k) => ({\n                  value: k,\n                  label:\n                    sortable_indexes[k]?.title ||\n                    k ||\n                    intl.formatMessage(messages.noSelection),\n                })),\n              ]}\n              isSearchable={false}\n              value={value}\n              onChange={(data) => {\n                !isEditMode && setSortOn(data.value);\n              }}\n            />\n          </>\n        ) : (\n          <span className=\"sorted-label\">\n            {intl.formatMessage(messages.sortedOn)}\n            <span className=\"sorted-label-value\">{value.label}</span>\n          </span>\n        )}\n      </div>\n      {activeSortOn ? (\n        <>\n          <Button\n            icon\n            basic\n            compact\n            title={intl.formatMessage(messages.ascending)}\n            className={cx({\n              active: sortOrder === 'ascending',\n            })}\n            onClick={() => {\n              !isEditMode && setSortOrder('ascending');\n            }}\n          >\n            <Icon name={downSVG} size=\"25px\" />\n          </Button>\n          <Button\n            icon\n            basic\n            compact\n            title={intl.formatMessage(messages.descending)}\n            className={cx({\n              active: sortOrder === 'descending',\n            })}\n            onClick={() => {\n              !isEditMode && setSortOrder('descending');\n            }}\n          >\n            <Icon name={upSVG} size=\"25px\" />\n          </Button>\n        </>\n      ) : null}\n    </div>\n  );\n};\n\nexport default compose(injectIntl, injectLazyLibs(['reactSelect']))(SortOn);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"No selection","defaultMessage":"No selection"},{"id":"Sort on","defaultMessage":"Sort on"},{"id":"Ascending","defaultMessage":"Ascending"},{"id":"Descending","defaultMessage":"Descending"},{"id":"Sorted on","defaultMessage":"Sorted on"}]}},"sourceType":"module","externalDependencies":[]}