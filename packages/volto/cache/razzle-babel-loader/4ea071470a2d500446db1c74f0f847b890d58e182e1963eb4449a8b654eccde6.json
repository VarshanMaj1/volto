{"ast":null,"code":"import _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport contentSVG from '@plone/volto/icons/content.svg';\nimport calendarSVG from '@plone/volto/icons/calendar.svg';\nimport languageSVG from '@plone/volto/icons/language.svg';\nimport emailSVG from '@plone/volto/icons/email.svg';\nimport navSVG from '@plone/volto/icons/nav.svg';\nimport worldSVG from '@plone/volto/icons/world.svg';\nimport zoomSVG from '@plone/volto/icons/zoom.svg';\nimport megaphoneSVG from '@plone/volto/icons/megaphone.svg';\nimport editingSVG from '@plone/volto/icons/editing.svg';\nimport imageSVG from '@plone/volto/icons/image.svg';\nimport codeSVG from '@plone/volto/icons/code.svg';\nimport discussionSVG from '@plone/volto/icons/discussion.svg';\nimport securitySVG from '@plone/volto/icons/security.svg';\nimport groupSVG from '@plone/volto/icons/group.svg';\nimport userSVG from '@plone/volto/icons/user.svg';\nimport addonSVG from '@plone/volto/icons/add-on.svg';\nimport settingsSVG from '@plone/volto/icons/settings.svg';\nimport rulesSVG from '@plone/volto/icons/content-existing.svg';\nimport undoControlPanelSVG from '@plone/volto/icons/undo-control-panel.svg';\nimport linkSVG from '@plone/volto/icons/link.svg';\nimport relationsSVG from '@plone/volto/icons/ahead.svg';\nimport config from '@plone/volto/registry';\nexport const controlPanelsIcons = {\n  default: settingsSVG,\n  'dexterity-types': contentSVG,\n  'date-and-time': calendarSVG,\n  language: languageSVG,\n  mail: emailSVG,\n  navigation: navSVG,\n  site: worldSVG,\n  search: zoomSVG,\n  socialmedia: megaphoneSVG,\n  editing: editingSVG,\n  imaging: imageSVG,\n  markup: codeSVG,\n  'moderate-comments': discussionSVG,\n  security: securitySVG,\n  users: userSVG,\n  groups: groupSVG,\n  addons: addonSVG,\n  rules: rulesSVG,\n  undo: undoControlPanelSVG,\n  aliases: linkSVG,\n  relations: relationsSVG\n};\nexport const filterControlPanels = (controlpanels = []) => {\n  const HIDDEN_CONTROL_PANELS = ['markup', 'content-rules'];\n  return controlpanels.filter(controlpanel => !HIDDEN_CONTROL_PANELS.includes(controlpanel['@id'].split('/').pop()));\n};\nexport const unwantedControlPanelsFields = {\n  language: ['display_flags', 'always_show_selector'],\n  search: ['enable_livesearch'],\n  site: ['display_publication_date_in_byline', 'icon_visibility', 'thumb_visibility', 'no_thumbs_portlet', 'no_thumbs_lists', 'no_thumbs_summary', 'no_thumbs_tables', 'thumb_scale_portlet', 'thumb_scale_listing', 'thumb_scale_table', 'thumb_scale_summary', 'toolbar_position', 'toolbar_logo', 'default_page', 'site_favicon', 'site_favicon_mimetype', 'exposeDCMetaTags', 'enable_sitemap', 'webstats_js'],\n  editing: ['available_editors', 'default_editor', 'ext_editor'],\n  imaging: ['highpixeldensity_scales', 'quality_2x', 'quality_3x', 'picture_variants', 'image_captioning'],\n  navigation: ['generate_tabs', 'navigation_depth', 'nonfolderish_tabs', 'sort_tabs_on', 'sort_tabs_reversed', 'sitemap_depth']\n};\n\n// Filters props.controlpanel.schema to only valid/relevant fields\nexport const filterControlPanelsSchema = controlpanel => {\n  const panelType = controlpanel['@id'].split('/').pop();\n  const {\n    unwantedControlPanelsFields\n  } = config.settings;\n\n  // Creates modified version of properties object\n  const newPropertiesObj = Object.fromEntries(Object.entries(controlpanel.schema.properties).filter(([key, _val]) => !(unwantedControlPanelsFields[panelType] || []).includes(key)));\n  // Filters props.controlpanel.schema.fieldsets.fields to only valid/relevant fields\n  const filterFields = fields => {\n    return fields.filter(field => !(unwantedControlPanelsFields[panelType] || []).includes(field));\n  };\n  // Creates modified version of fieldsets array\n  const newFieldsets = controlpanel.schema.fieldsets.map(fieldset => {\n    return _objectSpread(_objectSpread({}, fieldset), {}, {\n      fields: filterFields(fieldset.fields)\n    });\n  });\n\n  // Returns clone of props.controlpanel.schema, with updated properties/fieldsets\n  return _objectSpread(_objectSpread({}, controlpanel.schema), {}, {\n    properties: newPropertiesObj,\n    fieldsets: newFieldsets\n  });\n};","map":{"version":3,"names":["contentSVG","calendarSVG","languageSVG","emailSVG","navSVG","worldSVG","zoomSVG","megaphoneSVG","editingSVG","imageSVG","codeSVG","discussionSVG","securitySVG","groupSVG","userSVG","addonSVG","settingsSVG","rulesSVG","undoControlPanelSVG","linkSVG","relationsSVG","config","controlPanelsIcons","default","language","mail","navigation","site","search","socialmedia","editing","imaging","markup","security","users","groups","addons","rules","undo","aliases","relations","filterControlPanels","controlpanels","HIDDEN_CONTROL_PANELS","filter","controlpanel","includes","split","pop","unwantedControlPanelsFields","filterControlPanelsSchema","panelType","settings","newPropertiesObj","Object","fromEntries","entries","schema","properties","key","_val","filterFields","fields","field","newFieldsets","fieldsets","map","fieldset","_objectSpread"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/config/ControlPanels.js"],"sourcesContent":["import contentSVG from '@plone/volto/icons/content.svg';\nimport calendarSVG from '@plone/volto/icons/calendar.svg';\nimport languageSVG from '@plone/volto/icons/language.svg';\nimport emailSVG from '@plone/volto/icons/email.svg';\nimport navSVG from '@plone/volto/icons/nav.svg';\nimport worldSVG from '@plone/volto/icons/world.svg';\nimport zoomSVG from '@plone/volto/icons/zoom.svg';\nimport megaphoneSVG from '@plone/volto/icons/megaphone.svg';\nimport editingSVG from '@plone/volto/icons/editing.svg';\nimport imageSVG from '@plone/volto/icons/image.svg';\nimport codeSVG from '@plone/volto/icons/code.svg';\nimport discussionSVG from '@plone/volto/icons/discussion.svg';\nimport securitySVG from '@plone/volto/icons/security.svg';\nimport groupSVG from '@plone/volto/icons/group.svg';\nimport userSVG from '@plone/volto/icons/user.svg';\nimport addonSVG from '@plone/volto/icons/add-on.svg';\nimport settingsSVG from '@plone/volto/icons/settings.svg';\nimport rulesSVG from '@plone/volto/icons/content-existing.svg';\nimport undoControlPanelSVG from '@plone/volto/icons/undo-control-panel.svg';\nimport linkSVG from '@plone/volto/icons/link.svg';\nimport relationsSVG from '@plone/volto/icons/ahead.svg';\nimport config from '@plone/volto/registry';\n\nexport const controlPanelsIcons = {\n  default: settingsSVG,\n  'dexterity-types': contentSVG,\n  'date-and-time': calendarSVG,\n  language: languageSVG,\n  mail: emailSVG,\n  navigation: navSVG,\n  site: worldSVG,\n  search: zoomSVG,\n  socialmedia: megaphoneSVG,\n  editing: editingSVG,\n  imaging: imageSVG,\n  markup: codeSVG,\n  'moderate-comments': discussionSVG,\n  security: securitySVG,\n  users: userSVG,\n  groups: groupSVG,\n  addons: addonSVG,\n  rules: rulesSVG,\n  undo: undoControlPanelSVG,\n  aliases: linkSVG,\n  relations: relationsSVG,\n};\n\nexport const filterControlPanels = (controlpanels = []) => {\n  const HIDDEN_CONTROL_PANELS = ['markup', 'content-rules'];\n\n  return controlpanels.filter(\n    (controlpanel) =>\n      !HIDDEN_CONTROL_PANELS.includes(controlpanel['@id'].split('/').pop()),\n  );\n};\n\nexport const unwantedControlPanelsFields = {\n  language: ['display_flags', 'always_show_selector'],\n  search: ['enable_livesearch'],\n  site: [\n    'display_publication_date_in_byline',\n    'icon_visibility',\n    'thumb_visibility',\n    'no_thumbs_portlet',\n    'no_thumbs_lists',\n    'no_thumbs_summary',\n    'no_thumbs_tables',\n    'thumb_scale_portlet',\n    'thumb_scale_listing',\n    'thumb_scale_table',\n    'thumb_scale_summary',\n    'toolbar_position',\n    'toolbar_logo',\n    'default_page',\n    'site_favicon',\n    'site_favicon_mimetype',\n    'exposeDCMetaTags',\n    'enable_sitemap',\n    'webstats_js',\n  ],\n  editing: ['available_editors', 'default_editor', 'ext_editor'],\n  imaging: [\n    'highpixeldensity_scales',\n    'quality_2x',\n    'quality_3x',\n    'picture_variants',\n    'image_captioning',\n  ],\n  navigation: [\n    'generate_tabs',\n    'navigation_depth',\n    'nonfolderish_tabs',\n    'sort_tabs_on',\n    'sort_tabs_reversed',\n    'sitemap_depth',\n  ],\n};\n\n// Filters props.controlpanel.schema to only valid/relevant fields\nexport const filterControlPanelsSchema = (controlpanel) => {\n  const panelType = controlpanel['@id'].split('/').pop();\n\n  const { unwantedControlPanelsFields } = config.settings;\n\n  // Creates modified version of properties object\n  const newPropertiesObj = Object.fromEntries(\n    Object.entries(controlpanel.schema.properties).filter(\n      ([key, _val]) =>\n        !(unwantedControlPanelsFields[panelType] || []).includes(key),\n    ),\n  );\n  // Filters props.controlpanel.schema.fieldsets.fields to only valid/relevant fields\n  const filterFields = (fields) => {\n    return fields.filter(\n      (field) =>\n        !(unwantedControlPanelsFields[panelType] || []).includes(field),\n    );\n  };\n  // Creates modified version of fieldsets array\n  const newFieldsets = controlpanel.schema.fieldsets.map((fieldset) => {\n    return { ...fieldset, fields: filterFields(fieldset.fields) };\n  });\n\n  // Returns clone of props.controlpanel.schema, with updated properties/fieldsets\n  return {\n    ...controlpanel.schema,\n    properties: newPropertiesObj,\n    fieldsets: newFieldsets,\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}