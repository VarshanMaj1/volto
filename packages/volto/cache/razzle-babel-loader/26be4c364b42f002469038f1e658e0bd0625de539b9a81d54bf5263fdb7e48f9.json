{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Image/ImageSidebar.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Button } from 'semantic-ui-react';\nimport { useIntl, FormattedMessage, defineMessages } from 'react-intl';\nimport { flattenToAppURL, isInternalURL } from '@plone/volto/helpers/Url/Url';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Image from '@plone/volto/components/theme/Image/Image';\nimport { BlockDataForm } from '@plone/volto/components/manage/Form';\nimport { ImageSchema } from './schema';\nimport imageSVG from '@plone/volto/icons/image.svg';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nconst ImageSidebar = props => {\n  var _data$url$Id, _data$url;\n  const {\n    blocksConfig,\n    blocksErrors,\n    data,\n    block,\n    onChangeBlock,\n    navRoot,\n    contentType\n  } = props;\n  const intl = useIntl();\n  const schema = ImageSchema({\n    formData: data,\n    intl\n  });\n  return __jsx(React.Fragment, null, __jsx(\"header\", {\n    className: \"header pulled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Image\",\n    defaultMessage: \"Image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  })), __jsx(Button.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    title: intl.formatMessage(messages.clear),\n    basic: true,\n    disabled: !data.url,\n    onClick: () => {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        url: undefined,\n        image_scales: undefined,\n        image_field: undefined,\n        alt: data.url.title === data.alt ? undefined : data.alt\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: trashSVG,\n    size: \"24px\",\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })))), __jsx(Segment, {\n    className: \"sidebar-metadata-container image-sidebar\",\n    secondary: true,\n    attached: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, data.url ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, ((_data$url$Id = (_data$url = data.url) === null || _data$url === void 0 ? void 0 : _data$url['@id']) !== null && _data$url$Id !== void 0 ? _data$url$Id : data.url).split('/').slice(-1)[0]), __jsx(Image, {\n    item: data.image_scales ? {\n      '@id': data.url,\n      image_field: data.image_field,\n      image_scales: data.image_scales\n    } : undefined,\n    src: data.image_scales ? undefined : isInternalURL(data.url) ?\n    // Backwards compat in the case that the block is storing the full server URL\n    `${flattenToAppURL(data.url)}/@@images/image/preview` : data.url,\n    sizes: \"188px\",\n    alt: intl.formatMessage(messages.preview),\n    loading: \"lazy\",\n    responsive: true,\n    style: {\n      width: '50%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  })) : __jsx(React.Fragment, null, __jsx(FormattedMessage, {\n    id: \"No image selected\",\n    defaultMessage: \"No image selected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), __jsx(Icon, {\n    name: imageSVG,\n    size: \"100px\",\n    color: \"#b8c6c8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }))), __jsx(BlockDataForm, {\n    schema: schema,\n    title: schema.title,\n    onChangeField: (id, value) => {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        [id]: value\n      }));\n    },\n    onChangeBlock: onChangeBlock,\n    formData: data,\n    block: block,\n    blocksConfig: blocksConfig,\n    navRoot: navRoot,\n    contentType: contentType,\n    errors: blocksErrors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n};\nImageSidebar.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired\n};\nexport default ImageSidebar;\nconst messages = defineMessages({\n  preview: {\n    \"id\": \"image_block_preview\",\n    \"defaultMessage\": \"Image preview\"\n  },\n  clear: {\n    \"id\": \"image_block_clear\",\n    \"defaultMessage\": \"Clear image\"\n  }\n});","map":{"version":3,"names":["React","PropTypes","Segment","Button","useIntl","FormattedMessage","defineMessages","flattenToAppURL","isInternalURL","Icon","Image","BlockDataForm","ImageSchema","imageSVG","trashSVG","ImageSidebar","props","_data$url$Id","_data$url","blocksConfig","blocksErrors","data","block","onChangeBlock","navRoot","contentType","intl","schema","formData","__jsx","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","id","defaultMessage","Group","title","formatMessage","messages","clear","basic","disabled","url","onClick","_objectSpread","undefined","image_scales","image_field","alt","name","size","color","secondary","attached","split","slice","item","src","sizes","preview","loading","responsive","style","width","onChangeField","value","errors","propTypes","objectOf","any","isRequired","string","func"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Image/ImageSidebar.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Button } from 'semantic-ui-react';\nimport { useIntl, FormattedMessage, defineMessages } from 'react-intl';\nimport { flattenToAppURL, isInternalURL } from '@plone/volto/helpers/Url/Url';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Image from '@plone/volto/components/theme/Image/Image';\nimport { BlockDataForm } from '@plone/volto/components/manage/Form';\nimport { ImageSchema } from './schema';\nimport imageSVG from '@plone/volto/icons/image.svg';\nimport trashSVG from '@plone/volto/icons/delete.svg';\n\nconst ImageSidebar = (props) => {\n  const {\n    blocksConfig,\n    blocksErrors,\n    data,\n    block,\n    onChangeBlock,\n    navRoot,\n    contentType,\n  } = props;\n  const intl = useIntl();\n  const schema = ImageSchema({ formData: data, intl });\n  return (\n    <>\n      <header className=\"header pulled\">\n        <h2>\n          <FormattedMessage id=\"Image\" defaultMessage=\"Image\" />\n        </h2>\n        <Button.Group>\n          <Button\n            title={intl.formatMessage(messages.clear)}\n            basic\n            disabled={!data.url}\n            onClick={() => {\n              onChangeBlock(block, {\n                ...data,\n                url: undefined,\n                image_scales: undefined,\n                image_field: undefined,\n                alt: data.url.title === data.alt ? undefined : data.alt,\n              });\n            }}\n          >\n            <Icon name={trashSVG} size=\"24px\" color=\"red\" />\n          </Button>\n        </Button.Group>\n      </header>\n\n      <Segment\n        className=\"sidebar-metadata-container image-sidebar\"\n        secondary\n        attached\n      >\n        {data.url ? (\n          <>\n            <div>{(data.url?.['@id'] ?? data.url).split('/').slice(-1)[0]}</div>\n            <Image\n              item={\n                data.image_scales\n                  ? {\n                      '@id': data.url,\n                      image_field: data.image_field,\n                      image_scales: data.image_scales,\n                    }\n                  : undefined\n              }\n              src={\n                data.image_scales\n                  ? undefined\n                  : isInternalURL(data.url)\n                    ? // Backwards compat in the case that the block is storing the full server URL\n                      `${flattenToAppURL(data.url)}/@@images/image/preview`\n                    : data.url\n              }\n              sizes=\"188px\"\n              alt={intl.formatMessage(messages.preview)}\n              loading=\"lazy\"\n              responsive={true}\n              style={{ width: '50%' }}\n            />\n          </>\n        ) : (\n          <>\n            <FormattedMessage\n              id=\"No image selected\"\n              defaultMessage=\"No image selected\"\n            />\n            <Icon name={imageSVG} size=\"100px\" color=\"#b8c6c8\" />\n          </>\n        )}\n      </Segment>\n      <BlockDataForm\n        schema={schema}\n        title={schema.title}\n        onChangeField={(id, value) => {\n          onChangeBlock(block, {\n            ...data,\n            [id]: value,\n          });\n        }}\n        onChangeBlock={onChangeBlock}\n        formData={data}\n        block={block}\n        blocksConfig={blocksConfig}\n        navRoot={navRoot}\n        contentType={contentType}\n        errors={blocksErrors}\n      />\n    </>\n  );\n};\n\nImageSidebar.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n};\n\nexport default ImageSidebar;\n\nconst messages = defineMessages({\n  preview: {\n    id: 'image_block_preview',\n    defaultMessage: 'Image preview',\n  },\n  clear: {\n    id: 'image_block_clear',\n    defaultMessage: 'Clear image',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Image","defaultMessage":"Image"},{"id":"No image selected","defaultMessage":"No image selected"},{"id":"image_block_preview","defaultMessage":"Image preview"},{"id":"image_block_clear","defaultMessage":"Clear image"}]}},"sourceType":"module","externalDependencies":[]}