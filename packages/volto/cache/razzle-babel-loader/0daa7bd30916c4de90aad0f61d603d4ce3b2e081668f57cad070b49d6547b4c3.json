{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useRef, useEffect, useCallback } from 'react';\nexport default function useClipboard(clipboardText = '') {\n  _s();\n  const stringToCopy = useRef(clipboardText);\n  const {\n    0: copied,\n    1: setCopied\n  } = useState(false);\n\n  //synchronous: window.clipboardData.setData(options.format || \"text\", text);\n  const copyToClipboard = async text => {\n    if ('clipboard' in navigator) {\n      return await navigator.clipboard.writeText(text);\n    } else {\n      return document.execCommand('copy', true, text);\n    }\n  };\n  const copyAction = useCallback(async () => {\n    try {\n      await copyToClipboard(stringToCopy.current);\n      setCopied(true);\n    } catch (error) {\n      setCopied(false);\n    }\n  }, [stringToCopy]);\n  useEffect(() => {\n    stringToCopy.current = clipboardText;\n  }, [clipboardText]);\n  return [copied, copyAction, setCopied];\n}\n_s(useClipboard, \"aTq1qPaAqRCZ9iYK4nc1qpaciwA=\");","map":{"version":3,"names":["useState","useRef","useEffect","useCallback","useClipboard","clipboardText","_s","stringToCopy","copied","setCopied","copyToClipboard","text","navigator","clipboard","writeText","document","execCommand","copyAction","current","error"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/hooks/clipboard/useClipboard.js"],"sourcesContent":["import { useState, useRef, useEffect, useCallback } from 'react';\n\nexport default function useClipboard(clipboardText = '') {\n  const stringToCopy = useRef(clipboardText);\n  const [copied, setCopied] = useState(false);\n\n  //synchronous: window.clipboardData.setData(options.format || \"text\", text);\n  const copyToClipboard = async (text) => {\n    if ('clipboard' in navigator) {\n      return await navigator.clipboard.writeText(text);\n    } else {\n      return document.execCommand('copy', true, text);\n    }\n  };\n\n  const copyAction = useCallback(async () => {\n    try {\n      await copyToClipboard(stringToCopy.current);\n      setCopied(true);\n    } catch (error) {\n      setCopied(false);\n    }\n  }, [stringToCopy]);\n\n  useEffect(() => {\n    stringToCopy.current = clipboardText;\n  }, [clipboardText]);\n\n  return [copied, copyAction, setCopied];\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAEhE,eAAe,SAASC,YAAYA,CAACC,aAAa,GAAG,EAAE,EAAE;EAAAC,EAAA;EACvD,MAAMC,YAAY,GAAGN,MAAM,CAACI,aAAa,CAAC;EAC1C,MAAM;IAAA,GAACG,MAAM;IAAA,GAAEC;EAAS,IAAIT,QAAQ,CAAC,KAAK,CAAC;;EAE3C;EACA,MAAMU,eAAe,GAAG,MAAOC,IAAI,IAAK;IACtC,IAAI,WAAW,IAAIC,SAAS,EAAE;MAC5B,OAAO,MAAMA,SAAS,CAACC,SAAS,CAACC,SAAS,CAACH,IAAI,CAAC;IAClD,CAAC,MAAM;MACL,OAAOI,QAAQ,CAACC,WAAW,CAAC,MAAM,EAAE,IAAI,EAAEL,IAAI,CAAC;IACjD;EACF,CAAC;EAED,MAAMM,UAAU,GAAGd,WAAW,CAAC,YAAY;IACzC,IAAI;MACF,MAAMO,eAAe,CAACH,YAAY,CAACW,OAAO,CAAC;MAC3CT,SAAS,CAAC,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdV,SAAS,CAAC,KAAK,CAAC;IAClB;EACF,CAAC,EAAE,CAACF,YAAY,CAAC,CAAC;EAElBL,SAAS,CAAC,MAAM;IACdK,YAAY,CAACW,OAAO,GAAGb,aAAa;EACtC,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,OAAO,CAACG,MAAM,EAAES,UAAU,EAAER,SAAS,CAAC;AACxC;AAACH,EAAA,CA3BuBF,YAAY","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}