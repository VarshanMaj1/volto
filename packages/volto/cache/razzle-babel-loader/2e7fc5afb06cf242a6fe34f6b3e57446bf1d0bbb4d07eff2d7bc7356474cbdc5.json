{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { SET_BLOCKS_CLIPBOARD, RESET_BLOCKS_CLIPBOARD } from '@plone/volto/constants/ActionTypes';\nconst initialState = {};\nexport default function blocks(state = initialState, action = {}) {\n  switch (action.type) {\n    case RESET_BLOCKS_CLIPBOARD:\n      return initialState;\n    case SET_BLOCKS_CLIPBOARD:\n      return _objectSpread({}, Object.assign({}, action.cut ? {\n        cut: action.cut\n      } : {}, action.copy ? {\n        copy: action.copy\n      } : {}));\n    default:\n      break;\n  }\n  return state;\n}","map":{"version":3,"names":["SET_BLOCKS_CLIPBOARD","RESET_BLOCKS_CLIPBOARD","initialState","blocks","state","action","type","_objectSpread","Object","assign","cut","copy"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/reducers/blocksClipboard/blocksClipboard.js"],"sourcesContent":["import {\n  SET_BLOCKS_CLIPBOARD,\n  RESET_BLOCKS_CLIPBOARD,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {};\n\nexport default function blocks(state = initialState, action = {}) {\n  switch (action.type) {\n    case RESET_BLOCKS_CLIPBOARD:\n      return initialState;\n    case SET_BLOCKS_CLIPBOARD:\n      return {\n        ...Object.assign(\n          {},\n          action.cut ? { cut: action.cut } : {},\n          action.copy ? { copy: action.copy } : {},\n        ),\n      };\n    default:\n      break;\n  }\n  return state;\n}\n"],"mappings":";;;;;AAAA,SACEA,oBAAoB,EACpBC,sBAAsB,QACjB,oCAAoC;AAE3C,MAAMC,YAAY,GAAG,CAAC,CAAC;AAEvB,eAAe,SAASC,MAAMA,CAACC,KAAK,GAAGF,YAAY,EAAEG,MAAM,GAAG,CAAC,CAAC,EAAE;EAChE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKL,sBAAsB;MACzB,OAAOC,YAAY;IACrB,KAAKF,oBAAoB;MACvB,OAAAO,aAAA,KACKC,MAAM,CAACC,MAAM,CACd,CAAC,CAAC,EACFJ,MAAM,CAACK,GAAG,GAAG;QAAEA,GAAG,EAAEL,MAAM,CAACK;MAAI,CAAC,GAAG,CAAC,CAAC,EACrCL,MAAM,CAACM,IAAI,GAAG;QAAEA,IAAI,EAAEN,MAAM,CAACM;MAAK,CAAC,GAAG,CAAC,CACzC,CAAC;IAEL;MACE;EACJ;EACA,OAAOP,KAAK;AACd","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}