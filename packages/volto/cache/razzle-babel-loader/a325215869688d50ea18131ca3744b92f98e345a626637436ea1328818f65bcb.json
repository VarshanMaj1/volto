{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/Breadcrumbs/Breadcrumbs.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Breadcrumb, Container, Segment } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { getBreadcrumbs } from '@plone/volto/actions/breadcrumbs/breadcrumbs';\nimport { getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport { hasApiExpander } from '@plone/volto/helpers/Utils/Utils';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport homeSVG from '@plone/volto/icons/home.svg';\nconst messages = defineMessages({\n  home: {\n    \"id\": \"Home\",\n    \"defaultMessage\": \"Home\"\n  },\n  breadcrumbs: {\n    \"id\": \"Breadcrumbs\",\n    \"defaultMessage\": \"Breadcrumbs\"\n  },\n  controlpanel: {\n    \"id\": \"Site Setup\",\n    \"defaultMessage\": \"Site Setup\"\n  }\n});\nconst BreadcrumbsComponent = ({\n  pathname\n}) => {\n  _s();\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const {\n    pathname: realPath\n  } = useLocation();\n  const controlpanelItems = [{\n    url: '/controlpanel',\n    title: intl.formatMessage(messages.controlpanel)\n  }];\n  const items = useSelector(state => realPath.startsWith('/controlpanel') ? controlpanelItems : state.breadcrumbs.items, shallowEqual);\n  const root = useSelector(state => state.breadcrumbs.root);\n  useEffect(() => {\n    if (!hasApiExpander('breadcrumbs', getBaseUrl(pathname))) {\n      dispatch(getBreadcrumbs(getBaseUrl(pathname)));\n    }\n  }, [dispatch, pathname]);\n  return __jsx(Segment, {\n    role: \"navigation\",\n    \"aria-label\": intl.formatMessage(messages.breadcrumbs),\n    className: \"breadcrumbs\",\n    secondary: true,\n    vertical: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(Breadcrumb, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    to: root || '/',\n    className: \"section\",\n    title: intl.formatMessage(messages.home),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: homeSVG,\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  })), items.map((item, index, items) => [__jsx(Breadcrumb.Divider, {\n    key: `divider-${item.url}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), index < items.length - 1 ? __jsx(Link, {\n    key: item.url,\n    to: item.url,\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, item.title) : __jsx(Breadcrumb.Section, {\n    key: item.url,\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, item.title)]))));\n};\n_s(BreadcrumbsComponent, \"e0Zg4pCEn078dlAijCz4FnzJ9Tk=\", false, function () {\n  return [useIntl, useDispatch, useLocation, useSelector, useSelector];\n});\n_c = BreadcrumbsComponent;\nBreadcrumbsComponent.propTypes = {\n  pathname: PropTypes.string.isRequired\n};\nexport default BreadcrumbsComponent;\nvar _c;\n$RefreshReg$(_c, \"BreadcrumbsComponent\");","map":{"version":3,"names":["useEffect","PropTypes","Link","useLocation","Breadcrumb","Container","Segment","defineMessages","useIntl","useDispatch","useSelector","shallowEqual","getBreadcrumbs","getBaseUrl","hasApiExpander","Icon","homeSVG","messages","home","breadcrumbs","controlpanel","BreadcrumbsComponent","pathname","_s","intl","dispatch","realPath","controlpanelItems","url","title","formatMessage","items","state","startsWith","root","__jsx","role","className","secondary","vertical","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","to","name","size","map","item","index","Divider","key","length","Section","active","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/Breadcrumbs/Breadcrumbs.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Breadcrumb, Container, Segment } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\n\nimport { getBreadcrumbs } from '@plone/volto/actions/breadcrumbs/breadcrumbs';\nimport { getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport { hasApiExpander } from '@plone/volto/helpers/Utils/Utils';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport homeSVG from '@plone/volto/icons/home.svg';\n\nconst messages = defineMessages({\n  home: {\n    id: 'Home',\n    defaultMessage: 'Home',\n  },\n  breadcrumbs: {\n    id: 'Breadcrumbs',\n    defaultMessage: 'Breadcrumbs',\n  },\n  controlpanel: {\n    id: 'Site Setup',\n    defaultMessage: 'Site Setup',\n  },\n});\n\nconst BreadcrumbsComponent = ({ pathname }) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const { pathname: realPath } = useLocation();\n  const controlpanelItems = [\n    {\n      url: '/controlpanel',\n      title: intl.formatMessage(messages.controlpanel),\n    },\n  ];\n\n  const items = useSelector(\n    (state) =>\n      realPath.startsWith('/controlpanel')\n        ? controlpanelItems\n        : state.breadcrumbs.items,\n    shallowEqual,\n  );\n  const root = useSelector((state) => state.breadcrumbs.root);\n\n  useEffect(() => {\n    if (!hasApiExpander('breadcrumbs', getBaseUrl(pathname))) {\n      dispatch(getBreadcrumbs(getBaseUrl(pathname)));\n    }\n  }, [dispatch, pathname]);\n\n  return (\n    <Segment\n      role=\"navigation\"\n      aria-label={intl.formatMessage(messages.breadcrumbs)}\n      className=\"breadcrumbs\"\n      secondary\n      vertical\n    >\n      <Container>\n        <Breadcrumb>\n          <Link\n            to={root || '/'}\n            className=\"section\"\n            title={intl.formatMessage(messages.home)}\n          >\n            <Icon name={homeSVG} size=\"18px\" />\n          </Link>\n          {items.map((item, index, items) => [\n            <Breadcrumb.Divider key={`divider-${item.url}`} />,\n            index < items.length - 1 ? (\n              <Link key={item.url} to={item.url} className=\"section\">\n                {item.title}\n              </Link>\n            ) : (\n              <Breadcrumb.Section key={item.url} active>\n                {item.title}\n              </Breadcrumb.Section>\n            ),\n          ])}\n        </Breadcrumb>\n      </Container>\n    </Segment>\n  );\n};\n\nBreadcrumbsComponent.propTypes = {\n  pathname: PropTypes.string.isRequired,\n};\n\nexport default BreadcrumbsComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Home","defaultMessage":"Home"},{"id":"Breadcrumbs","defaultMessage":"Breadcrumbs"},{"id":"Site Setup","defaultMessage":"Site Setup"}]}},"sourceType":"module","externalDependencies":[]}