{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Sidebar/ObjectBrowserBody.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport { Input, Segment, Breadcrumb } from 'semantic-ui-react';\nimport join from 'lodash/join';\n\n// These absolute imports (without using the corresponding centralized index.js) are required\n// to cut circular import problems, this file should never use them. This is because of\n// the very nature of the functionality of the component and its relationship with others\nimport { searchContent } from '@plone/volto/actions/search/search';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { flattenToAppURL, isInternalURL } from '@plone/volto/helpers/Url/Url';\nimport config from '@plone/volto/registry';\nimport backSVG from '@plone/volto/icons/back.svg';\nimport folderSVG from '@plone/volto/icons/folder.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport searchSVG from '@plone/volto/icons/zoom.svg';\nimport linkSVG from '@plone/volto/icons/link.svg';\nimport homeSVG from '@plone/volto/icons/home.svg';\nimport iconsSVG from '@plone/volto/icons/apps.svg';\nimport listSVG from '@plone/volto/icons/list-bullet.svg';\nimport ObjectBrowserNav from '@plone/volto/components/manage/Sidebar/ObjectBrowserNav';\nconst messages = defineMessages({\n  SearchInputPlaceholder: {\n    \"id\": \"Search content\",\n    \"defaultMessage\": \"Search content\"\n  },\n  SelectedItems: {\n    \"id\": \"Selected items\",\n    \"defaultMessage\": \"Selected items\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  search: {\n    \"id\": \"Search SVG\",\n    \"defaultMessage\": \"Search SVG\"\n  },\n  iconView: {\n    \"id\": \"Icon View\",\n    \"defaultMessage\": \"Icon View\"\n  },\n  listView: {\n    \"id\": \"List View\",\n    \"defaultMessage\": \"List View\"\n  },\n  home: {\n    \"id\": \"Home\",\n    \"defaultMessage\": \"Home\"\n  },\n  of: {\n    \"id\": \"Selected items - x of y\",\n    \"defaultMessage\": \"of\"\n  }\n});\nfunction getParentURL(url) {\n  return flattenToAppURL(`${join(url.split('/').slice(0, -1), '/')}`) || '/';\n}\n\n/**\n * ObjectBrowserBody container class.\n * @class ObjectBrowserBody\n * @extends Component\n */\nclass ObjectBrowserBody extends Component {\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    var _this$props$data, _this$props$data2, _this$props$data3, _this$props$data4;\n    super(props);\n    _defineProperty(this, \"initialSearch\", mode => {\n      const currentSelected = mode === 'multiple' ? '' : mode === 'image' ? this.state.selectedImage : this.state.selectedHref;\n      if (currentSelected && isInternalURL(currentSelected)) {\n        this.props.searchContent(getParentURL(currentSelected), {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n          b_size: 1000\n        }, `${this.props.block}-${mode}`);\n      } else {\n        this.props.searchContent(this.state.currentFolder, {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n          b_size: 1000\n        }, `${this.props.block}-${mode}`);\n      }\n    });\n    _defineProperty(this, \"navigateTo\", id => {\n      this.props.searchContent(id, {\n        'path.depth': 1,\n        sort_on: 'getObjPositionInParent',\n        metadata_fields: '_all',\n        b_size: 1000\n      }, `${this.props.block}-${this.props.mode}`);\n      const parent = `${join(id.split('/').slice(0, -1), '/')}` || '/';\n      this.setState(() => ({\n        parentFolder: parent,\n        currentFolder: id || '/'\n      }));\n    });\n    _defineProperty(this, \"toggleSearchInput\", () => this.setState(prevState => ({\n      showSearchInput: !prevState.showSearchInput\n    }), () => {\n      var _this$searchInputRef;\n      if ((_this$searchInputRef = this.searchInputRef) !== null && _this$searchInputRef !== void 0 && _this$searchInputRef.current) {\n        this.searchInputRef.current.focus();\n      } else {\n        this.props.searchContent(this.state.currentFolder, {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n          b_size: 1000\n        }, `${this.props.block}-${this.props.mode}`);\n      }\n    }));\n    _defineProperty(this, \"toggleView\", () => this.setState(prevState => ({\n      view: prevState.view === 'icons' ? 'list' : 'icons'\n    })));\n    _defineProperty(this, \"onSearch\", e => {\n      const text = flattenToAppURL(e.target.value);\n      if (text.startsWith('/')) {\n        this.setState({\n          currentFolder: text\n        });\n        this.props.searchContent(text, {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n          portal_type: this.state.searchableTypes\n        }, `${this.props.block}-${this.props.mode}`);\n      } else {\n        text.length > 2 ? this.props.searchContent('/', {\n          SearchableText: `${text}*`,\n          metadata_fields: '_all',\n          portal_type: this.state.searchableTypes\n        }, `${this.props.block}-${this.props.mode}`) : this.props.searchContent('/', {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n          portal_type: this.state.searchableTypes\n        }, `${this.props.block}-${this.props.mode}`);\n      }\n    });\n    _defineProperty(this, \"onSelectItem\", item => {\n      const url = item['@id'];\n      const {\n        block,\n        data,\n        mode,\n        dataName,\n        onChangeBlock\n      } = this.props;\n      const updateState = mode => {\n        switch (mode) {\n          case 'image':\n            this.setState({\n              selectedImage: url,\n              currentImageFolder: getParentURL(url)\n            });\n            break;\n          case 'link':\n            this.setState({\n              selectedHref: url,\n              currentLinkFolder: getParentURL(url)\n            });\n            break;\n          default:\n            break;\n        }\n      };\n      if (dataName) {\n        onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n          [dataName]: url\n        }));\n      } else if (this.props.onSelectItem) {\n        this.props.onSelectItem(url, item);\n      } else if (mode === 'image') {\n        onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n          url: flattenToAppURL(item.getURL),\n          alt: ''\n        }));\n      } else if (mode === 'link') {\n        onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n          href: flattenToAppURL(url)\n        }));\n      }\n      updateState(mode);\n    });\n    _defineProperty(this, \"onChangeBlockData\", (key, value) => {\n      this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n        [key]: value\n      }));\n    });\n    _defineProperty(this, \"isSelectable\", item => {\n      const {\n        maximumSelectionSize,\n        data,\n        mode,\n        selectableTypes\n      } = this.props;\n      if (maximumSelectionSize && data && mode === 'multiple' && maximumSelectionSize <= data.length)\n        // The item should actually be selectable, but only for removing it from already selected items list.\n        // handleClickOnItem will handle the deselection logic.\n        // The item is not selectable if we reached/exceeded maximumSelectionSize and is not already selected.\n        return data.some(d => flattenToAppURL(d['@id']) === flattenToAppURL(item['@id']));\n      return selectableTypes.length > 0 ? selectableTypes.indexOf(item['@type']) >= 0 : true;\n    });\n    _defineProperty(this, \"handleClickOnItem\", item => {\n      if (this.props.mode === 'image') {\n        if (item.is_folderish) {\n          this.navigateTo(item['@id']);\n        }\n        if (config.settings.imageObjects.includes(item['@type'])) {\n          this.onSelectItem(item);\n        }\n      } else {\n        if (this.isSelectable(item)) {\n          if (!this.props.maximumSelectionSize || this.props.mode === 'multiple' || !this.props.data || this.props.data.length <= this.props.maximumSelectionSize) {\n            let isDeselecting;\n            if (this.props.mode === 'multiple' && Array.isArray(this.props.data)) isDeselecting = this.props.data.some(d => flattenToAppURL(d['@id']) === flattenToAppURL(item['@id']));\n            this.onSelectItem(item);\n            let length = this.props.data ? this.props.data.length : 0;\n            let stopSelecting = this.props.mode !== 'multiple';\n            if (isDeselecting && !stopSelecting) stopSelecting = this.props.maximumSelectionSize > 0 && length - 1 >= this.props.maximumSelectionSize;else stopSelecting = this.props.maximumSelectionSize > 0 && length + 1 >= this.props.maximumSelectionSize;\n            if (stopSelecting) {\n              this.props.closeObjectBrowser();\n            }\n          } else {\n            this.props.closeObjectBrowser();\n          }\n        } else {\n          this.navigateTo(item['@id']);\n        }\n      }\n    });\n    _defineProperty(this, \"handleDoubleClickOnItem\", item => {\n      if (this.props.mode === 'image') {\n        if (item.is_folderish) {\n          this.navigateTo(item['@id']);\n        }\n        if (config.settings.imageObjects.includes(item['@type'])) {\n          this.onSelectItem(item);\n          this.props.closeObjectBrowser();\n        }\n      } else {\n        if (this.isSelectable(item)) {\n          if (this.props.data.length < this.props.maximumSelectionSize) {\n            this.onSelectItem(item);\n          }\n          this.props.closeObjectBrowser();\n        } else {\n          this.navigateTo(item['@id']);\n        }\n      }\n    });\n    this.state = {\n      currentFolder: this.props.mode === 'multiple' ? '/' : this.props.contextURL || '/',\n      currentImageFolder: this.props.mode === 'multiple' ? '/' : this.props.mode === 'image' && (_this$props$data = this.props.data) !== null && _this$props$data !== void 0 && _this$props$data.url ? getParentURL(this.props.data.url) : '/',\n      currentLinkFolder: this.props.mode === 'multiple' ? '/' : this.props.mode === 'link' && (_this$props$data2 = this.props.data) !== null && _this$props$data2 !== void 0 && _this$props$data2.href ? getParentURL(this.props.data.href) : '/',\n      parentFolder: '',\n      selectedImage: this.props.mode === 'multiple' ? '' : this.props.mode === 'image' && (_this$props$data3 = this.props.data) !== null && _this$props$data3 !== void 0 && _this$props$data3.url ? flattenToAppURL(this.props.data.url) : '',\n      selectedHref: this.props.mode === 'multiple' ? '' : this.props.mode === 'link' && (_this$props$data4 = this.props.data) !== null && _this$props$data4 !== void 0 && _this$props$data4.href ? flattenToAppURL(this.props.data.href) : '',\n      showSearchInput: false,\n      // In image mode, the searchable types default to the image types which\n      // can be overridden with the property if specified.\n      searchableTypes: this.props.mode === 'image' ? this.props.searchableTypes || config.settings.imageObjects : this.props.searchableTypes,\n      view: this.props.mode === 'image' ? 'icons' : 'list'\n    };\n    this.searchInputRef = /*#__PURE__*/React.createRef();\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.initialSearch(this.props.mode);\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    var _this$props$data5;\n    return __jsx(Segment.Group, {\n      raised: true,\n      className: \"object-browser\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 7\n      }\n    }, __jsx(\"header\", {\n      className: \"header pulled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"vertical divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 11\n      }\n    }), this.state.showSearchInput ? __jsx(Input, {\n      className: \"search\",\n      ref: this.searchInputRef,\n      onChange: this.onSearch,\n      placeholder: this.props.intl.formatMessage(messages.SearchInputPlaceholder),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 13\n      }\n    }) : __jsx(React.Fragment, null, this.state.currentFolder === '/' ? __jsx(React.Fragment, null, this.props.mode === 'image' ? __jsx(Icon, {\n      name: folderSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 21\n      }\n    }) : __jsx(Icon, {\n      name: linkSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 21\n      }\n    })) : __jsx(\"button\", {\n      \"aria-label\": this.props.intl.formatMessage(messages.back),\n      onClick: () => this.navigateTo(this.state.parentFolder),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      name: backSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 19\n      }\n    })), this.props.mode === 'image' ? __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Choose Image\",\n      defaultMessage: \"Choose Image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 19\n      }\n    })) : __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Choose Target\",\n      defaultMessage: \"Choose Target\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 19\n      }\n    }))), __jsx(\"button\", {\n      \"aria-label\": this.props.intl.formatMessage(messages.search),\n      onClick: this.toggleSearchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }\n    }, __jsx(Icon, {\n      name: searchSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 13\n      }\n    })), __jsx(\"button\", {\n      className: \"clearSVG\",\n      onClick: this.props.closeObjectBrowser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 11\n      }\n    }, __jsx(Icon, {\n      name: clearSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 13\n      }\n    }))), __jsx(Segment, {\n      secondary: true,\n      className: \"breadcrumbs\",\n      vertical: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }\n    }, this.props.mode === 'image' && __jsx(\"button\", {\n      onClick: this.toggleView,\n      className: \"mode-switch\",\n      \"aria-label\": this.props.intl.formatMessage(this.state.view === 'list' ? messages.iconView : messages.listView),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 13\n      }\n    }, __jsx(Icon, {\n      name: this.state.view === 'list' ? iconsSVG : listSVG,\n      size: \"24px\",\n      className: \"mode-switch\",\n      title: this.props.intl.formatMessage(this.state.view === 'list' ? messages.iconView : messages.listView),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 15\n      }\n    })), !this.state.showSearchInput ? __jsx(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 13\n      }\n    }, this.state.currentFolder !== '/' ? this.state.currentFolder.split('/').map((item, index, items) => {\n      return __jsx(React.Fragment, {\n        key: `divider-${item}-${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 23\n        }\n      }, index === 0 ? __jsx(Breadcrumb.Section, {\n        onClick: () => this.navigateTo('/'),\n        role: \"button\",\n        \"aria-label\": this.props.intl.formatMessage(messages.home),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 27\n        }\n      }, __jsx(Icon, {\n        className: \"home-icon\",\n        name: homeSVG,\n        size: \"18px\",\n        title: this.props.intl.formatMessage(messages.home),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 29\n        }\n      })) : __jsx(React.Fragment, null, __jsx(Breadcrumb.Divider, {\n        key: `divider-${item.url}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 29\n        }\n      }), __jsx(Breadcrumb.Section, {\n        role: \"button\",\n        onClick: () => this.navigateTo(items.slice(0, index + 1).join('/')),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 29\n        }\n      }, item)));\n    }) : __jsx(Breadcrumb.Section, {\n      onClick: () => this.navigateTo('/'),\n      \"aria-label\": this.props.intl.formatMessage(messages.home),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      className: \"home-icon\",\n      name: homeSVG,\n      role: \"button\",\n      size: \"18px\",\n      title: this.props.intl.formatMessage(messages.home),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 19\n      }\n    }))) : __jsx(\"div\", {\n      className: \"searchResults\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Search results\",\n      defaultMessage: \"Search results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 15\n      }\n    }))), this.props.mode === 'multiple' && __jsx(Segment, {\n      className: \"infos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 11\n      }\n    }, this.props.intl.formatMessage(messages.SelectedItems), \":\", ' ', (_this$props$data5 = this.props.data) === null || _this$props$data5 === void 0 ? void 0 : _this$props$data5.length, this.props.maximumSelectionSize > 0 && __jsx(React.Fragment, null, ' ', this.props.intl.formatMessage(messages.of), ' ', this.props.maximumSelectionSize)), __jsx(ObjectBrowserNav, {\n      currentSearchResults: this.props.searchSubrequests[`${this.props.block}-${this.props.mode}`],\n      selected: this.props.mode === 'multiple' ? this.props.data : [{\n        '@id': this.props.mode === 'image' ? this.state.selectedImage : this.state.selectedHref\n      }],\n      handleClickOnItem: this.handleClickOnItem,\n      handleDoubleClickOnItem: this.handleDoubleClickOnItem,\n      mode: this.props.mode,\n      view: this.state.view,\n      navigateTo: this.navigateTo,\n      isSelectable: this.isSelectable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_defineProperty(ObjectBrowserBody, \"propTypes\", {\n  block: PropTypes.string.isRequired,\n  mode: PropTypes.string.isRequired,\n  data: PropTypes.any.isRequired,\n  searchSubrequests: PropTypes.objectOf(PropTypes.any).isRequired,\n  searchContent: PropTypes.func.isRequired,\n  closeObjectBrowser: PropTypes.func.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  onSelectItem: PropTypes.func,\n  dataName: PropTypes.string,\n  maximumSelectionSize: PropTypes.number,\n  contextURL: PropTypes.string,\n  searchableTypes: PropTypes.arrayOf(PropTypes.string)\n});\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\n_defineProperty(ObjectBrowserBody, \"defaultProps\", {\n  image: '',\n  href: '',\n  onSelectItem: null,\n  dataName: null,\n  selectableTypes: [],\n  searchableTypes: null,\n  maximumSelectionSize: null\n});\nexport default compose(injectIntl, connect(state => ({\n  searchSubrequests: state.search.subrequests,\n  lang: state.intl.locale\n}), {\n  searchContent\n}))(ObjectBrowserBody);","map":{"version":3,"names":["React","Component","PropTypes","compose","connect","defineMessages","FormattedMessage","injectIntl","Input","Segment","Breadcrumb","join","searchContent","Icon","flattenToAppURL","isInternalURL","config","backSVG","folderSVG","clearSVG","searchSVG","linkSVG","homeSVG","iconsSVG","listSVG","ObjectBrowserNav","messages","SearchInputPlaceholder","SelectedItems","back","search","iconView","listView","home","of","getParentURL","url","split","slice","ObjectBrowserBody","constructor","props","_this$props$data","_this$props$data2","_this$props$data3","_this$props$data4","_defineProperty","mode","currentSelected","state","selectedImage","selectedHref","sort_on","metadata_fields","b_size","block","currentFolder","id","parent","setState","parentFolder","prevState","showSearchInput","_this$searchInputRef","searchInputRef","current","focus","view","e","text","target","value","startsWith","portal_type","searchableTypes","length","SearchableText","item","data","dataName","onChangeBlock","updateState","currentImageFolder","currentLinkFolder","_objectSpread","onSelectItem","getURL","alt","href","key","maximumSelectionSize","selectableTypes","some","d","indexOf","is_folderish","navigateTo","settings","imageObjects","includes","isSelectable","isDeselecting","Array","isArray","stopSelecting","closeObjectBrowser","contextURL","createRef","componentDidMount","initialSearch","render","_this$props$data5","__jsx","Group","raised","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","onChange","onSearch","placeholder","intl","formatMessage","Fragment","name","size","onClick","defaultMessage","toggleSearchInput","secondary","vertical","toggleView","title","map","index","items","Section","role","Divider","currentSearchResults","searchSubrequests","selected","handleClickOnItem","handleDoubleClickOnItem","string","isRequired","any","objectOf","func","number","arrayOf","image","subrequests","lang","locale"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Sidebar/ObjectBrowserBody.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport { Input, Segment, Breadcrumb } from 'semantic-ui-react';\n\nimport join from 'lodash/join';\n\n// These absolute imports (without using the corresponding centralized index.js) are required\n// to cut circular import problems, this file should never use them. This is because of\n// the very nature of the functionality of the component and its relationship with others\nimport { searchContent } from '@plone/volto/actions/search/search';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { flattenToAppURL, isInternalURL } from '@plone/volto/helpers/Url/Url';\nimport config from '@plone/volto/registry';\n\nimport backSVG from '@plone/volto/icons/back.svg';\nimport folderSVG from '@plone/volto/icons/folder.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport searchSVG from '@plone/volto/icons/zoom.svg';\nimport linkSVG from '@plone/volto/icons/link.svg';\nimport homeSVG from '@plone/volto/icons/home.svg';\nimport iconsSVG from '@plone/volto/icons/apps.svg';\nimport listSVG from '@plone/volto/icons/list-bullet.svg';\n\nimport ObjectBrowserNav from '@plone/volto/components/manage/Sidebar/ObjectBrowserNav';\n\nconst messages = defineMessages({\n  SearchInputPlaceholder: {\n    id: 'Search content',\n    defaultMessage: 'Search content',\n  },\n  SelectedItems: {\n    id: 'Selected items',\n    defaultMessage: 'Selected items',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  search: {\n    id: 'Search SVG',\n    defaultMessage: 'Search SVG',\n  },\n  iconView: {\n    id: 'Icon View',\n    defaultMessage: 'Icon View',\n  },\n  listView: {\n    id: 'List View',\n    defaultMessage: 'List View',\n  },\n  home: {\n    id: 'Home',\n    defaultMessage: 'Home',\n  },\n  of: { id: 'Selected items - x of y', defaultMessage: 'of' },\n});\n\nfunction getParentURL(url) {\n  return flattenToAppURL(`${join(url.split('/').slice(0, -1), '/')}`) || '/';\n}\n\n/**\n * ObjectBrowserBody container class.\n * @class ObjectBrowserBody\n * @extends Component\n */\nclass ObjectBrowserBody extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    block: PropTypes.string.isRequired,\n    mode: PropTypes.string.isRequired,\n    data: PropTypes.any.isRequired,\n    searchSubrequests: PropTypes.objectOf(PropTypes.any).isRequired,\n    searchContent: PropTypes.func.isRequired,\n    closeObjectBrowser: PropTypes.func.isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    onSelectItem: PropTypes.func,\n    dataName: PropTypes.string,\n    maximumSelectionSize: PropTypes.number,\n    contextURL: PropTypes.string,\n    searchableTypes: PropTypes.arrayOf(PropTypes.string),\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    image: '',\n    href: '',\n    onSelectItem: null,\n    dataName: null,\n    selectableTypes: [],\n    searchableTypes: null,\n    maximumSelectionSize: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentFolder:\n        this.props.mode === 'multiple' ? '/' : this.props.contextURL || '/',\n      currentImageFolder:\n        this.props.mode === 'multiple'\n          ? '/'\n          : this.props.mode === 'image' && this.props.data?.url\n            ? getParentURL(this.props.data.url)\n            : '/',\n      currentLinkFolder:\n        this.props.mode === 'multiple'\n          ? '/'\n          : this.props.mode === 'link' && this.props.data?.href\n            ? getParentURL(this.props.data.href)\n            : '/',\n      parentFolder: '',\n      selectedImage:\n        this.props.mode === 'multiple'\n          ? ''\n          : this.props.mode === 'image' && this.props.data?.url\n            ? flattenToAppURL(this.props.data.url)\n            : '',\n      selectedHref:\n        this.props.mode === 'multiple'\n          ? ''\n          : this.props.mode === 'link' && this.props.data?.href\n            ? flattenToAppURL(this.props.data.href)\n            : '',\n      showSearchInput: false,\n      // In image mode, the searchable types default to the image types which\n      // can be overridden with the property if specified.\n      searchableTypes:\n        this.props.mode === 'image'\n          ? this.props.searchableTypes || config.settings.imageObjects\n          : this.props.searchableTypes,\n      view: this.props.mode === 'image' ? 'icons' : 'list',\n    };\n    this.searchInputRef = React.createRef();\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.initialSearch(this.props.mode);\n  }\n\n  initialSearch = (mode) => {\n    const currentSelected =\n      mode === 'multiple'\n        ? ''\n        : mode === 'image'\n          ? this.state.selectedImage\n          : this.state.selectedHref;\n    if (currentSelected && isInternalURL(currentSelected)) {\n      this.props.searchContent(\n        getParentURL(currentSelected),\n        {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n          b_size: 1000,\n        },\n        `${this.props.block}-${mode}`,\n      );\n    } else {\n      this.props.searchContent(\n        this.state.currentFolder,\n        {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n          b_size: 1000,\n        },\n        `${this.props.block}-${mode}`,\n      );\n    }\n  };\n\n  navigateTo = (id) => {\n    this.props.searchContent(\n      id,\n      {\n        'path.depth': 1,\n        sort_on: 'getObjPositionInParent',\n        metadata_fields: '_all',\n        b_size: 1000,\n      },\n      `${this.props.block}-${this.props.mode}`,\n    );\n    const parent = `${join(id.split('/').slice(0, -1), '/')}` || '/';\n    this.setState(() => ({\n      parentFolder: parent,\n      currentFolder: id || '/',\n    }));\n  };\n\n  toggleSearchInput = () =>\n    this.setState(\n      (prevState) => ({\n        showSearchInput: !prevState.showSearchInput,\n      }),\n      () => {\n        if (this.searchInputRef?.current) {\n          this.searchInputRef.current.focus();\n        } else {\n          this.props.searchContent(\n            this.state.currentFolder,\n            {\n              'path.depth': 1,\n              sort_on: 'getObjPositionInParent',\n              metadata_fields: '_all',\n              b_size: 1000,\n            },\n            `${this.props.block}-${this.props.mode}`,\n          );\n        }\n      },\n    );\n\n  toggleView = () =>\n    this.setState((prevState) => ({\n      view: prevState.view === 'icons' ? 'list' : 'icons',\n    }));\n\n  onSearch = (e) => {\n    const text = flattenToAppURL(e.target.value);\n    if (text.startsWith('/')) {\n      this.setState({ currentFolder: text });\n      this.props.searchContent(\n        text,\n        {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n          portal_type: this.state.searchableTypes,\n        },\n        `${this.props.block}-${this.props.mode}`,\n      );\n    } else {\n      text.length > 2\n        ? this.props.searchContent(\n            '/',\n            {\n              SearchableText: `${text}*`,\n              metadata_fields: '_all',\n              portal_type: this.state.searchableTypes,\n            },\n            `${this.props.block}-${this.props.mode}`,\n          )\n        : this.props.searchContent(\n            '/',\n            {\n              'path.depth': 1,\n              sort_on: 'getObjPositionInParent',\n              metadata_fields: '_all',\n              portal_type: this.state.searchableTypes,\n            },\n            `${this.props.block}-${this.props.mode}`,\n          );\n    }\n  };\n\n  onSelectItem = (item) => {\n    const url = item['@id'];\n    const { block, data, mode, dataName, onChangeBlock } = this.props;\n\n    const updateState = (mode) => {\n      switch (mode) {\n        case 'image':\n          this.setState({\n            selectedImage: url,\n            currentImageFolder: getParentURL(url),\n          });\n          break;\n        case 'link':\n          this.setState({\n            selectedHref: url,\n            currentLinkFolder: getParentURL(url),\n          });\n          break;\n        default:\n          break;\n      }\n    };\n\n    if (dataName) {\n      onChangeBlock(block, {\n        ...data,\n        [dataName]: url,\n      });\n    } else if (this.props.onSelectItem) {\n      this.props.onSelectItem(url, item);\n    } else if (mode === 'image') {\n      onChangeBlock(block, {\n        ...data,\n        url: flattenToAppURL(item.getURL),\n        alt: '',\n      });\n    } else if (mode === 'link') {\n      onChangeBlock(block, {\n        ...data,\n        href: flattenToAppURL(url),\n      });\n    }\n    updateState(mode);\n  };\n\n  onChangeBlockData = (key, value) => {\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      [key]: value,\n    });\n  };\n\n  isSelectable = (item) => {\n    const { maximumSelectionSize, data, mode, selectableTypes } = this.props;\n    if (\n      maximumSelectionSize &&\n      data &&\n      mode === 'multiple' &&\n      maximumSelectionSize <= data.length\n    )\n      // The item should actually be selectable, but only for removing it from already selected items list.\n      // handleClickOnItem will handle the deselection logic.\n      // The item is not selectable if we reached/exceeded maximumSelectionSize and is not already selected.\n      return data.some(\n        (d) => flattenToAppURL(d['@id']) === flattenToAppURL(item['@id']),\n      );\n    return selectableTypes.length > 0\n      ? selectableTypes.indexOf(item['@type']) >= 0\n      : true;\n  };\n\n  handleClickOnItem = (item) => {\n    if (this.props.mode === 'image') {\n      if (item.is_folderish) {\n        this.navigateTo(item['@id']);\n      }\n      if (config.settings.imageObjects.includes(item['@type'])) {\n        this.onSelectItem(item);\n      }\n    } else {\n      if (this.isSelectable(item)) {\n        if (\n          !this.props.maximumSelectionSize ||\n          this.props.mode === 'multiple' ||\n          !this.props.data ||\n          this.props.data.length <= this.props.maximumSelectionSize\n        ) {\n          let isDeselecting;\n          if (this.props.mode === 'multiple' && Array.isArray(this.props.data))\n            isDeselecting = this.props.data.some(\n              (d) => flattenToAppURL(d['@id']) === flattenToAppURL(item['@id']),\n            );\n          this.onSelectItem(item);\n          let length = this.props.data ? this.props.data.length : 0;\n          let stopSelecting = this.props.mode !== 'multiple';\n          if (isDeselecting && !stopSelecting)\n            stopSelecting =\n              this.props.maximumSelectionSize > 0 &&\n              length - 1 >= this.props.maximumSelectionSize;\n          else\n            stopSelecting =\n              this.props.maximumSelectionSize > 0 &&\n              length + 1 >= this.props.maximumSelectionSize;\n          if (stopSelecting) {\n            this.props.closeObjectBrowser();\n          }\n        } else {\n          this.props.closeObjectBrowser();\n        }\n      } else {\n        this.navigateTo(item['@id']);\n      }\n    }\n  };\n\n  handleDoubleClickOnItem = (item) => {\n    if (this.props.mode === 'image') {\n      if (item.is_folderish) {\n        this.navigateTo(item['@id']);\n      }\n      if (config.settings.imageObjects.includes(item['@type'])) {\n        this.onSelectItem(item);\n        this.props.closeObjectBrowser();\n      }\n    } else {\n      if (this.isSelectable(item)) {\n        if (this.props.data.length < this.props.maximumSelectionSize) {\n          this.onSelectItem(item);\n        }\n        this.props.closeObjectBrowser();\n      } else {\n        this.navigateTo(item['@id']);\n      }\n    }\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Segment.Group raised className=\"object-browser\">\n        <header className=\"header pulled\">\n          <div className=\"vertical divider\" />\n          {this.state.showSearchInput ? (\n            <Input\n              className=\"search\"\n              ref={this.searchInputRef}\n              onChange={this.onSearch}\n              placeholder={this.props.intl.formatMessage(\n                messages.SearchInputPlaceholder,\n              )}\n            />\n          ) : (\n            <>\n              {this.state.currentFolder === '/' ? (\n                <>\n                  {this.props.mode === 'image' ? (\n                    <Icon name={folderSVG} size=\"24px\" />\n                  ) : (\n                    <Icon name={linkSVG} size=\"24px\" />\n                  )}\n                </>\n              ) : (\n                <button\n                  aria-label={this.props.intl.formatMessage(messages.back)}\n                  onClick={() => this.navigateTo(this.state.parentFolder)}\n                >\n                  <Icon name={backSVG} size=\"24px\" />\n                </button>\n              )}\n              {this.props.mode === 'image' ? (\n                <h2>\n                  <FormattedMessage\n                    id=\"Choose Image\"\n                    defaultMessage=\"Choose Image\"\n                  />\n                </h2>\n              ) : (\n                <h2>\n                  <FormattedMessage\n                    id=\"Choose Target\"\n                    defaultMessage=\"Choose Target\"\n                  />\n                </h2>\n              )}\n            </>\n          )}\n\n          <button\n            aria-label={this.props.intl.formatMessage(messages.search)}\n            onClick={this.toggleSearchInput}\n          >\n            <Icon name={searchSVG} size=\"24px\" />\n          </button>\n          <button className=\"clearSVG\" onClick={this.props.closeObjectBrowser}>\n            <Icon name={clearSVG} size=\"24px\" />\n          </button>\n        </header>\n        <Segment secondary className=\"breadcrumbs\" vertical>\n          {this.props.mode === 'image' && (\n            <button\n              onClick={this.toggleView}\n              className=\"mode-switch\"\n              aria-label={this.props.intl.formatMessage(\n                this.state.view === 'list'\n                  ? messages.iconView\n                  : messages.listView,\n              )}\n            >\n              <Icon\n                name={this.state.view === 'list' ? iconsSVG : listSVG}\n                size=\"24px\"\n                className=\"mode-switch\"\n                title={this.props.intl.formatMessage(\n                  this.state.view === 'list'\n                    ? messages.iconView\n                    : messages.listView,\n                )}\n              />\n            </button>\n          )}\n          {!this.state.showSearchInput ? (\n            <Breadcrumb>\n              {this.state.currentFolder !== '/' ? (\n                this.state.currentFolder\n                  .split('/')\n                  .map((item, index, items) => {\n                    return (\n                      <React.Fragment key={`divider-${item}-${index}`}>\n                        {index === 0 ? (\n                          <Breadcrumb.Section\n                            onClick={() => this.navigateTo('/')}\n                            role=\"button\"\n                            aria-label={this.props.intl.formatMessage(\n                              messages.home,\n                            )}\n                          >\n                            <Icon\n                              className=\"home-icon\"\n                              name={homeSVG}\n                              size=\"18px\"\n                              title={this.props.intl.formatMessage(\n                                messages.home,\n                              )}\n                            />\n                          </Breadcrumb.Section>\n                        ) : (\n                          <>\n                            <Breadcrumb.Divider key={`divider-${item.url}`} />\n                            <Breadcrumb.Section\n                              role=\"button\"\n                              onClick={() =>\n                                this.navigateTo(\n                                  items.slice(0, index + 1).join('/'),\n                                )\n                              }\n                            >\n                              {item}\n                            </Breadcrumb.Section>\n                          </>\n                        )}\n                      </React.Fragment>\n                    );\n                  })\n              ) : (\n                <Breadcrumb.Section\n                  onClick={() => this.navigateTo('/')}\n                  aria-label={this.props.intl.formatMessage(messages.home)}\n                >\n                  <Icon\n                    className=\"home-icon\"\n                    name={homeSVG}\n                    role=\"button\"\n                    size=\"18px\"\n                    title={this.props.intl.formatMessage(messages.home)}\n                  />\n                </Breadcrumb.Section>\n              )}\n            </Breadcrumb>\n          ) : (\n            <div className=\"searchResults\">\n              <FormattedMessage\n                id=\"Search results\"\n                defaultMessage=\"Search results\"\n              />\n            </div>\n          )}\n        </Segment>\n        {this.props.mode === 'multiple' && (\n          <Segment className=\"infos\">\n            {this.props.intl.formatMessage(messages.SelectedItems)}:{' '}\n            {this.props.data?.length}\n            {this.props.maximumSelectionSize > 0 && (\n              <>\n                {' '}\n                {this.props.intl.formatMessage(messages.of)}{' '}\n                {this.props.maximumSelectionSize}\n              </>\n            )}\n          </Segment>\n        )}\n        <ObjectBrowserNav\n          currentSearchResults={\n            this.props.searchSubrequests[\n              `${this.props.block}-${this.props.mode}`\n            ]\n          }\n          selected={\n            this.props.mode === 'multiple'\n              ? this.props.data\n              : [\n                  {\n                    '@id':\n                      this.props.mode === 'image'\n                        ? this.state.selectedImage\n                        : this.state.selectedHref,\n                  },\n                ]\n          }\n          handleClickOnItem={this.handleClickOnItem}\n          handleDoubleClickOnItem={this.handleDoubleClickOnItem}\n          mode={this.props.mode}\n          view={this.state.view}\n          navigateTo={this.navigateTo}\n          isSelectable={this.isSelectable}\n        />\n      </Segment.Group>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      searchSubrequests: state.search.subrequests,\n      lang: state.intl.locale,\n    }),\n    { searchContent },\n  ),\n)(ObjectBrowserBody);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Search content","defaultMessage":"Search content"},{"id":"Selected items","defaultMessage":"Selected items"},{"id":"Back","defaultMessage":"Back"},{"id":"Search SVG","defaultMessage":"Search SVG"},{"id":"Icon View","defaultMessage":"Icon View"},{"id":"List View","defaultMessage":"List View"},{"id":"Home","defaultMessage":"Home"},{"id":"Selected items - x of y","defaultMessage":"of"},{"id":"Choose Image","defaultMessage":"Choose Image"},{"id":"Choose Target","defaultMessage":"Choose Target"},{"id":"Search results","defaultMessage":"Search results"}]}},"sourceType":"module","externalDependencies":[]}