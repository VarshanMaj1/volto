{"ast":null,"code":"import _extends from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Widgets/QuerystringWidget.jsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport ObjectWidget from '@plone/volto/components/manage/Widgets/ObjectWidget';\nconst messages = defineMessages({\n  Criteria: {\n    \"id\": \"Criteria\",\n    \"defaultMessage\": \"Criteria\"\n  },\n  depth: {\n    \"id\": \"Depth\",\n    \"defaultMessage\": \"Depth\"\n  },\n  SortOn: {\n    \"id\": \"Sort on\",\n    \"defaultMessage\": \"Sort on\"\n  },\n  reversedOrder: {\n    \"id\": \"Reversed order\",\n    \"defaultMessage\": \"Reversed order\"\n  },\n  limit: {\n    \"id\": \"Results limit\",\n    \"defaultMessage\": \"Results limit\"\n  },\n  itemBatchSize: {\n    \"id\": \"Item batch size\",\n    \"defaultMessage\": \"Item batch size\"\n  },\n  NoSelection: {\n    \"id\": \"No selection\",\n    \"defaultMessage\": \"No selection\"\n  }\n});\nexport const objectSchema = ({\n  intl,\n  isDisabled,\n  value\n}) => {\n  var _value$query;\n  return {\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['query', ...((value === null || value === void 0 ? void 0 : (_value$query = value.query) === null || _value$query === void 0 ? void 0 : _value$query.filter(q => q.i === 'path').length) > 0 ? ['depth'] : []), 'sort_on', 'sort_order_boolean', 'limit', 'b_size']\n    }],\n    properties: {\n      query: {\n        title: intl.formatMessage(messages.Criteria),\n        widget: 'query'\n      },\n      depth: {\n        title: intl.formatMessage(messages.depth),\n        type: 'number'\n      },\n      sort_on: {\n        title: intl.formatMessage(messages.SortOn),\n        widget: 'query_sort_on',\n        isDisabled: isDisabled\n      },\n      sort_order_boolean: {\n        title: intl.formatMessage(messages.reversedOrder),\n        type: 'boolean',\n        isDisabled: isDisabled\n      },\n      limit: {\n        title: intl.formatMessage(messages.limit),\n        type: 'number',\n        isDisabled: isDisabled\n      },\n      b_size: {\n        title: intl.formatMessage(messages.itemBatchSize),\n        type: 'number',\n        isDisabled: isDisabled\n      }\n    },\n    required: []\n  };\n};\nconst QuerystringWidget = props => {\n  _s();\n  var _props$value, _props$value$query;\n  const {\n    block,\n    onChange,\n    schemaEnhancer\n  } = props;\n  const isDisabled = (_props$value = props.value) !== null && _props$value !== void 0 && (_props$value$query = _props$value.query) !== null && _props$value$query !== void 0 && _props$value$query.length ? false : true;\n  const intl = useIntl();\n  let schema = objectSchema(_objectSpread(_objectSpread({}, props), {}, {\n    intl,\n    isDisabled\n  }));\n  schema = schemaEnhancer ? schemaEnhancer(_objectSpread(_objectSpread({}, props), {}, {\n    intl,\n    schema\n  })) : schema;\n  return __jsx(\"div\", {\n    className: \"querystring-widget\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, __jsx(ObjectWidget, _extends({}, props, {\n    block: block,\n    schema: schema,\n    onChange: (id, value) => {\n      const adaptedValue = _objectSpread(_objectSpread({}, value), {}, {\n        sort_order: value.sort_order_boolean ? 'descending' : 'ascending'\n      });\n      onChange(id, adaptedValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  })));\n};\n_s(QuerystringWidget, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n_c = QuerystringWidget;\nexport default QuerystringWidget;\nvar _c;\n$RefreshReg$(_c, \"QuerystringWidget\");","map":{"version":3,"names":["React","defineMessages","useIntl","ObjectWidget","messages","Criteria","depth","SortOn","reversedOrder","limit","itemBatchSize","NoSelection","objectSchema","intl","isDisabled","value","_value$query","fieldsets","id","title","fields","query","filter","q","i","length","properties","formatMessage","widget","type","sort_on","sort_order_boolean","b_size","required","QuerystringWidget","props","_s","_props$value","_props$value$query","block","onChange","schemaEnhancer","schema","_objectSpread","__jsx","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_extends","adaptedValue","sort_order","_c","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Widgets/QuerystringWidget.jsx"],"sourcesContent":["import React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport ObjectWidget from '@plone/volto/components/manage/Widgets/ObjectWidget';\n\nconst messages = defineMessages({\n  Criteria: {\n    id: 'Criteria',\n    defaultMessage: 'Criteria',\n  },\n  depth: {\n    id: 'Depth',\n    defaultMessage: 'Depth',\n  },\n  SortOn: {\n    id: 'Sort on',\n    defaultMessage: 'Sort on',\n  },\n  reversedOrder: {\n    id: 'Reversed order',\n    defaultMessage: 'Reversed order',\n  },\n  limit: {\n    id: 'Results limit',\n    defaultMessage: 'Results limit',\n  },\n  itemBatchSize: {\n    id: 'Item batch size',\n    defaultMessage: 'Item batch size',\n  },\n  NoSelection: {\n    id: 'No selection',\n    defaultMessage: 'No selection',\n  },\n});\n\nexport const objectSchema = ({ intl, isDisabled, value }) => ({\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Default',\n      fields: [\n        'query',\n        ...(value?.query?.filter((q) => q.i === 'path').length > 0\n          ? ['depth']\n          : []),\n        'sort_on',\n        'sort_order_boolean',\n        'limit',\n        'b_size',\n      ],\n    },\n  ],\n  properties: {\n    query: {\n      title: intl.formatMessage(messages.Criteria),\n      widget: 'query',\n    },\n    depth: {\n      title: intl.formatMessage(messages.depth),\n      type: 'number',\n    },\n    sort_on: {\n      title: intl.formatMessage(messages.SortOn),\n      widget: 'query_sort_on',\n      isDisabled: isDisabled,\n    },\n    sort_order_boolean: {\n      title: intl.formatMessage(messages.reversedOrder),\n      type: 'boolean',\n      isDisabled: isDisabled,\n    },\n    limit: {\n      title: intl.formatMessage(messages.limit),\n      type: 'number',\n      isDisabled: isDisabled,\n    },\n    b_size: {\n      title: intl.formatMessage(messages.itemBatchSize),\n      type: 'number',\n      isDisabled: isDisabled,\n    },\n  },\n  required: [],\n});\n\nconst QuerystringWidget = (props) => {\n  const { block, onChange, schemaEnhancer } = props;\n  const isDisabled = props.value?.query?.length ? false : true;\n\n  const intl = useIntl();\n  let schema = objectSchema({ ...props, intl, isDisabled });\n  schema = schemaEnhancer ? schemaEnhancer({ ...props, intl, schema }) : schema;\n\n  return (\n    <div className=\"querystring-widget\">\n      <ObjectWidget\n        {...props}\n        block={block}\n        schema={schema}\n        onChange={(id, value) => {\n          const adaptedValue = {\n            ...value,\n            sort_order: value.sort_order_boolean ? 'descending' : 'ascending',\n          };\n          onChange(id, adaptedValue);\n        }}\n      />\n    </div>\n  );\n};\nexport default QuerystringWidget;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Criteria","defaultMessage":"Criteria"},{"id":"Depth","defaultMessage":"Depth"},{"id":"Sort on","defaultMessage":"Sort on"},{"id":"Reversed order","defaultMessage":"Reversed order"},{"id":"Results limit","defaultMessage":"Results limit"},{"id":"Item batch size","defaultMessage":"Item batch size"},{"id":"No selection","defaultMessage":"No selection"}]}},"sourceType":"module","externalDependencies":[]}