{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/Sitemap/Sitemap.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { asyncConnect } from '@plone/volto/helpers/AsyncConnect';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Container as SemanticContainer } from 'semantic-ui-react';\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport { toBackendLang } from '@plone/volto/helpers/Utils/Utils';\nimport { Link } from 'react-router-dom';\nimport config from '@plone/volto/registry';\nimport { getNavigation } from '@plone/volto/actions/navigation/navigation';\nconst messages = defineMessages({\n  Sitemap: {\n    \"id\": \"Sitemap\",\n    \"defaultMessage\": \"Sitemap\"\n  }\n});\nexport function getSitemapPath(pathname = '', lang) {\n  const prefix = pathname.replace(/\\/sitemap$/gm, '').replace(/^\\//, '');\n  const path = prefix || lang || '';\n  return path;\n}\n\n/**\n * Sitemap function component.\n * @function Sitemap\n * @param {Object} props - Component properties.\n * @returns {JSX.Element} - Rendered component.\n */\nfunction Sitemap(props) {\n  _s();\n  const {\n    location: {\n      pathname\n    },\n    lang,\n    getNavigation\n  } = props;\n  useEffect(() => {\n    const {\n      settings\n    } = config;\n    const language = settings.isMultilingual ? `${toBackendLang(lang)}` : null;\n    const path = getSitemapPath(pathname, language);\n    getNavigation(path, 4);\n  }, [pathname, lang, getNavigation]);\n  const renderItems = items => {\n    return __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, items.map(item => {\n      var _item$items;\n      return __jsx(\"li\", {\n        key: item.url,\n        className: ((_item$items = item.items) === null || _item$items === void 0 ? void 0 : _item$items.length) > 0 ? 'with-children' : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, __jsx(Link, {\n        to: item.url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, item.title), item.items && renderItems(item.items));\n    }));\n  };\n  const Container = config.getComponent({\n    name: 'Container'\n  }).component || SemanticContainer;\n  return __jsx(\"div\", {\n    id: \"page-sitemap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, __jsx(Helmet, {\n    title: props.intl.formatMessage(messages.Sitemap),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), __jsx(Container, {\n    className: \"view-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, props.intl.formatMessage(messages.Sitemap), \" \"), props.items && renderItems(props.items)));\n}\n_s(Sitemap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Sitemap;\nSitemap.propTypes = {\n  getNavigation: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  intl: PropTypes.object.isRequired,\n  lang: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired\n};\nexport const __test__ = compose(injectIntl, connect(state => ({\n  items: state.navigation.items,\n  lang: state.intl.locale\n}), {\n  getNavigation\n}))(Sitemap);\nexport default compose(injectIntl, connect(state => ({\n  items: state.navigation.items,\n  lang: state.intl.locale\n}), {\n  getNavigation\n}), asyncConnect([{\n  key: 'navigation',\n  promise: ({\n    location,\n    store: {\n      dispatch,\n      getState\n    }\n  }) => {\n    if (!__SERVER__) return;\n    const {\n      settings\n    } = config;\n    const path = getSitemapPath(location.pathname, settings.isMultilingual ? toBackendLang(getState().intl.locale) : null);\n    return dispatch(getNavigation(path, 4));\n  }\n}]))(Sitemap);\nvar _c;\n$RefreshReg$(_c, \"Sitemap\");","map":{"version":3,"names":["useEffect","PropTypes","compose","connect","asyncConnect","defineMessages","injectIntl","Container","SemanticContainer","Helmet","toBackendLang","Link","config","getNavigation","messages","Sitemap","getSitemapPath","pathname","lang","prefix","replace","path","props","_s","location","settings","language","isMultilingual","renderItems","items","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","item","_item$items","key","url","className","length","to","title","getComponent","name","component","id","intl","formatMessage","_c","propTypes","func","isRequired","object","string","array","__test__","state","navigation","locale","promise","store","dispatch","getState","__SERVER__","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/Sitemap/Sitemap.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { asyncConnect } from '@plone/volto/helpers/AsyncConnect';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Container as SemanticContainer } from 'semantic-ui-react';\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport { toBackendLang } from '@plone/volto/helpers/Utils/Utils';\nimport { Link } from 'react-router-dom';\nimport config from '@plone/volto/registry';\n\nimport { getNavigation } from '@plone/volto/actions/navigation/navigation';\n\nconst messages = defineMessages({\n  Sitemap: {\n    id: 'Sitemap',\n    defaultMessage: 'Sitemap',\n  },\n});\n\nexport function getSitemapPath(pathname = '', lang) {\n  const prefix = pathname.replace(/\\/sitemap$/gm, '').replace(/^\\//, '');\n  const path = prefix || lang || '';\n  return path;\n}\n\n/**\n * Sitemap function component.\n * @function Sitemap\n * @param {Object} props - Component properties.\n * @returns {JSX.Element} - Rendered component.\n */\nfunction Sitemap(props) {\n  const {\n    location: { pathname },\n    lang,\n    getNavigation,\n  } = props;\n\n  useEffect(() => {\n    const { settings } = config;\n    const language = settings.isMultilingual ? `${toBackendLang(lang)}` : null;\n    const path = getSitemapPath(pathname, language);\n    getNavigation(path, 4);\n  }, [pathname, lang, getNavigation]);\n\n  const renderItems = (items) => {\n    return (\n      <ul>\n        {items.map((item) => (\n          <li\n            key={item.url}\n            className={item.items?.length > 0 ? 'with-children' : ''}\n          >\n            <Link to={item.url}>{item.title}</Link>\n            {item.items && renderItems(item.items)}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  const Container =\n    config.getComponent({ name: 'Container' }).component || SemanticContainer;\n\n  return (\n    <div id=\"page-sitemap\">\n      <Helmet title={props.intl.formatMessage(messages.Sitemap)} />\n      <Container className=\"view-wrapper\">\n        <h1>{props.intl.formatMessage(messages.Sitemap)} </h1>\n        {props.items && renderItems(props.items)}\n      </Container>\n    </div>\n  );\n}\n\nSitemap.propTypes = {\n  getNavigation: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  intl: PropTypes.object.isRequired,\n  lang: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n};\n\nexport const __test__ = compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      items: state.navigation.items,\n      lang: state.intl.locale,\n    }),\n    { getNavigation },\n  ),\n)(Sitemap);\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      items: state.navigation.items,\n      lang: state.intl.locale,\n    }),\n    { getNavigation },\n  ),\n  asyncConnect([\n    {\n      key: 'navigation',\n      promise: ({ location, store: { dispatch, getState } }) => {\n        if (!__SERVER__) return;\n        const { settings } = config;\n        const path = getSitemapPath(\n          location.pathname,\n          settings.isMultilingual\n            ? toBackendLang(getState().intl.locale)\n            : null,\n        );\n        return dispatch(getNavigation(path, 4));\n      },\n    },\n  ]),\n)(Sitemap);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Sitemap","defaultMessage":"Sitemap"}]}},"sourceType":"module","externalDependencies":[]}