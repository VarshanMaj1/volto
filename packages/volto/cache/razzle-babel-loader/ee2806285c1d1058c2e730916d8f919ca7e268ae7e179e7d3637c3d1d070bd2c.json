{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Video/VideoSidebar.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport React from 'react';\nimport { VideoBlockSchema } from './schema';\nimport { Segment } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { BlockDataForm } from '@plone/volto/components/manage/Form';\nimport videoSVG from '@plone/volto/icons/videocamera.svg';\nconst messages = defineMessages({\n  Video: {\n    \"id\": \"Video\",\n    \"defaultMessage\": \"Video\"\n  },\n  NoVideo: {\n    \"id\": \"No Video selected\",\n    \"defaultMessage\": \"No Video selected\"\n  }\n});\nconst VideoSidebar = props => {\n  const {\n    data,\n    block,\n    blocksErrors,\n    onChangeBlock,\n    navRoot,\n    contentType\n  } = props;\n  const intl = useIntl();\n  const schema = VideoBlockSchema(_objectSpread(_objectSpread({}, props), {}, {\n    intl\n  }));\n  return __jsx(React.Fragment, null, !data.url ? __jsx(Segment, {\n    className: \"sidebar-metadata-container\",\n    secondary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, props.intl.formatMessage(messages.NoVideo), __jsx(Icon, {\n    name: videoSVG,\n    size: \"100px\",\n    color: \"#b8c6c8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })) : __jsx(BlockDataForm, {\n    schema: schema,\n    title: intl.formatMessage(messages.Video),\n    onChangeField: (id, value) => {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        [id]: value\n      }));\n    },\n    onChangeBlock: onChangeBlock,\n    formData: data,\n    block: block,\n    navRoot: navRoot,\n    contentType: contentType,\n    errors: blocksErrors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }));\n};\nexport default VideoSidebar;","map":{"version":3,"names":["React","VideoBlockSchema","Segment","defineMessages","useIntl","Icon","BlockDataForm","videoSVG","messages","Video","NoVideo","VideoSidebar","props","data","block","blocksErrors","onChangeBlock","navRoot","contentType","intl","schema","_objectSpread","__jsx","Fragment","url","className","secondary","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","formatMessage","name","size","color","title","onChangeField","id","value","formData","errors"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Video/VideoSidebar.jsx"],"sourcesContent":["import React from 'react';\nimport { VideoBlockSchema } from './schema';\nimport { Segment } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { BlockDataForm } from '@plone/volto/components/manage/Form';\nimport videoSVG from '@plone/volto/icons/videocamera.svg';\n\nconst messages = defineMessages({\n  Video: {\n    id: 'Video',\n    defaultMessage: 'Video',\n  },\n  NoVideo: {\n    id: 'No Video selected',\n    defaultMessage: 'No Video selected',\n  },\n});\n\nconst VideoSidebar = (props) => {\n  const { data, block, blocksErrors, onChangeBlock, navRoot, contentType } =\n    props;\n  const intl = useIntl();\n  const schema = VideoBlockSchema({ ...props, intl });\n\n  return (\n    <>\n      {!data.url ? (\n        <Segment className=\"sidebar-metadata-container\" secondary>\n          {props.intl.formatMessage(messages.NoVideo)}\n          <Icon name={videoSVG} size=\"100px\" color=\"#b8c6c8\" />\n        </Segment>\n      ) : (\n        <BlockDataForm\n          schema={schema}\n          title={intl.formatMessage(messages.Video)}\n          onChangeField={(id, value) => {\n            onChangeBlock(block, {\n              ...data,\n              [id]: value,\n            });\n          }}\n          onChangeBlock={onChangeBlock}\n          formData={data}\n          block={block}\n          navRoot={navRoot}\n          contentType={contentType}\n          errors={blocksErrors}\n        />\n      )}\n    </>\n  );\n};\n\nexport default VideoSidebar;\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,UAAU;AAC3C,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,cAAc,EAAEC,OAAO,QAAQ,YAAY;AACpD,OAAOC,IAAI,MAAM,yCAAyC;AAC1D,SAASC,aAAa,QAAQ,qCAAqC;AACnE,OAAOC,QAAQ,MAAM,oCAAoC;AAEzD,MAAMC,QAAQ,GAAGL,cAAc,CAAC;EAC9BM,KAAK;IAAA;IAAA;EAAA,CAGJ;EACDC,OAAO;IAAA;IAAA;EAAA;AAIT,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC,YAAY;IAAEC,aAAa;IAAEC,OAAO;IAAEC;EAAY,CAAC,GACtEN,KAAK;EACP,MAAMO,IAAI,GAAGf,OAAO,CAAC,CAAC;EACtB,MAAMgB,MAAM,GAAGnB,gBAAgB,CAAAoB,aAAA,CAAAA,aAAA,KAAMT,KAAK;IAAEO;EAAI,EAAE,CAAC;EAEnD,OACEG,KAAA,CAAAtB,KAAA,CAAAuB,QAAA,QACG,CAACV,IAAI,CAACW,GAAG,GACRF,KAAA,CAACpB,OAAO;IAACuB,SAAS,EAAC,4BAA4B;IAACC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtDpB,KAAK,CAACO,IAAI,CAACc,aAAa,CAACzB,QAAQ,CAACE,OAAO,CAAC,EAC3CY,KAAA,CAACjB,IAAI;IAAC6B,IAAI,EAAE3B,QAAS;IAAC4B,IAAI,EAAC,OAAO;IAACC,KAAK,EAAC,SAAS;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC7C,CAAC,GAEVV,KAAA,CAAChB,aAAa;IACZc,MAAM,EAAEA,MAAO;IACfiB,KAAK,EAAElB,IAAI,CAACc,aAAa,CAACzB,QAAQ,CAACC,KAAK,CAAE;IAC1C6B,aAAa,EAAEA,CAACC,EAAE,EAAEC,KAAK,KAAK;MAC5BxB,aAAa,CAACF,KAAK,EAAAO,aAAA,CAAAA,aAAA,KACdR,IAAI;QACP,CAAC0B,EAAE,GAAGC;MAAK,EACZ,CAAC;IACJ,CAAE;IACFxB,aAAa,EAAEA,aAAc;IAC7ByB,QAAQ,EAAE5B,IAAK;IACfC,KAAK,EAAEA,KAAM;IACbG,OAAO,EAAEA,OAAQ;IACjBC,WAAW,EAAEA,WAAY;IACzBwB,MAAM,EAAE3B,YAAa;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACtB,CAEH,CAAC;AAEP,CAAC;AAED,eAAerB,YAAY","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Video","defaultMessage":"Video"},{"id":"No Video selected","defaultMessage":"No Video selected"}]}},"sourceType":"module","externalDependencies":[]}