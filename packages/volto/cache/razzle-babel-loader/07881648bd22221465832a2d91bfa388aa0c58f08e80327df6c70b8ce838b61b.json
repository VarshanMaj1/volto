{"ast":null,"code":"import _defineProperty from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Controlpanels/Rules/EditRule.jsx\";\nvar __jsx = React.createElement;\n/**\n * Edit content rule component.\n * @module components/manage/Controlpanels/Rules/EditRule\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getParentUrl, getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport { createPortal } from 'react-dom';\nimport { Button, Checkbox, Container, Form, Grid, Segment } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport { Field } from '@plone/volto/components/manage/Form';\nimport { getControlPanelRule, editRule, getContentRulesEvents } from '@plone/volto/actions/rules/rules';\nimport { toast } from 'react-toastify';\nimport backSVG from '@plone/volto/icons/back.svg';\nconst messages = defineMessages({\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  configRule: {\n    \"id\": \"Configure Content Rule\",\n    \"defaultMessage\": \"Configure Content Rule\"\n  },\n  success: {\n    \"id\": \"Success\",\n    \"defaultMessage\": \"Success\"\n  },\n  edit: {\n    \"id\": \"Edit\",\n    \"defaultMessage\": \"Rule edited\"\n  }\n});\n\n/**\n * EditRule class.\n * @class EditRule\n * @extends Component\n */\nclass EditRule extends Component {\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Rules\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      isClient: false,\n      title: '',\n      description: '',\n      event: '',\n      cascading: false,\n      stop: false,\n      enabled: false,\n      invalidForm: true,\n      invalidTitle: false,\n      invalidEvent: false\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    var _this$props, _this$props$match, _this$props$match$par;\n    this.setState({\n      isClient: true\n    });\n    this.props.getControlPanelRule(getBaseUrl(this.props.pathname), (_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$match = _this$props.match) === null || _this$props$match === void 0 ? void 0 : (_this$props$match$par = _this$props$match.params) === null || _this$props$match$par === void 0 ? void 0 : _this$props$match$par.id);\n    this.props.getContentRulesEvents(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidUpdate\n   * @returns {undefined}\n   */\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.rule !== this.props.rule) {\n      const {\n        title,\n        description,\n        event,\n        cascading,\n        stop,\n        enabled,\n        id\n      } = this.props.rule.item || {};\n      this.setState({\n        id,\n        title,\n        description,\n        event,\n        cascading,\n        stop,\n        enabled\n      });\n    }\n    if (prevState.title !== this.state.title || prevState.event !== this.state.event) {\n      if (this.state.title && this.state.event) {\n        this.setState({\n          invalidForm: false,\n          invalidTitle: false,\n          invalidEvent: false\n        });\n      } else {\n        if (!this.state.title) {\n          this.setState({\n            invalidForm: true,\n            invalidTitle: true\n          });\n        }\n        if (!this.state.event) {\n          this.setState({\n            invalidForm: true,\n            invalidEvent: true\n          });\n        }\n      }\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.rule.edit.loading && nextProps.rule.edit.loaded) {\n      var _this$props2, _this$props2$match, _this$props2$match$pa;\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.edit),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }\n      }));\n      this.props.getControlPanelRule(getBaseUrl(this.props.pathname), (_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : (_this$props2$match = _this$props2.match) === null || _this$props2$match === void 0 ? void 0 : (_this$props2$match$pa = _this$props2$match.params) === null || _this$props2$match$pa === void 0 ? void 0 : _this$props2$match$pa.id);\n    }\n  }\n\n  /**\n   * Back/Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getParentUrl(getParentUrl(this.props.pathname)));\n  }\n\n  /**\n   * Update rule handler\n   * @method handleUpdate\n   * @returns {undefined}\n   */\n  handleUpdate() {\n    const {\n      id,\n      title,\n      description,\n      event,\n      cascading,\n      stop,\n      enabled,\n      invalidForm\n    } = this.state;\n    const data = {\n      title,\n      description,\n      event,\n      cascading,\n      enabled,\n      stop\n    };\n    if (!invalidForm) {\n      this.props.editRule(getBaseUrl(this.props.pathname), data, id);\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    var _this$props$events, _this$props$events2, _this$props$events3;\n    const {\n      title,\n      description,\n      event,\n      cascading,\n      stop,\n      enabled\n    } = this.state;\n    const triggeringEvents = (_this$props$events = this.props.events) !== null && _this$props$events !== void 0 && _this$props$events.items && ((_this$props$events2 = this.props.events) === null || _this$props$events2 === void 0 ? void 0 : _this$props$events2.items.length) > 0 ? (_this$props$events3 = this.props.events) === null || _this$props$events3 === void 0 ? void 0 : _this$props$events3.items.map(event => [event.token, event.title]) : '';\n    return __jsx(\"div\", {\n      id: \"page-rule-edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.configRule),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }\n    }), __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }\n    }, __jsx(\"article\", {\n      id: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }\n    }, __jsx(Segment.Group, {\n      raised: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }, __jsx(Segment, {\n      className: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Edit Rule\",\n      defaultMessage: \"Edit Rule\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      className: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Use the form below to define the new content rule\",\n      defaultMessage: \"Use the form below to define the new content rule\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    }, __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 19\n      }\n    }, __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }, __jsx(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 23\n      }\n    }, __jsx(Field, {\n      title: 'Title',\n      description: \"Please set a descriptive title for the rule.\",\n      value: title,\n      required: true,\n      onChange: (e, t) => this.setState({\n        title: t\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 25\n      }\n    }))), __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }\n    }, __jsx(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 23\n      }\n    }, __jsx(Field, {\n      title: 'Description',\n      description: \"Enter a short description of the rule and its purpose.\",\n      value: description,\n      onChange: (e, d) => this.setState({\n        description: d\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    }))), __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }\n    }, __jsx(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 23\n      }\n    }, __jsx(Field, {\n      required: true,\n      title: 'Triggering event',\n      description: \"The rule will execute when the following event occurs.\",\n      choices: triggeringEvents,\n      value: event,\n      onChange: (e, v) => this.setState({\n        event: v\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 25\n      }\n    })))))), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }\n    }, __jsx(Checkbox, {\n      onChange: (e, {\n        checked\n      }) => this.setState({\n        enabled: checked\n      }),\n      label: 'Enabled',\n      checked: enabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 19\n      }\n    }), __jsx(\"p\", {\n      style: {\n        color: '#878f93',\n        paddingTop: '0.7rem',\n        paddingBottom: '0.7rem',\n        fontSize: '0.9rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Whether or not the rule is currently enabled\",\n      defaultMessage: \"Whether or not the rule is currently enabled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }\n    })))), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }\n    }, __jsx(Checkbox, {\n      onChange: (e, {\n        checked\n      }) => this.setState({\n        stop: checked\n      }),\n      label: 'Stop Executing rules',\n      checked: stop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 19\n      }\n    }), __jsx(\"p\", {\n      style: {\n        color: '#878f93',\n        paddingTop: '0.7rem',\n        paddingBottom: '0.7rem',\n        fontSize: '0.9rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Whether or not execution of further rules should stop after this rule is executed\",\n      defaultMessage: \"Whether or not execution of further rules should stop after this rule is executed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 21\n      }\n    })))), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }\n    }, __jsx(Checkbox, {\n      onChange: (e, {\n        checked\n      }) => this.setState({\n        cascading: checked\n      }),\n      label: 'Cascading rule',\n      checked: cascading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 19\n      }\n    }), __jsx(\"p\", {\n      style: {\n        color: '#878f93',\n        paddingTop: '0.7rem',\n        paddingBottom: '0.7rem',\n        fontSize: '0.9rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops\",\n      defaultMessage: \"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 21\n      }\n    })))), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      onClick: () => this.handleUpdate(),\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Save\",\n      defaultMessage: \"Save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 19\n      }\n    })), __jsx(Button, {\n      onClick: () => this.onCancel(),\n      secondary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Cancel\",\n      defaultMessage: \"Cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 19\n      }\n    }))), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 15\n      }\n    }, this.state.invalidTitle && __jsx(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Title field error. Value not provided or already existing.\",\n      defaultMessage: \"Title field error. Value not provided or already existing.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 21\n      }\n    })), this.state.invalidEvent && __jsx(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Triggering event field error. Please select a value\",\n      defaultMessage: \"Triggering event field error. Please select a value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 21\n      }\n    })))))), this.state.isClient && /*#__PURE__*/createPortal(__jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(Link, {\n        className: \"item\",\n        to: \"#\",\n        onClick: () => this.onCancel(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 17\n        }\n      }, __jsx(Icon, {\n        name: backSVG,\n        className: \"contents circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 13\n      }\n    }), document.getElementById('toolbar')));\n  }\n}\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_defineProperty(EditRule, \"propTypes\", {\n  getContentRulesEvents: PropTypes.func.isRequired,\n  editRule: PropTypes.func.isRequired,\n  getControlPanelRule: PropTypes.func.isRequired\n});\nexport default compose(injectIntl, connect((state, props) => ({\n  events: state.contentrulesevents,\n  rule: state.controlpanelrule,\n  pathname: props.location.pathname\n}), {\n  getControlPanelRule,\n  getContentRulesEvents,\n  editRule\n}))(EditRule);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Link","getParentUrl","getBaseUrl","Helmet","createPortal","Button","Checkbox","Container","Form","Grid","Segment","FormattedMessage","defineMessages","injectIntl","Icon","Toolbar","Toast","Field","getControlPanelRule","editRule","getContentRulesEvents","toast","backSVG","messages","back","configRule","success","edit","EditRule","constructor","props","state","id","isClient","title","description","event","cascading","stop","enabled","invalidForm","invalidTitle","invalidEvent","componentDidMount","_this$props","_this$props$match","_this$props$match$par","setState","pathname","match","params","componentDidUpdate","prevProps","prevState","rule","item","UNSAFE_componentWillReceiveProps","nextProps","loading","loaded","_this$props2","_this$props2$match","_this$props2$match$pa","__jsx","intl","formatMessage","content","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onCancel","history","push","handleUpdate","data","render","_this$props$events","_this$props$events2","_this$props$events3","triggeringEvents","events","items","length","map","token","Group","raised","className","defaultMessage","Row","stretched","Column","value","required","onChange","e","t","d","choices","v","style","display","flexDirection","checked","label","color","paddingTop","paddingBottom","fontSize","onClick","primary","secondary","hideDefaultViewButtons","inner","to","name","size","document","getElementById","_defineProperty","func","isRequired","contentrulesevents","controlpanelrule","location"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Controlpanels/Rules/EditRule.jsx"],"sourcesContent":["/**\n * Edit content rule component.\n * @module components/manage/Controlpanels/Rules/EditRule\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getParentUrl, getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport { createPortal } from 'react-dom';\nimport {\n  Button,\n  Checkbox,\n  Container,\n  Form,\n  Grid,\n  Segment,\n} from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport { Field } from '@plone/volto/components/manage/Form';\nimport {\n  getControlPanelRule,\n  editRule,\n  getContentRulesEvents,\n} from '@plone/volto/actions/rules/rules';\nimport { toast } from 'react-toastify';\n\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  configRule: {\n    id: 'Configure Content Rule',\n    defaultMessage: 'Configure Content Rule',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  edit: {\n    id: 'Edit',\n    defaultMessage: 'Rule edited',\n  },\n});\n\n/**\n * EditRule class.\n * @class EditRule\n * @extends Component\n */\nclass EditRule extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getContentRulesEvents: PropTypes.func.isRequired,\n    editRule: PropTypes.func.isRequired,\n    getControlPanelRule: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Rules\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      isClient: false,\n      title: '',\n      description: '',\n      event: '',\n      cascading: false,\n      stop: false,\n      enabled: false,\n      invalidForm: true,\n      invalidTitle: false,\n      invalidEvent: false,\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.setState({ isClient: true });\n    this.props.getControlPanelRule(\n      getBaseUrl(this.props.pathname),\n      this.props?.match?.params?.id,\n    );\n    this.props.getContentRulesEvents(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidUpdate\n   * @returns {undefined}\n   */\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.rule !== this.props.rule) {\n      const { title, description, event, cascading, stop, enabled, id } =\n        this.props.rule.item || {};\n      this.setState({\n        id,\n        title,\n        description,\n        event,\n        cascading,\n        stop,\n        enabled,\n      });\n    }\n\n    if (\n      prevState.title !== this.state.title ||\n      prevState.event !== this.state.event\n    ) {\n      if (this.state.title && this.state.event) {\n        this.setState({\n          invalidForm: false,\n          invalidTitle: false,\n          invalidEvent: false,\n        });\n      } else {\n        if (!this.state.title) {\n          this.setState({ invalidForm: true, invalidTitle: true });\n        }\n        if (!this.state.event) {\n          this.setState({ invalidForm: true, invalidEvent: true });\n        }\n      }\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.rule.edit.loading && nextProps.rule.edit.loaded) {\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.edit)}\n        />,\n      );\n      this.props.getControlPanelRule(\n        getBaseUrl(this.props.pathname),\n        this.props?.match?.params?.id,\n      );\n    }\n  }\n\n  /**\n   * Back/Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getParentUrl(getParentUrl(this.props.pathname)));\n  }\n\n  /**\n   * Update rule handler\n   * @method handleUpdate\n   * @returns {undefined}\n   */\n  handleUpdate() {\n    const {\n      id,\n      title,\n      description,\n      event,\n      cascading,\n      stop,\n      enabled,\n      invalidForm,\n    } = this.state;\n    const data = { title, description, event, cascading, enabled, stop };\n\n    if (!invalidForm) {\n      this.props.editRule(getBaseUrl(this.props.pathname), data, id);\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { title, description, event, cascading, stop, enabled } = this.state;\n\n    const triggeringEvents =\n      this.props.events?.items && this.props.events?.items.length > 0\n        ? this.props.events?.items.map((event) => [event.token, event.title])\n        : '';\n\n    return (\n      <div id=\"page-rule-edit\">\n        <Helmet title={this.props.intl.formatMessage(messages.configRule)} />\n        <Container>\n          <article id=\"content\">\n            <Segment.Group raised>\n              <Segment className=\"primary\">\n                <FormattedMessage id=\"Edit Rule\" defaultMessage=\"Edit Rule\" />\n              </Segment>\n              <Segment className=\"secondary\">\n                <FormattedMessage\n                  id=\"Use the form below to define the new content rule\"\n                  defaultMessage=\"Use the form below to define the new content rule\"\n                />\n              </Segment>\n              <Segment>\n                <Form>\n                  <Grid>\n                    <Grid.Row stretched>\n                      <Grid.Column>\n                        <Field\n                          title={'Title'}\n                          description=\"Please set a descriptive title for the rule.\"\n                          value={title}\n                          required\n                          onChange={(e, t) => this.setState({ title: t })}\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row stretched>\n                      <Grid.Column>\n                        <Field\n                          title={'Description'}\n                          description=\"Enter a short description of the rule and its purpose.\"\n                          value={description}\n                          onChange={(e, d) => this.setState({ description: d })}\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row stretched>\n                      <Grid.Column>\n                        <Field\n                          required\n                          title={'Triggering event'}\n                          description=\"The rule will execute when the following event occurs.\"\n                          choices={triggeringEvents}\n                          value={event}\n                          onChange={(e, v) => this.setState({ event: v })}\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                </Form>\n              </Segment>\n              <Segment>\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\n                  <Checkbox\n                    onChange={(e, { checked }) =>\n                      this.setState({ enabled: checked })\n                    }\n                    label={'Enabled'}\n                    checked={enabled}\n                  />\n                  <p\n                    style={{\n                      color: '#878f93',\n                      paddingTop: '0.7rem',\n                      paddingBottom: '0.7rem',\n                      fontSize: '0.9rem',\n                    }}\n                  >\n                    <FormattedMessage\n                      id=\"Whether or not the rule is currently enabled\"\n                      defaultMessage=\"Whether or not the rule is currently enabled\"\n                    />\n                  </p>\n                </div>\n              </Segment>\n              <Segment>\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\n                  <Checkbox\n                    onChange={(e, { checked }) =>\n                      this.setState({ stop: checked })\n                    }\n                    label={'Stop Executing rules'}\n                    checked={stop}\n                  />\n                  <p\n                    style={{\n                      color: '#878f93',\n                      paddingTop: '0.7rem',\n                      paddingBottom: '0.7rem',\n                      fontSize: '0.9rem',\n                    }}\n                  >\n                    <FormattedMessage\n                      id=\"Whether or not execution of further rules should stop after this rule is executed\"\n                      defaultMessage=\"Whether or not execution of further rules should stop after this rule is executed\"\n                    />\n                  </p>\n                </div>\n              </Segment>\n              <Segment>\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\n                  <Checkbox\n                    onChange={(e, { checked }) =>\n                      this.setState({ cascading: checked })\n                    }\n                    label={'Cascading rule'}\n                    checked={cascading}\n                  />\n                  <p\n                    style={{\n                      color: '#878f93',\n                      paddingTop: '0.7rem',\n                      paddingBottom: '0.7rem',\n                      fontSize: '0.9rem',\n                    }}\n                  >\n                    <FormattedMessage\n                      id=\"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops\"\n                      defaultMessage=\"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops\"\n                    />\n                  </p>\n                </div>\n              </Segment>\n              <Segment>\n                <Button onClick={() => this.handleUpdate()} primary>\n                  <FormattedMessage id=\"Save\" defaultMessage=\"Save\" />\n                </Button>\n                <Button onClick={() => this.onCancel()} secondary>\n                  <FormattedMessage id=\"Cancel\" defaultMessage=\"Cancel\" />\n                </Button>\n              </Segment>\n              <Segment>\n                {this.state.invalidTitle && (\n                  <p style={{ color: 'red' }}>\n                    <FormattedMessage\n                      id=\"Title field error. Value not provided or already existing.\"\n                      defaultMessage=\"Title field error. Value not provided or already existing.\"\n                    />\n                  </p>\n                )}\n                {this.state.invalidEvent && (\n                  <p style={{ color: 'red' }}>\n                    <FormattedMessage\n                      id=\"Triggering event field error. Please select a value\"\n                      defaultMessage=\"Triggering event field error. Please select a value\"\n                    />\n                  </p>\n                )}\n              </Segment>\n            </Segment.Group>\n          </article>\n        </Container>\n        {this.state.isClient &&\n          createPortal(\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link className=\"item\" to=\"#\" onClick={() => this.onCancel()}>\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />,\n            document.getElementById('toolbar'),\n          )}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      events: state.contentrulesevents,\n      rule: state.controlpanelrule,\n      pathname: props.location.pathname,\n    }),\n    { getControlPanelRule, getContentRulesEvents, editRule },\n  ),\n)(EditRule);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Back","defaultMessage":"Back"},{"id":"Configure Content Rule","defaultMessage":"Configure Content Rule"},{"id":"Success","defaultMessage":"Success"},{"id":"Edit","defaultMessage":"Rule edited"},{"id":"Edit Rule","defaultMessage":"Edit Rule"},{"id":"Use the form below to define the new content rule","defaultMessage":"Use the form below to define the new content rule"},{"id":"Whether or not the rule is currently enabled","defaultMessage":"Whether or not the rule is currently enabled"},{"id":"Whether or not execution of further rules should stop after this rule is executed","defaultMessage":"Whether or not execution of further rules should stop after this rule is executed"},{"id":"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops","defaultMessage":"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops"},{"id":"Save","defaultMessage":"Save"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Title field error. Value not provided or already existing.","defaultMessage":"Title field error. Value not provided or already existing."},{"id":"Triggering event field error. Please select a value","defaultMessage":"Triggering event field error. Please select a value"}]}},"sourceType":"module","externalDependencies":[]}