{"ast":null,"code":"import _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/**\n * Users reducer.\n * @module reducers/users/users\n */\n\nimport startsWith from 'lodash/startsWith';\nimport { CREATE_USER, DELETE_USER, GET_USER, LIST_USERS, UPDATE_PASSWORD, UPDATE_USER, INITIAL_PASSWORD, RESET_PASSWORD } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  user: {},\n  users: [],\n  create: {\n    error: null,\n    loaded: false,\n    loading: false\n  },\n  get: {\n    error: null,\n    loaded: false,\n    loading: false\n  },\n  list: {\n    error: null,\n    loaded: false,\n    loading: false\n  },\n  delete: {\n    error: null,\n    loaded: false,\n    loading: false\n  },\n  update: {\n    error: null,\n    loaded: false,\n    loading: false\n  },\n  update_password: {\n    error: null,\n    loaded: false,\n    loading: false\n  },\n  password: {\n    error: null,\n    loaded: false,\n    loading: false\n  },\n  initial: {\n    error: null,\n    loaded: false,\n    loading: false\n  },\n  reset: {\n    error: null,\n    loaded: false,\n    loading: false\n  }\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  if (startsWith(actionType, 'UPDATE_PASSWORD')) {\n    return 'update_password';\n  }\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Users reducer.\n * @function users\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function users(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${CREATE_USER}_PENDING`:\n    case `${DELETE_USER}_PENDING`:\n    case `${GET_USER}_PENDING`:\n    case `${LIST_USERS}_PENDING`:\n    case `${UPDATE_USER}_PENDING`:\n    case `${UPDATE_PASSWORD}_PENDING`:\n    case `${INITIAL_PASSWORD}_PENDING`:\n    case `${RESET_PASSWORD}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null\n        }\n      });\n    case `${GET_USER}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n    case `${LIST_USERS}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        users: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n    case `${CREATE_USER}_SUCCESS`:\n    case `${DELETE_USER}_SUCCESS`:\n    case `${UPDATE_USER}_SUCCESS`:\n    case `${UPDATE_PASSWORD}_SUCCESS`:\n    case `${INITIAL_PASSWORD}_SUCCESS`:\n    case `${RESET_PASSWORD}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n    case `${GET_USER}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: {},\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n    case `${LIST_USERS}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        users: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n    case `${CREATE_USER}_FAIL`:\n    case `${DELETE_USER}_FAIL`:\n    case `${UPDATE_USER}_FAIL`:\n    case `${UPDATE_PASSWORD}_FAIL`:\n    case `${INITIAL_PASSWORD}_FAIL`:\n    case `${RESET_PASSWORD}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["startsWith","CREATE_USER","DELETE_USER","GET_USER","LIST_USERS","UPDATE_PASSWORD","UPDATE_USER","INITIAL_PASSWORD","RESET_PASSWORD","initialState","user","users","create","error","loaded","loading","get","list","delete","update","update_password","password","initial","reset","getRequestKey","actionType","split","toLowerCase","state","action","type","_objectSpread","result"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/reducers/users/users.js"],"sourcesContent":["/**\n * Users reducer.\n * @module reducers/users/users\n */\n\nimport startsWith from 'lodash/startsWith';\n\nimport {\n  CREATE_USER,\n  DELETE_USER,\n  GET_USER,\n  LIST_USERS,\n  UPDATE_PASSWORD,\n  UPDATE_USER,\n  INITIAL_PASSWORD,\n  RESET_PASSWORD,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  user: {},\n  users: [],\n  create: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  get: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  list: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  delete: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  update: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  update_password: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  password: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  initial: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  reset: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  if (startsWith(actionType, 'UPDATE_PASSWORD')) {\n    return 'update_password';\n  }\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Users reducer.\n * @function users\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function users(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${CREATE_USER}_PENDING`:\n    case `${DELETE_USER}_PENDING`:\n    case `${GET_USER}_PENDING`:\n    case `${LIST_USERS}_PENDING`:\n    case `${UPDATE_USER}_PENDING`:\n    case `${UPDATE_PASSWORD}_PENDING`:\n    case `${INITIAL_PASSWORD}_PENDING`:\n    case `${RESET_PASSWORD}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${GET_USER}_SUCCESS`:\n      return {\n        ...state,\n        user: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${LIST_USERS}_SUCCESS`:\n      return {\n        ...state,\n        users: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${CREATE_USER}_SUCCESS`:\n    case `${DELETE_USER}_SUCCESS`:\n    case `${UPDATE_USER}_SUCCESS`:\n    case `${UPDATE_PASSWORD}_SUCCESS`:\n    case `${INITIAL_PASSWORD}_SUCCESS`:\n    case `${RESET_PASSWORD}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${GET_USER}_FAIL`:\n      return {\n        ...state,\n        user: {},\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${LIST_USERS}_FAIL`:\n      return {\n        ...state,\n        users: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${CREATE_USER}_FAIL`:\n    case `${DELETE_USER}_FAIL`:\n    case `${UPDATE_USER}_FAIL`:\n    case `${UPDATE_PASSWORD}_FAIL`:\n    case `${INITIAL_PASSWORD}_FAIL`:\n    case `${RESET_PASSWORD}_FAIL`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA,OAAOA,UAAU,MAAM,mBAAmB;AAE1C,SACEC,WAAW,EACXC,WAAW,EACXC,QAAQ,EACRC,UAAU,EACVC,eAAe,EACfC,WAAW,EACXC,gBAAgB,EAChBC,cAAc,QACT,oCAAoC;AAE3C,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,CAAC,CAAC;EACRC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE;IACNC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;EACX,CAAC;EACDC,GAAG,EAAE;IACHH,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;EACX,CAAC;EACDE,IAAI,EAAE;IACJJ,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;EACX,CAAC;EACDG,MAAM,EAAE;IACNL,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;EACX,CAAC;EACDI,MAAM,EAAE;IACNN,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;EACX,CAAC;EACDK,eAAe,EAAE;IACfP,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;EACX,CAAC;EACDM,QAAQ,EAAE;IACRR,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;EACX,CAAC;EACDO,OAAO,EAAE;IACPT,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;EACX,CAAC;EACDQ,KAAK,EAAE;IACLV,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;EACX;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,SAASS,aAAaA,CAACC,UAAU,EAAE;EACjC,IAAIzB,UAAU,CAACyB,UAAU,EAAE,iBAAiB,CAAC,EAAE;IAC7C,OAAO,iBAAiB;EAC1B;EACA,OAAOA,UAAU,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAShB,KAAKA,CAACiB,KAAK,GAAGnB,YAAY,EAAEoB,MAAM,GAAG,CAAC,CAAC,EAAE;EAC/D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,GAAG7B,WAAW,UAAU;IAC7B,KAAK,GAAGC,WAAW,UAAU;IAC7B,KAAK,GAAGC,QAAQ,UAAU;IAC1B,KAAK,GAAGC,UAAU,UAAU;IAC5B,KAAK,GAAGE,WAAW,UAAU;IAC7B,KAAK,GAAGD,eAAe,UAAU;IACjC,KAAK,GAAGE,gBAAgB,UAAU;IAClC,KAAK,GAAGC,cAAc,UAAU;MAC9B,OAAAuB,aAAA,CAAAA,aAAA,KACKH,KAAK;QACR,CAACJ,aAAa,CAACK,MAAM,CAACC,IAAI,CAAC,GAAG;UAC5Bf,OAAO,EAAE,IAAI;UACbD,MAAM,EAAE,KAAK;UACbD,KAAK,EAAE;QACT;MAAC;IAEL,KAAK,GAAGV,QAAQ,UAAU;MACxB,OAAA4B,aAAA,CAAAA,aAAA,KACKH,KAAK;QACRlB,IAAI,EAAEmB,MAAM,CAACG,MAAM;QACnB,CAACR,aAAa,CAACK,MAAM,CAACC,IAAI,CAAC,GAAG;UAC5Bf,OAAO,EAAE,KAAK;UACdD,MAAM,EAAE,IAAI;UACZD,KAAK,EAAE;QACT;MAAC;IAEL,KAAK,GAAGT,UAAU,UAAU;MAC1B,OAAA2B,aAAA,CAAAA,aAAA,KACKH,KAAK;QACRjB,KAAK,EAAEkB,MAAM,CAACG,MAAM;QACpB,CAACR,aAAa,CAACK,MAAM,CAACC,IAAI,CAAC,GAAG;UAC5Bf,OAAO,EAAE,KAAK;UACdD,MAAM,EAAE,IAAI;UACZD,KAAK,EAAE;QACT;MAAC;IAEL,KAAK,GAAGZ,WAAW,UAAU;IAC7B,KAAK,GAAGC,WAAW,UAAU;IAC7B,KAAK,GAAGI,WAAW,UAAU;IAC7B,KAAK,GAAGD,eAAe,UAAU;IACjC,KAAK,GAAGE,gBAAgB,UAAU;IAClC,KAAK,GAAGC,cAAc,UAAU;MAC9B,OAAAuB,aAAA,CAAAA,aAAA,KACKH,KAAK;QACR,CAACJ,aAAa,CAACK,MAAM,CAACC,IAAI,CAAC,GAAG;UAC5Bf,OAAO,EAAE,KAAK;UACdD,MAAM,EAAE,IAAI;UACZD,KAAK,EAAE;QACT;MAAC;IAEL,KAAK,GAAGV,QAAQ,OAAO;MACrB,OAAA4B,aAAA,CAAAA,aAAA,KACKH,KAAK;QACRlB,IAAI,EAAE,CAAC,CAAC;QACR,CAACc,aAAa,CAACK,MAAM,CAACC,IAAI,CAAC,GAAG;UAC5Bf,OAAO,EAAE,KAAK;UACdD,MAAM,EAAE,KAAK;UACbD,KAAK,EAAEgB,MAAM,CAAChB;QAChB;MAAC;IAEL,KAAK,GAAGT,UAAU,OAAO;MACvB,OAAA2B,aAAA,CAAAA,aAAA,KACKH,KAAK;QACRjB,KAAK,EAAE,EAAE;QACT,CAACa,aAAa,CAACK,MAAM,CAACC,IAAI,CAAC,GAAG;UAC5Bf,OAAO,EAAE,KAAK;UACdD,MAAM,EAAE,KAAK;UACbD,KAAK,EAAEgB,MAAM,CAAChB;QAChB;MAAC;IAEL,KAAK,GAAGZ,WAAW,OAAO;IAC1B,KAAK,GAAGC,WAAW,OAAO;IAC1B,KAAK,GAAGI,WAAW,OAAO;IAC1B,KAAK,GAAGD,eAAe,OAAO;IAC9B,KAAK,GAAGE,gBAAgB,OAAO;IAC/B,KAAK,GAAGC,cAAc,OAAO;MAC3B,OAAAuB,aAAA,CAAAA,aAAA,KACKH,KAAK;QACR,CAACJ,aAAa,CAACK,MAAM,CAACC,IAAI,CAAC,GAAG;UAC5Bf,OAAO,EAAE,KAAK;UACdD,MAAM,EAAE,KAAK;UACbD,KAAK,EAAEgB,MAAM,CAAChB;QAChB;MAAC;IAEL;MACE,OAAOe,KAAK;EAChB;AACF","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}