{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Listing/ImageGallery.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport loadable from '@loadable/component';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport { Button } from 'semantic-ui-react';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { flattenToAppURL } from '@plone/volto/helpers/Url/Url';\nimport config from '@plone/volto/registry';\nimport galleryLeftSVG from '@plone/volto/icons/left-key.svg';\nimport galleryRightSVG from '@plone/volto/icons/right-key.svg';\nimport galleryPlaySVG from '@plone/volto/icons/play.svg';\nimport galleryPauseSVG from '@plone/volto/icons/pause.svg';\nimport galleryFullScreenSVG from '@plone/volto/icons/fullscreen.svg';\nimport galleryBackDownSVG from '@plone/volto/icons/back-down.svg';\nconst ImageGallery = loadable({\n  resolved: {},\n  chunkName() {\n    return \"react-image-gallery\";\n  },\n  isReady(props) {\n    const key = this.resolve(props);\n    if (this.resolved[key] !== true) {\n      return false;\n    }\n    if (typeof __webpack_modules__ !== 'undefined') {\n      return !!__webpack_modules__[key];\n    }\n    return false;\n  },\n  importAsync: () => import(/* webpackChunkName: \"react-image-gallery\" */'react-image-gallery'),\n  requireAsync(props) {\n    const key = this.resolve(props);\n    this.resolved[key] = false;\n    return this.importAsync(props).then(resolved => {\n      this.resolved[key] = true;\n      return resolved;\n    });\n  },\n  requireSync(props) {\n    const id = this.resolve(props);\n    if (typeof __webpack_require__ !== 'undefined') {\n      return __webpack_require__(id);\n    }\n    return eval('module.require')(id);\n  },\n  resolve() {\n    if (require.resolveWeak) {\n      return require.resolveWeak(\"react-image-gallery\");\n    }\n    return eval('require.resolve')(\"react-image-gallery\");\n  }\n});\n_c = ImageGallery;\nconst renderLeftNav = (onClick, disabled) => {\n  return __jsx(Button, {\n    className: \"image-gallery-icon image-gallery-left-nav primary basic\",\n    disabled: disabled,\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(Icon, {\n    name: galleryLeftSVG,\n    size: \"48px\",\n    fill: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n};\nconst renderRightNav = (onClick, disabled) => {\n  return __jsx(Button, {\n    className: \"image-gallery-icon image-gallery-right-nav primary basic\",\n    disabled: disabled,\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(Icon, {\n    name: galleryRightSVG,\n    size: \"48px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }));\n};\nconst renderPlayPauseButton = (onClick, isPlaying) => __jsx(Button, {\n  type: \"button\",\n  className: \"image-gallery-icon image-gallery-play-button basic primary\",\n  onClick: onClick,\n  \"aria-label\": \"Play or Pause Slideshow\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }\n}, isPlaying ? __jsx(Icon, {\n  name: galleryPauseSVG,\n  size: \"48px\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }\n}) : __jsx(Icon, {\n  name: galleryPlaySVG,\n  size: \"48px\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }\n}));\nconst renderFullscreenButton = (onClick, isFullscreen) => {\n  return __jsx(Button, {\n    type: \"button\",\n    className: \"image-gallery-icon image-gallery-fullscreen-button primary basic\",\n    onClick: onClick,\n    \"aria-label\": \"Open Fullscreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, isFullscreen ? __jsx(Icon, {\n    name: galleryBackDownSVG,\n    size: \"48px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }) : __jsx(Icon, {\n    name: galleryFullScreenSVG,\n    size: \"48px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }));\n};\nconst ImageGalleryTemplate = ({\n  items\n}) => {\n  const {\n    settings\n  } = config;\n  const renderItems = items.filter(content => settings.imageObjects.includes(content['@type']) && content.image_field);\n  const imagesInfo = renderItems.map(item => {\n    return {\n      original: `${flattenToAppURL(item['@id'])}/@@images/${item.image_field}/large`,\n      thumbnail: `${flattenToAppURL(item['@id'])}/@@images/${item.image_field}/thumb`\n    };\n  });\n  return renderItems.length > 0 && __jsx(ImageGallery, {\n    items: imagesInfo,\n    renderLeftNav: renderLeftNav,\n    renderRightNav: renderRightNav,\n    renderPlayPauseButton: renderPlayPauseButton,\n    renderFullscreenButton: renderFullscreenButton,\n    lazyLoad: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  });\n};\n_c2 = ImageGalleryTemplate;\nImageGalleryTemplate.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired\n};\nexport default ImageGalleryTemplate;\nvar _c, _c2;\n$RefreshReg$(_c, \"ImageGallery\");\n$RefreshReg$(_c2, \"ImageGalleryTemplate\");","map":{"version":3,"names":["React","PropTypes","loadable","Button","Icon","flattenToAppURL","config","galleryLeftSVG","galleryRightSVG","galleryPlaySVG","galleryPauseSVG","galleryFullScreenSVG","galleryBackDownSVG","ImageGallery","resolved","chunkName","isReady","props","key","resolve","__webpack_modules__","importAsync","requireAsync","then","requireSync","id","__webpack_require__","eval","require","resolveWeak","_c","renderLeftNav","onClick","disabled","__jsx","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","name","size","fill","renderRightNav","renderPlayPauseButton","isPlaying","type","renderFullscreenButton","isFullscreen","ImageGalleryTemplate","items","settings","renderItems","filter","content","imageObjects","includes","image_field","imagesInfo","map","item","original","thumbnail","length","lazyLoad","_c2","propTypes","arrayOf","any","isRequired","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Listing/ImageGallery.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport loadable from '@loadable/component';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport { Button } from 'semantic-ui-react';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { flattenToAppURL } from '@plone/volto/helpers/Url/Url';\nimport config from '@plone/volto/registry';\n\nimport galleryLeftSVG from '@plone/volto/icons/left-key.svg';\nimport galleryRightSVG from '@plone/volto/icons/right-key.svg';\nimport galleryPlaySVG from '@plone/volto/icons/play.svg';\nimport galleryPauseSVG from '@plone/volto/icons/pause.svg';\nimport galleryFullScreenSVG from '@plone/volto/icons/fullscreen.svg';\nimport galleryBackDownSVG from '@plone/volto/icons/back-down.svg';\n\nconst ImageGallery = loadable(() => import('react-image-gallery'));\n\nconst renderLeftNav = (onClick, disabled) => {\n  return (\n    <Button\n      className=\"image-gallery-icon image-gallery-left-nav primary basic\"\n      disabled={disabled}\n      onClick={onClick}\n    >\n      <Icon name={galleryLeftSVG} size=\"48px\" fill=\"black\" />\n    </Button>\n  );\n};\nconst renderRightNav = (onClick, disabled) => {\n  return (\n    <Button\n      className=\"image-gallery-icon image-gallery-right-nav primary basic\"\n      disabled={disabled}\n      onClick={onClick}\n    >\n      <Icon name={galleryRightSVG} size=\"48px\" />\n    </Button>\n  );\n};\n\nconst renderPlayPauseButton = (onClick, isPlaying) => (\n  <Button\n    type=\"button\"\n    className=\"image-gallery-icon image-gallery-play-button basic primary\"\n    onClick={onClick}\n    aria-label=\"Play or Pause Slideshow\"\n  >\n    {isPlaying ? (\n      <Icon name={galleryPauseSVG} size=\"48px\" />\n    ) : (\n      <Icon name={galleryPlaySVG} size=\"48px\" />\n    )}\n  </Button>\n);\n\nconst renderFullscreenButton = (onClick, isFullscreen) => {\n  return (\n    <Button\n      type=\"button\"\n      className=\"image-gallery-icon image-gallery-fullscreen-button primary basic\"\n      onClick={onClick}\n      aria-label=\"Open Fullscreen\"\n    >\n      {isFullscreen ? (\n        <Icon name={galleryBackDownSVG} size=\"48px\" />\n      ) : (\n        <Icon name={galleryFullScreenSVG} size=\"48px\" />\n      )}\n    </Button>\n  );\n};\n\nconst ImageGalleryTemplate = ({ items }) => {\n  const { settings } = config;\n  const renderItems = items.filter(\n    (content) =>\n      settings.imageObjects.includes(content['@type']) && content.image_field,\n  );\n  const imagesInfo = renderItems.map((item) => {\n    return {\n      original: `${flattenToAppURL(item['@id'])}/@@images/${\n        item.image_field\n      }/large`,\n      thumbnail: `${flattenToAppURL(item['@id'])}/@@images/${\n        item.image_field\n      }/thumb`,\n    };\n  });\n\n  return (\n    renderItems.length > 0 && (\n      <ImageGallery\n        items={imagesInfo}\n        renderLeftNav={renderLeftNav}\n        renderRightNav={renderRightNav}\n        renderPlayPauseButton={renderPlayPauseButton}\n        renderFullscreenButton={renderFullscreenButton}\n        lazyLoad={true}\n      />\n    )\n  );\n};\n\nImageGalleryTemplate.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n\nexport default ImageGalleryTemplate;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}