{"ast":null,"code":"import _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Controlpanels/Users/UsersControlpanel.jsx\";\nvar __jsx = React.createElement;\n/**\n * Users controlpanel container.\n * @module components/manage/Controlpanels/UsersControlpanel\n */\nimport { createUser, deleteUser, listUsers, updateUser, getUser } from '@plone/volto/actions/users/users';\nimport { listRoles } from '@plone/volto/actions/roles/roles';\nimport { listGroups, updateGroup } from '@plone/volto/actions/groups/groups';\nimport { getControlpanel } from '@plone/volto/actions/controlpanels/controlpanels';\nimport { getUserSchema } from '@plone/volto/actions/userschema/userschema';\nimport jwtDecode from 'jwt-decode';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nimport Pagination from '@plone/volto/components/theme/Pagination/Pagination';\nimport Error from '@plone/volto/components/theme/Error/Error';\nimport { ModalForm } from '@plone/volto/components/manage/Form';\nimport RenderUsers from '@plone/volto/components/manage/Controlpanels/Users/RenderUsers';\nimport { Link } from 'react-router-dom';\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport { messages } from '@plone/volto/helpers/MessageLabels/MessageLabels';\nimport { isManager, canAssignGroup } from '@plone/volto/helpers/User/User';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport addUserSvg from '@plone/volto/icons/add-user.svg';\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport ploneSVG from '@plone/volto/icons/plone.svg';\nimport find from 'lodash/find';\nimport map from 'lodash/map';\nimport pull from 'lodash/pull';\nimport difference from 'lodash/difference';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { createPortal } from 'react-dom';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { bindActionCreators, compose } from 'redux';\nimport { Confirm, Container, Form, Input, Button, Dimmer, Segment, Table, Loader } from 'semantic-ui-react';\n\n/**\n * UsersControlpanel class.\n * @class UsersControlpanel\n * @extends Component\n */\nclass UsersControlpanel extends Component {\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"fetchData\", async () => {\n      await this.props.getControlpanel('usergroup');\n      await this.props.listRoles();\n      if (!this.props.many_users) {\n        this.props.listGroups();\n        await this.props.listUsers();\n        this.setState({\n          entries: this.props.users\n        });\n      }\n      await this.props.getUserSchema();\n      await this.props.getUser(this.props.userId);\n    });\n    // Because username field needs to be disabled if email login is enabled!\n    _defineProperty(this, \"checkLoginUsingEmailStatus\", async () => {\n      var _this$props$controlPa;\n      await this.props.getControlpanel('security');\n      this.setState({\n        loginUsingEmail: (_this$props$controlPa = this.props.controlPanelData) === null || _this$props$controlPa === void 0 ? void 0 : _this$props$controlPa.data.use_email_as_login\n      });\n    });\n    /**\n     *@param {object} user\n     *@returns {undefined}\n     *@memberof UsersControlpanel\n     */\n    _defineProperty(this, \"addUserToGroup\", user => {\n      const {\n        groups,\n        username\n      } = user;\n      groups.forEach(group => {\n        this.props.updateGroup(group, {\n          users: {\n            [username]: true\n          }\n        });\n      });\n    });\n    /**\n     *\n     * @param {*} event\n     * @memberof UsersControlpanel\n     */\n    _defineProperty(this, \"updateUserRoleSubmit\", e => {\n      e.stopPropagation();\n      const roles = this.props.roles.map(item => item.id);\n      this.state.entries.forEach(item => {\n        const userData = {\n          roles: {}\n        };\n        const removedRoles = difference(roles, item.roles);\n        removedRoles.forEach(role => {\n          userData.roles[role] = false;\n        });\n        item.roles.forEach(role => {\n          userData.roles[role] = true;\n        });\n        this.props.updateUser(item.id, userData);\n      });\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.updateRoles),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 7\n        }\n      }));\n    });\n    /**\n     * On change page\n     * @method onChangePage\n     * @param {object} event Event object.\n     * @param {string} value Page value.\n     * @returns {undefined}\n     */\n    _defineProperty(this, \"onChangePage\", (event, {\n      value\n    }) => {\n      this.setState({\n        currentPage: value\n      });\n    });\n    this.onChangeSearch = this.onChangeSearch.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n    this.delete = this.delete.bind(this);\n    this.onDeleteOk = this.onDeleteOk.bind(this);\n    this.onDeleteCancel = this.onDeleteCancel.bind(this);\n    this.onAddUserSubmit = this.onAddUserSubmit.bind(this);\n    this.onAddUserError = this.onAddUserError.bind(this);\n    this.onAddUserSuccess = this.onAddUserSuccess.bind(this);\n    this.updateUserRole = this.updateUserRole.bind(this);\n    this.state = {\n      search: '',\n      isLoading: false,\n      showAddUser: false,\n      showAddUserErrorConfirm: false,\n      addUserError: '',\n      showDelete: false,\n      userToDelete: undefined,\n      entries: [],\n      isClient: false,\n      currentPage: 0,\n      pageSize: 10,\n      loginUsingEmail: false\n    };\n  }\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.setState({\n      isClient: true\n    });\n    this.fetchData();\n    this.checkLoginUsingEmailStatus();\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.deleteRequest.loading && nextProps.deleteRequest.loaded || this.props.createRequest.loading && nextProps.createRequest.loaded) {\n      this.props.listUsers({\n        search: this.state.search\n      });\n    }\n    if (this.props.deleteRequest.loading && nextProps.deleteRequest.loaded) {\n      this.onDeleteUserSuccess();\n    }\n    if (this.props.createRequest.loading && nextProps.createRequest.loaded) {\n      this.onAddUserSuccess();\n    }\n    if (this.props.createRequest.loading && nextProps.createRequest.error) {\n      this.onAddUserError(nextProps.createRequest.error);\n    }\n    if (this.props.loadRolesRequest.loading && nextProps.loadRolesRequest.error) {\n      this.setState({\n        error: nextProps.loadRolesRequest.error\n      });\n    }\n  }\n  getUserFromProps(value) {\n    return find(this.props.users, ['@id', value]);\n  }\n\n  /**\n   * Search handler\n   * @method onSearch\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onSearch(event) {\n    event.preventDefault();\n    this.setState({\n      isLoading: true\n    });\n    this.props.listUsers({\n      search: this.state.search\n    }).then(() => {\n      this.setState({\n        isLoading: false\n      });\n    }).catch(error => {\n      this.setState({\n        isLoading: false\n      });\n      // eslint-disable-next-line no-console\n      console.error('Error searching users', error);\n    });\n  }\n\n  /**\n   * On change search handler\n   * @method onChangeSearch\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onChangeSearch(event) {\n    this.setState({\n      search: event.target.value\n    });\n  }\n\n  /**\n   * Delete a user\n   * @method delete\n   * @param {object} event Event object.\n   * @param {string} value username.\n   * @returns {undefined}\n   */\n  delete(event, {\n    value\n  }) {\n    if (value) {\n      this.setState({\n        showDelete: true,\n        userToDelete: this.getUserFromProps(value)\n      });\n    }\n  }\n\n  /**\n   * On delete ok\n   * @method onDeleteOk\n   * @returns {undefined}\n   */\n  onDeleteOk() {\n    if (this.state.userToDelete) {\n      this.props.deleteUser(this.state.userToDelete.id);\n    }\n  }\n\n  /**\n   * On delete cancel\n   * @method onDeleteCancel\n   * @returns {undefined}\n   */\n  onDeleteCancel() {\n    this.setState({\n      showDelete: false,\n      itemsToDelete: [],\n      userToDelete: undefined\n    });\n  }\n  /**\n   * Callback to be called by the ModalForm when the form is submitted.\n   *\n   * @param {object} data Form data from the ModalForm.\n   * @param {func} callback to set new form data in the ModalForm\n   * @returns {undefined}\n   */\n  onAddUserSubmit(data, callback) {\n    const {\n      groups,\n      sendPasswordReset,\n      password\n    } = data;\n    if (sendPasswordReset !== undefined && sendPasswordReset === true && password !== undefined) {\n      toast.error(__jsx(Toast, {\n        error: true,\n        title: this.props.intl.formatMessage(messages.error),\n        content: this.props.intl.formatMessage(messages.addUserFormPasswordAndSendPasswordTogetherNotAllowed),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 9\n        }\n      }));\n    } else {\n      if (groups && groups.length > 0) this.addUserToGroup(data);\n      this.props.createUser(data, sendPasswordReset);\n      this.setState({\n        addUserSetFormDataCallback: callback\n      });\n    }\n  }\n\n  /**\n   * Handle Success after createUser()\n   *\n   * @returns {undefined}\n   */\n  onAddUserSuccess() {\n    this.state.addUserSetFormDataCallback({});\n    this.setState({\n      showAddUser: false,\n      addUserError: undefined,\n      addUserSetFormDataCallback: undefined\n    });\n    toast.success(__jsx(Toast, {\n      success: true,\n      title: this.props.intl.formatMessage(messages.success),\n      content: this.props.intl.formatMessage(messages.userCreated),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  /**\n   * Handle Success after deleteUser()\n   *\n   * @returns {undefined}\n   */\n  onDeleteUserSuccess() {\n    this.setState({\n      userToDelete: undefined,\n      showDelete: false\n    });\n    toast.success(__jsx(Toast, {\n      success: true,\n      title: this.props.intl.formatMessage(messages.success),\n      content: this.props.intl.formatMessage(messages.userDeleted),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 7\n      }\n    }));\n  }\n  /**\n   *\n   *\n   * @param {*} data\n   * @param {*} callback\n   * @memberof UsersControlpanel\n   */\n  updateUserRole(name, value) {\n    this.setState({\n      entries: map(this.state.entries, entry => _objectSpread(_objectSpread({}, entry), {}, {\n        roles: entry.id === name && !entry.roles.includes(value) ? [...entry.roles, value] : entry.id !== name ? entry.roles : pull(entry.roles, value)\n      }))\n    });\n  }\n  /**\n   * Handle Errors after createUser()\n   *\n   * @param {object} error object. Requires the property .message\n   * @returns {undefined}\n   */\n  onAddUserError(error) {\n    this.setState({\n      addUserError: error.response.body.error.message\n    });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.users !== prevProps.users) {\n      this.setState({\n        entries: this.props.users\n      });\n    }\n  }\n\n  /**\n   * Filters the roles a user can assign when adding a user.\n   * @method canAssignAdd\n   * @returns {arry}\n   */\n  canAssignAdd(isManager) {\n    var _this$props$user;\n    if (isManager) return this.props.roles;\n    return (_this$props$user = this.props.user) !== null && _this$props$user !== void 0 && _this$props$user.roles ? this.props.roles.filter(role => this.props.user.roles.includes(role.id)) : [];\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    var _this$props, _this$props$userschem, _this$props3, _this$props3$deleteRe, _this$props4, _this$props4$usersche, _this$state$entries;\n    if (this.state.error) {\n      return __jsx(Error, {\n        error: this.state.error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 14\n        }\n      });\n    }\n    /*let fullnameToDelete = this.state.userToDelete\n        ? this.state.userToDelete.fullname\n        : '';*/\n    let usernameToDelete = this.state.userToDelete ? this.state.userToDelete.username : '';\n    // Copy the userschema using JSON serialization/deserialization\n    // this is really ugly, but if we don't do this the original value\n    // of the userschema is changed and it is used like that through\n    // the lifecycle of the application\n    let adduserschema = {};\n    let isUserManager = false;\n    if ((_this$props = this.props) !== null && _this$props !== void 0 && (_this$props$userschem = _this$props.userschema) !== null && _this$props$userschem !== void 0 && _this$props$userschem.loaded) {\n      var _this$props2, _this$props2$usersche;\n      isUserManager = isManager(this.props.user);\n      adduserschema = JSON.parse(JSON.stringify((_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : (_this$props2$usersche = _this$props2.userschema) === null || _this$props2$usersche === void 0 ? void 0 : _this$props2$usersche.userschema));\n      adduserschema.properties['username'] = {\n        title: this.props.intl.formatMessage(messages.addUserFormUsernameTitle),\n        type: 'string',\n        description: this.props.intl.formatMessage(messages.addUserFormUsernameDescription)\n      };\n      adduserschema.properties['password'] = {\n        title: this.props.intl.formatMessage(messages.addUserFormPasswordTitle),\n        type: 'password',\n        description: this.props.intl.formatMessage(messages.addUserFormPasswordDescription),\n        widget: 'password'\n      };\n      adduserschema.properties['sendPasswordReset'] = {\n        title: this.props.intl.formatMessage(messages.addUserFormSendPasswordResetTitle),\n        type: 'boolean'\n      };\n      adduserschema.properties['roles'] = {\n        title: this.props.intl.formatMessage(messages.addUserFormRolesTitle),\n        type: 'array',\n        choices: this.canAssignAdd(isUserManager).map(role => [role.id, role.title]),\n        noValueOption: false\n      };\n      adduserschema.properties['groups'] = {\n        title: this.props.intl.formatMessage(messages.addUserGroupNameTitle),\n        type: 'array',\n        choices: this.props.groups.filter(group => canAssignGroup(isUserManager, group)).map(group => [group.id, group.id]),\n        noValueOption: false\n      };\n      if (adduserschema.fieldsets && adduserschema.fieldsets.length > 0 && !adduserschema.fieldsets[0]['fields'].includes('username')) {\n        adduserschema.fieldsets[0]['fields'] = adduserschema.fieldsets[0]['fields'].concat(['username', 'password', 'sendPasswordReset', 'roles', 'groups']);\n      }\n    }\n    return __jsx(Container, {\n      className: \"users-control-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.users),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 9\n      }\n    }, __jsx(Confirm, {\n      open: this.state.showDelete,\n      header: this.props.intl.formatMessage(messages.deleteUserConfirmTitle),\n      content: __jsx(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 15\n        }\n      }, __jsx(Dimmer, {\n        active: (_this$props3 = this.props) === null || _this$props3 === void 0 ? void 0 : (_this$props3$deleteRe = _this$props3.deleteRequest) === null || _this$props3$deleteRe === void 0 ? void 0 : _this$props3$deleteRe.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 17\n        }\n      }, __jsx(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Loading\",\n        defaultMessage: \"Loading.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 21\n        }\n      }))), __jsx(\"ul\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 17\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Do you really want to delete the user {username}?\",\n        defaultMessage: \"Do you really want to delete the user {username}?\",\n        values: {\n          username: __jsx(\"b\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 33\n            }\n          }, usernameToDelete)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 19\n        }\n      }))),\n      onCancel: this.onDeleteCancel,\n      onConfirm: this.onDeleteOk,\n      size: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 11\n      }\n    }), (_this$props4 = this.props) !== null && _this$props4 !== void 0 && (_this$props4$usersche = _this$props4.userschema) !== null && _this$props4$usersche !== void 0 && _this$props4$usersche.loaded && this.state.showAddUser ? __jsx(ModalForm, {\n      open: this.state.showAddUser,\n      className: \"modal\",\n      onSubmit: this.onAddUserSubmit,\n      submitError: this.state.addUserError,\n      onCancel: () => this.setState({\n        showAddUser: false,\n        addUserError: undefined\n      }),\n      title: this.props.intl.formatMessage(messages.addUserFormTitle),\n      loading: this.props.createRequest.loading,\n      schema: adduserschema,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 13\n      }\n    }) : null), __jsx(Segment.Group, {\n      raised: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 9\n      }\n    }, __jsx(Segment, {\n      className: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 11\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Users\",\n      defaultMessage: \"Users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 13\n      }\n    })), __jsx(Segment, {\n      secondary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 11\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Note that roles set here apply directly to a user. The symbol{plone_svg}indicates a role inherited from membership in a group.\",\n      defaultMessage: \"Note that roles set here apply directly to a user. The symbol{plone_svg}indicates a role inherited from membership in a group.\",\n      values: {\n        plone_svg: __jsx(Icon, {\n          name: ploneSVG,\n          size: \"20px\",\n          color: \"#007EB1\",\n          title: 'plone-svg',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 19\n          }\n        })\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 13\n      }\n    })), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 11\n      }\n    }, __jsx(Form, {\n      onSubmit: this.onSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 13\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      name: \"SearchableText\",\n      action: {\n        icon: 'search',\n        loading: this.state.isLoading,\n        disabled: this.state.isLoading\n      },\n      placeholder: this.props.intl.formatMessage(messages.searchUsers),\n      onChange: this.onChangeSearch,\n      id: \"user-search-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 17\n      }\n    })))), __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 11\n      }\n    }, (this.props.many_users && this.state.entries.length > 0 || !this.props.many_users) && __jsx(Table, {\n      padded: true,\n      striped: true,\n      attached: true,\n      unstackable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 15\n      }\n    }, __jsx(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 17\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 19\n      }\n    }, __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"User name\",\n      defaultMessage: \"User name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 23\n      }\n    })), this.props.roles.map(role => __jsx(Table.HeaderCell, {\n      key: role.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 23\n      }\n    }, role.title)), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Actions\",\n      defaultMessage: \"Actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 23\n      }\n    })))), __jsx(Table.Body, {\n      \"data-user\": \"users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 17\n      }\n    }, this.state.entries.slice(this.state.currentPage * 10, this.state.pageSize * (this.state.currentPage + 1)).map(user => __jsx(RenderUsers, {\n      key: user.id,\n      onDelete: this.delete,\n      roles: this.props.roles,\n      user: user,\n      updateUser: this.updateUserRole,\n      inheritedRole: this.props.inheritedRole,\n      userschema: this.props.userschema,\n      listUsers: this.props.listUsers,\n      isUserManager: isUserManager,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 23\n      }\n    })))), this.state.entries.length === 0 && this.state.search && __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 15\n      }\n    }, this.props.intl.formatMessage(messages.userSearchNoResults)), __jsx(\"div\", {\n      className: \"contents-pagination\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 13\n      }\n    }, __jsx(Pagination, {\n      current: this.state.currentPage,\n      total: Math.ceil(((_this$state$entries = this.state.entries) === null || _this$state$entries === void 0 ? void 0 : _this$state$entries.length) / this.state.pageSize),\n      onChangePage: this.onChangePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 15\n      }\n    })))), this.state.isClient && /*#__PURE__*/createPortal(__jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(React.Fragment, null, __jsx(Button, {\n        id: \"toolbar-save\",\n        className: \"save\",\n        \"aria-label\": this.props.intl.formatMessage(messages.save),\n        onClick: this.updateUserRoleSubmit,\n        loading: this.props.createRequest.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 19\n        }\n      }, __jsx(Icon, {\n        name: saveSVG,\n        className: \"circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.save),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 21\n        }\n      })), __jsx(Link, {\n        to: \"/controlpanel\",\n        className: \"cancel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 19\n        }\n      }, __jsx(Icon, {\n        name: clearSVG,\n        className: \"circled\",\n        \"aria-label\": this.props.intl.formatMessage(messages.cancel),\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.cancel),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 21\n        }\n      })), __jsx(Button, {\n        id: \"toolbar-add\",\n        \"aria-label\": this.props.intl.formatMessage(messages.addUserButtonTitle),\n        onClick: () => {\n          this.setState({\n            showAddUser: true\n          });\n        },\n        loading: this.props.createRequest.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 19\n        }\n      }, __jsx(Icon, {\n        name: addUserSvg,\n        size: \"45px\",\n        color: \"#826A6A\",\n        title: this.props.intl.formatMessage(messages.addUserButtonTitle),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 21\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 13\n      }\n    }), document.getElementById('toolbar')));\n  }\n}\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_defineProperty(UsersControlpanel, \"propTypes\", {\n  listRoles: PropTypes.func.isRequired,\n  listUsers: PropTypes.func.isRequired,\n  updateUser: PropTypes.func,\n  listGroups: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  roles: PropTypes.arrayOf(PropTypes.shape({\n    '@id': PropTypes.string,\n    '@type': PropTypes.string,\n    id: PropTypes.string\n  })).isRequired,\n  users: PropTypes.arrayOf(PropTypes.shape({\n    username: PropTypes.string,\n    fullname: PropTypes.string,\n    roles: PropTypes.arrayOf(PropTypes.string)\n  })).isRequired,\n  user: PropTypes.shape({\n    '@id': PropTypes.string,\n    id: PropTypes.string,\n    description: PropTypes.string,\n    email: PropTypes.string,\n    fullname: PropTypes.string,\n    groups: PropTypes.object,\n    location: PropTypes.string,\n    portrait: PropTypes.string,\n    home_page: PropTypes.string,\n    roles: PropTypes.arrayOf(PropTypes.string),\n    username: PropTypes.string\n  }).isRequired\n});\nexport default compose(injectIntl, connect((state, props) => {\n  var _state$controlpanels, _state$controlpanels$, _state$controlpanels$2, _state$controlpanels2, _state$controlpanels3, _state$controlpanels4, _state$controlpanels5;\n  return {\n    roles: state.roles.roles,\n    users: state.users.users,\n    user: state.users.user,\n    userId: state.userSession.token ? jwtDecode(state.userSession.token).sub : '',\n    groups: state.groups.groups,\n    many_users: (_state$controlpanels = state.controlpanels) === null || _state$controlpanels === void 0 ? void 0 : (_state$controlpanels$ = _state$controlpanels.controlpanel) === null || _state$controlpanels$ === void 0 ? void 0 : (_state$controlpanels$2 = _state$controlpanels$.data) === null || _state$controlpanels$2 === void 0 ? void 0 : _state$controlpanels$2.many_users,\n    many_groups: (_state$controlpanels2 = state.controlpanels) === null || _state$controlpanels2 === void 0 ? void 0 : (_state$controlpanels3 = _state$controlpanels2.controlpanel) === null || _state$controlpanels3 === void 0 ? void 0 : (_state$controlpanels4 = _state$controlpanels3.data) === null || _state$controlpanels4 === void 0 ? void 0 : _state$controlpanels4.many_groups,\n    description: state.description,\n    pathname: props.location.pathname,\n    deleteRequest: state.users.delete,\n    createRequest: state.users.create,\n    loadRolesRequest: state.roles,\n    inheritedRole: state.authRole.authenticatedRole,\n    userschema: state.userschema,\n    controlPanelData: (_state$controlpanels5 = state.controlpanels) === null || _state$controlpanels5 === void 0 ? void 0 : _state$controlpanels5.controlpanel\n  };\n}, dispatch => bindActionCreators({\n  listRoles,\n  listUsers,\n  listGroups,\n  getControlpanel,\n  deleteUser,\n  createUser,\n  updateUser,\n  updateGroup,\n  getUserSchema,\n  getUser\n}, dispatch)))(UsersControlpanel);","map":{"version":3,"names":["createUser","deleteUser","listUsers","updateUser","getUser","listRoles","listGroups","updateGroup","getControlpanel","getUserSchema","jwtDecode","Icon","Toast","Toolbar","Pagination","Error","ModalForm","RenderUsers","Link","Helmet","messages","isManager","canAssignGroup","clearSVG","addUserSvg","saveSVG","ploneSVG","find","map","pull","difference","PropTypes","React","Component","FormattedMessage","injectIntl","createPortal","connect","toast","bindActionCreators","compose","Confirm","Container","Form","Input","Button","Dimmer","Segment","Table","Loader","UsersControlpanel","constructor","props","_defineProperty","many_users","setState","entries","users","userId","_this$props$controlPa","loginUsingEmail","controlPanelData","data","use_email_as_login","user","groups","username","forEach","group","e","stopPropagation","roles","item","id","state","userData","removedRoles","role","success","__jsx","title","intl","formatMessage","content","updateRoles","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","event","value","currentPage","onChangeSearch","bind","onSearch","delete","onDeleteOk","onDeleteCancel","onAddUserSubmit","onAddUserError","onAddUserSuccess","updateUserRole","search","isLoading","showAddUser","showAddUserErrorConfirm","addUserError","showDelete","userToDelete","undefined","isClient","pageSize","componentDidMount","fetchData","checkLoginUsingEmailStatus","UNSAFE_componentWillReceiveProps","nextProps","deleteRequest","loading","loaded","createRequest","onDeleteUserSuccess","error","loadRolesRequest","getUserFromProps","preventDefault","then","catch","console","target","itemsToDelete","callback","sendPasswordReset","password","addUserFormPasswordAndSendPasswordTogetherNotAllowed","length","addUserToGroup","addUserSetFormDataCallback","userCreated","userDeleted","name","entry","_objectSpread","includes","response","body","message","componentDidUpdate","prevProps","prevState","canAssignAdd","_this$props$user","filter","render","_this$props","_this$props$userschem","_this$props3","_this$props3$deleteRe","_this$props4","_this$props4$usersche","_this$state$entries","usernameToDelete","adduserschema","isUserManager","userschema","_this$props2","_this$props2$usersche","JSON","parse","stringify","properties","addUserFormUsernameTitle","type","description","addUserFormUsernameDescription","addUserFormPasswordTitle","addUserFormPasswordDescription","widget","addUserFormSendPasswordResetTitle","addUserFormRolesTitle","choices","noValueOption","addUserGroupNameTitle","fieldsets","concat","className","open","header","deleteUserConfirmTitle","active","defaultMessage","values","onCancel","onConfirm","size","onSubmit","submitError","addUserFormTitle","schema","Group","raised","secondary","plone_svg","color","Field","action","icon","disabled","placeholder","searchUsers","onChange","padded","striped","attached","unstackable","Header","Row","HeaderCell","key","Body","slice","onDelete","inheritedRole","userSearchNoResults","current","total","Math","ceil","onChangePage","pathname","hideDefaultViewButtons","inner","Fragment","save","onClick","updateUserRoleSubmit","to","cancel","addUserButtonTitle","document","getElementById","func","isRequired","string","arrayOf","shape","fullname","email","object","location","portrait","home_page","_state$controlpanels","_state$controlpanels$","_state$controlpanels$2","_state$controlpanels2","_state$controlpanels3","_state$controlpanels4","_state$controlpanels5","userSession","token","sub","controlpanels","controlpanel","many_groups","create","authRole","authenticatedRole","dispatch"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Controlpanels/Users/UsersControlpanel.jsx"],"sourcesContent":["/**\n * Users controlpanel container.\n * @module components/manage/Controlpanels/UsersControlpanel\n */\nimport {\n  createUser,\n  deleteUser,\n  listUsers,\n  updateUser,\n  getUser,\n} from '@plone/volto/actions/users/users';\nimport { listRoles } from '@plone/volto/actions/roles/roles';\nimport { listGroups, updateGroup } from '@plone/volto/actions/groups/groups';\nimport { getControlpanel } from '@plone/volto/actions/controlpanels/controlpanels';\nimport { getUserSchema } from '@plone/volto/actions/userschema/userschema';\nimport jwtDecode from 'jwt-decode';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nimport Pagination from '@plone/volto/components/theme/Pagination/Pagination';\nimport Error from '@plone/volto/components/theme/Error/Error';\nimport { ModalForm } from '@plone/volto/components/manage/Form';\nimport RenderUsers from '@plone/volto/components/manage/Controlpanels/Users/RenderUsers';\nimport { Link } from 'react-router-dom';\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport { messages } from '@plone/volto/helpers/MessageLabels/MessageLabels';\nimport { isManager, canAssignGroup } from '@plone/volto/helpers/User/User';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport addUserSvg from '@plone/volto/icons/add-user.svg';\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport ploneSVG from '@plone/volto/icons/plone.svg';\nimport find from 'lodash/find';\nimport map from 'lodash/map';\nimport pull from 'lodash/pull';\nimport difference from 'lodash/difference';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { createPortal } from 'react-dom';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { bindActionCreators, compose } from 'redux';\nimport {\n  Confirm,\n  Container,\n  Form,\n  Input,\n  Button,\n  Dimmer,\n  Segment,\n  Table,\n  Loader,\n} from 'semantic-ui-react';\n\n/**\n * UsersControlpanel class.\n * @class UsersControlpanel\n * @extends Component\n */\nclass UsersControlpanel extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    listRoles: PropTypes.func.isRequired,\n    listUsers: PropTypes.func.isRequired,\n    updateUser: PropTypes.func,\n    listGroups: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    roles: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        '@type': PropTypes.string,\n        id: PropTypes.string,\n      }),\n    ).isRequired,\n    users: PropTypes.arrayOf(\n      PropTypes.shape({\n        username: PropTypes.string,\n        fullname: PropTypes.string,\n        roles: PropTypes.arrayOf(PropTypes.string),\n      }),\n    ).isRequired,\n    user: PropTypes.shape({\n      '@id': PropTypes.string,\n      id: PropTypes.string,\n      description: PropTypes.string,\n      email: PropTypes.string,\n      fullname: PropTypes.string,\n      groups: PropTypes.object,\n      location: PropTypes.string,\n      portrait: PropTypes.string,\n      home_page: PropTypes.string,\n      roles: PropTypes.arrayOf(PropTypes.string),\n      username: PropTypes.string,\n    }).isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    this.onChangeSearch = this.onChangeSearch.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n    this.delete = this.delete.bind(this);\n\n    this.onDeleteOk = this.onDeleteOk.bind(this);\n    this.onDeleteCancel = this.onDeleteCancel.bind(this);\n    this.onAddUserSubmit = this.onAddUserSubmit.bind(this);\n    this.onAddUserError = this.onAddUserError.bind(this);\n    this.onAddUserSuccess = this.onAddUserSuccess.bind(this);\n    this.updateUserRole = this.updateUserRole.bind(this);\n    this.state = {\n      search: '',\n      isLoading: false,\n      showAddUser: false,\n      showAddUserErrorConfirm: false,\n      addUserError: '',\n      showDelete: false,\n      userToDelete: undefined,\n      entries: [],\n      isClient: false,\n      currentPage: 0,\n      pageSize: 10,\n      loginUsingEmail: false,\n    };\n  }\n\n  fetchData = async () => {\n    await this.props.getControlpanel('usergroup');\n    await this.props.listRoles();\n    if (!this.props.many_users) {\n      this.props.listGroups();\n      await this.props.listUsers();\n      this.setState({\n        entries: this.props.users,\n      });\n    }\n    await this.props.getUserSchema();\n    await this.props.getUser(this.props.userId);\n  };\n\n  // Because username field needs to be disabled if email login is enabled!\n  checkLoginUsingEmailStatus = async () => {\n    await this.props.getControlpanel('security');\n    this.setState({\n      loginUsingEmail: this.props.controlPanelData?.data.use_email_as_login,\n    });\n  };\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.setState({\n      isClient: true,\n    });\n    this.fetchData();\n    this.checkLoginUsingEmailStatus();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      (this.props.deleteRequest.loading && nextProps.deleteRequest.loaded) ||\n      (this.props.createRequest.loading && nextProps.createRequest.loaded)\n    ) {\n      this.props.listUsers({\n        search: this.state.search,\n      });\n    }\n    if (this.props.deleteRequest.loading && nextProps.deleteRequest.loaded) {\n      this.onDeleteUserSuccess();\n    }\n    if (this.props.createRequest.loading && nextProps.createRequest.loaded) {\n      this.onAddUserSuccess();\n    }\n    if (this.props.createRequest.loading && nextProps.createRequest.error) {\n      this.onAddUserError(nextProps.createRequest.error);\n    }\n    if (\n      this.props.loadRolesRequest.loading &&\n      nextProps.loadRolesRequest.error\n    ) {\n      this.setState({\n        error: nextProps.loadRolesRequest.error,\n      });\n    }\n  }\n\n  getUserFromProps(value) {\n    return find(this.props.users, ['@id', value]);\n  }\n\n  /**\n   * Search handler\n   * @method onSearch\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onSearch(event) {\n    event.preventDefault();\n    this.setState({ isLoading: true });\n    this.props\n      .listUsers({\n        search: this.state.search,\n      })\n      .then(() => {\n        this.setState({ isLoading: false });\n      })\n      .catch((error) => {\n        this.setState({ isLoading: false });\n        // eslint-disable-next-line no-console\n        console.error('Error searching users', error);\n      });\n  }\n\n  /**\n   * On change search handler\n   * @method onChangeSearch\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onChangeSearch(event) {\n    this.setState({\n      search: event.target.value,\n    });\n  }\n\n  /**\n   * Delete a user\n   * @method delete\n   * @param {object} event Event object.\n   * @param {string} value username.\n   * @returns {undefined}\n   */\n  delete(event, { value }) {\n    if (value) {\n      this.setState({\n        showDelete: true,\n        userToDelete: this.getUserFromProps(value),\n      });\n    }\n  }\n\n  /**\n   * On delete ok\n   * @method onDeleteOk\n   * @returns {undefined}\n   */\n  onDeleteOk() {\n    if (this.state.userToDelete) {\n      this.props.deleteUser(this.state.userToDelete.id);\n    }\n  }\n\n  /**\n   * On delete cancel\n   * @method onDeleteCancel\n   * @returns {undefined}\n   */\n  onDeleteCancel() {\n    this.setState({\n      showDelete: false,\n      itemsToDelete: [],\n      userToDelete: undefined,\n    });\n  }\n\n  /**\n   *@param {object} user\n   *@returns {undefined}\n   *@memberof UsersControlpanel\n   */\n  addUserToGroup = (user) => {\n    const { groups, username } = user;\n    groups.forEach((group) => {\n      this.props.updateGroup(group, {\n        users: {\n          [username]: true,\n        },\n      });\n    });\n  };\n\n  /**\n   * Callback to be called by the ModalForm when the form is submitted.\n   *\n   * @param {object} data Form data from the ModalForm.\n   * @param {func} callback to set new form data in the ModalForm\n   * @returns {undefined}\n   */\n  onAddUserSubmit(data, callback) {\n    const { groups, sendPasswordReset, password } = data;\n    if (\n      sendPasswordReset !== undefined &&\n      sendPasswordReset === true &&\n      password !== undefined\n    ) {\n      toast.error(\n        <Toast\n          error\n          title={this.props.intl.formatMessage(messages.error)}\n          content={this.props.intl.formatMessage(\n            messages.addUserFormPasswordAndSendPasswordTogetherNotAllowed,\n          )}\n        />,\n      );\n    } else {\n      if (groups && groups.length > 0) this.addUserToGroup(data);\n      this.props.createUser(data, sendPasswordReset);\n      this.setState({\n        addUserSetFormDataCallback: callback,\n      });\n    }\n  }\n\n  /**\n   * Handle Success after createUser()\n   *\n   * @returns {undefined}\n   */\n  onAddUserSuccess() {\n    this.state.addUserSetFormDataCallback({});\n    this.setState({\n      showAddUser: false,\n      addUserError: undefined,\n      addUserSetFormDataCallback: undefined,\n    });\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.userCreated)}\n      />,\n    );\n  }\n\n  /**\n   * Handle Success after deleteUser()\n   *\n   * @returns {undefined}\n   */\n  onDeleteUserSuccess() {\n    this.setState({\n      userToDelete: undefined,\n      showDelete: false,\n    });\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.userDeleted)}\n      />,\n    );\n  }\n  /**\n   *\n   *\n   * @param {*} data\n   * @param {*} callback\n   * @memberof UsersControlpanel\n   */\n  updateUserRole(name, value) {\n    this.setState({\n      entries: map(this.state.entries, (entry) => ({\n        ...entry,\n        roles:\n          entry.id === name && !entry.roles.includes(value)\n            ? [...entry.roles, value]\n            : entry.id !== name\n              ? entry.roles\n              : pull(entry.roles, value),\n      })),\n    });\n  }\n  /**\n   *\n   * @param {*} event\n   * @memberof UsersControlpanel\n   */\n  updateUserRoleSubmit = (e) => {\n    e.stopPropagation();\n\n    const roles = this.props.roles.map((item) => item.id);\n    this.state.entries.forEach((item) => {\n      const userData = { roles: {} };\n      const removedRoles = difference(roles, item.roles);\n\n      removedRoles.forEach((role) => {\n        userData.roles[role] = false;\n      });\n      item.roles.forEach((role) => {\n        userData.roles[role] = true;\n      });\n      this.props.updateUser(item.id, userData);\n    });\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.updateRoles)}\n      />,\n    );\n  };\n\n  /**\n   * Handle Errors after createUser()\n   *\n   * @param {object} error object. Requires the property .message\n   * @returns {undefined}\n   */\n  onAddUserError(error) {\n    this.setState({\n      addUserError: error.response.body.error.message,\n    });\n  }\n\n  /**\n   * On change page\n   * @method onChangePage\n   * @param {object} event Event object.\n   * @param {string} value Page value.\n   * @returns {undefined}\n   */\n  onChangePage = (event, { value }) => {\n    this.setState({\n      currentPage: value,\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.users !== prevProps.users) {\n      this.setState({\n        entries: this.props.users,\n      });\n    }\n  }\n\n  /**\n   * Filters the roles a user can assign when adding a user.\n   * @method canAssignAdd\n   * @returns {arry}\n   */\n  canAssignAdd(isManager) {\n    if (isManager) return this.props.roles;\n    return this.props.user?.roles\n      ? this.props.roles.filter((role) =>\n          this.props.user.roles.includes(role.id),\n        )\n      : [];\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (this.state.error) {\n      return <Error error={this.state.error} />;\n    }\n    /*let fullnameToDelete = this.state.userToDelete\n        ? this.state.userToDelete.fullname\n        : '';*/\n    let usernameToDelete = this.state.userToDelete\n      ? this.state.userToDelete.username\n      : '';\n    // Copy the userschema using JSON serialization/deserialization\n    // this is really ugly, but if we don't do this the original value\n    // of the userschema is changed and it is used like that through\n    // the lifecycle of the application\n    let adduserschema = {};\n    let isUserManager = false;\n    if (this.props?.userschema?.loaded) {\n      isUserManager = isManager(this.props.user);\n      adduserschema = JSON.parse(\n        JSON.stringify(this.props?.userschema?.userschema),\n      );\n      adduserschema.properties['username'] = {\n        title: this.props.intl.formatMessage(messages.addUserFormUsernameTitle),\n        type: 'string',\n        description: this.props.intl.formatMessage(\n          messages.addUserFormUsernameDescription,\n        ),\n      };\n      adduserschema.properties['password'] = {\n        title: this.props.intl.formatMessage(messages.addUserFormPasswordTitle),\n        type: 'password',\n        description: this.props.intl.formatMessage(\n          messages.addUserFormPasswordDescription,\n        ),\n        widget: 'password',\n      };\n      adduserschema.properties['sendPasswordReset'] = {\n        title: this.props.intl.formatMessage(\n          messages.addUserFormSendPasswordResetTitle,\n        ),\n        type: 'boolean',\n      };\n      adduserschema.properties['roles'] = {\n        title: this.props.intl.formatMessage(messages.addUserFormRolesTitle),\n        type: 'array',\n        choices: this.canAssignAdd(isUserManager).map((role) => [\n          role.id,\n          role.title,\n        ]),\n        noValueOption: false,\n      };\n      adduserschema.properties['groups'] = {\n        title: this.props.intl.formatMessage(messages.addUserGroupNameTitle),\n        type: 'array',\n        choices: this.props.groups\n          .filter((group) => canAssignGroup(isUserManager, group))\n          .map((group) => [group.id, group.id]),\n        noValueOption: false,\n      };\n      if (\n        adduserschema.fieldsets &&\n        adduserschema.fieldsets.length > 0 &&\n        !adduserschema.fieldsets[0]['fields'].includes('username')\n      ) {\n        adduserschema.fieldsets[0]['fields'] = adduserschema.fieldsets[0][\n          'fields'\n        ].concat([\n          'username',\n          'password',\n          'sendPasswordReset',\n          'roles',\n          'groups',\n        ]);\n      }\n    }\n\n    return (\n      <Container className=\"users-control-panel\">\n        <Helmet title={this.props.intl.formatMessage(messages.users)} />\n        <div className=\"container\">\n          <Confirm\n            open={this.state.showDelete}\n            header={this.props.intl.formatMessage(\n              messages.deleteUserConfirmTitle,\n            )}\n            content={\n              <div className=\"content\">\n                <Dimmer active={this.props?.deleteRequest?.loading}>\n                  <Loader>\n                    <FormattedMessage id=\"Loading\" defaultMessage=\"Loading.\" />\n                  </Loader>\n                </Dimmer>\n\n                <ul className=\"content\">\n                  <FormattedMessage\n                    id=\"Do you really want to delete the user {username}?\"\n                    defaultMessage=\"Do you really want to delete the user {username}?\"\n                    values={{\n                      username: <b>{usernameToDelete}</b>,\n                    }}\n                  />\n                </ul>\n              </div>\n            }\n            onCancel={this.onDeleteCancel}\n            onConfirm={this.onDeleteOk}\n            size={null}\n          />\n          {this.props?.userschema?.loaded && this.state.showAddUser ? (\n            <ModalForm\n              open={this.state.showAddUser}\n              className=\"modal\"\n              onSubmit={this.onAddUserSubmit}\n              submitError={this.state.addUserError}\n              onCancel={() =>\n                this.setState({ showAddUser: false, addUserError: undefined })\n              }\n              title={this.props.intl.formatMessage(messages.addUserFormTitle)}\n              loading={this.props.createRequest.loading}\n              schema={adduserschema}\n            />\n          ) : null}\n        </div>\n        <Segment.Group raised>\n          <Segment className=\"primary\">\n            <FormattedMessage id=\"Users\" defaultMessage=\"Users\" />\n          </Segment>\n          <Segment secondary>\n            <FormattedMessage\n              id=\"Note that roles set here apply directly to a user. The symbol{plone_svg}indicates a role inherited from membership in a group.\"\n              defaultMessage=\"Note that roles set here apply directly to a user. The symbol{plone_svg}indicates a role inherited from membership in a group.\"\n              values={{\n                plone_svg: (\n                  <Icon\n                    name={ploneSVG}\n                    size=\"20px\"\n                    color=\"#007EB1\"\n                    title={'plone-svg'}\n                  />\n                ),\n              }}\n            />\n          </Segment>\n          <Segment>\n            <Form onSubmit={this.onSearch}>\n              <Form.Field>\n                <Input\n                  name=\"SearchableText\"\n                  action={{\n                    icon: 'search',\n                    loading: this.state.isLoading,\n                    disabled: this.state.isLoading,\n                  }}\n                  placeholder={this.props.intl.formatMessage(\n                    messages.searchUsers,\n                  )}\n                  onChange={this.onChangeSearch}\n                  id=\"user-search-input\"\n                />\n              </Form.Field>\n            </Form>\n          </Segment>\n          <Form>\n            {((this.props.many_users && this.state.entries.length > 0) ||\n              !this.props.many_users) && (\n              <Table padded striped attached unstackable>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>\n                      <FormattedMessage\n                        id=\"User name\"\n                        defaultMessage=\"User name\"\n                      />\n                    </Table.HeaderCell>\n                    {this.props.roles.map((role) => (\n                      <Table.HeaderCell key={role.id}>\n                        {role.title}\n                      </Table.HeaderCell>\n                    ))}\n                    <Table.HeaderCell>\n                      <FormattedMessage id=\"Actions\" defaultMessage=\"Actions\" />\n                    </Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body data-user=\"users\">\n                  {this.state.entries\n                    .slice(\n                      this.state.currentPage * 10,\n                      this.state.pageSize * (this.state.currentPage + 1),\n                    )\n                    .map((user) => (\n                      <RenderUsers\n                        key={user.id}\n                        onDelete={this.delete}\n                        roles={this.props.roles}\n                        user={user}\n                        updateUser={this.updateUserRole}\n                        inheritedRole={this.props.inheritedRole}\n                        userschema={this.props.userschema}\n                        listUsers={this.props.listUsers}\n                        isUserManager={isUserManager}\n                      />\n                    ))}\n                </Table.Body>\n              </Table>\n            )}\n            {this.state.entries.length === 0 && this.state.search && (\n              <Segment>\n                {this.props.intl.formatMessage(messages.userSearchNoResults)}\n              </Segment>\n            )}\n            <div className=\"contents-pagination\">\n              <Pagination\n                current={this.state.currentPage}\n                total={Math.ceil(\n                  this.state.entries?.length / this.state.pageSize,\n                )}\n                onChangePage={this.onChangePage}\n              />\n            </div>\n          </Form>\n        </Segment.Group>\n        {this.state.isClient &&\n          createPortal(\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <>\n                  <Button\n                    id=\"toolbar-save\"\n                    className=\"save\"\n                    aria-label={this.props.intl.formatMessage(messages.save)}\n                    onClick={this.updateUserRoleSubmit}\n                    loading={this.props.createRequest.loading}\n                  >\n                    <Icon\n                      name={saveSVG}\n                      className=\"circled\"\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.save)}\n                    />\n                  </Button>\n                  <Link to=\"/controlpanel\" className=\"cancel\">\n                    <Icon\n                      name={clearSVG}\n                      className=\"circled\"\n                      aria-label={this.props.intl.formatMessage(\n                        messages.cancel,\n                      )}\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.cancel)}\n                    />\n                  </Link>\n                  <Button\n                    id=\"toolbar-add\"\n                    aria-label={this.props.intl.formatMessage(\n                      messages.addUserButtonTitle,\n                    )}\n                    onClick={() => {\n                      this.setState({ showAddUser: true });\n                    }}\n                    loading={this.props.createRequest.loading}\n                  >\n                    <Icon\n                      name={addUserSvg}\n                      size=\"45px\"\n                      color=\"#826A6A\"\n                      title={this.props.intl.formatMessage(\n                        messages.addUserButtonTitle,\n                      )}\n                    />\n                  </Button>\n                </>\n              }\n            />,\n            document.getElementById('toolbar'),\n          )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      roles: state.roles.roles,\n      users: state.users.users,\n      user: state.users.user,\n      userId: state.userSession.token\n        ? jwtDecode(state.userSession.token).sub\n        : '',\n      groups: state.groups.groups,\n      many_users: state.controlpanels?.controlpanel?.data?.many_users,\n      many_groups: state.controlpanels?.controlpanel?.data?.many_groups,\n      description: state.description,\n      pathname: props.location.pathname,\n      deleteRequest: state.users.delete,\n      createRequest: state.users.create,\n      loadRolesRequest: state.roles,\n      inheritedRole: state.authRole.authenticatedRole,\n      userschema: state.userschema,\n      controlPanelData: state.controlpanels?.controlpanel,\n    }),\n    (dispatch) =>\n      bindActionCreators(\n        {\n          listRoles,\n          listUsers,\n          listGroups,\n          getControlpanel,\n          deleteUser,\n          createUser,\n          updateUser,\n          updateGroup,\n          getUserSchema,\n          getUser,\n        },\n        dispatch,\n      ),\n  ),\n)(UsersControlpanel);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Loading","defaultMessage":"Loading."},{"id":"Do you really want to delete the user {username}?","defaultMessage":"Do you really want to delete the user {username}?"},{"id":"Users","defaultMessage":"Users"},{"id":"Note that roles set here apply directly to a user. The symbol{plone_svg}indicates a role inherited from membership in a group.","defaultMessage":"Note that roles set here apply directly to a user. The symbol{plone_svg}indicates a role inherited from membership in a group."},{"id":"User name","defaultMessage":"User name"},{"id":"Actions","defaultMessage":"Actions"}]}},"sourceType":"module","externalDependencies":[]}