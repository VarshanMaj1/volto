{"ast":null,"code":"import _extends from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Container/Edit.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport pickBy from 'lodash/pickBy';\nimport SidebarPortal from '@plone/volto/components/manage/Sidebar/SidebarPortal';\nimport { BlocksForm } from '@plone/volto/components/manage/Form';\nimport PropTypes from 'prop-types';\nimport ContainerData from './Data';\nimport DefaultEditBlockWrapper from './EditBlockWrapper';\nimport SimpleContainerToolbar from './SimpleContainerToolbar';\nimport { v4 as uuid } from 'uuid';\nimport { blocksFormGenerator } from '@plone/volto/helpers/Blocks/Blocks';\nimport DefaultTemplateChooser from '@plone/volto/components/manage/TemplateChooser/TemplateChooser';\nimport config from '@plone/volto/registry';\nconst ContainerBlockEdit = props => {\n  _s();\n  const {\n    block,\n    data,\n    direction = 'horizontal',\n    onChangeBlock,\n    onChangeField,\n    pathname,\n    selected,\n    manage\n  } = props;\n  const intl = useIntl();\n  const blockType = data['@type'];\n  const metadata = props.metadata || props.properties;\n  const isInitialized = (data === null || data === void 0 ? void 0 : data.blocks) && (data === null || data === void 0 ? void 0 : data.blocks_layout);\n  const properties = isInitialized ? data : blocksFormGenerator(0, '');\n  const blockConfig = config.blocks.blocksConfig[blockType];\n  const blocksConfig = blockConfig.blocksConfig || props.blocksConfig;\n  const allowedBlocks = blockConfig.allowedBlocks;\n  const maxLength = blockConfig.maxLength || 8;\n  const templates = blockConfig.templates;\n  const ContainerToolbar = blockConfig.containerToolbar || SimpleContainerToolbar;\n\n  // Custom components from config or default ones\n  const TemplateChooser = blockConfig.templateChooser || DefaultTemplateChooser;\n  const EditBlockWrapper = blockConfig.editBlockWrapper || DefaultEditBlockWrapper;\n  let {\n    0: selectedBlock,\n    1: setSelectedBlock\n  } = useState(properties.blocks_layout.items[0]);\n  if (props.setSelectedBlock) {\n    ({\n      selectedBlock,\n      setSelectedBlock\n    } = props);\n  }\n  const blockState = {};\n  const onAddNewBlock = () => {\n    const newuuid = uuid();\n    const type = (allowedBlocks === null || allowedBlocks === void 0 ? void 0 : allowedBlocks.length) === 1 ? allowedBlocks[0] : null;\n    const blocks = data.blocks || properties.blocks;\n    const blocks_layout = data.blocks_layout || properties.blocks_layout;\n    const newFormData = _objectSpread(_objectSpread({}, data), {}, {\n      blocks: _objectSpread(_objectSpread({}, blocks), {}, {\n        [newuuid]: {\n          '@type': type || 'empty'\n        }\n      }),\n      blocks_layout: {\n        items: [...blocks_layout.items, newuuid]\n      }\n    });\n    if (blocks_layout.items.length < maxLength) {\n      onChangeBlock(block, _objectSpread({}, newFormData));\n    }\n  };\n  const onSelectTemplate = templateIndex => {\n    const resultantTemplates = (allowedBlocks === null || allowedBlocks === void 0 ? void 0 : allowedBlocks.length) === 1 ? templates(allowedBlocks[0]) : templates();\n    onChangeBlock(block, _objectSpread(_objectSpread({}, data), resultantTemplates(intl)[templateIndex].blocksData));\n  };\n  const allowedBlocksConfig = pickBy(blocksConfig, (value, key) => allowedBlocks.includes(key));\n  const containerProps = _objectSpread(_objectSpread({}, props), {}, {\n    allowedBlocks,\n    allowedBlocksConfig,\n    blocksConfig,\n    blockType,\n    maxLength,\n    metadata,\n    onAddNewBlock,\n    onSelectTemplate,\n    selectedBlock,\n    setSelectedBlock,\n    templates\n  });\n  return __jsx(React.Fragment, null, data.headline && __jsx(\"h2\", {\n    className: \"headline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, data.headline), selected && __jsx(ContainerToolbar, _extends({}, containerProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 20\n    }\n  })), !isInitialized && templates && __jsx(TemplateChooser, {\n    templates: (allowedBlocks === null || allowedBlocks === void 0 ? void 0 : allowedBlocks.length) === 1 ? templates(allowedBlocks[0]) : templates(),\n    onSelectTemplate: onSelectTemplate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), __jsx(BlocksForm, {\n    metadata: metadata,\n    properties: properties,\n    direction: direction,\n    manage: manage,\n    selectedBlock: selected ? selectedBlock : null,\n    blocksConfig: allowedBlocksConfig,\n    title: data.placeholder,\n    isContainer: true,\n    isMainForm: false,\n    stopPropagation: selectedBlock,\n    disableAddBlockOnEnterKey: true,\n    onSelectBlock: id => {\n      setSelectedBlock(id);\n    },\n    onChangeFormData: newFormData => {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), newFormData));\n    },\n    onChangeField: (id, value) => {\n      if (['blocks', 'blocks_layout'].includes(id)) {\n        blockState[id] = value;\n        onChangeBlock(block, _objectSpread(_objectSpread({}, data), blockState));\n      } else {\n        onChangeField(id, value);\n      }\n    },\n    pathname: pathname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, ({\n    draginfo\n  }, editBlock, blockProps) => __jsx(EditBlockWrapper, {\n    draginfo: draginfo,\n    blockProps: blockProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, editBlock)), __jsx(SidebarPortal, {\n    selected: selected && !selectedBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, __jsx(ContainerData, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }))));\n};\n_s(ContainerBlockEdit, \"W+p/KA+6jk0PCdehXKgSAg4fFKc=\", false, function () {\n  return [useIntl];\n});\n_c = ContainerBlockEdit;\nContainerBlockEdit.propTypes = {\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  manage: PropTypes.bool.isRequired,\n  direction: PropTypes.oneOf(['horizontal', 'vertical'])\n};\nexport default ContainerBlockEdit;\nvar _c;\n$RefreshReg$(_c, \"ContainerBlockEdit\");","map":{"version":3,"names":["useState","useIntl","pickBy","SidebarPortal","BlocksForm","PropTypes","ContainerData","DefaultEditBlockWrapper","SimpleContainerToolbar","v4","uuid","blocksFormGenerator","DefaultTemplateChooser","config","ContainerBlockEdit","props","_s","block","data","direction","onChangeBlock","onChangeField","pathname","selected","manage","intl","blockType","metadata","properties","isInitialized","blocks","blocks_layout","blockConfig","blocksConfig","allowedBlocks","maxLength","templates","ContainerToolbar","containerToolbar","TemplateChooser","templateChooser","EditBlockWrapper","editBlockWrapper","selectedBlock","setSelectedBlock","items","blockState","onAddNewBlock","newuuid","type","length","newFormData","_objectSpread","onSelectTemplate","templateIndex","resultantTemplates","blocksData","allowedBlocksConfig","value","key","includes","containerProps","__jsx","React","Fragment","headline","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_extends","title","placeholder","isContainer","isMainForm","stopPropagation","disableAddBlockOnEnterKey","onSelectBlock","id","onChangeFormData","draginfo","editBlock","blockProps","_c","propTypes","string","isRequired","func","bool","oneOf","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Container/Edit.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport pickBy from 'lodash/pickBy';\nimport SidebarPortal from '@plone/volto/components/manage/Sidebar/SidebarPortal';\nimport { BlocksForm } from '@plone/volto/components/manage/Form';\nimport PropTypes from 'prop-types';\nimport ContainerData from './Data';\nimport DefaultEditBlockWrapper from './EditBlockWrapper';\nimport SimpleContainerToolbar from './SimpleContainerToolbar';\nimport { v4 as uuid } from 'uuid';\nimport { blocksFormGenerator } from '@plone/volto/helpers/Blocks/Blocks';\n\nimport DefaultTemplateChooser from '@plone/volto/components/manage/TemplateChooser/TemplateChooser';\n\nimport config from '@plone/volto/registry';\n\nconst ContainerBlockEdit = (props) => {\n  const {\n    block,\n    data,\n    direction = 'horizontal',\n    onChangeBlock,\n    onChangeField,\n    pathname,\n    selected,\n    manage,\n  } = props;\n\n  const intl = useIntl();\n  const blockType = data['@type'];\n  const metadata = props.metadata || props.properties;\n  const isInitialized = data?.blocks && data?.blocks_layout;\n  const properties = isInitialized ? data : blocksFormGenerator(0, '');\n  const blockConfig = config.blocks.blocksConfig[blockType];\n  const blocksConfig = blockConfig.blocksConfig || props.blocksConfig;\n  const allowedBlocks = blockConfig.allowedBlocks;\n  const maxLength = blockConfig.maxLength || 8;\n  const templates = blockConfig.templates;\n  const ContainerToolbar =\n    blockConfig.containerToolbar || SimpleContainerToolbar;\n\n  // Custom components from config or default ones\n  const TemplateChooser = blockConfig.templateChooser || DefaultTemplateChooser;\n  const EditBlockWrapper =\n    blockConfig.editBlockWrapper || DefaultEditBlockWrapper;\n\n  let [selectedBlock, setSelectedBlock] = useState(\n    properties.blocks_layout.items[0],\n  );\n  if (props.setSelectedBlock) {\n    ({ selectedBlock, setSelectedBlock } = props);\n  }\n\n  const blockState = {};\n\n  const onAddNewBlock = () => {\n    const newuuid = uuid();\n    const type = allowedBlocks?.length === 1 ? allowedBlocks[0] : null;\n    const blocks = data.blocks || properties.blocks;\n    const blocks_layout = data.blocks_layout || properties.blocks_layout;\n    const newFormData = {\n      ...data,\n      blocks: {\n        ...blocks,\n        [newuuid]: { '@type': type || 'empty' },\n      },\n      blocks_layout: {\n        items: [...blocks_layout.items, newuuid],\n      },\n    };\n    if (blocks_layout.items.length < maxLength) {\n      onChangeBlock(block, {\n        ...newFormData,\n      });\n    }\n  };\n\n  const onSelectTemplate = (templateIndex) => {\n    const resultantTemplates =\n      allowedBlocks?.length === 1 ? templates(allowedBlocks[0]) : templates();\n    onChangeBlock(block, {\n      ...data,\n      ...resultantTemplates(intl)[templateIndex].blocksData,\n    });\n  };\n\n  const allowedBlocksConfig = pickBy(blocksConfig, (value, key) =>\n    allowedBlocks.includes(key),\n  );\n\n  const containerProps = {\n    ...props,\n    allowedBlocks,\n    allowedBlocksConfig,\n    blocksConfig,\n    blockType,\n    maxLength,\n    metadata,\n    onAddNewBlock,\n    onSelectTemplate,\n    selectedBlock,\n    setSelectedBlock,\n    templates,\n  };\n\n  return (\n    <>\n      {data.headline && <h2 className=\"headline\">{data.headline}</h2>}\n\n      {selected && <ContainerToolbar {...containerProps} />}\n\n      {!isInitialized && templates && (\n        <TemplateChooser\n          templates={\n            allowedBlocks?.length === 1\n              ? templates(allowedBlocks[0])\n              : templates()\n          }\n          onSelectTemplate={onSelectTemplate}\n        />\n      )}\n\n      <BlocksForm\n        metadata={metadata}\n        properties={properties}\n        direction={direction}\n        manage={manage}\n        selectedBlock={selected ? selectedBlock : null}\n        blocksConfig={allowedBlocksConfig}\n        title={data.placeholder}\n        isContainer\n        isMainForm={false}\n        stopPropagation={selectedBlock}\n        disableAddBlockOnEnterKey\n        onSelectBlock={(id) => {\n          setSelectedBlock(id);\n        }}\n        onChangeFormData={(newFormData) => {\n          onChangeBlock(block, {\n            ...data,\n            ...newFormData,\n          });\n        }}\n        onChangeField={(id, value) => {\n          if (['blocks', 'blocks_layout'].includes(id)) {\n            blockState[id] = value;\n            onChangeBlock(block, {\n              ...data,\n              ...blockState,\n            });\n          } else {\n            onChangeField(id, value);\n          }\n        }}\n        pathname={pathname}\n      >\n        {({ draginfo }, editBlock, blockProps) => (\n          <EditBlockWrapper draginfo={draginfo} blockProps={blockProps}>\n            {editBlock}\n          </EditBlockWrapper>\n        )}\n      </BlocksForm>\n      <SidebarPortal selected={selected && !selectedBlock}>\n        <ContainerData {...props}></ContainerData>\n      </SidebarPortal>\n    </>\n  );\n};\n\nContainerBlockEdit.propTypes = {\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  manage: PropTypes.bool.isRequired,\n  direction: PropTypes.oneOf(['horizontal', 'vertical']),\n};\n\nexport default ContainerBlockEdit;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}