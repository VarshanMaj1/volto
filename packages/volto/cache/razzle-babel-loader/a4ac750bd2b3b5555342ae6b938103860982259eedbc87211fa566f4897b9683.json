{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Widgets/TextareaWidget.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n/**\n * TextareaWidget component.\n * @module components/manage/Widgets/TextareaWidget\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, TextArea } from 'semantic-ui-react';\nimport { injectIntl } from 'react-intl';\nimport FormFieldWrapper from '@plone/volto/components/manage/Widgets/FormFieldWrapper';\n\n/**\n * TextareaWidget, a widget for multiple lines text\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Text\",\n *  widget: 'textarea',\n * }\n * ```\n */\nconst TextareaWidget = props => {\n  const {\n    id,\n    maxLength,\n    value,\n    onChange,\n    placeholder,\n    isDisabled\n  } = props;\n  const {\n    0: lengthError,\n    1: setlengthError\n  } = useState('');\n  const onhandleChange = (id, value) => {\n    if (maxLength & (value === null || value === void 0 ? void 0 : value.length)) {\n      let remlength = maxLength - value.length;\n      if (remlength < 0) {\n        setlengthError(`You have exceed word limit by ${Math.abs(remlength)}`);\n      } else {\n        setlengthError('');\n      }\n    }\n    onChange(id, value);\n  };\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    className: \"textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }), __jsx(TextArea, {\n    id: `field-${id}`,\n    name: id,\n    value: value || '',\n    disabled: isDisabled,\n    placeholder: placeholder,\n    onChange: ({\n      target\n    }) => onhandleChange(id, target.value === '' ? undefined : target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), lengthError.length > 0 && __jsx(Label, {\n    key: lengthError,\n    basic: true,\n    color: \"red\",\n    pointing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, lengthError));\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nTextareaWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  maxLength: PropTypes.number,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  wrapped: PropTypes.bool,\n  placeholder: PropTypes.string\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nTextareaWidget.defaultProps = {\n  description: null,\n  maxLength: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: null,\n  onEdit: null,\n  onDelete: null\n};\nexport default injectIntl(TextareaWidget);","map":{"version":3,"names":["React","useState","PropTypes","Label","TextArea","injectIntl","FormFieldWrapper","TextareaWidget","props","id","maxLength","value","onChange","placeholder","isDisabled","lengthError","setlengthError","onhandleChange","length","remlength","Math","abs","__jsx","_extends","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","name","disabled","target","undefined","key","basic","color","pointing","propTypes","string","isRequired","title","description","number","required","bool","error","arrayOf","func","onEdit","onDelete","wrapped","defaultProps"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Widgets/TextareaWidget.jsx"],"sourcesContent":["/**\n * TextareaWidget component.\n * @module components/manage/Widgets/TextareaWidget\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, TextArea } from 'semantic-ui-react';\n\nimport { injectIntl } from 'react-intl';\nimport FormFieldWrapper from '@plone/volto/components/manage/Widgets/FormFieldWrapper';\n\n/**\n * TextareaWidget, a widget for multiple lines text\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Text\",\n *  widget: 'textarea',\n * }\n * ```\n */\nconst TextareaWidget = (props) => {\n  const { id, maxLength, value, onChange, placeholder, isDisabled } = props;\n  const [lengthError, setlengthError] = useState('');\n\n  const onhandleChange = (id, value) => {\n    if (maxLength & value?.length) {\n      let remlength = maxLength - value.length;\n      if (remlength < 0) {\n        setlengthError(`You have exceed word limit by ${Math.abs(remlength)}`);\n      } else {\n        setlengthError('');\n      }\n    }\n    onChange(id, value);\n  };\n\n  return (\n    <FormFieldWrapper {...props} className=\"textarea\">\n      <TextArea\n        id={`field-${id}`}\n        name={id}\n        value={value || ''}\n        disabled={isDisabled}\n        placeholder={placeholder}\n        onChange={({ target }) =>\n          onhandleChange(id, target.value === '' ? undefined : target.value)\n        }\n      />\n      {lengthError.length > 0 && (\n        <Label key={lengthError} basic color=\"red\" pointing>\n          {lengthError}\n        </Label>\n      )}\n    </FormFieldWrapper>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nTextareaWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  maxLength: PropTypes.number,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  wrapped: PropTypes.bool,\n  placeholder: PropTypes.string,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nTextareaWidget.defaultProps = {\n  description: null,\n  maxLength: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: null,\n  onEdit: null,\n  onDelete: null,\n};\n\nexport default injectIntl(TextareaWidget);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}