{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * Search reducer.\n * @module reducers/search/search\n */\n\nimport map from 'lodash/map';\nimport omit from 'lodash/omit';\nimport { flattenToAppURL } from '@plone/volto/helpers/Url/Url';\nimport { RESET_SEARCH_CONTENT, SEARCH_CONTENT } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  error: null,\n  items: [],\n  total: 0,\n  loaded: false,\n  loading: false,\n  batching: {},\n  subrequests: {}\n};\n\n/**\n * Search reducer.\n * @function search\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function search(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${SEARCH_CONTENT}_PENDING`:\n      return action.subrequest ? _objectSpread(_objectSpread({}, state), {}, {\n        subrequests: _objectSpread(_objectSpread({}, state.subrequests), {}, {\n          [action.subrequest]: _objectSpread(_objectSpread({}, state.subrequests[action.subrequest] || {\n            items: [],\n            total: 0,\n            batching: {}\n          }), {}, {\n            error: null,\n            loaded: false,\n            loading: true\n          })\n        })\n      }) : _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loading: true,\n        loaded: false\n      });\n    case `${SEARCH_CONTENT}_SUCCESS`:\n      return action.subrequest ? _objectSpread(_objectSpread({}, state), {}, {\n        subrequests: _objectSpread(_objectSpread({}, state.subrequests), {}, {\n          [action.subrequest]: {\n            error: null,\n            items: map(action.result.items, item => _objectSpread(_objectSpread({}, item), {}, {\n              '@id': flattenToAppURL(item['@id'])\n            })),\n            total: action.result.items_total,\n            loaded: true,\n            loading: false,\n            batching: _objectSpread({}, action.result.batching)\n          }\n        })\n      }) : _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        items: map(action.result.items, item => _objectSpread(_objectSpread({}, item), {}, {\n          '@id': flattenToAppURL(item['@id'])\n        })),\n        total: action.result.items_total,\n        loaded: true,\n        loading: false,\n        batching: _objectSpread({}, action.result.batching)\n      });\n    case `${SEARCH_CONTENT}_FAIL`:\n      return action.subrequest ? _objectSpread(_objectSpread({}, state), {}, {\n        subrequests: _objectSpread(_objectSpread({}, state.subrequests), {}, {\n          [action.subrequest]: {\n            error: action.error,\n            items: [],\n            total: 0,\n            loading: false,\n            loaded: false,\n            batching: {}\n          }\n        })\n      }) : _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        items: [],\n        total: 0,\n        loading: false,\n        loaded: false,\n        batching: {}\n      });\n    case RESET_SEARCH_CONTENT:\n      return action.subrequest ? _objectSpread(_objectSpread({}, state), {}, {\n        subrequests: omit(state.subrequests, [action.subrequest])\n      }) : _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        items: [],\n        total: 0,\n        loading: false,\n        loaded: false,\n        batching: {}\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["map","omit","flattenToAppURL","RESET_SEARCH_CONTENT","SEARCH_CONTENT","initialState","error","items","total","loaded","loading","batching","subrequests","search","state","action","type","subrequest","_objectSpread","result","item","items_total"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/reducers/search/search.js"],"sourcesContent":["/**\n * Search reducer.\n * @module reducers/search/search\n */\n\nimport map from 'lodash/map';\nimport omit from 'lodash/omit';\nimport { flattenToAppURL } from '@plone/volto/helpers/Url/Url';\n\nimport {\n  RESET_SEARCH_CONTENT,\n  SEARCH_CONTENT,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  items: [],\n  total: 0,\n  loaded: false,\n  loading: false,\n  batching: {},\n  subrequests: {},\n};\n\n/**\n * Search reducer.\n * @function search\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function search(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${SEARCH_CONTENT}_PENDING`:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                ...(state.subrequests[action.subrequest] || {\n                  items: [],\n                  total: 0,\n                  batching: {},\n                }),\n                error: null,\n                loaded: false,\n                loading: true,\n              },\n            },\n          }\n        : {\n            ...state,\n            error: null,\n            loading: true,\n            loaded: false,\n          };\n    case `${SEARCH_CONTENT}_SUCCESS`:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                error: null,\n                items: map(action.result.items, (item) => ({\n                  ...item,\n                  '@id': flattenToAppURL(item['@id']),\n                })),\n                total: action.result.items_total,\n                loaded: true,\n                loading: false,\n                batching: { ...action.result.batching },\n              },\n            },\n          }\n        : {\n            ...state,\n            error: null,\n            items: map(action.result.items, (item) => ({\n              ...item,\n              '@id': flattenToAppURL(item['@id']),\n            })),\n            total: action.result.items_total,\n            loaded: true,\n            loading: false,\n            batching: { ...action.result.batching },\n          };\n    case `${SEARCH_CONTENT}_FAIL`:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                error: action.error,\n                items: [],\n                total: 0,\n                loading: false,\n                loaded: false,\n                batching: {},\n              },\n            },\n          }\n        : {\n            ...state,\n            error: action.error,\n            items: [],\n            total: 0,\n            loading: false,\n            loaded: false,\n            batching: {},\n          };\n    case RESET_SEARCH_CONTENT:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: omit(state.subrequests, [action.subrequest]),\n          }\n        : {\n            ...state,\n            error: null,\n            items: [],\n            total: 0,\n            loading: false,\n            loaded: false,\n            batching: {},\n          };\n    default:\n      return state;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}