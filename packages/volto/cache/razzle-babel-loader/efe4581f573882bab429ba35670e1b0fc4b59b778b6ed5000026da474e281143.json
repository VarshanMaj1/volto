{"ast":null,"code":"import config from '@plone/volto/registry';\nimport { matchPath } from 'react-router';\nconst blacklistRoutes = ({\n  dispatch,\n  getState\n}) => next => action => {\n  if (typeof action === 'function') {\n    return next(action);\n  }\n  switch (action.type) {\n    case '@@router/LOCATION_CHANGE':\n      const {\n        pathname\n      } = action.payload.location;\n      const {\n        externalRoutes = []\n      } = config.settings;\n      const route = externalRoutes.find(route => matchPath(pathname, route.match));\n      if (!route) {\n        return next(action);\n      } else {\n        window.location.replace(route.url ? route.url(action.payload) : pathname);\n      }\n      break;\n    default:\n      return next(action);\n  }\n};\nexport default blacklistRoutes;","map":{"version":3,"names":["config","matchPath","blacklistRoutes","dispatch","getState","next","action","type","pathname","payload","location","externalRoutes","settings","route","find","match","window","replace","url"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/middleware/blacklistRoutes.js"],"sourcesContent":["import config from '@plone/volto/registry';\nimport { matchPath } from 'react-router';\n\nconst blacklistRoutes =\n  ({ dispatch, getState }) =>\n  (next) =>\n  (action) => {\n    if (typeof action === 'function') {\n      return next(action);\n    }\n\n    switch (action.type) {\n      case '@@router/LOCATION_CHANGE':\n        const { pathname } = action.payload.location;\n        const { externalRoutes = [] } = config.settings;\n\n        const route = externalRoutes.find((route) =>\n          matchPath(pathname, route.match),\n        );\n\n        if (!route) {\n          return next(action);\n        } else {\n          window.location.replace(\n            route.url ? route.url(action.payload) : pathname,\n          );\n        }\n        break;\n      default:\n        return next(action);\n    }\n  };\n\nexport default blacklistRoutes;\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,uBAAuB;AAC1C,SAASC,SAAS,QAAQ,cAAc;AAExC,MAAMC,eAAe,GACnBA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KACtBC,IAAI,IACJC,MAAM,IAAK;EACV,IAAI,OAAOA,MAAM,KAAK,UAAU,EAAE;IAChC,OAAOD,IAAI,CAACC,MAAM,CAAC;EACrB;EAEA,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,0BAA0B;MAC7B,MAAM;QAAEC;MAAS,CAAC,GAAGF,MAAM,CAACG,OAAO,CAACC,QAAQ;MAC5C,MAAM;QAAEC,cAAc,GAAG;MAAG,CAAC,GAAGX,MAAM,CAACY,QAAQ;MAE/C,MAAMC,KAAK,GAAGF,cAAc,CAACG,IAAI,CAAED,KAAK,IACtCZ,SAAS,CAACO,QAAQ,EAAEK,KAAK,CAACE,KAAK,CACjC,CAAC;MAED,IAAI,CAACF,KAAK,EAAE;QACV,OAAOR,IAAI,CAACC,MAAM,CAAC;MACrB,CAAC,MAAM;QACLU,MAAM,CAACN,QAAQ,CAACO,OAAO,CACrBJ,KAAK,CAACK,GAAG,GAAGL,KAAK,CAACK,GAAG,CAACZ,MAAM,CAACG,OAAO,CAAC,GAAGD,QAC1C,CAAC;MACH;MACA;IACF;MACE,OAAOH,IAAI,CAACC,MAAM,CAAC;EACvB;AACF,CAAC;AAEH,eAAeJ,eAAe","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}