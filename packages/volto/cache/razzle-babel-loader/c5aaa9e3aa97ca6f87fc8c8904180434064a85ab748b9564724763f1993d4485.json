{"ast":null,"code":"import _extends from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Widgets/SchemaWidgetFieldset.jsx\";\nvar __jsx = React.createElement;\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/**\n * Schema widget fieldset.\n * @module components/manage/Widgets/SchemaWidgetFieldset\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\n/**\n * Schema widget fieldset component.\n * @function SchemaWidgetFieldset\n * @returns {string} Markup of the component.\n */\nexport const SchemaWidgetFieldsetComponent = ({\n  // isDragging,\n  title,\n  order,\n  active,\n  onShowEditFieldset,\n  onShowDeleteFieldset,\n  onClick,\n  getItemStyle,\n  isDraggable,\n  isDisabled,\n  reactBeautifulDnd\n}) => __jsx(reactBeautifulDnd.Draggable, {\n  draggableId: title,\n  index: order,\n  key: title,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }\n}, (provided, snapshot) => __jsx(\"div\", _extends({\n  className: `item${active ? ' active' : ''}`,\n  onClick: () => onClick(order),\n  ref: provided.innerRef\n}, provided.draggableProps, {\n  style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }\n}), isDraggable && __jsx(\"i\", _extends({\n  \"aria-hidden\": \"true\",\n  className: \"grey bars icon drag handle\"\n}, provided.dragHandleProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 11\n  }\n})), title, !isDisabled && __jsx(\"button\", {\n  className: \"item ui noborder button\",\n  onClick: event => {\n    event.stopPropagation();\n    event.preventDefault();\n    onShowEditFieldset(order);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 11\n  }\n}, __jsx(Icon, {\n  name: \"write square\",\n  size: \"large\",\n  color: \"blue\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 13\n  }\n})), !isDisabled && __jsx(\"button\", {\n  className: \"item ui noborder button\",\n  onClick: event => {\n    event.stopPropagation();\n    event.preventDefault();\n    onShowDeleteFieldset(order);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 11\n  }\n}, __jsx(Icon, {\n  name: \"close\",\n  size: \"large\",\n  color: \"red\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 13\n  }\n}))));\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_c = SchemaWidgetFieldsetComponent;\nSchemaWidgetFieldsetComponent.propTypes = {\n  order: PropTypes.number.isRequired,\n  active: PropTypes.bool.isRequired,\n  onOrderFieldset: PropTypes.func.isRequired,\n  onShowEditFieldset: PropTypes.func.isRequired,\n  onShowDeleteFieldset: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  getItemStyle: PropTypes.func.isRequired,\n  isDraggable: PropTypes.bool,\n  isDisabled: PropTypes.bool\n};\nexport default injectLazyLibs(['reactBeautifulDnd'])(SchemaWidgetFieldsetComponent);\nvar _c;\n$RefreshReg$(_c, \"SchemaWidgetFieldsetComponent\");","map":{"version":3,"names":["PropTypes","React","Icon","injectLazyLibs","SchemaWidgetFieldsetComponent","title","order","active","onShowEditFieldset","onShowDeleteFieldset","onClick","getItemStyle","isDraggable","isDisabled","reactBeautifulDnd","__jsx","Draggable","draggableId","index","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","provided","snapshot","_extends","className","ref","innerRef","draggableProps","style","isDragging","dragHandleProps","event","stopPropagation","preventDefault","name","size","color","_c","propTypes","number","isRequired","bool","onOrderFieldset","func","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Widgets/SchemaWidgetFieldset.jsx"],"sourcesContent":["/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/**\n * Schema widget fieldset.\n * @module components/manage/Widgets/SchemaWidgetFieldset\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon } from 'semantic-ui-react';\n\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\n/**\n * Schema widget fieldset component.\n * @function SchemaWidgetFieldset\n * @returns {string} Markup of the component.\n */\nexport const SchemaWidgetFieldsetComponent = ({\n  // isDragging,\n  title,\n  order,\n  active,\n  onShowEditFieldset,\n  onShowDeleteFieldset,\n  onClick,\n  getItemStyle,\n  isDraggable,\n  isDisabled,\n  reactBeautifulDnd,\n}) => (\n  <reactBeautifulDnd.Draggable draggableId={title} index={order} key={title}>\n    {(provided, snapshot) => (\n      <div\n        className={`item${active ? ' active' : ''}`}\n        onClick={() => onClick(order)}\n        ref={provided.innerRef}\n        {...provided.draggableProps}\n        style={getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\n      >\n        {isDraggable && (\n          <i\n            aria-hidden=\"true\"\n            className=\"grey bars icon drag handle\"\n            {...provided.dragHandleProps}\n          />\n        )}\n        {title}\n        {!isDisabled && (\n          <button\n            className=\"item ui noborder button\"\n            onClick={(event) => {\n              event.stopPropagation();\n              event.preventDefault();\n              onShowEditFieldset(order);\n            }}\n          >\n            <Icon name=\"write square\" size=\"large\" color=\"blue\" />\n          </button>\n        )}\n\n        {!isDisabled && (\n          <button\n            className=\"item ui noborder button\"\n            onClick={(event) => {\n              event.stopPropagation();\n              event.preventDefault();\n              onShowDeleteFieldset(order);\n            }}\n          >\n            <Icon name=\"close\" size=\"large\" color=\"red\" />\n          </button>\n        )}\n      </div>\n    )}\n  </reactBeautifulDnd.Draggable>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nSchemaWidgetFieldsetComponent.propTypes = {\n  order: PropTypes.number.isRequired,\n  active: PropTypes.bool.isRequired,\n  onOrderFieldset: PropTypes.func.isRequired,\n  onShowEditFieldset: PropTypes.func.isRequired,\n  onShowDeleteFieldset: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  getItemStyle: PropTypes.func.isRequired,\n  isDraggable: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n};\n\nexport default injectLazyLibs(['reactBeautifulDnd'])(\n  SchemaWidgetFieldsetComponent,\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}