{"ast":null,"code":"import _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Controlpanels/Users/UserGroupMembershipListing.jsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useMemo } from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\nimport uniqBy from 'lodash/uniqBy';\nimport debounce from 'lodash/debounce';\nimport { useIntl } from 'react-intl';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport jwtDecode from 'jwt-decode';\nimport { toast } from 'react-toastify';\nimport { Button, Checkbox } from 'semantic-ui-react';\nimport { messages } from '@plone/volto/helpers/MessageLabels/MessageLabels';\nimport { isManager, canAssignGroup } from '@plone/volto/helpers/User/User';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport { listGroups, updateGroup } from '@plone/volto/actions/groups/groups';\nimport { getUser, listUsers } from '@plone/volto/actions/users/users';\nimport down_key from '@plone/volto/icons/down-key.svg';\nconst ListingTemplate = ({\n  query_user,\n  // Show users on y-axis that match\n  query_group,\n  // Show groups on y-axis that match\n  groups_filter,\n  // show members of these groups\n  add_joined_groups,\n  // Toggle: show also groups joined by users below\n  many_users,\n  many_groups\n}) => {\n  _s();\n  var _matrix_options, _matrix_options2, _matrix_options3;\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const pageSize = 25;\n  const {\n    0: userLimit,\n    1: setUserLimit\n  } = useState(pageSize);\n  const token = useSelector(state => state.userSession.token, shallowEqual);\n  const user = useSelector(state => state.users.user);\n  const userId = token ? jwtDecode(token).sub : '';\n  useEffect(() => {\n    dispatch(getUser(userId));\n  }, [dispatch, userId]);\n  const isUserManager = isManager(user);\n\n  // y axis\n  let items = useSelector(state => state.users.users);\n  let show_users = !many_users || many_users && query_user.length > 1 || many_users && groups_filter.length > 0; // Stay with '> 0', as these are already groups, not querystring to search for groups.\n  if (show_users) {\n    items.sort(function (a, b) {\n      var labelA = a.fullname && a.fullname.split(' ').reverse().join(' ') || a.id;\n      var labelB = b.fullname && b.fullname.split(' ').reverse().join(' ') || b.id;\n      if (labelA < labelB) {\n        return -1;\n      }\n      if (labelA > labelB) {\n        return 1;\n      }\n      return 0;\n    });\n  } else {\n    items = [];\n  }\n\n  // x axis\n  let groups = useSelector(state => state.groups.groups);\n  const getRoles = group_id => {\n    var _groups$find;\n    return ((_groups$find = groups.find(group => group.id === group_id)) === null || _groups$find === void 0 ? void 0 : _groups$find.roles) || [];\n  };\n  let show_matrix_options = !many_groups || many_groups && query_group.length > 1 || groups_filter.length > 0 || add_joined_groups;\n  let matrix_options; // list of Objects (value, label, roles)\n  if (show_matrix_options) {\n    matrix_options = !many_groups || many_groups && query_group.length > 1 ? cloneDeep(groups) : [];\n    if (add_joined_groups) {\n      items.map(item => {\n        matrix_options.push(...item.groups.items);\n        return item.groups.items;\n      });\n    }\n    matrix_options = matrix_options.map(group => ({\n      value: group.id,\n      label: group.title || `${group.id}`\n    }));\n    if (groups_filter.length > 0) {\n      matrix_options = groups_filter.concat(matrix_options);\n    }\n    matrix_options = uniqBy(matrix_options, x => x.value);\n    matrix_options = matrix_options.filter(group => {\n      return group.value !== 'AuthenticatedUsers';\n    });\n    matrix_options.sort(function (a, b) {\n      var labelA = a.label.toUpperCase();\n      var labelB = b.label.toUpperCase();\n      if (labelA < labelB) {\n        return -1;\n      }\n      if (labelA > labelB) {\n        return 1;\n      }\n      return 0;\n    });\n    matrix_options = matrix_options.map(matrix_option => _objectSpread(_objectSpread({}, matrix_option), {}, {\n      roles: getRoles(matrix_option.value)\n    }));\n  } else {\n    matrix_options = [];\n  }\n  const debouncedListUsers = useMemo(() => debounce((query_user, groups_filter, userLimit) => {\n    dispatch(listUsers({\n      search: query_user,\n      groups_filter: groups_filter.map(el => el.value),\n      limit: userLimit\n    }));\n  }, 300), [dispatch]);\n  useEffect(() => {\n    // Get users.\n    if (show_users) {\n      debouncedListUsers(query_user, groups_filter, userLimit);\n    }\n  }, [debouncedListUsers, query_user, groups_filter, show_users, userLimit]);\n  const debouncedListGroups = useMemo(() => debounce(query_group => {\n    dispatch(listGroups(query_group));\n  }, 300), [dispatch]);\n  useEffect(() => {\n    // Get matrix groups.\n    if (show_matrix_options) {\n      debouncedListGroups(query_group);\n    }\n  }, [debouncedListGroups, query_group, show_matrix_options]);\n  const onSelectOptionHandler = (selectedvalue, checked, singleClick) => {\n    var _singleClick;\n    singleClick = (_singleClick = singleClick) !== null && _singleClick !== void 0 ? _singleClick : false;\n    let group = selectedvalue.y;\n    let username = selectedvalue.x;\n    dispatch(updateGroup(group, {\n      users: {\n        [username]: checked ? true : false\n      }\n    })).then(() => {\n      singleClick && dispatch(listUsers({\n        search: query_user,\n        groups_filter: groups_filter.map(el => el.value),\n        limit: userLimit\n      }));\n    }).then(() => {\n      singleClick && toast.success(__jsx(Toast, {\n        success: true,\n        title: intl.formatMessage(messages.success),\n        content: intl.formatMessage(messages.membershipUpdated),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }\n      }));\n    });\n  };\n  const onSelectAllHandler = (group, items_ids, checked) => {\n    let usersgroupmapping = {};\n    items_ids.forEach(el => {\n      usersgroupmapping[el] = checked ? true : false;\n    });\n    dispatch(updateGroup(group, {\n      users: usersgroupmapping\n    })).then(() => {\n      dispatch(listUsers({\n        search: query_user,\n        groups_filter: groups_filter.map(el => el.value),\n        limit: userLimit\n      }));\n    }).then(() => {\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: intl.formatMessage(messages.success),\n        content: intl.formatMessage(messages.membershipUpdated),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }\n      }));\n    });\n  };\n  return __jsx(\"div\", {\n    className: \"administration_matrix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }\n  }, matrix_options && ((_matrix_options = matrix_options) === null || _matrix_options === void 0 ? void 0 : _matrix_options.length) > 0 && __jsx(\"div\", {\n    className: \"label-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"target-labels\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, items.length, \" users\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, (_matrix_options2 = matrix_options) === null || _matrix_options2 === void 0 ? void 0 : _matrix_options2.map(matrix_option => __jsx(\"div\", {\n    className: \"label-options-label inclined\",\n    key: matrix_option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 19\n    }\n  }, __jsx(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }, matrix_option.label)))))), __jsx(\"div\", {\n    className: \"listing-row selectall\",\n    key: \"selectall\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"listing-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    className: \"matrix_options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  }, (_matrix_options3 = matrix_options) === null || _matrix_options3 === void 0 ? void 0 : _matrix_options3.map(matrix_option => __jsx(\"div\", {\n    key: matrix_option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 19\n    }\n  }, __jsx(Checkbox, {\n    className: \"toggle-target\",\n    defaultChecked: false,\n    onChange: (_event, {\n      checked\n    }) => onSelectAllHandler(matrix_option.value, items.map(el => el.id), checked),\n    disabled: !canAssignGroup(isUserManager, matrix_option),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }))))))), __jsx(\"div\", {\n    className: \"items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }\n  }, items.length > 0 ? __jsx(React.Fragment, null, items.map(item => {\n    var _item$fullname, _matrix_options4;\n    return __jsx(\"div\", {\n      className: \"listing-row\",\n      key: item.id,\n      id: `source-row-${item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"listing-item\",\n      key: item['@id'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 19\n      }\n    }, __jsx(\"h4\", {\n      title: `${item.fullname} ${item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }\n    }, ((_item$fullname = item.fullname) === null || _item$fullname === void 0 ? void 0 : _item$fullname.length) > 25 ? item.fullname.slice(0, 22) + '...' : item.fullname || item.id)), __jsx(\"div\", {\n      className: \"matrix_options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 19\n      }\n    }, (_matrix_options4 = matrix_options) === null || _matrix_options4 === void 0 ? void 0 : _matrix_options4.map(matrix_option => {\n      var _item$groups, _item$groups$items;\n      return __jsx(Checkbox, {\n        className: `checkbox_${matrix_option.value}`,\n        key: matrix_option.value,\n        title: matrix_option.title,\n        checked: (_item$groups = item.groups) === null || _item$groups === void 0 ? void 0 : (_item$groups$items = _item$groups.items) === null || _item$groups$items === void 0 ? void 0 : _item$groups$items.map(el => el.id).includes(matrix_option.value),\n        onChange: (_event, {\n          checked\n        }) => {\n          onSelectOptionHandler({\n            y: matrix_option.value,\n            x: item.id\n          }, checked, true);\n        },\n        disabled: !canAssignGroup(isUserManager, matrix_option),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 23\n        }\n      });\n    }))));\n  }), !(items.length < pageSize) ? __jsx(\"div\", {\n    className: \"show-more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    icon: true,\n    basic: true,\n    onClick: () => setUserLimit(userLimit + pageSize),\n    className: \"show-more-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 17\n    }\n  }, __jsx(Icon, {\n    name: down_key,\n    size: \"30px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 19\n    }\n  }))) : null) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 11\n    }\n  }, intl.formatMessage(show_users ? query_user ? messages.noUserFound : messages.pleaseSearchOrFilterUsers : messages.pleaseSearchOrFilterUsers))));\n};\n_s(ListingTemplate, \"VBCk7w37jKfdxS2B3QMSlrp8mJw=\", false, function () {\n  return [useIntl, useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c = ListingTemplate;\nexport default ListingTemplate;\nvar _c;\n$RefreshReg$(_c, \"ListingTemplate\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","cloneDeep","uniqBy","debounce","useIntl","useSelector","useDispatch","shallowEqual","jwtDecode","toast","Button","Checkbox","messages","isManager","canAssignGroup","Icon","Toast","listGroups","updateGroup","getUser","listUsers","down_key","ListingTemplate","query_user","query_group","groups_filter","add_joined_groups","many_users","many_groups","_s","_matrix_options","_matrix_options2","_matrix_options3","intl","dispatch","pageSize","userLimit","setUserLimit","token","state","userSession","user","users","userId","sub","isUserManager","items","show_users","length","sort","a","b","labelA","fullname","split","reverse","join","id","labelB","groups","getRoles","group_id","_groups$find","find","group","roles","show_matrix_options","matrix_options","map","item","push","value","label","title","concat","x","filter","toUpperCase","matrix_option","_objectSpread","debouncedListUsers","search","el","limit","debouncedListGroups","onSelectOptionHandler","selectedvalue","checked","singleClick","_singleClick","y","username","then","success","__jsx","formatMessage","content","membershipUpdated","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSelectAllHandler","items_ids","usersgroupmapping","forEach","className","key","defaultChecked","onChange","_event","disabled","Fragment","_item$fullname","_matrix_options4","slice","_item$groups","_item$groups$items","includes","icon","basic","onClick","name","size","noUserFound","pleaseSearchOrFilterUsers","_c","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Controlpanels/Users/UserGroupMembershipListing.jsx"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\nimport uniqBy from 'lodash/uniqBy';\nimport debounce from 'lodash/debounce';\nimport { useIntl } from 'react-intl';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport jwtDecode from 'jwt-decode';\nimport { toast } from 'react-toastify';\nimport { Button, Checkbox } from 'semantic-ui-react';\nimport { messages } from '@plone/volto/helpers/MessageLabels/MessageLabels';\nimport { isManager, canAssignGroup } from '@plone/volto/helpers/User/User';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport { listGroups, updateGroup } from '@plone/volto/actions/groups/groups';\nimport { getUser, listUsers } from '@plone/volto/actions/users/users';\n\nimport down_key from '@plone/volto/icons/down-key.svg';\n\nconst ListingTemplate = ({\n  query_user, // Show users on y-axis that match\n  query_group, // Show groups on y-axis that match\n  groups_filter, // show members of these groups\n  add_joined_groups, // Toggle: show also groups joined by users below\n  many_users,\n  many_groups,\n}) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n\n  const pageSize = 25;\n  const [userLimit, setUserLimit] = useState(pageSize);\n\n  const token = useSelector((state) => state.userSession.token, shallowEqual);\n  const user = useSelector((state) => state.users.user);\n  const userId = token ? jwtDecode(token).sub : '';\n\n  useEffect(() => {\n    dispatch(getUser(userId));\n  }, [dispatch, userId]);\n\n  const isUserManager = isManager(user);\n\n  // y axis\n  let items = useSelector((state) => state.users.users);\n  let show_users =\n    !many_users ||\n    (many_users && query_user.length > 1) ||\n    (many_users && groups_filter.length > 0); // Stay with '> 0', as these are already groups, not querystring to search for groups.\n  if (show_users) {\n    items.sort(function (a, b) {\n      var labelA =\n        (a.fullname && a.fullname.split(' ').reverse().join(' ')) || a.id;\n      var labelB =\n        (b.fullname && b.fullname.split(' ').reverse().join(' ')) || b.id;\n      if (labelA < labelB) {\n        return -1;\n      }\n      if (labelA > labelB) {\n        return 1;\n      }\n      return 0;\n    });\n  } else {\n    items = [];\n  }\n\n  // x axis\n  let groups = useSelector((state) => state.groups.groups);\n\n  const getRoles = (group_id) => {\n    return groups.find((group) => group.id === group_id)?.roles || [];\n  };\n\n  let show_matrix_options =\n    !many_groups ||\n    (many_groups && query_group.length > 1) ||\n    groups_filter.length > 0 ||\n    add_joined_groups;\n  let matrix_options; // list of Objects (value, label, roles)\n  if (show_matrix_options) {\n    matrix_options =\n      !many_groups || (many_groups && query_group.length > 1)\n        ? cloneDeep(groups)\n        : [];\n    if (add_joined_groups) {\n      items.map((item) => {\n        matrix_options.push(...item.groups.items);\n        return item.groups.items;\n      });\n    }\n    matrix_options = matrix_options.map((group) => ({\n      value: group.id,\n      label: group.title || `${group.id}`,\n    }));\n    if (groups_filter.length > 0) {\n      matrix_options = groups_filter.concat(matrix_options);\n    }\n    matrix_options = uniqBy(matrix_options, (x) => x.value);\n    matrix_options = matrix_options.filter((group) => {\n      return group.value !== 'AuthenticatedUsers';\n    });\n    matrix_options.sort(function (a, b) {\n      var labelA = a.label.toUpperCase();\n      var labelB = b.label.toUpperCase();\n      if (labelA < labelB) {\n        return -1;\n      }\n      if (labelA > labelB) {\n        return 1;\n      }\n      return 0;\n    });\n    matrix_options = matrix_options.map((matrix_option) => ({\n      ...matrix_option,\n      roles: getRoles(matrix_option.value),\n    }));\n  } else {\n    matrix_options = [];\n  }\n\n  const debouncedListUsers = useMemo(\n    () =>\n      debounce((query_user, groups_filter, userLimit) => {\n        dispatch(\n          listUsers({\n            search: query_user,\n            groups_filter: groups_filter.map((el) => el.value),\n            limit: userLimit,\n          }),\n        );\n      }, 300),\n    [dispatch],\n  );\n\n  useEffect(() => {\n    // Get users.\n    if (show_users) {\n      debouncedListUsers(query_user, groups_filter, userLimit);\n    }\n  }, [debouncedListUsers, query_user, groups_filter, show_users, userLimit]);\n\n  const debouncedListGroups = useMemo(\n    () =>\n      debounce((query_group) => {\n        dispatch(listGroups(query_group));\n      }, 300),\n    [dispatch],\n  );\n\n  useEffect(() => {\n    // Get matrix groups.\n    if (show_matrix_options) {\n      debouncedListGroups(query_group);\n    }\n  }, [debouncedListGroups, query_group, show_matrix_options]);\n\n  const onSelectOptionHandler = (selectedvalue, checked, singleClick) => {\n    singleClick = singleClick ?? false;\n    let group = selectedvalue.y;\n    let username = selectedvalue.x;\n\n    dispatch(\n      updateGroup(group, {\n        users: {\n          [username]: checked ? true : false,\n        },\n      }),\n    )\n      .then(() => {\n        singleClick &&\n          dispatch(\n            listUsers({\n              search: query_user,\n              groups_filter: groups_filter.map((el) => el.value),\n              limit: userLimit,\n            }),\n          );\n      })\n      .then(() => {\n        singleClick &&\n          toast.success(\n            <Toast\n              success\n              title={intl.formatMessage(messages.success)}\n              content={intl.formatMessage(messages.membershipUpdated)}\n            />,\n          );\n      });\n  };\n\n  const onSelectAllHandler = (group, items_ids, checked) => {\n    let usersgroupmapping = {};\n    items_ids.forEach((el) => {\n      usersgroupmapping[el] = checked ? true : false;\n    });\n\n    dispatch(\n      updateGroup(group, {\n        users: usersgroupmapping,\n      }),\n    )\n      .then(() => {\n        dispatch(\n          listUsers({\n            search: query_user,\n            groups_filter: groups_filter.map((el) => el.value),\n            limit: userLimit,\n          }),\n        );\n      })\n      .then(() => {\n        toast.success(\n          <Toast\n            success\n            title={intl.formatMessage(messages.success)}\n            content={intl.formatMessage(messages.membershipUpdated)}\n          />,\n        );\n      });\n  };\n\n  return (\n    <div className=\"administration_matrix\">\n      {matrix_options && matrix_options?.length > 0 && (\n        <div className=\"label-options\">\n          <div className=\"target-labels\">\n            <div>\n              <h3>{items.length} users</h3>\n            </div>\n            <div>\n              {matrix_options?.map((matrix_option) => (\n                <div\n                  className=\"label-options-label inclined\"\n                  key={matrix_option.value}\n                >\n                  <div>\n                    <span className=\"label\">{matrix_option.label}</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"listing-row selectall\" key=\"selectall\">\n            <div className=\"listing-item\">\n              <div />\n              <div className=\"matrix_options\">\n                {matrix_options?.map((matrix_option) => (\n                  <div key={matrix_option.value}>\n                    <Checkbox\n                      className=\"toggle-target\"\n                      defaultChecked={false}\n                      onChange={(_event, { checked }) =>\n                        onSelectAllHandler(\n                          matrix_option.value,\n                          items.map((el) => el.id),\n                          checked,\n                        )\n                      }\n                      disabled={!canAssignGroup(isUserManager, matrix_option)}\n                    />\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"items\">\n        {items.length > 0 ? (\n          <>\n            {items.map((item) => (\n              <div\n                className=\"listing-row\"\n                key={item.id}\n                id={`source-row-${item.id}`}\n              >\n                <div className=\"listing-item\" key={item['@id']}>\n                  <div>\n                    <h4 title={`${item.fullname} ${item.id}`}>\n                      {item.fullname?.length > 25\n                        ? item.fullname.slice(0, 22) + '...'\n                        : item.fullname || item.id}\n                    </h4>\n                  </div>\n                  <div className=\"matrix_options\">\n                    {matrix_options?.map((matrix_option) => (\n                      <Checkbox\n                        className={`checkbox_${matrix_option.value}`}\n                        key={matrix_option.value}\n                        title={matrix_option.title}\n                        checked={item.groups?.items\n                          ?.map((el) => el.id)\n                          .includes(matrix_option.value)}\n                        onChange={(_event, { checked }) => {\n                          onSelectOptionHandler(\n                            { y: matrix_option.value, x: item.id },\n                            checked,\n                            true,\n                          );\n                        }}\n                        disabled={!canAssignGroup(isUserManager, matrix_option)}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ))}\n            {!(items.length < pageSize) ? (\n              <div className=\"show-more\">\n                <Button\n                  icon\n                  basic\n                  onClick={() => setUserLimit(userLimit + pageSize)}\n                  className=\"show-more-button\"\n                >\n                  <Icon name={down_key} size=\"30px\" />\n                </Button>\n              </div>\n            ) : null}\n          </>\n        ) : (\n          <div>\n            {intl.formatMessage(\n              show_users\n                ? query_user\n                  ? messages.noUserFound\n                  : messages.pleaseSearchOrFilterUsers\n                : messages.pleaseSearchOrFilterUsers,\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default ListingTemplate;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}