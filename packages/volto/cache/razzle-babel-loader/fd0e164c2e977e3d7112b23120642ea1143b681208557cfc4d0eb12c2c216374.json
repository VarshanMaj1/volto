{"ast":null,"code":"import _extends from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Controlpanels/Controlpanels.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\n/**\n * Controlpanels component.\n * @module components/manage/Controlpanels/Controlpanels\n */\n\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport concat from 'lodash/concat';\nimport filter from 'lodash/filter';\nimport last from 'lodash/last';\nimport map from 'lodash/map';\nimport sortBy from 'lodash/sortBy';\nimport uniqBy from 'lodash/uniqBy';\nimport { useEffect, useState } from 'react';\nimport { FormattedMessage, defineMessages, useIntl } from 'react-intl';\nimport { createPortal } from 'react-dom';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Grid, Header, Message, Segment } from 'semantic-ui-react';\nimport Error from '@plone/volto/components/theme/Error/Error';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nimport VersionOverview from '@plone/volto/components/manage/Controlpanels/VersionOverview';\nimport config from '@plone/volto/registry';\nimport backSVG from '@plone/volto/icons/back.svg';\nconst messages = defineMessages({\n  sitesetup: {\n    \"id\": \"Site Setup\",\n    \"defaultMessage\": \"Site Setup\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  versionoverview: {\n    \"id\": \"Version Overview\",\n    \"defaultMessage\": \"Version Overview\"\n  },\n  general: {\n    \"id\": \"General\",\n    \"defaultMessage\": \"General\"\n  },\n  addonconfiguration: {\n    \"id\": \"Add-on Configuration\",\n    \"defaultMessage\": \"Add-on Configuration\"\n  },\n  content: {\n    \"id\": \"Content\",\n    \"defaultMessage\": \"Content\"\n  },\n  moderatecomments: {\n    \"id\": \"Moderate Comments\",\n    \"defaultMessage\": \"Moderate Comments\"\n  },\n  usersandgroups: {\n    \"id\": \"Users and Groups\",\n    \"defaultMessage\": \"Users and Groups\"\n  },\n  usersControlPanelCategory: {\n    \"id\": \"Users\",\n    \"defaultMessage\": \"Users\"\n  },\n  users: {\n    \"id\": \"Users\",\n    \"defaultMessage\": \"Users\"\n  },\n  groups: {\n    \"id\": \"Groups\",\n    \"defaultMessage\": \"Groups\"\n  },\n  addons: {\n    \"id\": \"Add-Ons\",\n    \"defaultMessage\": \"Add-Ons\"\n  },\n  database: {\n    \"id\": \"Database\",\n    \"defaultMessage\": \"Database\"\n  },\n  usergroupmemberbership: {\n    \"id\": \"User Group Membership\",\n    \"defaultMessage\": \"User Group Membership\"\n  },\n  undo: {\n    \"id\": \"Undo\",\n    \"defaultMessage\": \"Undo\"\n  },\n  urlmanagement: {\n    \"id\": \"URL Management\",\n    \"defaultMessage\": \"URL Management\"\n  },\n  contentRules: {\n    \"id\": \"Content Rules\",\n    \"defaultMessage\": \"Content Rules\"\n  },\n  relations: {\n    \"id\": \"Relations\",\n    \"defaultMessage\": \"Relations\"\n  }\n});\n\n/**\n * Controlpanels container class.\n */\nexport default function Controlpanels({\n  location\n}) {\n  _s();\n  const intl = useIntl();\n  const {\n    0: isClient,\n    1: setIsClient\n  } = useState(false);\n  const {\n    pathname\n  } = location;\n  const controlpanels = useSelector(state => state.controlpanels.controlpanels);\n  const controlpanelsRequest = useSelector(state => state.controlpanels.list);\n  const systemInformation = useSelector(state => state.controlpanels.systeminformation);\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n  const error = controlpanelsRequest === null || controlpanelsRequest === void 0 ? void 0 : controlpanelsRequest.error;\n  if (error) {\n    return __jsx(Error, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 12\n      }\n    });\n  }\n  let customcontrolpanels = config.settings.controlpanels ? config.settings.controlpanels.map(el => {\n    el.group = intl.formatMessage({\n      id: el.group,\n      defaultMessage: el.group\n    }) || el.group;\n    return el;\n  }) : [];\n  const {\n    filterControlPanels\n  } = config.settings;\n  const filteredControlPanels = map(concat(filterControlPanels(controlpanels), customcontrolpanels, [{\n    '@id': '/addons',\n    group: intl.formatMessage(messages.general),\n    title: intl.formatMessage(messages.addons)\n  }, {\n    '@id': '/database',\n    group: intl.formatMessage(messages.general),\n    title: intl.formatMessage(messages.database)\n  }, {\n    '@id': '/rules',\n    group: intl.formatMessage(messages.content),\n    title: intl.formatMessage(messages.contentRules)\n  }, {\n    '@id': '/undo',\n    group: intl.formatMessage(messages.general),\n    title: intl.formatMessage(messages.undo)\n  }, {\n    '@id': '/aliases',\n    group: intl.formatMessage(messages.general),\n    title: intl.formatMessage(messages.urlmanagement)\n  }, {\n    '@id': '/relations',\n    group: intl.formatMessage(messages.content),\n    title: intl.formatMessage(messages.relations)\n  }, {\n    '@id': '/moderate-comments',\n    group: intl.formatMessage(messages.content),\n    title: intl.formatMessage(messages.moderatecomments)\n  }, {\n    '@id': '/users',\n    group: intl.formatMessage(messages.usersControlPanelCategory),\n    title: intl.formatMessage(messages.users)\n  }, {\n    '@id': '/usergroupmembership',\n    group: intl.formatMessage(messages.usersControlPanelCategory),\n    title: intl.formatMessage(messages.usergroupmemberbership)\n  }, {\n    '@id': '/groups',\n    group: intl.formatMessage(messages.usersControlPanelCategory),\n    title: intl.formatMessage(messages.groups)\n  }]), controlpanel => _objectSpread(_objectSpread({}, controlpanel), {}, {\n    id: last(controlpanel['@id'].split('/'))\n  }));\n  const groups = map(uniqBy(filteredControlPanels, 'group'), 'group');\n  const {\n    controlPanelsIcons: icons\n  } = config.settings;\n  return __jsx(\"div\", {\n    className: \"view-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 5\n    }\n  }, __jsx(Helmet, {\n    title: intl.formatMessage(messages.sitesetup),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }), __jsx(Container, {\n    className: \"controlpanel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, __jsx(Segment.Group, {\n    raised: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, __jsx(Segment, {\n    className: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Site Setup\",\n    defaultMessage: \"Site Setup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  })), systemInformation && systemInformation.upgrade && __jsx(Message, {\n    attached: true,\n    warning: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"The site configuration is outdated and needs to be upgraded.\",\n    defaultMessage: \"The site configuration is outdated and needs to be upgraded.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }), ' ', __jsx(Link, {\n    to: `/controlpanel/plone-upgrade`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Please continue with the upgrade.\",\n    defaultMessage: \"Please continue with the upgrade.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }))), map(groups, group => [__jsx(Segment, {\n    key: `header-${group}`,\n    secondary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, group), __jsx(Segment, {\n    key: `body-${group}`,\n    attached: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    doubling: true,\n    columns: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, __jsx(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, map(sortBy(filter(filteredControlPanels, {\n    group\n  }), controlpanel => controlpanel.title), controlpanel => __jsx(Grid.Column, {\n    key: controlpanel.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 23\n    }\n  }, __jsx(Link, {\n    to: `/controlpanel/${controlpanel.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 25\n    }\n  }, __jsx(Header, {\n    as: \"h3\",\n    icon: true,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 27\n    }\n  }, __jsx(Icon, {\n    name: (icons === null || icons === void 0 ? void 0 : icons[controlpanel.id]) || icons.default,\n    size: \"48px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 29\n    }\n  }), __jsx(Header.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 29\n    }\n  }, controlpanel.title))))))))])), __jsx(Segment.Group, {\n    raised: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, __jsx(Segment, {\n    className: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Version Overview\",\n    defaultMessage: \"Version Overview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  })), __jsx(Segment, {\n    attached: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, systemInformation ? __jsx(VersionOverview, _extends({}, systemInformation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  })) : null))), isClient && /*#__PURE__*/createPortal(__jsx(Toolbar, {\n    pathname: pathname,\n    hideDefaultViewButtons: true,\n    inner: __jsx(Link, {\n      to: \"/\",\n      className: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      name: backSVG,\n      className: \"contents circled\",\n      size: \"30px\",\n      title: intl.formatMessage(messages.back),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }), document.getElementById('toolbar')));\n}\n_s(Controlpanels, \"2gon+hXkMDPAB+BX8BigDhY0BM4=\", false, function () {\n  return [useIntl, useSelector, useSelector, useSelector];\n});\n_c = Controlpanels;\nvar _c;\n$RefreshReg$(_c, \"Controlpanels\");","map":{"version":3,"names":["Helmet","concat","filter","last","map","sortBy","uniqBy","useEffect","useState","FormattedMessage","defineMessages","useIntl","createPortal","useSelector","Link","Container","Grid","Header","Message","Segment","Error","Icon","Toolbar","VersionOverview","config","backSVG","messages","sitesetup","back","versionoverview","general","addonconfiguration","content","moderatecomments","usersandgroups","usersControlPanelCategory","users","groups","addons","database","usergroupmemberbership","undo","urlmanagement","contentRules","relations","Controlpanels","location","_s","intl","isClient","setIsClient","pathname","controlpanels","state","controlpanelsRequest","list","systemInformation","systeminformation","error","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","customcontrolpanels","settings","el","group","formatMessage","id","defaultMessage","filterControlPanels","filteredControlPanels","title","controlpanel","_objectSpread","split","controlPanelsIcons","icons","className","Group","raised","upgrade","attached","warning","to","key","secondary","doubling","columns","Row","Column","as","icon","textAlign","name","default","size","Content","_extends","hideDefaultViewButtons","inner","document","getElementById","_c","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Controlpanels/Controlpanels.jsx"],"sourcesContent":["/**\n * Controlpanels component.\n * @module components/manage/Controlpanels/Controlpanels\n */\n\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport concat from 'lodash/concat';\nimport filter from 'lodash/filter';\nimport last from 'lodash/last';\nimport map from 'lodash/map';\nimport sortBy from 'lodash/sortBy';\nimport uniqBy from 'lodash/uniqBy';\nimport { useEffect, useState } from 'react';\nimport { FormattedMessage, defineMessages, useIntl } from 'react-intl';\nimport { createPortal } from 'react-dom';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Grid, Header, Message, Segment } from 'semantic-ui-react';\n\nimport Error from '@plone/volto/components/theme/Error/Error';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nimport VersionOverview from '@plone/volto/components/manage/Controlpanels/VersionOverview';\n\nimport config from '@plone/volto/registry';\n\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  sitesetup: {\n    id: 'Site Setup',\n    defaultMessage: 'Site Setup',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  versionoverview: {\n    id: 'Version Overview',\n    defaultMessage: 'Version Overview',\n  },\n  general: {\n    id: 'General',\n    defaultMessage: 'General',\n  },\n  addonconfiguration: {\n    id: 'Add-on Configuration',\n    defaultMessage: 'Add-on Configuration',\n  },\n  content: {\n    id: 'Content',\n    defaultMessage: 'Content',\n  },\n  moderatecomments: {\n    id: 'Moderate Comments',\n    defaultMessage: 'Moderate Comments',\n  },\n  usersandgroups: {\n    id: 'Users and Groups',\n    defaultMessage: 'Users and Groups',\n  },\n  usersControlPanelCategory: {\n    id: 'Users',\n    defaultMessage: 'Users',\n  },\n  users: {\n    id: 'Users',\n    defaultMessage: 'Users',\n  },\n  groups: {\n    id: 'Groups',\n    defaultMessage: 'Groups',\n  },\n  addons: {\n    id: 'Add-Ons',\n    defaultMessage: 'Add-Ons',\n  },\n  database: {\n    id: 'Database',\n    defaultMessage: 'Database',\n  },\n  usergroupmemberbership: {\n    id: 'User Group Membership',\n    defaultMessage: 'User Group Membership',\n  },\n  undo: {\n    id: 'Undo',\n    defaultMessage: 'Undo',\n  },\n  urlmanagement: {\n    id: 'URL Management',\n    defaultMessage: 'URL Management',\n  },\n  contentRules: {\n    id: 'Content Rules',\n    defaultMessage: 'Content Rules',\n  },\n  relations: {\n    id: 'Relations',\n    defaultMessage: 'Relations',\n  },\n});\n\n/**\n * Controlpanels container class.\n */\nexport default function Controlpanels({ location }) {\n  const intl = useIntl();\n  const [isClient, setIsClient] = useState(false);\n\n  const { pathname } = location;\n  const controlpanels = useSelector(\n    (state) => state.controlpanels.controlpanels,\n  );\n  const controlpanelsRequest = useSelector((state) => state.controlpanels.list);\n  const systemInformation = useSelector(\n    (state) => state.controlpanels.systeminformation,\n  );\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  const error = controlpanelsRequest?.error;\n\n  if (error) {\n    return <Error error={error} />;\n  }\n\n  let customcontrolpanels = config.settings.controlpanels\n    ? config.settings.controlpanels.map((el) => {\n        el.group =\n          intl.formatMessage({\n            id: el.group,\n            defaultMessage: el.group,\n          }) || el.group;\n        return el;\n      })\n    : [];\n  const { filterControlPanels } = config.settings;\n\n  const filteredControlPanels = map(\n    concat(filterControlPanels(controlpanels), customcontrolpanels, [\n      {\n        '@id': '/addons',\n        group: intl.formatMessage(messages.general),\n        title: intl.formatMessage(messages.addons),\n      },\n      {\n        '@id': '/database',\n        group: intl.formatMessage(messages.general),\n        title: intl.formatMessage(messages.database),\n      },\n      {\n        '@id': '/rules',\n        group: intl.formatMessage(messages.content),\n        title: intl.formatMessage(messages.contentRules),\n      },\n      {\n        '@id': '/undo',\n        group: intl.formatMessage(messages.general),\n        title: intl.formatMessage(messages.undo),\n      },\n      {\n        '@id': '/aliases',\n        group: intl.formatMessage(messages.general),\n        title: intl.formatMessage(messages.urlmanagement),\n      },\n      {\n        '@id': '/relations',\n        group: intl.formatMessage(messages.content),\n        title: intl.formatMessage(messages.relations),\n      },\n      {\n        '@id': '/moderate-comments',\n        group: intl.formatMessage(messages.content),\n        title: intl.formatMessage(messages.moderatecomments),\n      },\n      {\n        '@id': '/users',\n        group: intl.formatMessage(messages.usersControlPanelCategory),\n        title: intl.formatMessage(messages.users),\n      },\n      {\n        '@id': '/usergroupmembership',\n        group: intl.formatMessage(messages.usersControlPanelCategory),\n        title: intl.formatMessage(messages.usergroupmemberbership),\n      },\n      {\n        '@id': '/groups',\n        group: intl.formatMessage(messages.usersControlPanelCategory),\n        title: intl.formatMessage(messages.groups),\n      },\n    ]),\n    (controlpanel) => ({\n      ...controlpanel,\n      id: last(controlpanel['@id'].split('/')),\n    }),\n  );\n  const groups = map(uniqBy(filteredControlPanels, 'group'), 'group');\n  const { controlPanelsIcons: icons } = config.settings;\n\n  return (\n    <div className=\"view-wrapper\">\n      <Helmet title={intl.formatMessage(messages.sitesetup)} />\n      <Container className=\"controlpanel\">\n        <Segment.Group raised>\n          <Segment className=\"primary\">\n            <FormattedMessage id=\"Site Setup\" defaultMessage=\"Site Setup\" />\n          </Segment>\n          {systemInformation && systemInformation.upgrade && (\n            <Message attached warning>\n              <FormattedMessage\n                id=\"The site configuration is outdated and needs to be upgraded.\"\n                defaultMessage=\"The site configuration is outdated and needs to be upgraded.\"\n              />{' '}\n              <Link to={`/controlpanel/plone-upgrade`}>\n                <FormattedMessage\n                  id=\"Please continue with the upgrade.\"\n                  defaultMessage=\"Please continue with the upgrade.\"\n                />\n              </Link>\n            </Message>\n          )}\n          {map(groups, (group) => [\n            <Segment key={`header-${group}`} secondary>\n              {group}\n            </Segment>,\n            <Segment key={`body-${group}`} attached>\n              <Grid doubling columns={6}>\n                <Grid.Row>\n                  {map(\n                    sortBy(\n                      filter(filteredControlPanels, { group }),\n                      (controlpanel) => controlpanel.title,\n                    ),\n                    (controlpanel) => (\n                      <Grid.Column key={controlpanel.id}>\n                        <Link to={`/controlpanel/${controlpanel.id}`}>\n                          <Header as=\"h3\" icon textAlign=\"center\">\n                            <Icon\n                              name={icons?.[controlpanel.id] || icons.default}\n                              size=\"48px\"\n                            />\n                            <Header.Content>\n                              {controlpanel.title}\n                            </Header.Content>\n                          </Header>\n                        </Link>\n                      </Grid.Column>\n                    ),\n                  )}\n                </Grid.Row>\n              </Grid>\n            </Segment>,\n          ])}\n        </Segment.Group>\n        <Segment.Group raised>\n          <Segment className=\"primary\">\n            <FormattedMessage\n              id=\"Version Overview\"\n              defaultMessage=\"Version Overview\"\n            />\n          </Segment>\n          <Segment attached>\n            {systemInformation ? (\n              <VersionOverview {...systemInformation} />\n            ) : null}\n          </Segment>\n        </Segment.Group>\n      </Container>\n      {isClient &&\n        createPortal(\n          <Toolbar\n            pathname={pathname}\n            hideDefaultViewButtons\n            inner={\n              <Link to=\"/\" className=\"item\">\n                <Icon\n                  name={backSVG}\n                  className=\"contents circled\"\n                  size=\"30px\"\n                  title={intl.formatMessage(messages.back)}\n                />\n              </Link>\n            }\n          />,\n          document.getElementById('toolbar'),\n        )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Site Setup","defaultMessage":"Site Setup"},{"id":"Back","defaultMessage":"Back"},{"id":"Version Overview","defaultMessage":"Version Overview"},{"id":"General","defaultMessage":"General"},{"id":"Add-on Configuration","defaultMessage":"Add-on Configuration"},{"id":"Content","defaultMessage":"Content"},{"id":"Moderate Comments","defaultMessage":"Moderate Comments"},{"id":"Users and Groups","defaultMessage":"Users and Groups"},{"id":"Users","defaultMessage":"Users"},{"id":"Groups","defaultMessage":"Groups"},{"id":"Add-Ons","defaultMessage":"Add-Ons"},{"id":"Database","defaultMessage":"Database"},{"id":"User Group Membership","defaultMessage":"User Group Membership"},{"id":"Undo","defaultMessage":"Undo"},{"id":"URL Management","defaultMessage":"URL Management"},{"id":"Content Rules","defaultMessage":"Content Rules"},{"id":"Relations","defaultMessage":"Relations"},{"id":"The site configuration is outdated and needs to be upgraded.","defaultMessage":"The site configuration is outdated and needs to be upgraded."},{"id":"Please continue with the upgrade.","defaultMessage":"Please continue with the upgrade."}]}},"sourceType":"module","externalDependencies":[]}