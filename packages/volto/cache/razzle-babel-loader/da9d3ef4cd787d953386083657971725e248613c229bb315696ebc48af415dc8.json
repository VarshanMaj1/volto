{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Contents/ContentsPropertiesModal.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport map from 'lodash/map';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { usePrevious } from '@plone/volto/helpers/Utils/usePrevious';\nimport { cloneDeepSchema } from '@plone/volto/helpers/Utils/Utils';\nimport { updateContent } from '@plone/volto/actions/content/content';\nimport { ModalForm } from '@plone/volto/components/manage/Form';\nimport config from '@plone/volto/registry';\nconst messages = defineMessages({\n  properties: {\n    \"id\": \"Properties\",\n    \"defaultMessage\": \"Properties\"\n  },\n  default: {\n    \"id\": \"Default\",\n    \"defaultMessage\": \"Default\"\n  },\n  effectiveTitle: {\n    \"id\": \"Publishing Date\",\n    \"defaultMessage\": \"Publishing Date\"\n  },\n  effectiveDescription: {\n    \"id\": \"If this date is in the future, the content will not show up in listings and searches until this date.\",\n    \"defaultMessage\": \"If this date is in the future, the content will not show up in listings and searches until this date.\"\n  },\n  expiresTitle: {\n    \"id\": \"Expiration Date\",\n    \"defaultMessage\": \"Expiration Date\"\n  },\n  expiresDescription: {\n    \"id\": \"When this date is reached, the content will nolonger be visible in listings and searches.\",\n    \"defaultMessage\": \"When this date is reached, the content will nolonger be visible in listings and searches.\"\n  },\n  rightsTitle: {\n    \"id\": \"Rights\",\n    \"defaultMessage\": \"Rights\"\n  },\n  rightsDescription: {\n    \"id\": \"Copyright statement or other rights information on this item.\",\n    \"defaultMessage\": \"Copyright statement or other rights information on this item.\"\n  },\n  creatorsTitle: {\n    \"id\": \"Creators\",\n    \"defaultMessage\": \"Creators\"\n  },\n  creatorsDescription: {\n    \"id\": \"Persons responsible for creating the content of this item. Please enter a list of user names, one per line. The principal creator should come first.\",\n    \"defaultMessage\": \"Persons responsible for creating the content of this item. Please enter a list of user names, one per line. The principal creator should come first.\"\n  },\n  excludeFromNavTitle: {\n    \"id\": \"Exclude from navigation\",\n    \"defaultMessage\": \"Exclude from navigation\"\n  },\n  excludeFromNavDescription: {\n    \"id\": \"If selected, this item will not appear in the navigation tree\",\n    \"defaultMessage\": \"If selected, this item will not appear in the navigation tree\"\n  }\n});\nconst ContentsPropertiesModal = props => {\n  _s();\n  const {\n    onCancel,\n    onOk,\n    open,\n    items,\n    values\n  } = props;\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const request = useSelector(state => state.content.update);\n  const prevrequestloading = usePrevious(request.loading);\n  const baseSchema = {\n    fieldsets: [{\n      id: 'default',\n      title: intl.formatMessage(messages.default),\n      fields: ['effective', 'expires', 'rights', 'creators', 'exclude_from_nav']\n    }],\n    properties: {\n      effective: {\n        description: intl.formatMessage(messages.effectiveDescription),\n        title: intl.formatMessage(messages.effectiveTitle),\n        type: 'string',\n        widget: 'datetime'\n      },\n      expires: {\n        description: intl.formatMessage(messages.expiresDescription),\n        title: intl.formatMessage(messages.expiresTitle),\n        type: 'string',\n        widget: 'datetime'\n      },\n      rights: {\n        description: intl.formatMessage(messages.rightsDescription),\n        title: intl.formatMessage(messages.rightsTitle),\n        type: 'string',\n        widget: 'textarea'\n      },\n      creators: {\n        description: intl.formatMessage(messages.creatorsDescription),\n        title: intl.formatMessage(messages.creatorsTitle),\n        type: 'array'\n      },\n      exclude_from_nav: {\n        description: intl.formatMessage(messages.excludeFromNavDescription),\n        title: intl.formatMessage(messages.excludeFromNavTitle),\n        type: 'boolean'\n      }\n    },\n    required: []\n  };\n  const schemaEnhancer = config.settings.contentPropertiesSchemaEnhancer;\n  let schema = schemaEnhancer ? schemaEnhancer({\n    schema: cloneDeepSchema(baseSchema),\n    intl\n  }) : baseSchema;\n  const initialData = {};\n  if (values !== null && values !== void 0 && values.length) {\n    for (const name of Object.keys(schema.properties)) {\n      const firstValue = values[0][name];\n      // should not show floor or ceiling dates\n      if (name === 'effective' && firstValue && firstValue <= '1970' || name === 'expires' && firstValue && firstValue >= '2499') {\n        continue;\n      }\n      if (values.every(item => item[name] === firstValue)) {\n        initialData[name] = firstValue;\n      }\n    }\n  }\n  useEffect(() => {\n    if (prevrequestloading && request.loaded) {\n      onOk();\n    }\n  }, [onOk, prevrequestloading, request.loaded]);\n  const onSubmit = data => {\n    let changes = {};\n    for (const name of Object.keys(data)) {\n      if (data[name] !== initialData[name]) {\n        changes[name] = data[name];\n      }\n    }\n    if (isEmpty(changes)) {\n      onOk();\n    } else {\n      dispatch(updateContent(items, map(items, () => changes)));\n    }\n  };\n  return open && __jsx(ModalForm, {\n    open: open,\n    onSubmit: onSubmit,\n    onCancel: onCancel,\n    title: intl.formatMessage(messages.properties),\n    schema: schema,\n    formData: initialData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  });\n};\n_s(ContentsPropertiesModal, \"VyFdO3pNsQ6KHeCdEJ4EeXaUCmQ=\", false, function () {\n  return [useIntl, useDispatch, useSelector, usePrevious];\n});\n_c = ContentsPropertiesModal;\nContentsPropertiesModal.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n  open: PropTypes.bool.isRequired,\n  onOk: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};\nexport default ContentsPropertiesModal;\nvar _c;\n$RefreshReg$(_c, \"ContentsPropertiesModal\");","map":{"version":3,"names":["useEffect","PropTypes","useDispatch","useSelector","isEmpty","map","defineMessages","useIntl","usePrevious","cloneDeepSchema","updateContent","ModalForm","config","messages","properties","default","effectiveTitle","effectiveDescription","expiresTitle","expiresDescription","rightsTitle","rightsDescription","creatorsTitle","creatorsDescription","excludeFromNavTitle","excludeFromNavDescription","ContentsPropertiesModal","props","_s","onCancel","onOk","open","items","values","intl","dispatch","request","state","content","update","prevrequestloading","loading","baseSchema","fieldsets","id","title","formatMessage","fields","effective","description","type","widget","expires","rights","creators","exclude_from_nav","required","schemaEnhancer","settings","contentPropertiesSchemaEnhancer","schema","initialData","length","name","Object","keys","firstValue","every","item","loaded","onSubmit","data","changes","__jsx","formData","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","arrayOf","string","isRequired","bool","func","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Contents/ContentsPropertiesModal.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport map from 'lodash/map';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport { usePrevious } from '@plone/volto/helpers/Utils/usePrevious';\nimport { cloneDeepSchema } from '@plone/volto/helpers/Utils/Utils';\nimport { updateContent } from '@plone/volto/actions/content/content';\nimport { ModalForm } from '@plone/volto/components/manage/Form';\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  properties: {\n    id: 'Properties',\n    defaultMessage: 'Properties',\n  },\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  effectiveTitle: {\n    id: 'Publishing Date',\n    defaultMessage: 'Publishing Date',\n  },\n  effectiveDescription: {\n    id: 'If this date is in the future, the content will not show up in listings and searches until this date.',\n    defaultMessage:\n      'If this date is in the future, the content will not show up in listings and searches until this date.',\n  },\n  expiresTitle: {\n    id: 'Expiration Date',\n    defaultMessage: 'Expiration Date',\n  },\n  expiresDescription: {\n    id: 'When this date is reached, the content will nolonger be visible in listings and searches.',\n    defaultMessage:\n      'When this date is reached, the content will nolonger be visible in listings and searches.',\n  },\n  rightsTitle: {\n    id: 'Rights',\n    defaultMessage: 'Rights',\n  },\n  rightsDescription: {\n    id: 'Copyright statement or other rights information on this item.',\n    defaultMessage:\n      'Copyright statement or other rights information on this item.',\n  },\n  creatorsTitle: {\n    id: 'Creators',\n    defaultMessage: 'Creators',\n  },\n  creatorsDescription: {\n    id: 'Persons responsible for creating the content of this item. Please enter a list of user names, one per line. The principal creator should come first.',\n    defaultMessage:\n      'Persons responsible for creating the content of this item. Please enter a list of user names, one per line. The principal creator should come first.',\n  },\n  excludeFromNavTitle: {\n    id: 'Exclude from navigation',\n    defaultMessage: 'Exclude from navigation',\n  },\n  excludeFromNavDescription: {\n    id: 'If selected, this item will not appear in the navigation tree',\n    defaultMessage:\n      'If selected, this item will not appear in the navigation tree',\n  },\n});\n\nconst ContentsPropertiesModal = (props) => {\n  const { onCancel, onOk, open, items, values } = props;\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const request = useSelector((state) => state.content.update);\n  const prevrequestloading = usePrevious(request.loading);\n\n  const baseSchema = {\n    fieldsets: [\n      {\n        id: 'default',\n        title: intl.formatMessage(messages.default),\n        fields: [\n          'effective',\n          'expires',\n          'rights',\n          'creators',\n          'exclude_from_nav',\n        ],\n      },\n    ],\n    properties: {\n      effective: {\n        description: intl.formatMessage(messages.effectiveDescription),\n        title: intl.formatMessage(messages.effectiveTitle),\n        type: 'string',\n        widget: 'datetime',\n      },\n      expires: {\n        description: intl.formatMessage(messages.expiresDescription),\n        title: intl.formatMessage(messages.expiresTitle),\n        type: 'string',\n        widget: 'datetime',\n      },\n      rights: {\n        description: intl.formatMessage(messages.rightsDescription),\n        title: intl.formatMessage(messages.rightsTitle),\n        type: 'string',\n        widget: 'textarea',\n      },\n      creators: {\n        description: intl.formatMessage(messages.creatorsDescription),\n        title: intl.formatMessage(messages.creatorsTitle),\n        type: 'array',\n      },\n      exclude_from_nav: {\n        description: intl.formatMessage(messages.excludeFromNavDescription),\n        title: intl.formatMessage(messages.excludeFromNavTitle),\n        type: 'boolean',\n      },\n    },\n    required: [],\n  };\n  const schemaEnhancer = config.settings.contentPropertiesSchemaEnhancer;\n  let schema = schemaEnhancer\n    ? schemaEnhancer({\n        schema: cloneDeepSchema(baseSchema),\n        intl,\n      })\n    : baseSchema;\n\n  const initialData = {};\n  if (values?.length) {\n    for (const name of Object.keys(schema.properties)) {\n      const firstValue = values[0][name];\n      // should not show floor or ceiling dates\n      if (\n        (name === 'effective' && firstValue && firstValue <= '1970') ||\n        (name === 'expires' && firstValue && firstValue >= '2499')\n      ) {\n        continue;\n      }\n      if (values.every((item) => item[name] === firstValue)) {\n        initialData[name] = firstValue;\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (prevrequestloading && request.loaded) {\n      onOk();\n    }\n  }, [onOk, prevrequestloading, request.loaded]);\n\n  const onSubmit = (data) => {\n    let changes = {};\n    for (const name of Object.keys(data)) {\n      if (data[name] !== initialData[name]) {\n        changes[name] = data[name];\n      }\n    }\n    if (isEmpty(changes)) {\n      onOk();\n    } else {\n      dispatch(\n        updateContent(\n          items,\n          map(items, () => changes),\n        ),\n      );\n    }\n  };\n\n  return (\n    open && (\n      <ModalForm\n        open={open}\n        onSubmit={onSubmit}\n        onCancel={onCancel}\n        title={intl.formatMessage(messages.properties)}\n        schema={schema}\n        formData={initialData}\n      />\n    )\n  );\n};\n\nContentsPropertiesModal.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n  open: PropTypes.bool.isRequired,\n  onOk: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n};\nexport default ContentsPropertiesModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Properties","defaultMessage":"Properties"},{"id":"Default","defaultMessage":"Default"},{"id":"Publishing Date","defaultMessage":"Publishing Date"},{"id":"If this date is in the future, the content will not show up in listings and searches until this date.","defaultMessage":"If this date is in the future, the content will not show up in listings and searches until this date."},{"id":"Expiration Date","defaultMessage":"Expiration Date"},{"id":"When this date is reached, the content will nolonger be visible in listings and searches.","defaultMessage":"When this date is reached, the content will nolonger be visible in listings and searches."},{"id":"Rights","defaultMessage":"Rights"},{"id":"Copyright statement or other rights information on this item.","defaultMessage":"Copyright statement or other rights information on this item."},{"id":"Creators","defaultMessage":"Creators"},{"id":"Persons responsible for creating the content of this item. Please enter a list of user names, one per line. The principal creator should come first.","defaultMessage":"Persons responsible for creating the content of this item. Please enter a list of user names, one per line. The principal creator should come first."},{"id":"Exclude from navigation","defaultMessage":"Exclude from navigation"},{"id":"If selected, this item will not appear in the navigation tree","defaultMessage":"If selected, this item will not appear in the navigation tree"}]}},"sourceType":"module","externalDependencies":[]}