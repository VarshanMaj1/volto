{"ast":null,"code":"import _extends from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Widgets/IdWidget.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\n/**\n * IdWidget component.\n * @module components/manage/Widgets/IdWidget\n */\n\nimport { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Input } from 'semantic-ui-react';\nimport compact from 'lodash/compact';\nimport concat from 'lodash/concat';\nimport map from 'lodash/map';\nimport union from 'lodash/union';\nimport uniq from 'lodash/uniq';\nimport { defineMessages, useIntl } from 'react-intl';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport FormFieldWrapper from '@plone/volto/components/manage/Widgets/FormFieldWrapper';\nimport config from '@plone/volto/registry';\nimport { getQuerystring } from '@plone/volto/actions/querystring/querystring';\nconst messages = defineMessages({\n  reservedId: {\n    \"id\": \"This is a reserved name and can't be used\",\n    \"defaultMessage\": \"This is a reserved name and can't be used\"\n  },\n  invalidCharacters: {\n    \"id\": \"Only 7-bit bytes characters are allowed. Cannot contain uppercase letters, special characters: <, >, &, #, /, ?, or others that are illegal in URLs. Cannot start with: _, aq_, @@, ++. Cannot end with __. Cannot be: request,contributors, ., .., \\\"\\\". Cannot contain new lines.\",\n    \"defaultMessage\": \"Only 7-bit bytes characters are allowed. Cannot contain uppercase letters, special characters: <, >, &, #, /, ?, or others that are illegal in URLs. Cannot start with: _, aq_, @@, ++. Cannot end with __. Cannot be: request,contributors, ., .., \\\"\\\". Cannot contain new lines.\"\n  }\n});\nconst IdWidget = props => {\n  _s();\n  const {\n    id,\n    onClick,\n    icon,\n    iconAction,\n    minLength,\n    maxLength,\n    onBlur,\n    value,\n    focus,\n    isDisabled,\n    placeholder,\n    onChange\n  } = props;\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const ref = useRef();\n  const indexes = useSelector(state => state.querystring.indexes);\n  const {\n    0: errors,\n    1: setError\n  } = useState([]);\n  const {\n    0: reservedIds\n  } = useState(compact(uniq(union(config.settings.reservedIds, map(config.settings.nonContentRoutes, route => String(route).replace(/[^a-z-]/g, ''))))));\n  const fieldValidation = value => {\n    const error = [];\n\n    // Check reserved id's\n    if (reservedIds.indexOf(value) !== -1) {\n      error.push(intl.formatMessage(messages.reservedId));\n    }\n\n    // Check invalid characters\n    if (\n    // eslint-disable-next-line no-control-regex\n    !/^(?!.*\\\\)(?!\\+\\+)(?!@@)(?!.*request)(?!.*contributors)(?!aq_)(?!.*__)(?!_)(?!((^|\\/)\\.\\.?($|\\/)|^\"\\s*\"$))(?!.*[A-Z])(?:(?![\\r\\n<>/?&#\\x00-\\x1F\\x7F])['\\x00-\\x7F\\u0080-\\uFFFF. _])*$/.test(value)) {\n      error.push(intl.formatMessage(messages.invalidCharacters));\n    }\n\n    // Check indexes\n    if (value in indexes) {\n      error.push(intl.formatMessage(messages.reservedId));\n    }\n    setError(error);\n  };\n  useEffect(() => {\n    if (focus) ref.current.focus();\n    dispatch(getQuerystring());\n    fieldValidation(value);\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [focus, value, dispatch]);\n  const handleChange = ({\n    target\n  }) => {\n    fieldValidation(target.value);\n    onChange(id, target.value === '' ? undefined : target.value);\n  };\n  const handleBlur = ({\n    target\n  }) => {\n    fieldValidation(target.value);\n    onBlur(id, target.value === '' ? undefined : target.value);\n  };\n  props = _objectSpread(_objectSpread({}, props), {}, {\n    error: concat(props.error, errors)\n  });\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }), __jsx(Input, {\n    id: `field-${id}`,\n    name: id,\n    value: value || '',\n    disabled: isDisabled,\n    icon: icon || null,\n    placeholder: placeholder,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    onClick: () => onClick(),\n    ref: ref,\n    minLength: minLength || null,\n    maxLength: maxLength || null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }), icon && iconAction && __jsx(\"button\", {\n    className: `field-${id}-action-button`,\n    onClick: iconAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: icon,\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  })));\n};\n_s(IdWidget, \"KixWhWCBh01220yjGCfUVUuN2YI=\", false, function () {\n  return [useIntl, useDispatch, useSelector];\n});\n_c = IdWidget;\nexport default IdWidget;\nIdWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  focus: PropTypes.bool,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  icon: PropTypes.shape({\n    xmlns: PropTypes.string,\n    viewBox: PropTypes.string,\n    content: PropTypes.string\n  }),\n  iconAction: PropTypes.func,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  wrapped: PropTypes.bool,\n  placeholder: PropTypes.string\n};\nIdWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: () => {},\n  onBlur: () => {},\n  onClick: () => {},\n  onEdit: null,\n  onDelete: null,\n  focus: false,\n  icon: null,\n  iconAction: null,\n  minLength: null,\n  maxLength: null\n};\nvar _c;\n$RefreshReg$(_c, \"IdWidget\");","map":{"version":3,"names":["useState","useEffect","useRef","PropTypes","useSelector","useDispatch","Input","compact","concat","map","union","uniq","defineMessages","useIntl","Icon","FormFieldWrapper","config","getQuerystring","messages","reservedId","invalidCharacters","IdWidget","props","_s","id","onClick","icon","iconAction","minLength","maxLength","onBlur","value","focus","isDisabled","placeholder","onChange","intl","dispatch","ref","indexes","state","querystring","errors","setError","reservedIds","settings","nonContentRoutes","route","String","replace","fieldValidation","error","indexOf","push","formatMessage","test","current","handleChange","target","undefined","handleBlur","_objectSpread","__jsx","_extends","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","name","disabled","size","_c","propTypes","string","isRequired","title","description","required","bool","arrayOf","func","onEdit","onDelete","shape","xmlns","viewBox","content","number","wrapped","defaultProps","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Widgets/IdWidget.jsx"],"sourcesContent":["/**\n * IdWidget component.\n * @module components/manage/Widgets/IdWidget\n */\n\nimport { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Input } from 'semantic-ui-react';\nimport compact from 'lodash/compact';\nimport concat from 'lodash/concat';\nimport map from 'lodash/map';\nimport union from 'lodash/union';\nimport uniq from 'lodash/uniq';\n\nimport { defineMessages, useIntl } from 'react-intl';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport FormFieldWrapper from '@plone/volto/components/manage/Widgets/FormFieldWrapper';\nimport config from '@plone/volto/registry';\nimport { getQuerystring } from '@plone/volto/actions/querystring/querystring';\n\nconst messages = defineMessages({\n  reservedId: {\n    id: \"This is a reserved name and can't be used\",\n    defaultMessage: \"This is a reserved name and can't be used\",\n  },\n  invalidCharacters: {\n    id: 'Only 7-bit bytes characters are allowed. Cannot contain uppercase letters, special characters: <, >, &, #, /, ?, or others that are illegal in URLs. Cannot start with: _, aq_, @@, ++. Cannot end with __. Cannot be: request,contributors, ., .., \"\". Cannot contain new lines.',\n    defaultMessage:\n      'Only 7-bit bytes characters are allowed. Cannot contain uppercase letters, special characters: <, >, &, #, /, ?, or others that are illegal in URLs. Cannot start with: _, aq_, @@, ++. Cannot end with __. Cannot be: request,contributors, ., .., \"\". Cannot contain new lines.',\n  },\n});\n\nconst IdWidget = (props) => {\n  const {\n    id,\n    onClick,\n    icon,\n    iconAction,\n    minLength,\n    maxLength,\n    onBlur,\n    value,\n    focus,\n    isDisabled,\n    placeholder,\n    onChange,\n  } = props;\n\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const ref = useRef();\n  const indexes = useSelector((state) => state.querystring.indexes);\n\n  const [errors, setError] = useState([]);\n  const [reservedIds] = useState(\n    compact(\n      uniq(\n        union(\n          config.settings.reservedIds,\n          map(config.settings.nonContentRoutes, (route) =>\n            String(route).replace(/[^a-z-]/g, ''),\n          ),\n        ),\n      ),\n    ),\n  );\n  const fieldValidation = (value) => {\n    const error = [];\n\n    // Check reserved id's\n    if (reservedIds.indexOf(value) !== -1) {\n      error.push(intl.formatMessage(messages.reservedId));\n    }\n\n    // Check invalid characters\n    if (\n      // eslint-disable-next-line no-control-regex\n      !/^(?!.*\\\\)(?!\\+\\+)(?!@@)(?!.*request)(?!.*contributors)(?!aq_)(?!.*__)(?!_)(?!((^|\\/)\\.\\.?($|\\/)|^\"\\s*\"$))(?!.*[A-Z])(?:(?![\\r\\n<>/?&#\\x00-\\x1F\\x7F])['\\x00-\\x7F\\u0080-\\uFFFF. _])*$/.test(\n        value,\n      )\n    ) {\n      error.push(intl.formatMessage(messages.invalidCharacters));\n    }\n\n    // Check indexes\n    if (value in indexes) {\n      error.push(intl.formatMessage(messages.reservedId));\n    }\n\n    setError(error);\n  };\n\n  useEffect(\n    () => {\n      if (focus) ref.current.focus();\n\n      dispatch(getQuerystring());\n      fieldValidation(value);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [focus, value, dispatch],\n  );\n\n  const handleChange = ({ target }) => {\n    fieldValidation(target.value);\n    onChange(id, target.value === '' ? undefined : target.value);\n  };\n\n  const handleBlur = ({ target }) => {\n    fieldValidation(target.value);\n    onBlur(id, target.value === '' ? undefined : target.value);\n  };\n\n  props = {\n    ...props,\n    error: concat(props.error, errors),\n  };\n\n  return (\n    <FormFieldWrapper {...props} className=\"text\">\n      <Input\n        id={`field-${id}`}\n        name={id}\n        value={value || ''}\n        disabled={isDisabled}\n        icon={icon || null}\n        placeholder={placeholder}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        onClick={() => onClick()}\n        ref={ref}\n        minLength={minLength || null}\n        maxLength={maxLength || null}\n      />\n      {icon && iconAction && (\n        <button className={`field-${id}-action-button`} onClick={iconAction}>\n          <Icon name={icon} size=\"18px\" />\n        </button>\n      )}\n    </FormFieldWrapper>\n  );\n};\n\nexport default IdWidget;\n\nIdWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  focus: PropTypes.bool,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  icon: PropTypes.shape({\n    xmlns: PropTypes.string,\n    viewBox: PropTypes.string,\n    content: PropTypes.string,\n  }),\n  iconAction: PropTypes.func,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  wrapped: PropTypes.bool,\n  placeholder: PropTypes.string,\n};\n\nIdWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: () => {},\n  onBlur: () => {},\n  onClick: () => {},\n  onEdit: null,\n  onDelete: null,\n  focus: false,\n  icon: null,\n  iconAction: null,\n  minLength: null,\n  maxLength: null,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"This is a reserved name and can't be used","defaultMessage":"This is a reserved name and can't be used"},{"id":"Only 7-bit bytes characters are allowed. Cannot contain uppercase letters, special characters: <, >, &, #, /, ?, or others that are illegal in URLs. Cannot start with: _, aq_, @@, ++. Cannot end with __. Cannot be: request,contributors, ., .., \"\". Cannot contain new lines.","defaultMessage":"Only 7-bit bytes characters are allowed. Cannot contain uppercase letters, special characters: <, >, &, #, /, ?, or others that are illegal in URLs. Cannot start with: _, aq_, @@, ++. Cannot end with __. Cannot be: request,contributors, ., .., \"\". Cannot contain new lines."}]}},"sourceType":"module","externalDependencies":[]}