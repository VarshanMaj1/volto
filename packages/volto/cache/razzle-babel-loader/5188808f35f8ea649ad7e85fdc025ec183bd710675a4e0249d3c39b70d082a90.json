{"ast":null,"code":"import _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/**\n * Breadcrumbs reducer.\n * @module reducers/breadcrumbs/breadcrumbs\n */\n\nimport map from 'lodash/map';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport { hasApiExpander } from '@plone/volto/helpers/Utils/Utils';\nimport { GET_BREADCRUMBS, GET_CONTENT } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  error: null,\n  items: [],\n  root: null,\n  loaded: false,\n  loading: false\n};\n\n/**\n * Breadcrumbs reducer.\n * @function breadcrumbs\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function breadcrumbs(state = initialState, action = {}) {\n  let hasExpander;\n  switch (action.type) {\n    case `${GET_BREADCRUMBS}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: false,\n        loading: true\n      });\n    case `${GET_CONTENT}_SUCCESS`:\n      hasExpander = hasApiExpander('breadcrumbs', getBaseUrl(flattenToAppURL(action.result['@id'])));\n      if (hasExpander && !action.subrequest) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          error: null,\n          items: map(action.result['@components'].breadcrumbs.items, item => ({\n            title: item.title,\n            url: flattenToAppURL(item['@id'])\n          })),\n          root: flattenToAppURL(action.result['@components'].breadcrumbs.root),\n          loaded: true,\n          loading: false\n        });\n      }\n      return state;\n    case `${GET_BREADCRUMBS}_SUCCESS`:\n      hasExpander = hasApiExpander('breadcrumbs', getBaseUrl(flattenToAppURL(action.result['@id'])));\n      if (!hasExpander) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          error: null,\n          items: map(action.result.items, item => ({\n            title: item.title,\n            url: flattenToAppURL(item['@id'])\n          })),\n          root: flattenToAppURL(action.result.root),\n          loaded: true,\n          loading: false\n        });\n      }\n      return state;\n    case `${GET_BREADCRUMBS}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        items: [],\n        loaded: false,\n        loading: false\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["map","flattenToAppURL","getBaseUrl","hasApiExpander","GET_BREADCRUMBS","GET_CONTENT","initialState","error","items","root","loaded","loading","breadcrumbs","state","action","hasExpander","type","_objectSpread","result","subrequest","item","title","url"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/reducers/breadcrumbs/breadcrumbs.js"],"sourcesContent":["/**\n * Breadcrumbs reducer.\n * @module reducers/breadcrumbs/breadcrumbs\n */\n\nimport map from 'lodash/map';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport { hasApiExpander } from '@plone/volto/helpers/Utils/Utils';\n\nimport {\n  GET_BREADCRUMBS,\n  GET_CONTENT,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  items: [],\n  root: null,\n  loaded: false,\n  loading: false,\n};\n\n/**\n * Breadcrumbs reducer.\n * @function breadcrumbs\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function breadcrumbs(state = initialState, action = {}) {\n  let hasExpander;\n  switch (action.type) {\n    case `${GET_BREADCRUMBS}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${GET_CONTENT}_SUCCESS`:\n      hasExpander = hasApiExpander(\n        'breadcrumbs',\n        getBaseUrl(flattenToAppURL(action.result['@id'])),\n      );\n      if (hasExpander && !action.subrequest) {\n        return {\n          ...state,\n          error: null,\n          items: map(\n            action.result['@components'].breadcrumbs.items,\n            (item) => ({\n              title: item.title,\n              url: flattenToAppURL(item['@id']),\n            }),\n          ),\n          root: flattenToAppURL(action.result['@components'].breadcrumbs.root),\n          loaded: true,\n          loading: false,\n        };\n      }\n      return state;\n    case `${GET_BREADCRUMBS}_SUCCESS`:\n      hasExpander = hasApiExpander(\n        'breadcrumbs',\n        getBaseUrl(flattenToAppURL(action.result['@id'])),\n      );\n      if (!hasExpander) {\n        return {\n          ...state,\n          error: null,\n          items: map(action.result.items, (item) => ({\n            title: item.title,\n            url: flattenToAppURL(item['@id']),\n          })),\n          root: flattenToAppURL(action.result.root),\n          loaded: true,\n          loading: false,\n        };\n      }\n      return state;\n    case `${GET_BREADCRUMBS}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        items: [],\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA,OAAOA,GAAG,MAAM,YAAY;AAC5B,SAASC,eAAe,EAAEC,UAAU,QAAQ,8BAA8B;AAC1E,SAASC,cAAc,QAAQ,kCAAkC;AAEjE,SACEC,eAAe,EACfC,WAAW,QACN,oCAAoC;AAE3C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE,IAAI;EACVC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,WAAWA,CAACC,KAAK,GAAGP,YAAY,EAAEQ,MAAM,GAAG,CAAC,CAAC,EAAE;EACrE,IAAIC,WAAW;EACf,QAAQD,MAAM,CAACE,IAAI;IACjB,KAAK,GAAGZ,eAAe,UAAU;MAC/B,OAAAa,aAAA,CAAAA,aAAA,KACKJ,KAAK;QACRN,KAAK,EAAE,IAAI;QACXG,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAI;IAEjB,KAAK,GAAGN,WAAW,UAAU;MAC3BU,WAAW,GAAGZ,cAAc,CAC1B,aAAa,EACbD,UAAU,CAACD,eAAe,CAACa,MAAM,CAACI,MAAM,CAAC,KAAK,CAAC,CAAC,CAClD,CAAC;MACD,IAAIH,WAAW,IAAI,CAACD,MAAM,CAACK,UAAU,EAAE;QACrC,OAAAF,aAAA,CAAAA,aAAA,KACKJ,KAAK;UACRN,KAAK,EAAE,IAAI;UACXC,KAAK,EAAER,GAAG,CACRc,MAAM,CAACI,MAAM,CAAC,aAAa,CAAC,CAACN,WAAW,CAACJ,KAAK,EAC7CY,IAAI,KAAM;YACTC,KAAK,EAAED,IAAI,CAACC,KAAK;YACjBC,GAAG,EAAErB,eAAe,CAACmB,IAAI,CAAC,KAAK,CAAC;UAClC,CAAC,CACH,CAAC;UACDX,IAAI,EAAER,eAAe,CAACa,MAAM,CAACI,MAAM,CAAC,aAAa,CAAC,CAACN,WAAW,CAACH,IAAI,CAAC;UACpEC,MAAM,EAAE,IAAI;UACZC,OAAO,EAAE;QAAK;MAElB;MACA,OAAOE,KAAK;IACd,KAAK,GAAGT,eAAe,UAAU;MAC/BW,WAAW,GAAGZ,cAAc,CAC1B,aAAa,EACbD,UAAU,CAACD,eAAe,CAACa,MAAM,CAACI,MAAM,CAAC,KAAK,CAAC,CAAC,CAClD,CAAC;MACD,IAAI,CAACH,WAAW,EAAE;QAChB,OAAAE,aAAA,CAAAA,aAAA,KACKJ,KAAK;UACRN,KAAK,EAAE,IAAI;UACXC,KAAK,EAAER,GAAG,CAACc,MAAM,CAACI,MAAM,CAACV,KAAK,EAAGY,IAAI,KAAM;YACzCC,KAAK,EAAED,IAAI,CAACC,KAAK;YACjBC,GAAG,EAAErB,eAAe,CAACmB,IAAI,CAAC,KAAK,CAAC;UAClC,CAAC,CAAC,CAAC;UACHX,IAAI,EAAER,eAAe,CAACa,MAAM,CAACI,MAAM,CAACT,IAAI,CAAC;UACzCC,MAAM,EAAE,IAAI;UACZC,OAAO,EAAE;QAAK;MAElB;MACA,OAAOE,KAAK;IACd,KAAK,GAAGT,eAAe,OAAO;MAC5B,OAAAa,aAAA,CAAAA,aAAA,KACKJ,KAAK;QACRN,KAAK,EAAEO,MAAM,CAACP,KAAK;QACnBC,KAAK,EAAE,EAAE;QACTE,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAK;IAElB;MACE,OAAOE,KAAK;EAChB;AACF","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}