{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/View/AlbumView.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container as SemanticContainer, GridColumn, Segment } from 'semantic-ui-react';\nimport { Button, Modal, Grid } from 'semantic-ui-react';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport UniversalLink from '@plone/volto/components/manage/UniversalLink/UniversalLink';\nimport config from '@plone/volto/registry';\nimport openSVG from '@plone/volto/icons/open.svg';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\nconst AlbumView = ({\n  content\n}) => {\n  const {\n    0: openIndex,\n    1: setOpenIndex\n  } = useState(undefined);\n  const closeModal = () => {\n    setOpenIndex(-1);\n  };\n  const nextImage = () => {\n    let OpenIndex = (openIndex + 1) % content.items.length;\n    setOpenIndex(OpenIndex);\n  };\n  const prevImage = () => {\n    const OpenIndex = (openIndex - 1) % content.items.length;\n    setOpenIndex(OpenIndex);\n  };\n  const Container = config.getComponent({\n    name: 'Container'\n  }).component || SemanticContainer;\n  const PreviewImage = config.getComponent({\n    name: 'PreviewImage'\n  }).component;\n  return __jsx(Container, {\n    className: \"view-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(\"article\", {\n    id: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"documentFirstHeading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, content.title), content.description && __jsx(\"p\", {\n    className: \"documentDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, content.description)), __jsx(\"section\", {\n    id: \"content-core\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    doubling: true,\n    stackable: true,\n    columns: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, content.items && content.items.map((item, index) => __jsx(Fragment, {\n    key: item.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, item.image_field && __jsx(Modal, {\n    className: \"gallery\",\n    onClose: closeModal,\n    open: openIndex === index,\n    trigger: __jsx(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, __jsx(Segment, {\n      className: \"imageborder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 27\n      }\n    }, __jsx(PreviewImage, {\n      item: item,\n      alt: item.image_caption || item.title,\n      onClick: () => {\n        setOpenIndex(index);\n      },\n      className: \"ui middle aligned image\",\n      responsive: true,\n      loading: \"lazy\",\n      title: item.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }))),\n    closeIcon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, __jsx(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 23\n    }\n  }, __jsx(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, __jsx(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 27\n    }\n  }, __jsx(GridColumn, {\n    width: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, item.title), __jsx(GridColumn, {\n    width: 2,\n    textAlign: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, __jsx(UniversalLink, {\n    href: item.url,\n    title: item['@type'],\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 31\n    }\n  }, __jsx(Icon, {\n    size: \"30px\",\n    fitted: true,\n    name: openSVG,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  })))))), __jsx(Grid, {\n    centered: true,\n    verticalAlign: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 23\n    }\n  }, __jsx(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, __jsx(Grid.Column, {\n    width: 2,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 27\n    }\n  }, __jsx(Button, {\n    className: \"gallery noborder\",\n    onClick: prevImage,\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, __jsx(Icon, {\n    name: backSVG,\n    className: \"circled\",\n    size: \"30px\",\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 31\n    }\n  }))), __jsx(Grid.Column, {\n    width: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 27\n    }\n  }, __jsx(Modal.Content, {\n    image: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, __jsx(PreviewImage, {\n    item: item,\n    alt: item.image_caption,\n    onClick: () => {\n      setOpenIndex(index);\n    },\n    className: \"ui image\",\n    responsive: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 31\n    }\n  }), __jsx(Modal.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 31\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }, item.description)))), __jsx(Grid.Column, {\n    width: 2,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 27\n    }\n  }, __jsx(Button, {\n    onClick: nextImage,\n    className: \"gallery noborder\",\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, __jsx(Icon, {\n    name: aheadSVG,\n    className: \"circled\",\n    size: \"30px\",\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 31\n    }\n  }))))))))))));\n};\nAlbumView.propTypes = {\n  /**\n   * Content of the object\n   */\n  content: PropTypes.shape({\n    /**\n     * Title of the object\n     */\n    title: PropTypes.string,\n    /**\n     * Description of the object\n     */\n    description: PropTypes.string,\n    /**\n     * Child items of the object\n     */\n    items: PropTypes.arrayOf(PropTypes.shape({\n      /**\n       * Title of the item\n       */\n      title: PropTypes.string,\n      /**\n       * Description of the item\n       */\n      description: PropTypes.string,\n      /**\n       * Url of the item\n       */\n      url: PropTypes.string,\n      /**\n       * Image of the item\n       */\n      image: PropTypes.object,\n      /**\n       * Image caption of the item\n       */\n      image_caption: PropTypes.string,\n      /**\n       * Type of the item\n       */\n      '@type': PropTypes.string\n    }))\n  }).isRequired\n};\nexport default AlbumView;","map":{"version":3,"names":["Fragment","useState","PropTypes","Container","SemanticContainer","GridColumn","Segment","Button","Modal","Grid","Icon","UniversalLink","config","openSVG","aheadSVG","backSVG","AlbumView","content","openIndex","setOpenIndex","undefined","closeModal","nextImage","OpenIndex","items","length","prevImage","getComponent","name","component","PreviewImage","__jsx","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","id","title","description","doubling","stackable","columns","map","item","index","key","url","image_field","onClose","open","trigger","Column","alt","image_caption","onClick","responsive","loading","closeIcon","Header","Row","width","textAlign","href","size","fitted","centered","verticalAlign","style","margin","Content","image","Description","propTypes","shape","string","arrayOf","object","isRequired"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/View/AlbumView.jsx"],"sourcesContent":["import { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Container as SemanticContainer,\n  GridColumn,\n  Segment,\n} from 'semantic-ui-react';\nimport { Button, Modal, Grid } from 'semantic-ui-react';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport UniversalLink from '@plone/volto/components/manage/UniversalLink/UniversalLink';\nimport config from '@plone/volto/registry';\n\nimport openSVG from '@plone/volto/icons/open.svg';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst AlbumView = ({ content }) => {\n  const [openIndex, setOpenIndex] = useState(undefined);\n\n  const closeModal = () => {\n    setOpenIndex(-1);\n  };\n\n  const nextImage = () => {\n    let OpenIndex = (openIndex + 1) % content.items.length;\n    setOpenIndex(OpenIndex);\n  };\n  const prevImage = () => {\n    const OpenIndex = (openIndex - 1) % content.items.length;\n    setOpenIndex(OpenIndex);\n  };\n  const Container =\n    config.getComponent({ name: 'Container' }).component || SemanticContainer;\n  const PreviewImage = config.getComponent({ name: 'PreviewImage' }).component;\n  return (\n    <Container className=\"view-wrapper\">\n      <article id=\"content\">\n        <header>\n          <h1 className=\"documentFirstHeading\">{content.title}</h1>\n          {content.description && (\n            <p className=\"documentDescription\">{content.description}</p>\n          )}\n        </header>\n        <section id=\"content-core\">\n          <Grid doubling stackable columns={4}>\n            {content.items &&\n              content.items.map((item, index) => (\n                <Fragment key={item.url}>\n                  {item.image_field && (\n                    <Modal\n                      className=\"gallery\"\n                      onClose={closeModal}\n                      open={openIndex === index}\n                      trigger={\n                        <Grid.Column>\n                          <Segment className=\"imageborder\">\n                            <PreviewImage\n                              item={item}\n                              alt={item.image_caption || item.title}\n                              onClick={() => {\n                                setOpenIndex(index);\n                              }}\n                              className=\"ui middle aligned image\"\n                              responsive={true}\n                              loading=\"lazy\"\n                              title={item.title}\n                            />\n                          </Segment>\n                        </Grid.Column>\n                      }\n                      closeIcon\n                    >\n                      <Modal.Header>\n                        <Grid>\n                          <Grid.Row>\n                            <GridColumn width={10}>{item.title}</GridColumn>\n                            <GridColumn width={2} textAlign=\"right\">\n                              <UniversalLink\n                                href={item.url}\n                                title={item['@type']}\n                                onClick={closeModal}\n                              >\n                                <Icon size=\"30px\" fitted name={openSVG} />\n                              </UniversalLink>\n                            </GridColumn>\n                          </Grid.Row>\n                        </Grid>\n                      </Modal.Header>\n                      <Grid centered verticalAlign=\"middle\">\n                        <Grid.Row>\n                          <Grid.Column width={2} textAlign=\"center\">\n                            <Button\n                              className=\"gallery noborder\"\n                              onClick={prevImage}\n                              style={{ margin: 0 }}\n                            >\n                              <Icon\n                                name={backSVG}\n                                className=\"circled\"\n                                size=\"30px\"\n                                style={{ margin: 0 }}\n                              />\n                            </Button>\n                          </Grid.Column>\n                          <Grid.Column width={8}>\n                            <Modal.Content image>\n                              <PreviewImage\n                                item={item}\n                                alt={item.image_caption}\n                                onClick={() => {\n                                  setOpenIndex(index);\n                                }}\n                                className=\"ui image\"\n                                responsive={true}\n                              />\n\n                              <Modal.Description>\n                                <p>{item.description}</p>\n                              </Modal.Description>\n                            </Modal.Content>\n                          </Grid.Column>\n                          <Grid.Column width={2} textAlign=\"center\">\n                            <Button\n                              onClick={nextImage}\n                              className=\"gallery noborder\"\n                              style={{ margin: 0 }}\n                            >\n                              <Icon\n                                name={aheadSVG}\n                                className=\"circled\"\n                                size=\"30px\"\n                                style={{ margin: 0 }}\n                              />\n                            </Button>\n                          </Grid.Column>\n                        </Grid.Row>\n                      </Grid>\n                    </Modal>\n                  )}\n                </Fragment>\n              ))}\n          </Grid>\n        </section>\n      </article>\n    </Container>\n  );\n};\n\nAlbumView.propTypes = {\n  /**\n   * Content of the object\n   */\n  content: PropTypes.shape({\n    /**\n     * Title of the object\n     */\n    title: PropTypes.string,\n    /**\n     * Description of the object\n     */\n    description: PropTypes.string,\n    /**\n     * Child items of the object\n     */\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        /**\n         * Title of the item\n         */\n        title: PropTypes.string,\n        /**\n         * Description of the item\n         */\n        description: PropTypes.string,\n        /**\n         * Url of the item\n         */\n        url: PropTypes.string,\n        /**\n         * Image of the item\n         */\n        image: PropTypes.object,\n        /**\n         * Image caption of the item\n         */\n        image_caption: PropTypes.string,\n        /**\n         * Type of the item\n         */\n        '@type': PropTypes.string,\n      }),\n    ),\n  }).isRequired,\n};\n\nexport default AlbumView;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}