{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/View/EventDatesInfo.jsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from 'semantic-ui-react';\nimport cx from 'classnames';\nimport { toBackendLang } from '@plone/volto/helpers/Utils/Utils';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { useSelector } from 'react-redux';\nexport const datesForDisplay = (start, end, moment) => {\n  const mStart = moment(start);\n  const mEnd = moment(end);\n  if (!mStart.isValid() || !mEnd.isValid()) {\n    return null;\n  }\n  const sameDay = mStart.isSame(mEnd, 'day');\n  const sameTime = mStart.isSame(mEnd, 'minute');\n  return {\n    sameDay,\n    sameTime,\n    startDate: mStart.format('ll'),\n    startTime: mStart.format('LT'),\n    endDate: mEnd.format('ll'),\n    endTime: mEnd.format('LT')\n  };\n};\nconst When_ = ({\n  start,\n  end,\n  whole_day,\n  open_end,\n  moment: momentlib\n}) => {\n  _s();\n  const lang = useSelector(state => state.intl.locale);\n  const moment = momentlib.default;\n  moment.locale(toBackendLang(lang));\n  const datesInfo = datesForDisplay(start, end, moment);\n  if (!datesInfo) {\n    return;\n  }\n  // TODO I18N INTL\n  return __jsx(\"p\", {\n    className: cx('event-when', {\n      'same-day': datesInfo.sameDay,\n      'same-time': datesInfo.sameTime,\n      'whole-day': whole_day,\n      'open-end': open_end\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, !datesInfo.sameDay ? __jsx(React.Fragment, null, __jsx(\"span\", {\n    className: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"start-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, datesInfo.startDate), !whole_day && __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \" \"), __jsx(\"span\", {\n    className: \"start-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, datesInfo.startTime))), !open_end && __jsx(React.Fragment, null, \"\\xA0to\\xA0\", __jsx(\"span\", {\n    className: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    className: \"end-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, datesInfo.endDate), !whole_day && __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \" \"), __jsx(\"span\", {\n    className: \"end-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, datesInfo.endTime))))) : __jsx(React.Fragment, null, whole_day && __jsx(\"span\", {\n    className: \"start-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, datesInfo.startDate), open_end && !whole_day && __jsx(React.Fragment, null, __jsx(\"span\", {\n    className: \"start-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, datesInfo.startDate), \"\\xA0from\\xA0\", __jsx(\"span\", {\n    className: \"start-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, datesInfo.startTime)), !(whole_day || open_end) && __jsx(React.Fragment, null, __jsx(\"span\", {\n    className: \"start-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, datesInfo.startDate), \"\\xA0from\\xA0\", __jsx(\"span\", {\n    className: \"start-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, datesInfo.startTime), \"\\xA0to\\xA0\", __jsx(\"span\", {\n    className: \"end-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, datesInfo.endTime))));\n};\n_s(When_, \"YX9svgYxZ8mkOt/FPg3Kqpt9At4=\", false, function () {\n  return [useSelector];\n});\n_c = When_;\nexport const When = injectLazyLibs(['moment'])(When_);\nWhen.propTypes = {\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string,\n  whole_day: PropTypes.bool,\n  open_end: PropTypes.bool\n};\nexport const Recurrence_ = ({\n  recurrence,\n  start,\n  moment: momentlib,\n  rrule\n}) => {\n  const moment = momentlib.default;\n  const {\n    RRule,\n    rrulestr\n  } = rrule;\n  if (recurrence.indexOf('DTSTART') < 0) {\n    var dtstart = RRule.optionsToString({\n      dtstart: new Date(start)\n    });\n    recurrence = dtstart + '\\n' + recurrence;\n  }\n  const rule = rrulestr(recurrence, {\n    unfold: true,\n    forceset: true\n  });\n  return __jsx(List, {\n    items: rule.all().map(date => datesForDisplay(date, undefined, moment)).map(date => date.startDate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  });\n};\n_c2 = Recurrence_;\nexport const Recurrence = injectLazyLibs(['moment', 'rrule'])(Recurrence_);\nRecurrence.propTypes = {\n  recurrence: PropTypes.string.isRequired,\n  start: PropTypes.string.isRequired\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"When_\");\n$RefreshReg$(_c2, \"Recurrence_\");","map":{"version":3,"names":["React","PropTypes","List","cx","toBackendLang","injectLazyLibs","useSelector","datesForDisplay","start","end","moment","mStart","mEnd","isValid","sameDay","isSame","sameTime","startDate","format","startTime","endDate","endTime","When_","whole_day","open_end","momentlib","_s","lang","state","intl","locale","default","datesInfo","__jsx","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","_c","When","propTypes","string","isRequired","bool","Recurrence_","recurrence","rrule","RRule","rrulestr","indexOf","dtstart","optionsToString","Date","rule","unfold","forceset","items","all","map","date","undefined","_c2","Recurrence","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/View/EventDatesInfo.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from 'semantic-ui-react';\nimport cx from 'classnames';\n\nimport { toBackendLang } from '@plone/volto/helpers/Utils/Utils';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { useSelector } from 'react-redux';\n\nexport const datesForDisplay = (start, end, moment) => {\n  const mStart = moment(start);\n  const mEnd = moment(end);\n  if (!mStart.isValid() || !mEnd.isValid()) {\n    return null;\n  }\n  const sameDay = mStart.isSame(mEnd, 'day');\n  const sameTime = mStart.isSame(mEnd, 'minute');\n  return {\n    sameDay,\n    sameTime,\n    startDate: mStart.format('ll'),\n    startTime: mStart.format('LT'),\n    endDate: mEnd.format('ll'),\n    endTime: mEnd.format('LT'),\n  };\n};\n\nconst When_ = ({ start, end, whole_day, open_end, moment: momentlib }) => {\n  const lang = useSelector((state) => state.intl.locale);\n\n  const moment = momentlib.default;\n  moment.locale(toBackendLang(lang));\n\n  const datesInfo = datesForDisplay(start, end, moment);\n  if (!datesInfo) {\n    return;\n  }\n  // TODO I18N INTL\n  return (\n    <p\n      className={cx('event-when', {\n        'same-day': datesInfo.sameDay,\n        'same-time': datesInfo.sameTime,\n        'whole-day': whole_day,\n        'open-end': open_end,\n      })}\n    >\n      {!datesInfo.sameDay ? (\n        <>\n          <span className=\"start\">\n            <span className=\"start-date\">{datesInfo.startDate}</span>\n            {!whole_day && (\n              <>\n                {/* Plone has an optional word based on locale here */}\n                <span> </span>\n                <span className=\"start-time\">{datesInfo.startTime}</span>\n              </>\n            )}\n          </span>\n          {!open_end && (\n            <>\n              &nbsp;to&nbsp;\n              <span className=\"end\">\n                <span className=\"end-date\">{datesInfo.endDate}</span>\n                {!whole_day && (\n                  <>\n                    {/* Plone has an optional word based on locale here */}\n                    <span> </span>\n                    <span className=\"end-time\">{datesInfo.endTime}</span>\n                  </>\n                )}\n              </span>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          {whole_day && (\n            <span className=\"start-date\">{datesInfo.startDate}</span>\n          )}\n          {open_end && !whole_day && (\n            <>\n              <span className=\"start-date\">{datesInfo.startDate}</span>\n              &nbsp;from&nbsp;\n              <span className=\"start-time\">{datesInfo.startTime}</span>\n            </>\n          )}\n          {!(whole_day || open_end) && (\n            <>\n              <span className=\"start-date\">{datesInfo.startDate}</span>\n              &nbsp;from&nbsp;\n              <span className=\"start-time\">{datesInfo.startTime}</span>\n              &nbsp;to&nbsp;\n              <span className=\"end-time\">{datesInfo.endTime}</span>\n            </>\n          )}\n        </>\n      )}\n    </p>\n  );\n};\n\nexport const When = injectLazyLibs(['moment'])(When_);\n\nWhen.propTypes = {\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string,\n  whole_day: PropTypes.bool,\n  open_end: PropTypes.bool,\n};\n\nexport const Recurrence_ = ({\n  recurrence,\n  start,\n  moment: momentlib,\n  rrule,\n}) => {\n  const moment = momentlib.default;\n  const { RRule, rrulestr } = rrule;\n  if (recurrence.indexOf('DTSTART') < 0) {\n    var dtstart = RRule.optionsToString({\n      dtstart: new Date(start),\n    });\n    recurrence = dtstart + '\\n' + recurrence;\n  }\n  const rule = rrulestr(recurrence, { unfold: true, forceset: true });\n\n  return (\n    <List\n      items={rule\n        .all()\n        .map((date) => datesForDisplay(date, undefined, moment))\n        .map((date) => date.startDate)}\n    />\n  );\n};\nexport const Recurrence = injectLazyLibs(['moment', 'rrule'])(Recurrence_);\n\nRecurrence.propTypes = {\n  recurrence: PropTypes.string.isRequired,\n  start: PropTypes.string.isRequired,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}