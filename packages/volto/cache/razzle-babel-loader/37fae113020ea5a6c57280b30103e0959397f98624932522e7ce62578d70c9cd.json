{"ast":null,"code":"import _extends from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectWithoutProperties from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"element\", \"attributes\", \"extras\"],\n  _excluded2 = [\"children\"];\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto-slate/src/editor/render.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { Node, Text } from 'slate';\nimport cx from 'classnames';\nimport isEmpty from 'lodash/isEmpty';\nimport omit from 'lodash/omit';\nimport UniversalLink from '@plone/volto/components/manage/UniversalLink/UniversalLink';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport { messages } from '@plone/volto/helpers/MessageLabels/MessageLabels';\nimport { addAppURL } from '@plone/volto/helpers/Url/Url';\nimport useClipboard from '@plone/volto/hooks/clipboard/useClipboard';\nimport config from '@plone/volto/registry';\nimport linkSVG from '@plone/volto/icons/link.svg';\nimport './less/slate.less';\nconst OMITTED = ['editor', 'path'];\n\n// TODO: read, see if relevant\n// https://reactjs.org/docs/higher-order-components.html#dont-use-hocs-inside-the-render-method\nexport const Element = _ref => {\n  let {\n      element,\n      attributes = {},\n      extras\n    } = _ref,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  const {\n    slate\n  } = config.settings;\n  const {\n    elements\n  } = slate;\n  const El = elements[element.type] || elements['default'];\n  const attrs = Object.assign(element.styleName ? {\n    className: element.styleName\n  } : {}, ...Object.keys(attributes || {}).map(k => !isEmpty(attributes[k]) ? {\n    [k]: attributes[k]\n  } : {}));\n  attrs.ref = attributes === null || attributes === void 0 ? void 0 : attributes.ref; // never remove the ref\n\n  return __jsx(El, _extends({\n    element: element\n  }, omit(rest, OMITTED), {\n    attributes: attrs,\n    extras: extras,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }));\n};\n_c = Element;\nexport const Leaf = _ref2 => {\n  let {\n      children\n    } = _ref2,\n    rest = _objectWithoutProperties(_ref2, _excluded2);\n  const {\n    attributes,\n    leaf,\n    mode\n  } = rest;\n  let {\n    leafs\n  } = config.settings.slate;\n  children = Object.keys(leafs).reduce((acc, name) => {\n    return Object.keys(leaf).includes(name) ? leafs[name]({\n      children: acc\n    }) : acc;\n  }, children);\n  const classNames = {\n    [`highlight-${leaf.highlightType}`]: mode !== 'view' && leaf.highlightType,\n    'highlight-selection': mode !== 'view' && leaf.isSelection\n  };\n\n  // stylemenu support\n  for (const prop in leaf) {\n    if (prop.startsWith('style-')) {\n      classNames[prop.substring(6)] = true;\n    }\n  }\n  const klass = cx(classNames);\n  return mode === 'view' ? typeof children === 'string' ? children.split('\\n').map((t, i) => {\n    // Softbreak support. Should do a plugin?\n    return __jsx(React.Fragment, {\n      key: `${i}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, children.indexOf('\\n') > -1 && children.split('\\n').length - 1 > i ? __jsx(React.Fragment, null, klass ? __jsx(\"span\", {\n      className: klass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 26\n      }\n    }, t) : t, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    })) : klass ? __jsx(\"span\", {\n      className: klass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, t) : t);\n  }) : __jsx(\"span\", {\n    className: klass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, children) : __jsx(\"span\", _extends({}, attributes, {\n    className: klass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }), children);\n};\n_c2 = Leaf;\nconst serializeData = node => {\n  return JSON.stringify({\n    type: node.type,\n    data: node.data\n  });\n};\nexport const serializeNodes = (nodes, getAttributes, extras = {}) => {\n  const editor = {\n    children: nodes || []\n  };\n  const _serializeNodes = nodes => {\n    return (nodes || []).map(([node, path], i) => {\n      return Text.isText(node) ? __jsx(Leaf, {\n        path: path,\n        leaf: node,\n        text: node,\n        mode: \"view\",\n        key: path,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, node.text) : __jsx(Element, {\n        path: path,\n        element: node,\n        mode: \"view\",\n        key: path,\n        \"data-slate-data\": node.data ? serializeData(node) : null,\n        attributes: getAttributes ? getAttributes(node, path) : null,\n        extras: extras,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }, _serializeNodes(Array.from(Node.children(editor, path))));\n    });\n  };\n  return _serializeNodes(Array.from(Node.children(editor, [])));\n};\n\n/**\n * Get the concatenated text string of a node's content.\n *\n * Note that this WILL include spaces between block node leafs in contrary to\n * the original slate method. This function joins text of nodes with\n * separating spaces to produce a string for indexing purposes.\n *\n */\nconst ConcatenatedString = node => {\n  if (Text.isText(node)) {\n    return node.text.trim();\n  } else {\n    return node.children.map(ConcatenatedString).join(' ');\n  }\n};\n\n/**\n * @function serializeNodesToText\n *\n * @param {Array[Node]} nodes\n *\n * @returns {string}\n */\n_c3 = ConcatenatedString;\nexport const serializeNodesToText = nodes => {\n  return nodes.map(ConcatenatedString).join('\\n');\n};\nexport const serializeNodesToHtml = nodes => renderToStaticMarkup(serializeNodes(nodes));\nexport const renderLinkElement = tagName => {\n  var _s = $RefreshSig$();\n  function LinkElement({\n    attributes,\n    children,\n    mode = 'edit',\n    className = null\n  }) {\n    _s();\n    const {\n      slate = {}\n    } = config.settings;\n    const Tag = tagName;\n    const slug = attributes.id || '';\n    const location = useLocation();\n    const token = useSelector(state => state.userSession.token);\n    const appPathname = addAppURL(location.pathname);\n    // eslint-disable-next-line no-unused-vars\n    const [copied, copy, setCopied] = useClipboard(appPathname.concat(`#${slug}`));\n    const intl = useIntl();\n    return !token || slate.useLinkedHeadings === false ? __jsx(Tag, _extends({}, attributes, {\n      className: className,\n      tabIndex: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }\n    }), children) : __jsx(Tag, _extends({}, attributes, {\n      className: className,\n      tabIndex: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }\n    }), children, mode === 'view' && slug && __jsx(UniversalLink, {\n      className: \"anchor\",\n      \"aria-hidden\": \"true\",\n      tabIndex: -1,\n      href: `#${slug}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }, __jsx(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, `\n              a.anchor svg {\n                height: var(--anchor-svg-height, 24px);\n              }\n              `), __jsx(\"svg\", _extends({}, linkSVG.attributes, {\n      dangerouslySetInnerHTML: {\n        __html: linkSVG.content\n      },\n      height: null,\n      onClick: () => {\n        copy();\n        toast.info(__jsx(Toast, {\n          info: true,\n          title: intl.formatMessage(messages.success),\n          content: intl.formatMessage(messages.urlClipboardCopy),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 19\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }))));\n  }\n  _s(LinkElement, \"l0poOHM32nLAgtmg4pbfCHFzptg=\", false, function () {\n    return [useLocation, useSelector, useClipboard, useIntl];\n  });\n  LinkElement.displayName = `${tagName}LinkElement`;\n  return LinkElement;\n};\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Element\");\n$RefreshReg$(_c2, \"Leaf\");\n$RefreshReg$(_c3, \"ConcatenatedString\");","map":{"version":3,"names":["React","renderToStaticMarkup","useLocation","toast","useIntl","useSelector","Node","Text","cx","isEmpty","omit","UniversalLink","Toast","messages","addAppURL","useClipboard","config","linkSVG","OMITTED","Element","_ref","element","attributes","extras","rest","_objectWithoutProperties","_excluded","slate","settings","elements","El","type","attrs","Object","assign","styleName","className","keys","map","k","ref","__jsx","_extends","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_c","Leaf","_ref2","children","_excluded2","leaf","mode","leafs","reduce","acc","name","includes","classNames","highlightType","isSelection","prop","startsWith","substring","klass","split","t","i","Fragment","key","indexOf","length","_c2","serializeData","node","JSON","stringify","data","serializeNodes","nodes","getAttributes","editor","_serializeNodes","path","isText","text","Array","from","ConcatenatedString","trim","join","_c3","serializeNodesToText","serializeNodesToHtml","renderLinkElement","tagName","_s","$RefreshSig$","LinkElement","Tag","slug","id","location","token","state","userSession","appPathname","pathname","copied","copy","setCopied","concat","intl","useLinkedHeadings","tabIndex","href","dangerouslySetInnerHTML","__html","content","height","onClick","info","title","formatMessage","success","urlClipboardCopy","displayName","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto-slate/src/editor/render.jsx"],"sourcesContent":["import React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { Node, Text } from 'slate';\nimport cx from 'classnames';\nimport isEmpty from 'lodash/isEmpty';\nimport omit from 'lodash/omit';\nimport UniversalLink from '@plone/volto/components/manage/UniversalLink/UniversalLink';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport { messages } from '@plone/volto/helpers/MessageLabels/MessageLabels';\nimport { addAppURL } from '@plone/volto/helpers/Url/Url';\nimport useClipboard from '@plone/volto/hooks/clipboard/useClipboard';\nimport config from '@plone/volto/registry';\nimport linkSVG from '@plone/volto/icons/link.svg';\n\nimport './less/slate.less';\n\nconst OMITTED = ['editor', 'path'];\n\n// TODO: read, see if relevant\n// https://reactjs.org/docs/higher-order-components.html#dont-use-hocs-inside-the-render-method\nexport const Element = ({ element, attributes = {}, extras, ...rest }) => {\n  const { slate } = config.settings;\n  const { elements } = slate;\n  const El = elements[element.type] || elements['default'];\n\n  const attrs = Object.assign(\n    element.styleName ? { className: element.styleName } : {},\n    ...Object.keys(attributes || {}).map((k) =>\n      !isEmpty(attributes[k]) ? { [k]: attributes[k] } : {},\n    ),\n  );\n  attrs.ref = attributes?.ref; // never remove the ref\n\n  return (\n    <El\n      element={element}\n      {...omit(rest, OMITTED)}\n      attributes={attrs}\n      extras={extras}\n    />\n  );\n};\n\nexport const Leaf = ({ children, ...rest }) => {\n  const { attributes, leaf, mode } = rest;\n  let { leafs } = config.settings.slate;\n\n  children = Object.keys(leafs).reduce((acc, name) => {\n    return Object.keys(leaf).includes(name)\n      ? leafs[name]({ children: acc })\n      : acc;\n  }, children);\n\n  const classNames = {\n    [`highlight-${leaf.highlightType}`]: mode !== 'view' && leaf.highlightType,\n    'highlight-selection': mode !== 'view' && leaf.isSelection,\n  };\n\n  // stylemenu support\n  for (const prop in leaf) {\n    if (prop.startsWith('style-')) {\n      classNames[prop.substring(6)] = true;\n    }\n  }\n\n  const klass = cx(classNames);\n\n  return mode === 'view' ? (\n    typeof children === 'string' ? (\n      children.split('\\n').map((t, i) => {\n        // Softbreak support. Should do a plugin?\n        return (\n          <React.Fragment key={`${i}`}>\n            {children.indexOf('\\n') > -1 &&\n            children.split('\\n').length - 1 > i ? (\n              <>\n                {klass ? <span className={klass}>{t}</span> : t}\n                <br />\n              </>\n            ) : klass ? (\n              <span className={klass}>{t}</span>\n            ) : (\n              t\n            )}\n          </React.Fragment>\n        );\n      })\n    ) : (\n      <span className={klass}>{children}</span>\n    )\n  ) : (\n    <span {...attributes} className={klass}>\n      {children}\n    </span>\n  );\n};\n\nconst serializeData = (node) => {\n  return JSON.stringify({ type: node.type, data: node.data });\n};\n\nexport const serializeNodes = (nodes, getAttributes, extras = {}) => {\n  const editor = { children: nodes || [] };\n\n  const _serializeNodes = (nodes) => {\n    return (nodes || []).map(([node, path], i) => {\n      return Text.isText(node) ? (\n        <Leaf path={path} leaf={node} text={node} mode=\"view\" key={path}>\n          {node.text}\n        </Leaf>\n      ) : (\n        <Element\n          path={path}\n          element={node}\n          mode=\"view\"\n          key={path}\n          data-slate-data={node.data ? serializeData(node) : null}\n          attributes={getAttributes ? getAttributes(node, path) : null}\n          extras={extras}\n        >\n          {_serializeNodes(Array.from(Node.children(editor, path)))}\n        </Element>\n      );\n    });\n  };\n\n  return _serializeNodes(Array.from(Node.children(editor, [])));\n};\n\n/**\n * Get the concatenated text string of a node's content.\n *\n * Note that this WILL include spaces between block node leafs in contrary to\n * the original slate method. This function joins text of nodes with\n * separating spaces to produce a string for indexing purposes.\n *\n */\nconst ConcatenatedString = (node) => {\n  if (Text.isText(node)) {\n    return node.text.trim();\n  } else {\n    return node.children.map(ConcatenatedString).join(' ');\n  }\n};\n\n/**\n * @function serializeNodesToText\n *\n * @param {Array[Node]} nodes\n *\n * @returns {string}\n */\nexport const serializeNodesToText = (nodes) => {\n  return nodes.map(ConcatenatedString).join('\\n');\n};\n\nexport const serializeNodesToHtml = (nodes) =>\n  renderToStaticMarkup(serializeNodes(nodes));\n\nexport const renderLinkElement = (tagName) => {\n  function LinkElement({\n    attributes,\n    children,\n    mode = 'edit',\n    className = null,\n  }) {\n    const { slate = {} } = config.settings;\n    const Tag = tagName;\n    const slug = attributes.id || '';\n    const location = useLocation();\n    const token = useSelector((state) => state.userSession.token);\n    const appPathname = addAppURL(location.pathname);\n    // eslint-disable-next-line no-unused-vars\n    const [copied, copy, setCopied] = useClipboard(\n      appPathname.concat(`#${slug}`),\n    );\n    const intl = useIntl();\n    return !token || slate.useLinkedHeadings === false ? (\n      <Tag {...attributes} className={className} tabIndex={0}>\n        {children}\n      </Tag>\n    ) : (\n      <Tag {...attributes} className={className} tabIndex={0}>\n        {children}\n        {mode === 'view' && slug && (\n          <UniversalLink\n            className=\"anchor\"\n            aria-hidden=\"true\"\n            tabIndex={-1}\n            href={`#${slug}`}\n          >\n            <style>\n              {/* Prettify the unstyled flash of the link icon on development */}\n              {`\n              a.anchor svg {\n                height: var(--anchor-svg-height, 24px);\n              }\n              `}\n            </style>\n            <svg\n              {...linkSVG.attributes}\n              dangerouslySetInnerHTML={{ __html: linkSVG.content }}\n              height={null}\n              onClick={() => {\n                copy();\n\n                toast.info(\n                  <Toast\n                    info\n                    title={intl.formatMessage(messages.success)}\n                    content={intl.formatMessage(messages.urlClipboardCopy)}\n                  />,\n                );\n              }}\n            ></svg>\n          </UniversalLink>\n        )}\n      </Tag>\n    );\n  }\n  LinkElement.displayName = `${tagName}LinkElement`;\n  return LinkElement;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}