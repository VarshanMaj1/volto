{"ast":null,"code":"import _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/**\n * Layouts.\n * @module constants/Workflows\n */\n\nimport config from '@plone/volto/registry';\nimport last from 'lodash/last';\nimport split from 'lodash/split';\n\n/**\n * Maps the available transitions to the current list of colors and returns a\n * react-select option object\n * @param  {Object} transition\n *  {id: \"published\", title: \"Published\"}\n * @return {Object} The react-select options object\n *  { value: 'published', label: 'Published', color: '#007bc1' }\n */\nexport function getCurrentStateMapping(state) {\n  const mapping = config.settings.workflowMapping;\n  if (state.id in mapping) {\n    return _objectSpread({\n      label: state.title\n    }, mapping[state.id]);\n  }\n\n  // Return an option with a neutral color\n  return {\n    value: state.id,\n    label: state.title,\n    color: '#000'\n  };\n}\n\n/**\n * Maps the available transitions to the current list of colors and returns a\n * react-select option object\n * @param  {Object} transition\n *  {\n *     '@id': 'http://localhost:3000/de/@workflow/publish',\n *     title: 'Veröffentlichen'\n *  }\n * @return {Object} The react-select options object\n *  { value: 'public', label: 'Published', color: '#007bc1', url: 'http://localhost:3000/de/@workflow/publish' }\n */\nexport function getWorkflowOptions(transition) {\n  const mapping = config.settings.workflowMapping;\n  const key = last(split(transition['@id'], '/'));\n  if (key in mapping) {\n    return _objectSpread(_objectSpread({\n      label: transition.title\n    }, mapping[key]), {}, {\n      url: transition['@id']\n    });\n  }\n\n  // Return an option with a neutral color\n  return {\n    value: key,\n    label: transition.title,\n    color: '#000',\n    url: transition['@id']\n  };\n}","map":{"version":3,"names":["config","last","split","getCurrentStateMapping","state","mapping","settings","workflowMapping","id","_objectSpread","label","title","value","color","getWorkflowOptions","transition","key","url"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/helpers/Workflows/Workflows.js"],"sourcesContent":["/**\n * Layouts.\n * @module constants/Workflows\n */\n\nimport config from '@plone/volto/registry';\nimport last from 'lodash/last';\nimport split from 'lodash/split';\n\n/**\n * Maps the available transitions to the current list of colors and returns a\n * react-select option object\n * @param  {Object} transition\n *  {id: \"published\", title: \"Published\"}\n * @return {Object} The react-select options object\n *  { value: 'published', label: 'Published', color: '#007bc1' }\n */\nexport function getCurrentStateMapping(state) {\n  const mapping = config.settings.workflowMapping;\n\n  if (state.id in mapping) {\n    return { label: state.title, ...mapping[state.id] };\n  }\n\n  // Return an option with a neutral color\n  return {\n    value: state.id,\n    label: state.title,\n    color: '#000',\n  };\n}\n\n/**\n * Maps the available transitions to the current list of colors and returns a\n * react-select option object\n * @param  {Object} transition\n *  {\n *     '@id': 'http://localhost:3000/de/@workflow/publish',\n *     title: 'Veröffentlichen'\n *  }\n * @return {Object} The react-select options object\n *  { value: 'public', label: 'Published', color: '#007bc1', url: 'http://localhost:3000/de/@workflow/publish' }\n */\nexport function getWorkflowOptions(transition) {\n  const mapping = config.settings.workflowMapping;\n  const key = last(split(transition['@id'], '/'));\n\n  if (key in mapping) {\n    return { label: transition.title, ...mapping[key], url: transition['@id'] };\n  }\n\n  // Return an option with a neutral color\n  return {\n    value: key,\n    label: transition.title,\n    color: '#000',\n    url: transition['@id'],\n  };\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA,OAAOA,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,KAAK,MAAM,cAAc;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,sBAAsBA,CAACC,KAAK,EAAE;EAC5C,MAAMC,OAAO,GAAGL,MAAM,CAACM,QAAQ,CAACC,eAAe;EAE/C,IAAIH,KAAK,CAACI,EAAE,IAAIH,OAAO,EAAE;IACvB,OAAAI,aAAA;MAASC,KAAK,EAAEN,KAAK,CAACO;IAAK,GAAKN,OAAO,CAACD,KAAK,CAACI,EAAE,CAAC;EACnD;;EAEA;EACA,OAAO;IACLI,KAAK,EAAER,KAAK,CAACI,EAAE;IACfE,KAAK,EAAEN,KAAK,CAACO,KAAK;IAClBE,KAAK,EAAE;EACT,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,kBAAkBA,CAACC,UAAU,EAAE;EAC7C,MAAMV,OAAO,GAAGL,MAAM,CAACM,QAAQ,CAACC,eAAe;EAC/C,MAAMS,GAAG,GAAGf,IAAI,CAACC,KAAK,CAACa,UAAU,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;EAE/C,IAAIC,GAAG,IAAIX,OAAO,EAAE;IAClB,OAAAI,aAAA,CAAAA,aAAA;MAASC,KAAK,EAAEK,UAAU,CAACJ;IAAK,GAAKN,OAAO,CAACW,GAAG,CAAC;MAAEC,GAAG,EAAEF,UAAU,CAAC,KAAK;IAAC;EAC3E;;EAEA;EACA,OAAO;IACLH,KAAK,EAAEI,GAAG;IACVN,KAAK,EAAEK,UAAU,CAACJ,KAAK;IACvBE,KAAK,EAAE,MAAM;IACbI,GAAG,EAAEF,UAAU,CAAC,KAAK;EACvB,CAAC;AACH","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}