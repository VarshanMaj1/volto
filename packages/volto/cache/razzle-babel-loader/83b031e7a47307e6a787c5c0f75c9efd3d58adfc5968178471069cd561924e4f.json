{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport TableBlockEdit from './TableBlockEdit';\nimport TableBlockView from './TableBlockView';\nimport { extractTables } from './deconstruct';\nimport { normalizeTable } from './extensions/normalizeTable';\nimport { normalizeExternalData } from '../Text/extensions';\nimport tableSVG from '@plone/volto/icons/table.svg';\n\n/**\n * @summary Called from Volto to configure new or existing Volto block types.\n * @param {object} config The object received from Volto containing the\n * configuration for all the blocks.\n */\nexport default function install(config) {\n  config.settings.slate = _objectSpread(_objectSpread({}, config.settings.slate), {}, {\n    voltoBlockEmiters: [...(config.settings.slate.voltoBlockEmiters || []), extractTables],\n    tableblockExtensions: [\n    // First here gets executed last\n    // withLists,\n    // withSplitBlocksOnBreak,\n    // withDeleteSelectionOnEnter,\n    // withDeserializers,\n    // breakList,\n    normalizeTable, normalizeExternalData]\n  });\n  const tableBlockConfig = {\n    id: 'table',\n    title: 'Table',\n    icon: tableSVG,\n    group: 'common',\n    view: TableBlockView,\n    edit: TableBlockEdit,\n    restricted: false,\n    mostUsed: false,\n    blockHasOwnFocusManagement: true,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: []\n    }\n    // blockHasValue: (data) => {\n    //   return true;\n    // },\n  };\n  config.blocks.blocksConfig.slateTable = _objectSpread(_objectSpread({}, tableBlockConfig), {}, {\n    id: 'slateTable'\n  });\n  return config;\n}","map":{"version":3,"names":["TableBlockEdit","TableBlockView","extractTables","normalizeTable","normalizeExternalData","tableSVG","install","config","settings","slate","_objectSpread","voltoBlockEmiters","tableblockExtensions","tableBlockConfig","id","title","icon","group","view","edit","restricted","mostUsed","blockHasOwnFocusManagement","sidebarTab","security","addPermission","blocks","blocksConfig","slateTable"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto-slate/src/blocks/Table/index.js"],"sourcesContent":["import TableBlockEdit from './TableBlockEdit';\nimport TableBlockView from './TableBlockView';\nimport { extractTables } from './deconstruct';\nimport { normalizeTable } from './extensions/normalizeTable';\nimport { normalizeExternalData } from '../Text/extensions';\n\nimport tableSVG from '@plone/volto/icons/table.svg';\n\n/**\n * @summary Called from Volto to configure new or existing Volto block types.\n * @param {object} config The object received from Volto containing the\n * configuration for all the blocks.\n */\nexport default function install(config) {\n  config.settings.slate = {\n    ...config.settings.slate,\n    voltoBlockEmiters: [\n      ...(config.settings.slate.voltoBlockEmiters || []),\n      extractTables,\n    ],\n    tableblockExtensions: [\n      // First here gets executed last\n      // withLists,\n      // withSplitBlocksOnBreak,\n      // withDeleteSelectionOnEnter,\n      // withDeserializers,\n      // breakList,\n      normalizeTable,\n      normalizeExternalData,\n    ],\n  };\n\n  const tableBlockConfig = {\n    id: 'table',\n    title: 'Table',\n    icon: tableSVG,\n    group: 'common',\n    view: TableBlockView,\n    edit: TableBlockEdit,\n    restricted: false,\n    mostUsed: false,\n    blockHasOwnFocusManagement: true,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n    // blockHasValue: (data) => {\n    //   return true;\n    // },\n  };\n\n  config.blocks.blocksConfig.slateTable = {\n    ...tableBlockConfig,\n    id: 'slateTable',\n  };\n\n  return config;\n}\n"],"mappings":";;;;;AAAA,OAAOA,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,aAAa,QAAQ,eAAe;AAC7C,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,qBAAqB,QAAQ,oBAAoB;AAE1D,OAAOC,QAAQ,MAAM,8BAA8B;;AAEnD;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,OAAOA,CAACC,MAAM,EAAE;EACtCA,MAAM,CAACC,QAAQ,CAACC,KAAK,GAAAC,aAAA,CAAAA,aAAA,KAChBH,MAAM,CAACC,QAAQ,CAACC,KAAK;IACxBE,iBAAiB,EAAE,CACjB,IAAIJ,MAAM,CAACC,QAAQ,CAACC,KAAK,CAACE,iBAAiB,IAAI,EAAE,CAAC,EAClDT,aAAa,CACd;IACDU,oBAAoB,EAAE;IACpB;IACA;IACA;IACA;IACA;IACA;IACAT,cAAc,EACdC,qBAAqB;EACtB,EACF;EAED,MAAMS,gBAAgB,GAAG;IACvBC,EAAE,EAAE,OAAO;IACXC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAEX,QAAQ;IACdY,KAAK,EAAE,QAAQ;IACfC,IAAI,EAAEjB,cAAc;IACpBkB,IAAI,EAAEnB,cAAc;IACpBoB,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,KAAK;IACfC,0BAA0B,EAAE,IAAI;IAChCC,UAAU,EAAE,CAAC;IACbC,QAAQ,EAAE;MACRC,aAAa,EAAE,EAAE;MACjBP,IAAI,EAAE;IACR;IACA;IACA;IACA;EACF,CAAC;EAEDX,MAAM,CAACmB,MAAM,CAACC,YAAY,CAACC,UAAU,GAAAlB,aAAA,CAAAA,aAAA,KAChCG,gBAAgB;IACnBC,EAAE,EAAE;EAAY,EACjB;EAED,OAAOP,MAAM;AACf","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}