{"ast":null,"code":"import _extends from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Widgets/ObjectListWidget.jsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Accordion, Button, Segment } from 'semantic-ui-react';\nimport DragDropList from '@plone/volto/components/manage/DragDropList/DragDropList';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport FormFieldWrapper from '@plone/volto/components/manage/Widgets/FormFieldWrapper';\nimport { applySchemaDefaults } from '@plone/volto/helpers/Blocks/Blocks';\nimport { reorderArray } from '@plone/volto/helpers/Utils/Utils';\nimport ObjectWidget from '@plone/volto/components/manage/Widgets/ObjectWidget';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport addSVG from '@plone/volto/icons/add.svg';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport { v4 as uuid } from 'uuid';\nconst messages = defineMessages({\n  labelRemoveItem: {\n    \"id\": \"Remove item\",\n    \"defaultMessage\": \"Remove item\"\n  },\n  labelCollapseItem: {\n    \"id\": \"Collapse item\",\n    \"defaultMessage\": \"Collapse item\"\n  },\n  labelShowItem: {\n    \"id\": \"Show item\",\n    \"defaultMessage\": \"Show item\"\n  },\n  emptyObjectList: {\n    \"id\": \"Empty object list\",\n    \"defaultMessage\": \"Empty object list\"\n  },\n  add: {\n    \"id\": \"Add (object list)\",\n    \"defaultMessage\": \"Add\"\n  }\n});\n\n/**\n * This is a DataGridField-equivalent widget for schema-based values.\n * The shape of the items in the array is defined using a schema.\n *\n * ObjectListWidget can receive an optional `schemaExtender` prop which is\n * a function that can mutate the schema for each individual item in the array.\n * An example schema definition of the a field that renders with the\n * ObjectListWidget:\n *\n * ```jsx\n *  columns: {\n *    title: 'Columns',\n *    description: 'Leave empty to show all columns',\n *    schema: SomeItemSchema,\n *    widget: 'object_list',\n *    schemaExtender: (schema, data) => {\n *      const mutated = lodash.cloneDeep(schema);\n *      mutated.properties.extraField = {\n *        title: 'Extra field',\n *      }\n *      mutated.fieldsets[0].fields.push('extraField');\n *      return mutated;\n *    },\n *    activeObject: 0, // Current active object drilled down from the schema (if present)\n *    setActiveObject: () => {} // The current active object state updater function drilled down from the schema (if present)\n *  },\n * ```\n */\nconst ObjectListWidget = props => {\n  _s();\n  var _props$activeObject;\n  const {\n    block,\n    fieldSet,\n    id,\n    schema,\n    value = [],\n    onChange,\n    schemaExtender\n  } = props;\n  const [localActiveObject, setLocalActiveObject] = React.useState((_props$activeObject = props.activeObject) !== null && _props$activeObject !== void 0 ? _props$activeObject : value.length - 1);\n  let activeObject, setActiveObject;\n  if ((props.activeObject || props.activeObject === 0) && props.setActiveObject) {\n    activeObject = props.activeObject;\n    setActiveObject = props.setActiveObject;\n  } else {\n    activeObject = localActiveObject;\n    setActiveObject = setLocalActiveObject;\n  }\n  const intl = useIntl();\n  function handleChangeActiveObject(e, blockProps) {\n    const {\n      index\n    } = blockProps;\n    const newIndex = activeObject === index ? -1 : index;\n    setActiveObject(newIndex);\n  }\n  const objectSchema = typeof schema === 'function' ? schema(props) : schema;\n  const topLayerShadow = '0 1px 1px rgba(0,0,0,0.15)';\n  const secondLayer = ', 0 10px 0 -5px #eee, 0 10px 1px -4px rgba(0,0,0,0.15)';\n  const thirdLayer = ', 0 20px 0 -10px #eee, 0 20px 1px -9px rgba(0,0,0,0.15)';\n  return __jsx(\"div\", {\n    className: \"objectlist-widget\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, __jsx(FormFieldWrapper, _extends({}, props, {\n    noForInFieldLabel: true,\n    className: \"objectlist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"add-item-button-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    compact: true,\n    icon: true,\n    \"aria-label\": objectSchema.addMessage || `${intl.formatMessage(messages.add)} ${objectSchema.title}`,\n    onClick: e => {\n      e.preventDefault();\n      const data = {\n        '@id': uuid()\n      };\n      const objSchema = schemaExtender ? schemaExtender(schema, data, intl) : objectSchema;\n      const dataWithDefaults = applySchemaDefaults({\n        data,\n        schema: objSchema,\n        intl\n      });\n      onChange(id, [...value, dataWithDefaults]);\n      setActiveObject(value.length);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: addSVG,\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }), \"\\xA0\", objectSchema.addMessage || `${intl.formatMessage(messages.add)} ${objectSchema.title}`)), value.length === 0 && __jsx(\"input\", {\n    \"aria-labelledby\": `fieldset-${fieldSet || 'default'}-field-label-${id}`,\n    type: \"hidden\",\n    value: intl.formatMessage(messages.emptyObjectList),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  })), __jsx(DragDropList, {\n    style: {\n      boxShadow: `${topLayerShadow}${value.length > 1 ? secondLayer : ''}${value.length > 2 ? thirdLayer : ''}`\n    },\n    forwardedAriaLabelledBy: `fieldset-${fieldSet || 'default'}-field-label-${id}`,\n    childList: value.map(o => [o['@id'], o]),\n    onMoveItem: result => {\n      const {\n        source,\n        destination\n      } = result;\n      if (!destination) {\n        return;\n      }\n      const newValue = reorderArray(value, source.index, destination.index);\n      onChange(id, newValue);\n      return true;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, ({\n    child,\n    childId,\n    index,\n    draginfo\n  }) => {\n    return __jsx(\"div\", _extends({\n      ref: draginfo.innerRef\n    }, draginfo.draggableProps, {\n      key: childId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }), __jsx(Accordion, {\n      key: index,\n      fluid: true,\n      styled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, __jsx(Accordion.Title, {\n      active: activeObject === index,\n      index: index,\n      onClick: handleChangeActiveObject,\n      \"aria-label\": `${activeObject === index ? intl.formatMessage(messages.labelCollapseItem) : intl.formatMessage(messages.labelShowItem)} #${index + 1}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, __jsx(\"button\", _extends({\n      style: {\n        visibility: 'visible',\n        display: 'inline-block'\n      }\n    }, draginfo.dragHandleProps, {\n      className: \"drag handle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 19\n      }\n    }), __jsx(Icon, {\n      name: dragSVG,\n      size: \"18px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"accordion-title-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 19\n      }\n    }, `${objectSchema.title} #${index + 1}`), __jsx(\"div\", {\n      className: \"accordion-tools\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 19\n      }\n    }, __jsx(\"button\", {\n      \"aria-label\": `${intl.formatMessage(messages.labelRemoveItem)} #${index + 1}`,\n      onClick: () => {\n        onChange(id, value.filter((v, i) => i !== index));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, __jsx(Icon, {\n      name: deleteSVG,\n      size: \"20px\",\n      color: \"#e40166\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 23\n      }\n    })), activeObject === index ? __jsx(Icon, {\n      name: upSVG,\n      size: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 23\n      }\n    }) : __jsx(Icon, {\n      name: downSVG,\n      size: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 23\n      }\n    }))), __jsx(Accordion.Content, {\n      active: activeObject === index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    }, __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 19\n      }\n    }, __jsx(ObjectWidget, {\n      id: `${id}-${index}`,\n      key: `ow-${id}-${index}`,\n      block: block,\n      schema: schemaExtender ? schemaExtender(schema, child, intl) : objectSchema,\n      value: child,\n      onChange: (fi, fv) => {\n        const newvalue = value.map((v, i) => i !== index ? v : fv);\n        onChange(id, newvalue);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    })))));\n  }));\n};\n_s(ObjectListWidget, \"T66flgxnQy5uascVAJkMBbCVNsc=\", false, function () {\n  return [useIntl];\n});\n_c = ObjectListWidget;\nexport default ObjectListWidget;\nvar _c;\n$RefreshReg$(_c, \"ObjectListWidget\");","map":{"version":3,"names":["React","defineMessages","useIntl","Accordion","Button","Segment","DragDropList","Icon","FormFieldWrapper","applySchemaDefaults","reorderArray","ObjectWidget","upSVG","downSVG","deleteSVG","addSVG","dragSVG","v4","uuid","messages","labelRemoveItem","labelCollapseItem","labelShowItem","emptyObjectList","add","ObjectListWidget","props","_s","_props$activeObject","block","fieldSet","id","schema","value","onChange","schemaExtender","localActiveObject","setLocalActiveObject","useState","activeObject","length","setActiveObject","intl","handleChangeActiveObject","e","blockProps","index","newIndex","objectSchema","topLayerShadow","secondLayer","thirdLayer","__jsx","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_extends","noForInFieldLabel","compact","icon","addMessage","formatMessage","title","onClick","preventDefault","data","objSchema","dataWithDefaults","name","size","type","style","boxShadow","forwardedAriaLabelledBy","childList","map","o","onMoveItem","result","source","destination","newValue","child","childId","draginfo","ref","innerRef","draggableProps","key","fluid","styled","Title","active","visibility","display","dragHandleProps","filter","v","i","color","Content","fi","fv","newvalue","_c","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Widgets/ObjectListWidget.jsx"],"sourcesContent":["import React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Accordion, Button, Segment } from 'semantic-ui-react';\nimport DragDropList from '@plone/volto/components/manage/DragDropList/DragDropList';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport FormFieldWrapper from '@plone/volto/components/manage/Widgets/FormFieldWrapper';\nimport { applySchemaDefaults } from '@plone/volto/helpers/Blocks/Blocks';\nimport { reorderArray } from '@plone/volto/helpers/Utils/Utils';\nimport ObjectWidget from '@plone/volto/components/manage/Widgets/ObjectWidget';\n\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport addSVG from '@plone/volto/icons/add.svg';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport { v4 as uuid } from 'uuid';\n\nconst messages = defineMessages({\n  labelRemoveItem: {\n    id: 'Remove item',\n    defaultMessage: 'Remove item',\n  },\n  labelCollapseItem: {\n    id: 'Collapse item',\n    defaultMessage: 'Collapse item',\n  },\n  labelShowItem: {\n    id: 'Show item',\n    defaultMessage: 'Show item',\n  },\n  emptyObjectList: {\n    id: 'Empty object list',\n    defaultMessage: 'Empty object list',\n  },\n  add: {\n    id: 'Add (object list)',\n    defaultMessage: 'Add',\n  },\n});\n\n/**\n * This is a DataGridField-equivalent widget for schema-based values.\n * The shape of the items in the array is defined using a schema.\n *\n * ObjectListWidget can receive an optional `schemaExtender` prop which is\n * a function that can mutate the schema for each individual item in the array.\n * An example schema definition of the a field that renders with the\n * ObjectListWidget:\n *\n * ```jsx\n *  columns: {\n *    title: 'Columns',\n *    description: 'Leave empty to show all columns',\n *    schema: SomeItemSchema,\n *    widget: 'object_list',\n *    schemaExtender: (schema, data) => {\n *      const mutated = lodash.cloneDeep(schema);\n *      mutated.properties.extraField = {\n *        title: 'Extra field',\n *      }\n *      mutated.fieldsets[0].fields.push('extraField');\n *      return mutated;\n *    },\n *    activeObject: 0, // Current active object drilled down from the schema (if present)\n *    setActiveObject: () => {} // The current active object state updater function drilled down from the schema (if present)\n *  },\n * ```\n */\nconst ObjectListWidget = (props) => {\n  const {\n    block,\n    fieldSet,\n    id,\n    schema,\n    value = [],\n    onChange,\n    schemaExtender,\n  } = props;\n  const [localActiveObject, setLocalActiveObject] = React.useState(\n    props.activeObject ?? value.length - 1,\n  );\n\n  let activeObject, setActiveObject;\n  if (\n    (props.activeObject || props.activeObject === 0) &&\n    props.setActiveObject\n  ) {\n    activeObject = props.activeObject;\n    setActiveObject = props.setActiveObject;\n  } else {\n    activeObject = localActiveObject;\n    setActiveObject = setLocalActiveObject;\n  }\n\n  const intl = useIntl();\n\n  function handleChangeActiveObject(e, blockProps) {\n    const { index } = blockProps;\n    const newIndex = activeObject === index ? -1 : index;\n\n    setActiveObject(newIndex);\n  }\n  const objectSchema = typeof schema === 'function' ? schema(props) : schema;\n\n  const topLayerShadow = '0 1px 1px rgba(0,0,0,0.15)';\n  const secondLayer = ', 0 10px 0 -5px #eee, 0 10px 1px -4px rgba(0,0,0,0.15)';\n  const thirdLayer = ', 0 20px 0 -10px #eee, 0 20px 1px -9px rgba(0,0,0,0.15)';\n\n  return (\n    <div className=\"objectlist-widget\">\n      <FormFieldWrapper {...props} noForInFieldLabel className=\"objectlist\">\n        <div className=\"add-item-button-wrapper\">\n          <Button\n            compact\n            icon\n            aria-label={\n              objectSchema.addMessage ||\n              `${intl.formatMessage(messages.add)} ${objectSchema.title}`\n            }\n            onClick={(e) => {\n              e.preventDefault();\n              const data = {\n                '@id': uuid(),\n              };\n              const objSchema = schemaExtender\n                ? schemaExtender(schema, data, intl)\n                : objectSchema;\n              const dataWithDefaults = applySchemaDefaults({\n                data,\n                schema: objSchema,\n                intl,\n              });\n\n              onChange(id, [...value, dataWithDefaults]);\n              setActiveObject(value.length);\n            }}\n          >\n            <Icon name={addSVG} size=\"18px\" />\n            &nbsp;\n            {/* Custom addMessage in schema, else default to English */}\n            {objectSchema.addMessage ||\n              `${intl.formatMessage(messages.add)} ${objectSchema.title}`}\n          </Button>\n        </div>\n        {value.length === 0 && (\n          <input\n            aria-labelledby={`fieldset-${\n              fieldSet || 'default'\n            }-field-label-${id}`}\n            type=\"hidden\"\n            value={intl.formatMessage(messages.emptyObjectList)}\n          />\n        )}\n      </FormFieldWrapper>\n      <DragDropList\n        style={{\n          boxShadow: `${topLayerShadow}${value.length > 1 ? secondLayer : ''}${\n            value.length > 2 ? thirdLayer : ''\n          }`,\n        }}\n        forwardedAriaLabelledBy={`fieldset-${\n          fieldSet || 'default'\n        }-field-label-${id}`}\n        childList={value.map((o) => [o['@id'], o])}\n        onMoveItem={(result) => {\n          const { source, destination } = result;\n          if (!destination) {\n            return;\n          }\n          const newValue = reorderArray(value, source.index, destination.index);\n          onChange(id, newValue);\n          return true;\n        }}\n      >\n        {({ child, childId, index, draginfo }) => {\n          return (\n            <div\n              ref={draginfo.innerRef}\n              {...draginfo.draggableProps}\n              key={childId}\n            >\n              <Accordion key={index} fluid styled>\n                <Accordion.Title\n                  active={activeObject === index}\n                  index={index}\n                  onClick={handleChangeActiveObject}\n                  aria-label={`${\n                    activeObject === index\n                      ? intl.formatMessage(messages.labelCollapseItem)\n                      : intl.formatMessage(messages.labelShowItem)\n                  } #${index + 1}`}\n                >\n                  <button\n                    style={{\n                      visibility: 'visible',\n                      display: 'inline-block',\n                    }}\n                    {...draginfo.dragHandleProps}\n                    className=\"drag handle\"\n                  >\n                    <Icon name={dragSVG} size=\"18px\" />\n                  </button>\n\n                  <div className=\"accordion-title-wrapper\">\n                    {`${objectSchema.title} #${index + 1}`}\n                  </div>\n                  <div className=\"accordion-tools\">\n                    <button\n                      aria-label={`${intl.formatMessage(\n                        messages.labelRemoveItem,\n                      )} #${index + 1}`}\n                      onClick={() => {\n                        onChange(\n                          id,\n                          value.filter((v, i) => i !== index),\n                        );\n                      }}\n                    >\n                      <Icon name={deleteSVG} size=\"20px\" color=\"#e40166\" />\n                    </button>\n                    {activeObject === index ? (\n                      <Icon name={upSVG} size=\"20px\" />\n                    ) : (\n                      <Icon name={downSVG} size=\"20px\" />\n                    )}\n                  </div>\n                </Accordion.Title>\n                <Accordion.Content active={activeObject === index}>\n                  <Segment>\n                    <ObjectWidget\n                      id={`${id}-${index}`}\n                      key={`ow-${id}-${index}`}\n                      block={block}\n                      schema={\n                        schemaExtender\n                          ? schemaExtender(schema, child, intl)\n                          : objectSchema\n                      }\n                      value={child}\n                      onChange={(fi, fv) => {\n                        const newvalue = value.map((v, i) =>\n                          i !== index ? v : fv,\n                        );\n                        onChange(id, newvalue);\n                      }}\n                    />\n                  </Segment>\n                </Accordion.Content>\n              </Accordion>\n            </div>\n          );\n        }}\n      </DragDropList>\n    </div>\n  );\n};\nexport default ObjectListWidget;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Remove item","defaultMessage":"Remove item"},{"id":"Collapse item","defaultMessage":"Collapse item"},{"id":"Show item","defaultMessage":"Show item"},{"id":"Empty object list","defaultMessage":"Empty object list"},{"id":"Add (object list)","defaultMessage":"Add"}]}},"sourceType":"module","externalDependencies":[]}