{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Controlpanels/Relations/RelationsMatrix.jsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport capitalize from 'lodash/capitalize';\nimport find from 'lodash/find';\nimport { compose } from 'redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport { Button, Divider, Dropdown, Form, Header, Input, Popup, Tab } from 'semantic-ui-react';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\nimport { messages } from '@plone/volto/helpers/MessageLabels/MessageLabels';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport { getRelationStats, queryRelations } from '@plone/volto/actions/relations/relations';\nimport { rebuildRelations } from '@plone/volto/actions/relations/rebuild';\nimport RelationsListing from '@plone/volto/components/manage/Controlpanels/Relations/RelationsListing';\nimport BrokenRelations from '@plone/volto/components/manage/Controlpanels/Relations/BrokenRelations';\nimport helpSVG from '@plone/volto/icons/help.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\nconst RelationsMatrix = props => {\n  _s();\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const {\n    0: query_source,\n    1: setQuery_source\n  } = useState('');\n  const {\n    0: query_target,\n    1: setQuery_target\n  } = useState('');\n  const {\n    0: potential_targets_path,\n    1: setPotential_targets_path\n  } = useState('');\n  const {\n    0: potential_sources_path,\n    1: setPotential_sources_path\n  } = useState('');\n  const {\n    0: relationtype,\n    1: setRelationtype\n  } = useState(undefined);\n  const actions = useSelector(state => {\n    var _state$actions$action, _state$actions;\n    return (_state$actions$action = (_state$actions = state.actions) === null || _state$actions === void 0 ? void 0 : _state$actions.actions) !== null && _state$actions$action !== void 0 ? _state$actions$action : {};\n  });\n  const can_fix_relations = find(actions.user, {\n    id: 'plone_setup'\n  });\n  const relationtypes = useSelector(state => {\n    var _state$relations, _state$relations$stat, _state$relations$stat2;\n    return (_state$relations = state.relations) === null || _state$relations === void 0 ? void 0 : (_state$relations$stat = _state$relations.stats) === null || _state$relations$stat === void 0 ? void 0 : (_state$relations$stat2 = _state$relations$stat.data) === null || _state$relations$stat2 === void 0 ? void 0 : _state$relations$stat2.stats;\n  });\n  const relationsListError = useSelector(state => {\n    var _state$relations2, _state$relations2$sta, _state$relations2$sta2, _state$relations2$sta3, _state$relations2$sta4;\n    return (_state$relations2 = state.relations) === null || _state$relations2 === void 0 ? void 0 : (_state$relations2$sta = _state$relations2.stats) === null || _state$relations2$sta === void 0 ? void 0 : (_state$relations2$sta2 = _state$relations2$sta.error) === null || _state$relations2$sta2 === void 0 ? void 0 : (_state$relations2$sta3 = _state$relations2$sta2.response) === null || _state$relations2$sta3 === void 0 ? void 0 : (_state$relations2$sta4 = _state$relations2$sta3.body) === null || _state$relations2$sta4 === void 0 ? void 0 : _state$relations2$sta4.error;\n  });\n  const brokenRelations = useSelector(state => {\n    var _state$relations3, _state$relations3$sta, _state$relations3$sta2;\n    return (_state$relations3 = state.relations) === null || _state$relations3 === void 0 ? void 0 : (_state$relations3$sta = _state$relations3.stats) === null || _state$relations3$sta === void 0 ? void 0 : (_state$relations3$sta2 = _state$relations3$sta.data) === null || _state$relations3$sta2 === void 0 ? void 0 : _state$relations3$sta2.broken;\n  });\n  let filter_options = useSelector(state => state.groups.filter_groups);\n  if (filter_options) {\n    filter_options = filter_options.map(group => ({\n      value: group.id,\n      label: group.title || group.id\n    }));\n    filter_options.sort(function (a, b) {\n      var labelA = a.label.toUpperCase();\n      var labelB = b.label.toUpperCase();\n      if (labelA < labelB) {\n        return -1;\n      }\n      if (labelA > labelB) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n  useEffect(() => {\n    dispatch(getRelationStats());\n  }, [dispatch]);\n  const onReset = event => {\n    let element = event.target.querySelector('input');\n    element.value = '';\n    element.focus();\n    let searchtype = element.name;\n    switch (searchtype) {\n      case 'SearchY':\n        setQuery_source('');\n        break;\n      case 'SearchX':\n        setQuery_target('');\n        break;\n      case 'showPotentialTargets':\n        setPotential_targets_path('/');\n        break;\n      case 'showPotentialSources':\n        setPotential_sources_path('/');\n        break;\n      default:\n        break;\n    }\n  };\n\n  // search for sources\n  const onChangeSearchYs = event => {\n    if (event.target.value.length > 1) {\n      setQuery_source(event.target.value);\n    } else {\n      setQuery_source('');\n    }\n  };\n\n  // search for targets\n  const onChangeSearchXs = event => {\n    if (event.target.value.length > 1) {\n      setQuery_target(event.target.value);\n    } else {\n      setQuery_source('');\n    }\n  };\n  const onChangeRelation = (event, {\n    value\n  }) => {\n    setRelationtype(value);\n  };\n  const onChangeShowPotentialSources = _value => {\n    let newValue = _value;\n    setPotential_sources_path(newValue);\n  };\n  const onChangeShowPotentialTargets = _value => {\n    let newValue = _value;\n    setPotential_targets_path(newValue);\n  };\n  const rebuildRelationsHandler = (flush = false) => {\n    dispatch(rebuildRelations(flush)).then(() => {\n      dispatch(getRelationStats());\n      dispatch(queryRelations(null, true, 'broken'));\n    }).then(() => {\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: intl.formatMessage(messages.success),\n        content: \"Relations updated\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }));\n    }).catch(error => {\n      // TODO: The true error sent by the API is shadowed by the superagent one\n      // Update this when this issue is fixed.\n      const shadowedError = JSON.parse(error.response.text);\n      toast.error(__jsx(Toast, {\n        error: true,\n        title: shadowedError.error.type,\n        content: shadowedError.error.message,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }\n      }));\n    });\n  };\n  const clear_potential_sources_path = () => {\n    setPotential_sources_path('');\n    // onChange(id, undefined);\n  };\n  const clear_potential_targets_path = () => {\n    setPotential_targets_path('');\n    // onChange(id, undefined);\n  };\n  const panes = [{\n    menuItem: intl.formatMessage(messages.inspectRelations),\n    pane: __jsx(Tab.Pane, {\n      attached: true,\n      key: \"fix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, relationtypes ? __jsx(\"div\", {\n      className: \"controlpanel_matrix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"controlpanel_select_relation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, __jsx(Divider, {\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }), __jsx(Form, {\n      className: \"select_relation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, __jsx(Header, {\n      as: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, __jsx(Header.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Relation name\",\n      defaultMessage: \"Relation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }), ' ', __jsx(Dropdown, {\n      placeholder: relationtype || intl.formatMessage(messages.selectRelation),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }, __jsx(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 27\n      }\n    }, Object.keys(relationtypes).map(relationtype => __jsx(Dropdown.Item, {\n      onClick: onChangeRelation,\n      value: relationtype,\n      className: `select-relation-${relationtype}`,\n      key: relationtype,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 31\n      }\n    }, `${relationtype} (${relationtypes[relationtype]})`))))))))), relationtype ? __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"controlpanel_search_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      className: \"controlpanel_search_y\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    }, __jsx(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 23\n      }\n    }, __jsx(Header.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Source\",\n      defaultMessage: \"Source\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 27\n      }\n    }))), __jsx(Form, {\n      className: \"search_y\",\n      onSubmit: onReset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 23\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }, __jsx(Input, {\n      name: \"SearchY\",\n      placeholder: intl.formatMessage(messages.searchRelationSource),\n      onChange: onChangeSearchYs,\n      id: \"y-search-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 27\n      }\n    }), __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 27\n      }\n    }, __jsx(Button, {\n      basic: true,\n      className: \"cancel\",\n      \"aria-label\": \"cancel\",\n      onClick: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        document.querySelector('input[name=\"SearchY\"]').value = '';\n        setQuery_source('');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 29\n      }\n    }, __jsx(Icon, {\n      name: clearSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 31\n      }\n    }))))), __jsx(Form, {\n      className: \"add_potential_sources\",\n      onSubmit: onReset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 23\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 25\n      }\n    }, __jsx(Input, {\n      name: \"showPotentialSources\",\n      type: \"url\",\n      value: potential_sources_path,\n      placeholder: intl.formatMessage(messages.addPotentialSourcesPath),\n      onChange: ({\n        target\n      }) => onChangeShowPotentialSources(target.value),\n      id: \"potential-sources-path-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 27\n      }\n    }), (potential_sources_path === null || potential_sources_path === void 0 ? void 0 : potential_sources_path.length) > 0 ? __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 29\n      }\n    }, __jsx(Button, {\n      basic: true,\n      className: \"cancel\",\n      \"aria-label\": \"clearUrlBrowser\",\n      onClick: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        clear_potential_sources_path();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 31\n      }\n    }, __jsx(Icon, {\n      name: clearSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 33\n      }\n    }))) : __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 29\n      }\n    }, __jsx(Button, {\n      basic: true,\n      icon: true,\n      \"aria-label\": \"openUrlBrowser\",\n      onClick: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        props.openObjectBrowser({\n          mode: 'link',\n          overlay: true,\n          onSelectItem: url => {\n            onChangeShowPotentialSources(url);\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 31\n      }\n    }, __jsx(Icon, {\n      name: navTreeSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 33\n      }\n    })))), __jsx(FormattedMessage, {\n      id: \"Show potential sources. Not only objects that are source of some relation.\",\n      defaultMessage: \"Show potential sources. Not only objects that are source of some relation.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 25\n      }\n    }))), __jsx(\"div\", {\n      className: \"controlpanel_search_x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 21\n      }\n    }, __jsx(Form, {\n      className: \"search_x\",\n      onSubmit: onReset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 23\n      }\n    }, __jsx(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 25\n      }\n    }, __jsx(Header.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 27\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Target\",\n      defaultMessage: \"Target\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 29\n      }\n    }))), __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 25\n      }\n    }, __jsx(Input, {\n      name: \"SearchX\",\n      placeholder: intl.formatMessage(messages.searchRelationTarget),\n      onChange: onChangeSearchXs,\n      id: \"x-search-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 27\n      }\n    }), __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 27\n      }\n    }, __jsx(Button, {\n      basic: true,\n      className: \"cancel\",\n      \"aria-label\": \"cancel\",\n      onClick: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        document.querySelector('input[name=\"SearchX\"]').value = '';\n        setQuery_target('');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 29\n      }\n    }, __jsx(Icon, {\n      name: clearSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 31\n      }\n    }))))), __jsx(Form, {\n      className: \"add_potential_targets\",\n      onSubmit: onReset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 23\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 25\n      }\n    }, __jsx(Input, {\n      name: \"showPotentialTargets\",\n      type: \"url\",\n      value: potential_targets_path,\n      placeholder: intl.formatMessage(messages.addPotentialTargetsPath),\n      onChange: ({\n        target\n      }) => onChangeShowPotentialTargets(target.value),\n      id: \"potential-targets-path-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 27\n      }\n    }), (potential_targets_path === null || potential_targets_path === void 0 ? void 0 : potential_targets_path.length) > 0 ? __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 29\n      }\n    }, __jsx(Button, {\n      basic: true,\n      className: \"cancel\",\n      \"aria-label\": \"clearUrlBrowser\",\n      onClick: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        clear_potential_targets_path();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 31\n      }\n    }, __jsx(Icon, {\n      name: clearSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 33\n      }\n    }))) : __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 29\n      }\n    }, __jsx(Button, {\n      basic: true,\n      icon: true,\n      \"aria-label\": \"openUrlBrowser\",\n      onClick: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        props.openObjectBrowser({\n          mode: 'link',\n          overlay: true,\n          onSelectItem: url => {\n            onChangeShowPotentialTargets(url);\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 31\n      }\n    }, __jsx(Icon, {\n      name: navTreeSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 33\n      }\n    })))), __jsx(\"div\", {\n      className: \"foo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Show potential targets. Not only objects that are target of some relation.\",\n      defaultMessage: \"Show potential targets. Not only objects that are target of some relation.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 27\n      }\n    }), ' ', __jsx(Popup, {\n      trigger: __jsx(\"a\", {\n        href: \"https://6.docs.plone.org/volto/development/widget.html#widget-relation-field-label\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 31\n        }\n      }, __jsx(Icon, {\n        name: helpSVG,\n        size: \"16px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 33\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 27\n      }\n    }, __jsx(Popup.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 29\n      }\n    }, \"Respect constraints\"), __jsx(Popup.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 31\n      }\n    }, \"See docs.plone.org on how to respect constraints.\"))))))), __jsx(\"div\", {\n      className: \"controlpanel_listing_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 19\n      }\n    }, __jsx(RelationsListing, {\n      relationtype: relationtype,\n      query_source: query_source,\n      query_target: query_target,\n      potential_targets_path: potential_targets_path,\n      potential_sources_path: potential_sources_path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 21\n      }\n    }))) : null) : __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 13\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 15\n      }\n    }, relationsListError === null || relationsListError === void 0 ? void 0 : relationsListError.type), \" \", relationsListError === null || relationsListError === void 0 ? void 0 : relationsListError.message))\n  }, {\n    menuItem: intl.formatMessage(messages.fixRelations),\n    pane: __jsx(Tab.Pane, {\n      attached: true,\n      key: \"rebuild\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }\n    }, !(brokenRelations && Object.keys(brokenRelations).length > 0) && __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"No broken relations found.\",\n      defaultMessage: \"No broken relations found.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 17\n      }\n    })), can_fix_relations ? __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 15\n      }\n    }, __jsx(Divider, {\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 17\n      }\n    }), __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 17\n      }\n    }, capitalize(intl.formatMessage(messages.rebuildRelations))), __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      primary: true,\n      onClick: () => rebuildRelationsHandler(false),\n      content: intl.formatMessage(messages.rebuildRelations),\n      \"aria-label\": intl.formatMessage(messages.rebuildRelations),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 19\n      }\n    })), __jsx(Divider, {\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 17\n      }\n    }), __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 17\n      }\n    }, capitalize(intl.formatMessage(messages.flushAndRebuildRelations))), __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: intl.formatMessage(messages.flushAndRebuildRelationsHints)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 17\n      }\n    }), __jsx(Divider, {\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 17\n      }\n    }), __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      secondary: true,\n      color: \"red\",\n      onClick: () => rebuildRelationsHandler(true),\n      content: intl.formatMessage(messages.flushAndRebuildRelations),\n      \"aria-label\": intl.formatMessage(messages.flushAndRebuildRelations),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 19\n      }\n    }))) : null, __jsx(BrokenRelations, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 13\n      }\n    })))\n  }];\n  return __jsx(Tab, {\n    panes: panes,\n    renderActiveOnly: false,\n    menu: {\n      secondary: true,\n      pointing: true,\n      attached: true,\n      tabular: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 5\n    }\n  });\n};\n_s(RelationsMatrix, \"eaygL0c4yBpfX6XzfspzEsmFB6g=\", false, function () {\n  return [useIntl, useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = RelationsMatrix;\nexport default compose(withObjectBrowser)(RelationsMatrix);\nvar _c;\n$RefreshReg$(_c, \"RelationsMatrix\");","map":{"version":3,"names":["React","useEffect","useState","capitalize","find","compose","useSelector","useDispatch","FormattedMessage","useIntl","toast","Button","Divider","Dropdown","Form","Header","Input","Popup","Tab","withObjectBrowser","messages","Icon","Toast","getRelationStats","queryRelations","rebuildRelations","RelationsListing","BrokenRelations","helpSVG","clearSVG","navTreeSVG","RelationsMatrix","props","_s","intl","dispatch","query_source","setQuery_source","query_target","setQuery_target","potential_targets_path","setPotential_targets_path","potential_sources_path","setPotential_sources_path","relationtype","setRelationtype","undefined","actions","state","_state$actions$action","_state$actions","can_fix_relations","user","id","relationtypes","_state$relations","_state$relations$stat","_state$relations$stat2","relations","stats","data","relationsListError","_state$relations2","_state$relations2$sta","_state$relations2$sta2","_state$relations2$sta3","_state$relations2$sta4","error","response","body","brokenRelations","_state$relations3","_state$relations3$sta","_state$relations3$sta2","broken","filter_options","groups","filter_groups","map","group","value","label","title","sort","a","b","labelA","toUpperCase","labelB","onReset","event","element","target","querySelector","focus","searchtype","name","onChangeSearchYs","length","onChangeSearchXs","onChangeRelation","onChangeShowPotentialSources","_value","newValue","onChangeShowPotentialTargets","rebuildRelationsHandler","flush","then","success","__jsx","formatMessage","content","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","catch","shadowedError","JSON","parse","text","type","message","clear_potential_sources_path","clear_potential_targets_path","panes","menuItem","inspectRelations","pane","Pane","attached","key","className","hidden","Field","as","Content","defaultMessage","placeholder","selectRelation","Menu","Object","keys","Item","onClick","Fragment","onSubmit","searchRelationSource","onChange","Group","basic","e","preventDefault","stopPropagation","document","size","addPotentialSourcesPath","icon","openObjectBrowser","mode","overlay","onSelectItem","url","searchRelationTarget","addPotentialTargetsPath","trigger","href","rel","fixRelations","primary","flushAndRebuildRelations","dangerouslySetInnerHTML","__html","flushAndRebuildRelationsHints","secondary","color","renderActiveOnly","menu","pointing","tabular","_c","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Controlpanels/Relations/RelationsMatrix.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport capitalize from 'lodash/capitalize';\nimport find from 'lodash/find';\nimport { compose } from 'redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport {\n  Button,\n  Divider,\n  Dropdown,\n  Form,\n  Header,\n  Input,\n  Popup,\n  Tab,\n} from 'semantic-ui-react';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\nimport { messages } from '@plone/volto/helpers/MessageLabels/MessageLabels';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport {\n  getRelationStats,\n  queryRelations,\n} from '@plone/volto/actions/relations/relations';\nimport { rebuildRelations } from '@plone/volto/actions/relations/rebuild';\nimport RelationsListing from '@plone/volto/components/manage/Controlpanels/Relations/RelationsListing';\nimport BrokenRelations from '@plone/volto/components/manage/Controlpanels/Relations/BrokenRelations';\nimport helpSVG from '@plone/volto/icons/help.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\n\nconst RelationsMatrix = (props) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n\n  const [query_source, setQuery_source] = useState('');\n  const [query_target, setQuery_target] = useState('');\n  const [potential_targets_path, setPotential_targets_path] = useState('');\n  const [potential_sources_path, setPotential_sources_path] = useState('');\n  const [relationtype, setRelationtype] = useState(undefined);\n\n  const actions = useSelector((state) => state.actions?.actions ?? {});\n  const can_fix_relations = find(actions.user, {\n    id: 'plone_setup',\n  });\n\n  const relationtypes = useSelector(\n    (state) => state.relations?.stats?.data?.stats,\n  );\n  const relationsListError = useSelector(\n    (state) => state.relations?.stats?.error?.response?.body?.error,\n  );\n  const brokenRelations = useSelector(\n    (state) => state.relations?.stats?.data?.broken,\n  );\n\n  let filter_options = useSelector((state) => state.groups.filter_groups);\n  if (filter_options) {\n    filter_options = filter_options.map((group) => ({\n      value: group.id,\n      label: group.title || group.id,\n    }));\n    filter_options.sort(function (a, b) {\n      var labelA = a.label.toUpperCase();\n      var labelB = b.label.toUpperCase();\n      if (labelA < labelB) {\n        return -1;\n      }\n      if (labelA > labelB) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n\n  useEffect(() => {\n    dispatch(getRelationStats());\n  }, [dispatch]);\n\n  const onReset = (event) => {\n    let element = event.target.querySelector('input');\n    element.value = '';\n    element.focus();\n    let searchtype = element.name;\n    switch (searchtype) {\n      case 'SearchY':\n        setQuery_source('');\n        break;\n      case 'SearchX':\n        setQuery_target('');\n        break;\n      case 'showPotentialTargets':\n        setPotential_targets_path('/');\n        break;\n      case 'showPotentialSources':\n        setPotential_sources_path('/');\n        break;\n      default:\n        break;\n    }\n  };\n\n  // search for sources\n  const onChangeSearchYs = (event) => {\n    if (event.target.value.length > 1) {\n      setQuery_source(event.target.value);\n    } else {\n      setQuery_source('');\n    }\n  };\n\n  // search for targets\n  const onChangeSearchXs = (event) => {\n    if (event.target.value.length > 1) {\n      setQuery_target(event.target.value);\n    } else {\n      setQuery_source('');\n    }\n  };\n\n  const onChangeRelation = (event, { value }) => {\n    setRelationtype(value);\n  };\n\n  const onChangeShowPotentialSources = (_value) => {\n    let newValue = _value;\n    setPotential_sources_path(newValue);\n  };\n\n  const onChangeShowPotentialTargets = (_value) => {\n    let newValue = _value;\n    setPotential_targets_path(newValue);\n  };\n\n  const rebuildRelationsHandler = (flush = false) => {\n    dispatch(rebuildRelations(flush))\n      .then(() => {\n        dispatch(getRelationStats());\n        dispatch(queryRelations(null, true, 'broken'));\n      })\n      .then(() => {\n        toast.success(\n          <Toast\n            success\n            title={intl.formatMessage(messages.success)}\n            content=\"Relations updated\"\n          />,\n        );\n      })\n      .catch((error) => {\n        // TODO: The true error sent by the API is shadowed by the superagent one\n        // Update this when this issue is fixed.\n        const shadowedError = JSON.parse(error.response.text);\n        toast.error(\n          <Toast\n            error\n            title={shadowedError.error.type}\n            content={shadowedError.error.message}\n          />,\n        );\n      });\n  };\n\n  const clear_potential_sources_path = () => {\n    setPotential_sources_path('');\n    // onChange(id, undefined);\n  };\n\n  const clear_potential_targets_path = () => {\n    setPotential_targets_path('');\n    // onChange(id, undefined);\n  };\n\n  const panes = [\n    {\n      menuItem: intl.formatMessage(messages.inspectRelations),\n      pane: (\n        <Tab.Pane attached={true} key=\"fix\">\n          {relationtypes ? (\n            <div className=\"controlpanel_matrix\">\n              <div className=\"controlpanel_select_relation\">\n                <Divider hidden />\n                <Form className=\"select_relation\">\n                  <Form.Field>\n                    <Header as=\"h3\">\n                      <Header.Content>\n                        <FormattedMessage\n                          id=\"Relation name\"\n                          defaultMessage=\"Relation\"\n                        />{' '}\n                        <Dropdown\n                          placeholder={\n                            relationtype ||\n                            intl.formatMessage(messages.selectRelation)\n                          }\n                        >\n                          <Dropdown.Menu>\n                            {Object.keys(relationtypes).map((relationtype) => (\n                              <Dropdown.Item\n                                onClick={onChangeRelation}\n                                value={relationtype}\n                                className={`select-relation-${relationtype}`}\n                                key={relationtype}\n                              >\n                                {`${relationtype} (${relationtypes[relationtype]})`}\n                              </Dropdown.Item>\n                            ))}\n                          </Dropdown.Menu>\n                        </Dropdown>\n                      </Header.Content>\n                    </Header>\n                  </Form.Field>\n                </Form>\n              </div>\n              {relationtype ? (\n                <>\n                  <div className=\"controlpanel_search_wrapper\">\n                    <div className=\"controlpanel_search_y\">\n                      <Header as=\"h4\">\n                        <Header.Content>\n                          <FormattedMessage\n                            id=\"Source\"\n                            defaultMessage=\"Source\"\n                          />\n                        </Header.Content>\n                      </Header>\n                      <Form className=\"search_y\" onSubmit={onReset}>\n                        <Form.Field>\n                          <Input\n                            name=\"SearchY\"\n                            placeholder={intl.formatMessage(\n                              messages.searchRelationSource,\n                            )}\n                            onChange={onChangeSearchYs}\n                            id=\"y-search-input\"\n                          />\n                          <Button.Group>\n                            <Button\n                              basic\n                              className=\"cancel\"\n                              aria-label=\"cancel\"\n                              onClick={(e) => {\n                                e.preventDefault();\n                                e.stopPropagation();\n                                document.querySelector(\n                                  'input[name=\"SearchY\"]',\n                                ).value = '';\n                                setQuery_source('');\n                              }}\n                            >\n                              <Icon name={clearSVG} size=\"24px\" />\n                            </Button>\n                          </Button.Group>\n                        </Form.Field>\n                      </Form>\n                      <Form\n                        className=\"add_potential_sources\"\n                        onSubmit={onReset}\n                      >\n                        <Form.Field>\n                          <Input\n                            name=\"showPotentialSources\"\n                            type=\"url\"\n                            value={potential_sources_path}\n                            placeholder={intl.formatMessage(\n                              messages.addPotentialSourcesPath,\n                            )}\n                            onChange={({ target }) =>\n                              onChangeShowPotentialSources(target.value)\n                            }\n                            id=\"potential-sources-path-input\"\n                          />\n                          {potential_sources_path?.length > 0 ? (\n                            <Button.Group>\n                              <Button\n                                basic\n                                className=\"cancel\"\n                                aria-label=\"clearUrlBrowser\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  e.stopPropagation();\n                                  clear_potential_sources_path();\n                                }}\n                              >\n                                <Icon name={clearSVG} size=\"24px\" />\n                              </Button>\n                            </Button.Group>\n                          ) : (\n                            <Button.Group>\n                              <Button\n                                basic\n                                icon\n                                aria-label=\"openUrlBrowser\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  e.stopPropagation();\n                                  props.openObjectBrowser({\n                                    mode: 'link',\n                                    overlay: true,\n                                    onSelectItem: (url) => {\n                                      onChangeShowPotentialSources(url);\n                                    },\n                                  });\n                                }}\n                              >\n                                <Icon name={navTreeSVG} size=\"24px\" />\n                              </Button>\n                            </Button.Group>\n                          )}\n                        </Form.Field>\n                        <FormattedMessage\n                          id=\"Show potential sources. Not only objects that are source of some relation.\"\n                          defaultMessage=\"Show potential sources. Not only objects that are source of some relation.\"\n                        />\n                      </Form>\n                    </div>\n                    <div className=\"controlpanel_search_x\">\n                      <Form className=\"search_x\" onSubmit={onReset}>\n                        <Header as=\"h4\">\n                          <Header.Content>\n                            <FormattedMessage\n                              id=\"Target\"\n                              defaultMessage=\"Target\"\n                            />\n                          </Header.Content>\n                        </Header>\n                        <Form.Field>\n                          <Input\n                            name=\"SearchX\"\n                            placeholder={intl.formatMessage(\n                              messages.searchRelationTarget,\n                            )}\n                            onChange={onChangeSearchXs}\n                            id=\"x-search-input\"\n                          />\n                          <Button.Group>\n                            <Button\n                              basic\n                              className=\"cancel\"\n                              aria-label=\"cancel\"\n                              onClick={(e) => {\n                                e.preventDefault();\n                                e.stopPropagation();\n                                document.querySelector(\n                                  'input[name=\"SearchX\"]',\n                                ).value = '';\n                                setQuery_target('');\n                              }}\n                            >\n                              <Icon name={clearSVG} size=\"24px\" />\n                            </Button>\n                          </Button.Group>\n                        </Form.Field>\n                      </Form>\n                      <Form\n                        className=\"add_potential_targets\"\n                        onSubmit={onReset}\n                      >\n                        <Form.Field>\n                          <Input\n                            name=\"showPotentialTargets\"\n                            type=\"url\"\n                            value={potential_targets_path}\n                            placeholder={intl.formatMessage(\n                              messages.addPotentialTargetsPath,\n                            )}\n                            onChange={({ target }) =>\n                              onChangeShowPotentialTargets(target.value)\n                            }\n                            id=\"potential-targets-path-input\"\n                          />\n                          {potential_targets_path?.length > 0 ? (\n                            <Button.Group>\n                              <Button\n                                basic\n                                className=\"cancel\"\n                                aria-label=\"clearUrlBrowser\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  e.stopPropagation();\n                                  clear_potential_targets_path();\n                                }}\n                              >\n                                <Icon name={clearSVG} size=\"24px\" />\n                              </Button>\n                            </Button.Group>\n                          ) : (\n                            <Button.Group>\n                              <Button\n                                basic\n                                icon\n                                aria-label=\"openUrlBrowser\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  e.stopPropagation();\n                                  props.openObjectBrowser({\n                                    mode: 'link',\n                                    overlay: true,\n                                    onSelectItem: (url) => {\n                                      onChangeShowPotentialTargets(url);\n                                    },\n                                  });\n                                }}\n                              >\n                                <Icon name={navTreeSVG} size=\"24px\" />\n                              </Button>\n                            </Button.Group>\n                          )}\n                        </Form.Field>\n                        <div className=\"foo\">\n                          <FormattedMessage\n                            id=\"Show potential targets. Not only objects that are target of some relation.\"\n                            defaultMessage=\"Show potential targets. Not only objects that are target of some relation.\"\n                          />{' '}\n                          <Popup\n                            trigger={\n                              <a\n                                href=\"https://6.docs.plone.org/volto/development/widget.html#widget-relation-field-label\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                              >\n                                <Icon name={helpSVG} size=\"16px\" />\n                              </a>\n                            }\n                          >\n                            <Popup.Header>Respect constraints</Popup.Header>\n                            <Popup.Content>\n                              <div>\n                                See docs.plone.org on how to respect\n                                constraints.\n                              </div>\n                            </Popup.Content>\n                          </Popup>\n                        </div>\n                      </Form>\n                    </div>\n                  </div>\n                  <div className=\"controlpanel_listing_wrapper\">\n                    <RelationsListing\n                      relationtype={relationtype}\n                      query_source={query_source}\n                      query_target={query_target}\n                      potential_targets_path={potential_targets_path}\n                      potential_sources_path={potential_sources_path}\n                    />\n                  </div>\n                </>\n              ) : null}\n            </div>\n          ) : (\n            <p>\n              <b>{relationsListError?.type}</b> {relationsListError?.message}\n            </p>\n          )}\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: intl.formatMessage(messages.fixRelations),\n      pane: (\n        <Tab.Pane attached={true} key=\"rebuild\">\n          <div>\n            {!(brokenRelations && Object.keys(brokenRelations).length > 0) && (\n              <div>\n                <FormattedMessage\n                  id=\"No broken relations found.\"\n                  defaultMessage=\"No broken relations found.\"\n                />\n              </div>\n            )}\n            {can_fix_relations ? (\n              <React.Fragment>\n                <Divider hidden />\n                <h2>\n                  {capitalize(intl.formatMessage(messages.rebuildRelations))}\n                </h2>\n\n                <Button.Group>\n                  <Button\n                    primary\n                    onClick={() => rebuildRelationsHandler(false)}\n                    content={intl.formatMessage(messages.rebuildRelations)}\n                    aria-label={intl.formatMessage(messages.rebuildRelations)}\n                  />\n                </Button.Group>\n\n                <Divider hidden />\n                <h2>\n                  {capitalize(\n                    intl.formatMessage(messages.flushAndRebuildRelations),\n                  )}\n                </h2>\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: intl.formatMessage(\n                      messages.flushAndRebuildRelationsHints,\n                    ),\n                  }}\n                />\n                <Divider hidden />\n                <Button.Group>\n                  <Button\n                    secondary\n                    color=\"red\"\n                    onClick={() => rebuildRelationsHandler(true)}\n                    content={intl.formatMessage(\n                      messages.flushAndRebuildRelations,\n                    )}\n                    aria-label={intl.formatMessage(\n                      messages.flushAndRebuildRelations,\n                    )}\n                  />\n                </Button.Group>\n              </React.Fragment>\n            ) : null}\n            <BrokenRelations />\n          </div>\n        </Tab.Pane>\n      ),\n    },\n  ];\n\n  return (\n    <Tab\n      panes={panes}\n      renderActiveOnly={false}\n      menu={{ secondary: true, pointing: true, attached: true, tabular: true }}\n    />\n  );\n};\n\nexport default compose(withObjectBrowser)(RelationsMatrix);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Relation name","defaultMessage":"Relation"},{"id":"Source","defaultMessage":"Source"},{"id":"Show potential sources. Not only objects that are source of some relation.","defaultMessage":"Show potential sources. Not only objects that are source of some relation."},{"id":"Target","defaultMessage":"Target"},{"id":"Show potential targets. Not only objects that are target of some relation.","defaultMessage":"Show potential targets. Not only objects that are target of some relation."},{"id":"No broken relations found.","defaultMessage":"No broken relations found."}]}},"sourceType":"module","externalDependencies":[]}