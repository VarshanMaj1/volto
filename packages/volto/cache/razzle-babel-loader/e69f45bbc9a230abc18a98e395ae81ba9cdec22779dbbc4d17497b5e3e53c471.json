{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Edit/Edit.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * Edit container.\n * @module components/manage/Edit/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport { extractInvariantErrors } from '@plone/volto/helpers/FormValidation/FormValidation';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { asyncConnect } from '@plone/volto/helpers/AsyncConnect';\nimport { hasApiExpander } from '@plone/volto/helpers/Utils/Utils';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Button, Grid, Menu } from 'semantic-ui-react';\nimport { createPortal } from 'react-dom';\nimport qs from 'query-string';\nimport find from 'lodash/find';\nimport { toast } from 'react-toastify';\nimport Forbidden from '@plone/volto/components/theme/Forbidden/Forbidden';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Sidebar from '@plone/volto/components/manage/Sidebar/Sidebar';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nimport Unauthorized from '@plone/volto/components/theme/Unauthorized/Unauthorized';\nimport CompareLanguages from '@plone/volto/components/manage/Multilingual/CompareLanguages';\nimport TranslationObject from '@plone/volto/components/manage/Multilingual/TranslationObject';\nimport { Form } from '@plone/volto/components/manage/Form';\nimport { updateContent, getContent, lockContent, unlockContent } from '@plone/volto/actions/content/content';\nimport { getSchema } from '@plone/volto/actions/schema/schema';\nimport { listActions } from '@plone/volto/actions/actions/actions';\nimport { setFormData } from '@plone/volto/actions/form/form';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport { hasBlocksData } from '@plone/volto/helpers/Blocks/Blocks';\nimport { preloadLazyLibs } from '@plone/volto/helpers/Loadable';\nimport { tryParseJSON } from '@plone/volto/helpers/FormValidation/FormValidation';\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport config from '@plone/volto/registry';\nconst messages = defineMessages({\n  edit: {\n    \"id\": \"Edit {title}\",\n    \"defaultMessage\": \"Edit {title}\"\n  },\n  save: {\n    \"id\": \"Save\",\n    \"defaultMessage\": \"Save\"\n  },\n  cancel: {\n    \"id\": \"Cancel\",\n    \"defaultMessage\": \"Cancel\"\n  },\n  error: {\n    \"id\": \"Error\",\n    \"defaultMessage\": \"Error\"\n  },\n  someErrors: {\n    \"id\": \"There are some errors.\",\n    \"defaultMessage\": \"There are some errors.\"\n  }\n});\n\n/**\n * Edit class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs EditComponent\n   */\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"form\", /*#__PURE__*/React.createRef());\n    _defineProperty(this, \"toolbarRef\", React.createRef);\n    this.state = {\n      visual: true,\n      isClient: false,\n      error: null,\n      formSelected: 'editForm',\n      newId: null\n    };\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    var _this$props$content;\n    if (this.props.getRequest.loaded && (_this$props$content = this.props.content) !== null && _this$props$content !== void 0 && _this$props$content['@type']) {\n      this.props.getSchema(this.props.content['@type'], getBaseUrl(this.props.pathname));\n    }\n    this.setState({\n      isClient: true,\n      comparingLanguage: null\n    });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    var _this$props, _this$props$content2;\n    if (this.props.getRequest.loading && nextProps.getRequest.loaded) {\n      if (nextProps.content['@type']) {\n        this.props.getSchema(nextProps.content['@type'], getBaseUrl(this.props.pathname));\n      }\n    }\n    if (this.props.schemaRequest.loading && nextProps.schemaRequest.loaded) {\n      if (!hasBlocksData(nextProps.schema.properties)) {\n        this.setState({\n          visual: false\n        });\n      }\n    }\n    // Hack for make the Plone site editable by Volto Editor without checkings\n    if (((_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$content2 = _this$props.content) === null || _this$props$content2 === void 0 ? void 0 : _this$props$content2['@type']) === 'Plone Site') {\n      this.setState({\n        visual: true\n      });\n    }\n    if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      this.props.setFormData({});\n      this.props.history.push(this.props.returnUrl || getBaseUrl(this.props.pathname));\n    }\n    if (this.props.updateRequest.loading && nextProps.updateRequest.error) {\n      var _nextProps$updateRequ, _nextProps$updateRequ2, _nextProps$updateRequ3, _nextProps$updateRequ4, _nextProps$updateRequ5, _nextProps$updateRequ6, _nextProps$updateRequ7, _nextProps$updateRequ8, _nextProps$updateRequ9, _DOMParser$parseFromS, _DOMParser$parseFromS2;\n      const message = ((_nextProps$updateRequ = nextProps.updateRequest.error) === null || _nextProps$updateRequ === void 0 ? void 0 : (_nextProps$updateRequ2 = _nextProps$updateRequ.response) === null || _nextProps$updateRequ2 === void 0 ? void 0 : (_nextProps$updateRequ3 = _nextProps$updateRequ2.body) === null || _nextProps$updateRequ3 === void 0 ? void 0 : (_nextProps$updateRequ4 = _nextProps$updateRequ3.error) === null || _nextProps$updateRequ4 === void 0 ? void 0 : _nextProps$updateRequ4.message) || ((_nextProps$updateRequ5 = nextProps.updateRequest.error) === null || _nextProps$updateRequ5 === void 0 ? void 0 : (_nextProps$updateRequ6 = _nextProps$updateRequ5.response) === null || _nextProps$updateRequ6 === void 0 ? void 0 : (_nextProps$updateRequ7 = _nextProps$updateRequ6.body) === null || _nextProps$updateRequ7 === void 0 ? void 0 : _nextProps$updateRequ7.message) || ((_nextProps$updateRequ8 = nextProps.updateRequest.error) === null || _nextProps$updateRequ8 === void 0 ? void 0 : (_nextProps$updateRequ9 = _nextProps$updateRequ8.response) === null || _nextProps$updateRequ9 === void 0 ? void 0 : _nextProps$updateRequ9.text) || '';\n      const error = ((_DOMParser$parseFromS = new DOMParser().parseFromString(message, 'text/html')) === null || _DOMParser$parseFromS === void 0 ? void 0 : (_DOMParser$parseFromS2 = _DOMParser$parseFromS.all[0]) === null || _DOMParser$parseFromS2 === void 0 ? void 0 : _DOMParser$parseFromS2.textContent) || message;\n      const errorsList = tryParseJSON(error);\n      let erroMessage;\n      if (Array.isArray(errorsList)) {\n        const invariantErrors = extractInvariantErrors(errorsList);\n        if (invariantErrors.length > 0) {\n          // Plone invariant validation message.\n          erroMessage = invariantErrors.join(' - ');\n        } else {\n          // Error in specific field.\n          erroMessage = this.props.intl.formatMessage(messages.someErrors);\n        }\n      } else {\n        erroMessage = error;\n      }\n      this.setState({\n        error: error\n      });\n      toast.error(__jsx(Toast, {\n        error: true,\n        title: this.props.intl.formatMessage(messages.error),\n        content: erroMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }\n      }));\n    }\n    if (nextProps.compare_to && (this.state.compareTo && nextProps.compare_to['@id'] !== this.state.compareTo['@id'] || !this.state.compareTo)) {\n      this.setState({\n        compareTo: nextProps.compare_to\n      });\n    }\n  }\n\n  /**\n   * Component will unmount\n   * @method componentWillUnmount\n   * @returns {undefined}\n   */\n  componentWillUnmount() {\n    var _this$props$content3, _this$props$content3$;\n    if ((_this$props$content3 = this.props.content) !== null && _this$props$content3 !== void 0 && (_this$props$content3$ = _this$props$content3.lock) !== null && _this$props$content3$ !== void 0 && _this$props$content3$.locked) {\n      const baseUrl = getBaseUrl(this.props.pathname);\n      const {\n        newId\n      } = this.state;\n      // Unlock the page, taking a possible id change into account\n      this.props.unlockContent(newId ? baseUrl.replace(/\\/[^/]*$/, '/' + newId) : baseUrl);\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    var _this$props$content4, _this$props$content4$;\n    const lock_token = (_this$props$content4 = this.props.content) === null || _this$props$content4 === void 0 ? void 0 : (_this$props$content4$ = _this$props$content4.lock) === null || _this$props$content4$ === void 0 ? void 0 : _this$props$content4$.token;\n    const headers = lock_token ? {\n      'Lock-Token': lock_token\n    } : {};\n    // if the id has changed, remember it for unlock control\n    if ('id' in data) {\n      this.setState({\n        newId: data.id\n      });\n    }\n    this.props.updateContent(getBaseUrl(this.props.pathname), data, headers);\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.setFormData({});\n    this.props.history.push(this.props.returnUrl || getBaseUrl(this.props.pathname));\n  }\n  setComparingLanguage(lang, content_id) {\n    this.setState({\n      comparingLanguage: lang\n    });\n    this.props.getContent(flattenToAppURL(content_id), null, 'compare_to', null);\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    var _this$props$content5, _this$props$content5$, _this$props$content5$2, _this$props$content6, _this$props2, _this$props2$schema, _this$props$objectAct, _this$props3, _this$props3$content, _this$props4, _this$props4$content, _this$props5, _this$props5$schema, _this$props$content7, _this$props$content$l, _this$props$content$l2;\n    const editPermission = find(this.props.objectActions, {\n      id: 'edit'\n    });\n    const pageEdit = __jsx(Form, {\n      isEditForm: true,\n      ref: this.form,\n      navRoot: ((_this$props$content5 = this.props.content) === null || _this$props$content5 === void 0 ? void 0 : (_this$props$content5$ = _this$props$content5['@components']) === null || _this$props$content5$ === void 0 ? void 0 : (_this$props$content5$2 = _this$props$content5$.navroot) === null || _this$props$content5$2 === void 0 ? void 0 : _this$props$content5$2.navroot) || {},\n      schema: this.props.schema,\n      type: (_this$props$content6 = this.props.content) === null || _this$props$content6 === void 0 ? void 0 : _this$props$content6['@type'],\n      formData: this.props.content,\n      requestError: this.state.error,\n      onSubmit: this.onSubmit,\n      hideActions: true,\n      pathname: this.props.pathname,\n      visual: this.state.visual,\n      title: (_this$props2 = this.props) !== null && _this$props2 !== void 0 && (_this$props2$schema = _this$props2.schema) !== null && _this$props2$schema !== void 0 && _this$props2$schema.title ? this.props.intl.formatMessage(messages.edit, {\n        title: this.props.schema.title\n      }) : null,\n      loading: this.props.updateRequest.loading,\n      isFormSelected: this.state.formSelected === 'editForm',\n      onSelectForm: () => {\n        this.setState({\n          formSelected: 'editForm'\n        });\n      },\n      global: true\n      // Properties to pass to the BlocksForm to match the View ones\n      ,\n      history: this.props.history,\n      location: this.props.location,\n      token: this.props.token,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 7\n      }\n    });\n    return __jsx(\"div\", {\n      id: \"page-edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 7\n      }\n    }, ((_this$props$objectAct = this.props.objectActions) === null || _this$props$objectAct === void 0 ? void 0 : _this$props$objectAct.length) > 0 && __jsx(React.Fragment, null, editPermission && __jsx(React.Fragment, null, __jsx(Helmet, {\n      title: (_this$props3 = this.props) !== null && _this$props3 !== void 0 && (_this$props3$content = _this$props3.content) !== null && _this$props3$content !== void 0 && _this$props3$content.title ? this.props.intl.formatMessage(messages.edit, {\n        title: (_this$props4 = this.props) === null || _this$props4 === void 0 ? void 0 : (_this$props4$content = _this$props4.content) === null || _this$props4$content === void 0 ? void 0 : _this$props4$content.title\n      }) : (_this$props5 = this.props) !== null && _this$props5 !== void 0 && (_this$props5$schema = _this$props5.schema) !== null && _this$props5$schema !== void 0 && _this$props5$schema.title ? this.props.intl.formatMessage(messages.edit, {\n        title: this.props.schema.title\n      }) : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }\n    }, ((_this$props$content7 = this.props.content) === null || _this$props$content7 === void 0 ? void 0 : _this$props$content7.language) && __jsx(\"html\", {\n      lang: this.props.content.language.token,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 21\n      }\n    })), this.state.comparingLanguage && this.state.compareTo ? __jsx(Grid, {\n      celled: \"internally\",\n      stackable: true,\n      columns: 2,\n      id: \"page-compare-translation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 19\n      }\n    }, __jsx(Grid.Column, {\n      className: \"source-object\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }\n    }, __jsx(TranslationObject, {\n      translationObject: this.state.compareTo,\n      schema: this.props.schema,\n      pathname: this.props.pathname,\n      visual: this.state.visual,\n      isFormSelected: this.state.formSelected === 'translationObjectForm',\n      onSelectForm: () => {\n        this.setState({\n          formSelected: 'translationObjectForm'\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 23\n      }\n    })), __jsx(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"new-translation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 23\n      }\n    }, __jsx(Menu, {\n      pointing: true,\n      secondary: true,\n      attached: true,\n      tabular: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 25\n      }\n    }, __jsx(Menu.Item, {\n      name: (_this$props$content$l = this.props.content.language) === null || _this$props$content$l === void 0 ? void 0 : _this$props$content$l.token.toUpperCase(),\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 27\n      }\n    }, (_this$props$content$l2 = this.props.content.language) === null || _this$props$content$l2 === void 0 ? void 0 : _this$props$content$l2.token.toUpperCase())), pageEdit))) : pageEdit), editPermission && this.state.visual && this.state.isClient && /*#__PURE__*/createPortal(__jsx(Sidebar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 28\n      }\n    }), document.getElementById('sidebar'))), !editPermission && __jsx(React.Fragment, null, this.props.token ? __jsx(Forbidden, {\n      pathname: this.props.pathname,\n      staticContext: this.props.staticContext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 15\n      }\n    }) : __jsx(Unauthorized, {\n      pathname: this.props.pathname,\n      staticContext: this.props.staticContext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 15\n      }\n    })), this.state.isClient && /*#__PURE__*/createPortal(__jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(React.Fragment, null, __jsx(Button, {\n        id: \"toolbar-save\",\n        className: \"save\",\n        \"aria-label\": this.props.intl.formatMessage(messages.save),\n        onClick: () => this.form.current.onSubmit(),\n        disabled: this.props.updateRequest.loading,\n        loading: this.props.updateRequest.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 19\n        }\n      }, __jsx(Icon, {\n        name: saveSVG,\n        className: \"circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.save),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 21\n        }\n      })), __jsx(Button, {\n        className: \"cancel\",\n        \"aria-label\": this.props.intl.formatMessage(messages.cancel),\n        onClick: () => this.onCancel(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 19\n        }\n      }, __jsx(Icon, {\n        name: clearSVG,\n        className: \"circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.cancel),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 21\n        }\n      })), config.settings.isMultilingual && __jsx(CompareLanguages, {\n        content: this.props.content,\n        visual: this.state.visual,\n        setComparingLanguage: (lang, id) => {\n          this.setComparingLanguage(lang, id);\n        },\n        comparingLanguage: this.state.comparingLanguage,\n        pathname: this.props.location.pathname,\n        toolbarRef: this.toolbarRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 21\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 13\n      }\n    }), document.getElementById('toolbar')));\n  }\n}\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_defineProperty(Edit, \"propTypes\", {\n  updateContent: PropTypes.func.isRequired,\n  getContent: PropTypes.func.isRequired,\n  getSchema: PropTypes.func.isRequired,\n  lockContent: PropTypes.func.isRequired,\n  unlockContent: PropTypes.func.isRequired,\n  updateRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  schemaRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  getRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  pathname: PropTypes.string.isRequired,\n  returnUrl: PropTypes.string,\n  content: PropTypes.shape({\n    '@type': PropTypes.string\n  }),\n  schema: PropTypes.objectOf(PropTypes.any),\n  objectActions: PropTypes.array,\n  newId: PropTypes.string\n});\n/**\n * Default properties\n * @property {Object} defaultProps Default properties.\n * @static\n */\n_defineProperty(Edit, \"defaultProps\", {\n  schema: null,\n  content: null,\n  returnUrl: null\n});\nexport const __test__ = compose(injectIntl, connect((state, props) => {\n  var _state$content$subreq, _state$content$subreq2;\n  return {\n    objectActions: state.actions.actions.object,\n    token: state.userSession.token,\n    content: state.content.data,\n    compare_to: (_state$content$subreq = state.content.subrequests) === null || _state$content$subreq === void 0 ? void 0 : (_state$content$subreq2 = _state$content$subreq.compare_to) === null || _state$content$subreq2 === void 0 ? void 0 : _state$content$subreq2.data,\n    schema: state.schema.schema,\n    getRequest: state.content.get,\n    schemaRequest: state.schema,\n    updateRequest: state.content.update,\n    createRequest: state.content.create,\n    pathname: props.location.pathname,\n    returnUrl: qs.parse(props.location.search).return_url\n  };\n}, {\n  updateContent,\n  getContent,\n  getSchema,\n  lockContent,\n  unlockContent\n}))(Edit);\nexport default compose(injectIntl, asyncConnect([{\n  key: 'actions',\n  promise: async ({\n    location,\n    store: {\n      dispatch\n    }\n  }) => {\n    // Do not trigger the actions action if the expander is present\n    if (!hasApiExpander('actions', getBaseUrl(location.pathname))) {\n      return await dispatch(listActions(getBaseUrl(location.pathname)));\n    }\n  }\n}, {\n  key: 'content',\n  promise: async ({\n    location,\n    store: {\n      dispatch\n    }\n  }) => {\n    const content = await dispatch(getContent(getBaseUrl(location.pathname)));\n    if ((content === null || content === void 0 ? void 0 : content.lock) !== undefined) {\n      await dispatch(lockContent(getBaseUrl(location.pathname)));\n    }\n    return content;\n  }\n}]), connect((state, props) => {\n  var _state$content$subreq3, _state$content$subreq4;\n  return {\n    objectActions: state.actions.actions.object,\n    token: state.userSession.token,\n    content: state.content.data,\n    compare_to: (_state$content$subreq3 = state.content.subrequests) === null || _state$content$subreq3 === void 0 ? void 0 : (_state$content$subreq4 = _state$content$subreq3.compare_to) === null || _state$content$subreq4 === void 0 ? void 0 : _state$content$subreq4.data,\n    schema: state.schema.schema,\n    getRequest: state.content.get,\n    schemaRequest: state.schema,\n    updateRequest: state.content.update,\n    pathname: props.location.pathname,\n    returnUrl: qs.parse(props.location.search).return_url\n  };\n}, {\n  updateContent,\n  getContent,\n  getSchema,\n  lockContent,\n  unlockContent,\n  setFormData\n}), preloadLazyLibs('cms'))(Edit);","map":{"version":3,"names":["React","Component","PropTypes","Helmet","extractInvariantErrors","connect","compose","asyncConnect","hasApiExpander","defineMessages","injectIntl","Button","Grid","Menu","createPortal","qs","find","toast","Forbidden","Icon","Sidebar","Toast","Toolbar","Unauthorized","CompareLanguages","TranslationObject","Form","updateContent","getContent","lockContent","unlockContent","getSchema","listActions","setFormData","flattenToAppURL","getBaseUrl","hasBlocksData","preloadLazyLibs","tryParseJSON","saveSVG","clearSVG","config","messages","edit","save","cancel","error","someErrors","Edit","constructor","props","_defineProperty","createRef","state","visual","isClient","formSelected","newId","onCancel","bind","onSubmit","componentDidMount","_this$props$content","getRequest","loaded","content","pathname","setState","comparingLanguage","UNSAFE_componentWillReceiveProps","nextProps","_this$props","_this$props$content2","loading","schemaRequest","schema","properties","updateRequest","history","push","returnUrl","_nextProps$updateRequ","_nextProps$updateRequ2","_nextProps$updateRequ3","_nextProps$updateRequ4","_nextProps$updateRequ5","_nextProps$updateRequ6","_nextProps$updateRequ7","_nextProps$updateRequ8","_nextProps$updateRequ9","_DOMParser$parseFromS","_DOMParser$parseFromS2","message","response","body","text","DOMParser","parseFromString","all","textContent","errorsList","erroMessage","Array","isArray","invariantErrors","length","join","intl","formatMessage","__jsx","title","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","compare_to","compareTo","componentWillUnmount","_this$props$content3","_this$props$content3$","lock","locked","baseUrl","replace","data","_this$props$content4","_this$props$content4$","lock_token","token","headers","id","setComparingLanguage","lang","content_id","render","_this$props$content5","_this$props$content5$","_this$props$content5$2","_this$props$content6","_this$props2","_this$props2$schema","_this$props$objectAct","_this$props3","_this$props3$content","_this$props4","_this$props4$content","_this$props5","_this$props5$schema","_this$props$content7","_this$props$content$l","_this$props$content$l2","editPermission","objectActions","pageEdit","isEditForm","ref","form","navRoot","navroot","type","formData","requestError","hideActions","isFormSelected","onSelectForm","global","location","Fragment","language","celled","stackable","columns","Column","className","translationObject","pointing","secondary","attached","tabular","Item","name","toUpperCase","active","document","getElementById","staticContext","hideDefaultViewButtons","inner","onClick","current","disabled","size","settings","isMultilingual","toolbarRef","func","isRequired","shape","bool","string","objectOf","any","array","__test__","_state$content$subreq","_state$content$subreq2","actions","object","userSession","subrequests","get","update","createRequest","create","parse","search","return_url","key","promise","store","dispatch","undefined","_state$content$subreq3","_state$content$subreq4"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Edit/Edit.jsx"],"sourcesContent":["/**\n * Edit container.\n * @module components/manage/Edit/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport { extractInvariantErrors } from '@plone/volto/helpers/FormValidation/FormValidation';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { asyncConnect } from '@plone/volto/helpers/AsyncConnect';\nimport { hasApiExpander } from '@plone/volto/helpers/Utils/Utils';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Button, Grid, Menu } from 'semantic-ui-react';\nimport { createPortal } from 'react-dom';\nimport qs from 'query-string';\nimport find from 'lodash/find';\nimport { toast } from 'react-toastify';\n\nimport Forbidden from '@plone/volto/components/theme/Forbidden/Forbidden';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Sidebar from '@plone/volto/components/manage/Sidebar/Sidebar';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nimport Unauthorized from '@plone/volto/components/theme/Unauthorized/Unauthorized';\nimport CompareLanguages from '@plone/volto/components/manage/Multilingual/CompareLanguages';\nimport TranslationObject from '@plone/volto/components/manage/Multilingual/TranslationObject';\nimport { Form } from '@plone/volto/components/manage/Form';\nimport {\n  updateContent,\n  getContent,\n  lockContent,\n  unlockContent,\n} from '@plone/volto/actions/content/content';\nimport { getSchema } from '@plone/volto/actions/schema/schema';\nimport { listActions } from '@plone/volto/actions/actions/actions';\nimport { setFormData } from '@plone/volto/actions/form/form';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport { hasBlocksData } from '@plone/volto/helpers/Blocks/Blocks';\nimport { preloadLazyLibs } from '@plone/volto/helpers/Loadable';\nimport { tryParseJSON } from '@plone/volto/helpers/FormValidation/FormValidation';\n\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  edit: {\n    id: 'Edit {title}',\n    defaultMessage: 'Edit {title}',\n  },\n  save: {\n    id: 'Save',\n    defaultMessage: 'Save',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  someErrors: {\n    id: 'There are some errors.',\n    defaultMessage: 'There are some errors.',\n  },\n});\n\n/**\n * Edit class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateContent: PropTypes.func.isRequired,\n    getContent: PropTypes.func.isRequired,\n    getSchema: PropTypes.func.isRequired,\n    lockContent: PropTypes.func.isRequired,\n    unlockContent: PropTypes.func.isRequired,\n    updateRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    schemaRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    getRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    pathname: PropTypes.string.isRequired,\n    returnUrl: PropTypes.string,\n    content: PropTypes.shape({\n      '@type': PropTypes.string,\n    }),\n    schema: PropTypes.objectOf(PropTypes.any),\n    objectActions: PropTypes.array,\n    newId: PropTypes.string,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    schema: null,\n    content: null,\n    returnUrl: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs EditComponent\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      visual: true,\n      isClient: false,\n      error: null,\n      formSelected: 'editForm',\n      newId: null,\n    };\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.getRequest.loaded && this.props.content?.['@type']) {\n      this.props.getSchema(\n        this.props.content['@type'],\n        getBaseUrl(this.props.pathname),\n      );\n    }\n    this.setState({\n      isClient: true,\n      comparingLanguage: null,\n    });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.getRequest.loading && nextProps.getRequest.loaded) {\n      if (nextProps.content['@type']) {\n        this.props.getSchema(\n          nextProps.content['@type'],\n          getBaseUrl(this.props.pathname),\n        );\n      }\n    }\n    if (this.props.schemaRequest.loading && nextProps.schemaRequest.loaded) {\n      if (!hasBlocksData(nextProps.schema.properties)) {\n        this.setState({\n          visual: false,\n        });\n      }\n    }\n    // Hack for make the Plone site editable by Volto Editor without checkings\n    if (this.props?.content?.['@type'] === 'Plone Site') {\n      this.setState({\n        visual: true,\n      });\n    }\n    if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      this.props.setFormData({});\n      this.props.history.push(\n        this.props.returnUrl || getBaseUrl(this.props.pathname),\n      );\n    }\n\n    if (this.props.updateRequest.loading && nextProps.updateRequest.error) {\n      const message =\n        nextProps.updateRequest.error?.response?.body?.error?.message ||\n        nextProps.updateRequest.error?.response?.body?.message ||\n        nextProps.updateRequest.error?.response?.text ||\n        '';\n\n      const error =\n        new DOMParser().parseFromString(message, 'text/html')?.all[0]\n          ?.textContent || message;\n\n      const errorsList = tryParseJSON(error);\n      let erroMessage;\n      if (Array.isArray(errorsList)) {\n        const invariantErrors = extractInvariantErrors(errorsList);\n        if (invariantErrors.length > 0) {\n          // Plone invariant validation message.\n          erroMessage = invariantErrors.join(' - ');\n        } else {\n          // Error in specific field.\n          erroMessage = this.props.intl.formatMessage(messages.someErrors);\n        }\n      } else {\n        erroMessage = error;\n      }\n\n      this.setState({ error: error });\n\n      toast.error(\n        <Toast\n          error\n          title={this.props.intl.formatMessage(messages.error)}\n          content={erroMessage}\n        />,\n      );\n    }\n\n    if (\n      nextProps.compare_to &&\n      ((this.state.compareTo &&\n        nextProps.compare_to['@id'] !== this.state.compareTo['@id']) ||\n        !this.state.compareTo)\n    ) {\n      this.setState({ compareTo: nextProps.compare_to });\n    }\n  }\n\n  /**\n   * Component will unmount\n   * @method componentWillUnmount\n   * @returns {undefined}\n   */\n  componentWillUnmount() {\n    if (this.props.content?.lock?.locked) {\n      const baseUrl = getBaseUrl(this.props.pathname);\n      const { newId } = this.state;\n      // Unlock the page, taking a possible id change into account\n      this.props.unlockContent(\n        newId ? baseUrl.replace(/\\/[^/]*$/, '/' + newId) : baseUrl,\n      );\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    const lock_token = this.props.content?.lock?.token;\n    const headers = lock_token ? { 'Lock-Token': lock_token } : {};\n    // if the id has changed, remember it for unlock control\n    if ('id' in data) {\n      this.setState({ newId: data.id });\n    }\n    this.props.updateContent(getBaseUrl(this.props.pathname), data, headers);\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.setFormData({});\n    this.props.history.push(\n      this.props.returnUrl || getBaseUrl(this.props.pathname),\n    );\n  }\n\n  setComparingLanguage(lang, content_id) {\n    this.setState({ comparingLanguage: lang });\n    this.props.getContent(\n      flattenToAppURL(content_id),\n      null,\n      'compare_to',\n      null,\n    );\n  }\n\n  form = React.createRef();\n  toolbarRef = React.createRef;\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const editPermission = find(this.props.objectActions, { id: 'edit' });\n\n    const pageEdit = (\n      <Form\n        isEditForm\n        ref={this.form}\n        navRoot={this.props.content?.['@components']?.navroot?.navroot || {}}\n        schema={this.props.schema}\n        type={this.props.content?.['@type']}\n        formData={this.props.content}\n        requestError={this.state.error}\n        onSubmit={this.onSubmit}\n        hideActions\n        pathname={this.props.pathname}\n        visual={this.state.visual}\n        title={\n          this.props?.schema?.title\n            ? this.props.intl.formatMessage(messages.edit, {\n                title: this.props.schema.title,\n              })\n            : null\n        }\n        loading={this.props.updateRequest.loading}\n        isFormSelected={this.state.formSelected === 'editForm'}\n        onSelectForm={() => {\n          this.setState({ formSelected: 'editForm' });\n        }}\n        global\n        // Properties to pass to the BlocksForm to match the View ones\n        history={this.props.history}\n        location={this.props.location}\n        token={this.props.token}\n      />\n    );\n\n    return (\n      <div id=\"page-edit\">\n        {this.props.objectActions?.length > 0 && (\n          <>\n            {editPermission && (\n              <>\n                <Helmet\n                  title={\n                    this.props?.content?.title\n                      ? this.props.intl.formatMessage(messages.edit, {\n                          title: this.props?.content?.title,\n                        })\n                      : this.props?.schema?.title\n                        ? this.props.intl.formatMessage(messages.edit, {\n                            title: this.props.schema.title,\n                          })\n                        : null\n                  }\n                >\n                  {this.props.content?.language && (\n                    <html lang={this.props.content.language.token} />\n                  )}\n                </Helmet>\n\n                {this.state.comparingLanguage && this.state.compareTo ? (\n                  <Grid\n                    celled=\"internally\"\n                    stackable\n                    columns={2}\n                    id=\"page-compare-translation\"\n                  >\n                    <Grid.Column className=\"source-object\">\n                      <TranslationObject\n                        translationObject={this.state.compareTo}\n                        schema={this.props.schema}\n                        pathname={this.props.pathname}\n                        visual={this.state.visual}\n                        isFormSelected={\n                          this.state.formSelected === 'translationObjectForm'\n                        }\n                        onSelectForm={() => {\n                          this.setState({\n                            formSelected: 'translationObjectForm',\n                          });\n                        }}\n                      />\n                    </Grid.Column>\n                    <Grid.Column>\n                      <div className=\"new-translation\">\n                        <Menu pointing secondary attached tabular>\n                          <Menu.Item\n                            name={this.props.content.language?.token.toUpperCase()}\n                            active={true}\n                          >\n                            {this.props.content.language?.token.toUpperCase()}\n                          </Menu.Item>\n                        </Menu>\n\n                        {pageEdit}\n                      </div>\n                    </Grid.Column>\n                  </Grid>\n                ) : (\n                  pageEdit\n                )}\n              </>\n            )}\n\n            {editPermission &&\n              this.state.visual &&\n              this.state.isClient &&\n              createPortal(<Sidebar />, document.getElementById('sidebar'))}\n          </>\n        )}\n        {!editPermission && (\n          <>\n            {this.props.token ? (\n              <Forbidden\n                pathname={this.props.pathname}\n                staticContext={this.props.staticContext}\n              />\n            ) : (\n              <Unauthorized\n                pathname={this.props.pathname}\n                staticContext={this.props.staticContext}\n              />\n            )}\n          </>\n        )}\n        {this.state.isClient &&\n          createPortal(\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <>\n                  <Button\n                    id=\"toolbar-save\"\n                    className=\"save\"\n                    aria-label={this.props.intl.formatMessage(messages.save)}\n                    onClick={() => this.form.current.onSubmit()}\n                    disabled={this.props.updateRequest.loading}\n                    loading={this.props.updateRequest.loading}\n                  >\n                    <Icon\n                      name={saveSVG}\n                      className=\"circled\"\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.save)}\n                    />\n                  </Button>\n                  <Button\n                    className=\"cancel\"\n                    aria-label={this.props.intl.formatMessage(messages.cancel)}\n                    onClick={() => this.onCancel()}\n                  >\n                    <Icon\n                      name={clearSVG}\n                      className=\"circled\"\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.cancel)}\n                    />\n                  </Button>\n\n                  {config.settings.isMultilingual && (\n                    <CompareLanguages\n                      content={this.props.content}\n                      visual={this.state.visual}\n                      setComparingLanguage={(lang, id) => {\n                        this.setComparingLanguage(lang, id);\n                      }}\n                      comparingLanguage={this.state.comparingLanguage}\n                      pathname={this.props.location.pathname}\n                      toolbarRef={this.toolbarRef}\n                    />\n                  )}\n                </>\n              }\n            />,\n            document.getElementById('toolbar'),\n          )}\n      </div>\n    );\n  }\n}\n\nexport const __test__ = compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      objectActions: state.actions.actions.object,\n      token: state.userSession.token,\n      content: state.content.data,\n      compare_to: state.content.subrequests?.compare_to?.data,\n      schema: state.schema.schema,\n      getRequest: state.content.get,\n      schemaRequest: state.schema,\n      updateRequest: state.content.update,\n      createRequest: state.content.create,\n      pathname: props.location.pathname,\n      returnUrl: qs.parse(props.location.search).return_url,\n    }),\n    {\n      updateContent,\n      getContent,\n      getSchema,\n      lockContent,\n      unlockContent,\n    },\n  ),\n)(Edit);\n\nexport default compose(\n  injectIntl,\n  asyncConnect([\n    {\n      key: 'actions',\n      promise: async ({ location, store: { dispatch } }) => {\n        // Do not trigger the actions action if the expander is present\n        if (!hasApiExpander('actions', getBaseUrl(location.pathname))) {\n          return await dispatch(listActions(getBaseUrl(location.pathname)));\n        }\n      },\n    },\n    {\n      key: 'content',\n      promise: async ({ location, store: { dispatch } }) => {\n        const content = await dispatch(\n          getContent(getBaseUrl(location.pathname)),\n        );\n        if (content?.lock !== undefined) {\n          await dispatch(lockContent(getBaseUrl(location.pathname)));\n        }\n        return content;\n      },\n    },\n  ]),\n  connect(\n    (state, props) => ({\n      objectActions: state.actions.actions.object,\n      token: state.userSession.token,\n      content: state.content.data,\n      compare_to: state.content.subrequests?.compare_to?.data,\n      schema: state.schema.schema,\n      getRequest: state.content.get,\n      schemaRequest: state.schema,\n      updateRequest: state.content.update,\n      pathname: props.location.pathname,\n      returnUrl: qs.parse(props.location.search).return_url,\n    }),\n    {\n      updateContent,\n      getContent,\n      getSchema,\n      lockContent,\n      unlockContent,\n      setFormData,\n    },\n  ),\n  preloadLazyLibs('cms'),\n)(Edit);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Edit {title}","defaultMessage":"Edit {title}"},{"id":"Save","defaultMessage":"Save"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Error","defaultMessage":"Error"},{"id":"There are some errors.","defaultMessage":"There are some errors."}]}},"sourceType":"module","externalDependencies":[]}