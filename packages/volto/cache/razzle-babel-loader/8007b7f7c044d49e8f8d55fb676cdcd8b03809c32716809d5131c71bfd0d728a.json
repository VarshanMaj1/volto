{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Contents/ContentsTagsModal.jsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport map from 'lodash/map';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { usePrevious } from '@plone/volto/helpers/Utils/usePrevious';\nimport { updateContent } from '@plone/volto/actions/content/content';\nimport { ModalForm } from '@plone/volto/components/manage/Form';\nconst messages = defineMessages({\n  default: {\n    \"id\": \"Default\",\n    \"defaultMessage\": \"Default\"\n  },\n  tags: {\n    \"id\": \"Tags\",\n    \"defaultMessage\": \"Tags\"\n  },\n  tagsToRemove: {\n    \"id\": \"Tags to remove\",\n    \"defaultMessage\": \"Tags to remove\"\n  },\n  tagsToAdd: {\n    \"id\": \"Tags to add\",\n    \"defaultMessage\": \"Tags to add\"\n  }\n});\nconst ContentsTagsModal = props => {\n  const {\n    items,\n    open,\n    onCancel,\n    onOk\n  } = props;\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const request = useSelector(state => state.content.update);\n  const prevrequestloading = usePrevious(request.loading);\n  useEffect(() => {\n    if (prevrequestloading && request.loaded) {\n      onOk();\n    }\n  }, [onOk, prevrequestloading, request.loaded]);\n  const onSubmit = useCallback(({\n    tags_to_add = [],\n    tags_to_remove = []\n  }) => {\n    dispatch(updateContent(map(items, item => item.url), map(items, item => {\n      var _item$subjects;\n      return {\n        subjects: [...new Set(((_item$subjects = item.subjects) !== null && _item$subjects !== void 0 ? _item$subjects : []).filter(s => !tags_to_remove.includes(s)).concat(tags_to_add))]\n      };\n    })));\n  }, [dispatch, items]);\n  const currentSetTags = useMemo(() => [...new Set(items.map(item => item.subjects).flat())], [items]);\n  return open && __jsx(ModalForm, {\n    open: open,\n    onSubmit: onSubmit,\n    onCancel: onCancel,\n    title: intl.formatMessage(messages.tags),\n    schema: {\n      fieldsets: [{\n        id: 'default',\n        title: intl.formatMessage(messages.default),\n        fields: ['tags_to_remove', 'tags_to_add']\n      }],\n      properties: {\n        tags_to_remove: {\n          type: 'array',\n          widget: 'array',\n          title: intl.formatMessage(messages.tagsToRemove),\n          choices: currentSetTags.map(tag => [tag, tag])\n        },\n        tags_to_add: {\n          type: 'array',\n          widget: 'token',\n          title: intl.formatMessage(messages.tagsToAdd),\n          items: {\n            vocabulary: {\n              '@id': 'plone.app.vocabularies.Keywords'\n            }\n          }\n        }\n      },\n      required: []\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  });\n};\nContentsTagsModal.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    subjects: PropTypes.arrayOf(PropTypes.string),\n    url: PropTypes.string\n  })).isRequired,\n  open: PropTypes.bool.isRequired,\n  onOk: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};\nexport default ContentsTagsModal;","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","PropTypes","useDispatch","useSelector","map","defineMessages","useIntl","usePrevious","updateContent","ModalForm","messages","default","tags","tagsToRemove","tagsToAdd","ContentsTagsModal","props","items","open","onCancel","onOk","intl","dispatch","request","state","content","update","prevrequestloading","loading","loaded","onSubmit","tags_to_add","tags_to_remove","item","url","_item$subjects","subjects","Set","filter","s","includes","concat","currentSetTags","flat","__jsx","title","formatMessage","schema","fieldsets","id","fields","properties","type","widget","choices","tag","vocabulary","required","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","arrayOf","shape","string","isRequired","bool","func"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Contents/ContentsTagsModal.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport map from 'lodash/map';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport { usePrevious } from '@plone/volto/helpers/Utils/usePrevious';\nimport { updateContent } from '@plone/volto/actions/content/content';\nimport { ModalForm } from '@plone/volto/components/manage/Form';\n\nconst messages = defineMessages({\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  tags: {\n    id: 'Tags',\n    defaultMessage: 'Tags',\n  },\n  tagsToRemove: {\n    id: 'Tags to remove',\n    defaultMessage: 'Tags to remove',\n  },\n  tagsToAdd: {\n    id: 'Tags to add',\n    defaultMessage: 'Tags to add',\n  },\n});\n\nconst ContentsTagsModal = (props) => {\n  const { items, open, onCancel, onOk } = props;\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const request = useSelector((state) => state.content.update);\n  const prevrequestloading = usePrevious(request.loading);\n\n  useEffect(() => {\n    if (prevrequestloading && request.loaded) {\n      onOk();\n    }\n  }, [onOk, prevrequestloading, request.loaded]);\n\n  const onSubmit = useCallback(\n    ({ tags_to_add = [], tags_to_remove = [] }) => {\n      dispatch(\n        updateContent(\n          map(items, (item) => item.url),\n          map(items, (item) => ({\n            subjects: [\n              ...new Set(\n                (item.subjects ?? [])\n                  .filter((s) => !tags_to_remove.includes(s))\n                  .concat(tags_to_add),\n              ),\n            ],\n          })),\n        ),\n      );\n    },\n    [dispatch, items],\n  );\n\n  const currentSetTags = useMemo(\n    () => [...new Set(items.map((item) => item.subjects).flat())],\n    [items],\n  );\n\n  return (\n    open && (\n      <ModalForm\n        open={open}\n        onSubmit={onSubmit}\n        onCancel={onCancel}\n        title={intl.formatMessage(messages.tags)}\n        schema={{\n          fieldsets: [\n            {\n              id: 'default',\n              title: intl.formatMessage(messages.default),\n              fields: ['tags_to_remove', 'tags_to_add'],\n            },\n          ],\n          properties: {\n            tags_to_remove: {\n              type: 'array',\n              widget: 'array',\n              title: intl.formatMessage(messages.tagsToRemove),\n              choices: currentSetTags.map((tag) => [tag, tag]),\n            },\n            tags_to_add: {\n              type: 'array',\n              widget: 'token',\n              title: intl.formatMessage(messages.tagsToAdd),\n              items: {\n                vocabulary: { '@id': 'plone.app.vocabularies.Keywords' },\n              },\n            },\n          },\n          required: [],\n        }}\n      />\n    )\n  );\n};\n\nContentsTagsModal.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      subjects: PropTypes.arrayOf(PropTypes.string),\n      url: PropTypes.string,\n    }),\n  ).isRequired,\n  open: PropTypes.bool.isRequired,\n  onOk: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n};\nexport default ContentsTagsModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Default","defaultMessage":"Default"},{"id":"Tags","defaultMessage":"Tags"},{"id":"Tags to remove","defaultMessage":"Tags to remove"},{"id":"Tags to add","defaultMessage":"Tags to add"}]}},"sourceType":"module","externalDependencies":[]}