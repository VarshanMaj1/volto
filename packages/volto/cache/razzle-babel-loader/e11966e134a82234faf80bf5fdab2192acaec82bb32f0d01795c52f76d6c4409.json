{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * Form reducer.\n * This reducer is prepopulated on the server based on post data.\n * @module reducers/form/form\n */\n\nimport { SET_FORM_DATA, SET_UI_STATE } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  global: {},\n  ui: {\n    selected: null,\n    multiSelected: [],\n    gridSelected: null,\n    hovered: null\n  }\n};\n\n/**\n * Form reducer.\n * @function form\n * @param {Object} state Current state.\n * @returns {Object} New state.\n */\nexport default function form(state = initialState, action = {}) {\n  switch (action.type) {\n    case SET_FORM_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        global: action.data\n      });\n    case SET_UI_STATE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        ui: _objectSpread(_objectSpread({}, state.ui), action.ui)\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["SET_FORM_DATA","SET_UI_STATE","initialState","global","ui","selected","multiSelected","gridSelected","hovered","form","state","action","type","_objectSpread","data"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/reducers/form/form.js"],"sourcesContent":["/**\n * Form reducer.\n * This reducer is prepopulated on the server based on post data.\n * @module reducers/form/form\n */\n\nimport {\n  SET_FORM_DATA,\n  SET_UI_STATE,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  global: {},\n  ui: {\n    selected: null,\n    multiSelected: [],\n    gridSelected: null,\n    hovered: null,\n  },\n};\n\n/**\n * Form reducer.\n * @function form\n * @param {Object} state Current state.\n * @returns {Object} New state.\n */\nexport default function form(state = initialState, action = {}) {\n  switch (action.type) {\n    case SET_FORM_DATA:\n      return {\n        ...state,\n        global: action.data,\n      };\n    case SET_UI_STATE:\n      return {\n        ...state,\n        ui: {\n          ...state.ui,\n          ...action.ui,\n        },\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA,SACEA,aAAa,EACbC,YAAY,QACP,oCAAoC;AAE3C,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,CAAC,CAAC;EACVC,EAAE,EAAE;IACFC,QAAQ,EAAE,IAAI;IACdC,aAAa,EAAE,EAAE;IACjBC,YAAY,EAAE,IAAI;IAClBC,OAAO,EAAE;EACX;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,IAAIA,CAACC,KAAK,GAAGR,YAAY,EAAES,MAAM,GAAG,CAAC,CAAC,EAAE;EAC9D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKZ,aAAa;MAChB,OAAAa,aAAA,CAAAA,aAAA,KACKH,KAAK;QACRP,MAAM,EAAEQ,MAAM,CAACG;MAAI;IAEvB,KAAKb,YAAY;MACf,OAAAY,aAAA,CAAAA,aAAA,KACKH,KAAK;QACRN,EAAE,EAAAS,aAAA,CAAAA,aAAA,KACGH,KAAK,CAACN,EAAE,GACRO,MAAM,CAACP,EAAE;MACb;IAEL;MACE,OAAOM,KAAK;EAChB;AACF","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}