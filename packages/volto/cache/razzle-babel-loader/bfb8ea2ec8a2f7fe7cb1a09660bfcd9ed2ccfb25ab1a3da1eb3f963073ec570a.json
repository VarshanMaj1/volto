{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto-slate/src/blocks/Table/TableBlockView.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * Slate Table block's View component.\n * @module volto-slate/blocks/Table/View\n */\n\nimport React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\nimport map from 'lodash/map';\nimport { serializeNodes, serializeNodesToText } from '@plone/volto-slate/editor/render';\nimport { Node } from 'slate';\n\n// TODO: loading LESS files with `volto-slate/...` paths does not work currently\nimport '../../editor/plugins/Table/less/public.less';\n\n/**\n * Slate Table block's View class.\n * @class View\n * @extends Component\n * @param {object} data The table data to render as a table.\n */\nconst View = ({\n  data\n}) => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    column: null,\n    direction: null\n  });\n  const headers = useMemo(() => {\n    var _data$table$rows, _data$table$rows$;\n    return (_data$table$rows = data.table.rows) === null || _data$table$rows === void 0 ? void 0 : (_data$table$rows$ = _data$table$rows[0]) === null || _data$table$rows$ === void 0 ? void 0 : _data$table$rows$.cells;\n  }, [data.table.rows]);\n  const rows = useMemo(() => {\n    const items = [];\n    if (!data.table.rows) return [];\n    data.table.rows.forEach((row, index) => {\n      if (index > 0) {\n        items[index] = [];\n        row.cells.forEach((cell, cellIndex) => {\n          items[index][cellIndex] = _objectSpread(_objectSpread({}, cell), {}, {\n            value: cell.value && Node.string({\n              children: cell.value\n            }).length > 0 ? serializeNodes(cell.value) : '\\u00A0',\n            valueText: cell.value && Node.string({\n              children: cell.value\n            }).length > 0 ? serializeNodesToText(cell.value) : '\\u00A0'\n          });\n        });\n      }\n    });\n    return items;\n  }, [data.table.rows]);\n  const sortedRows = useMemo(() => {\n    if (state.column === null) return Object.keys(rows);\n    return Object.keys(rows).sort((a, b) => {\n      const a_text = rows[a][state.column].valueText;\n      const b_text = rows[b][state.column].valueText;\n      if (state.direction === 'ascending' ? a_text < b_text : a_text > b_text) {\n        return -1;\n      }\n      if (state.direction === 'ascending' ? a_text > b_text : a_text < b_text) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [state, rows]);\n  return __jsx(React.Fragment, null, data && data.table && __jsx(Table, {\n    fixed: data.table.fixed,\n    compact: data.table.compact,\n    basic: data.table.basic ? 'very' : false,\n    celled: data.table.celled,\n    inverted: data.table.inverted,\n    striped: data.table.striped,\n    sortable: data.table.sortable,\n    className: \"slate-table-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, !data.table.hideHeaders ? __jsx(Table.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, __jsx(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, headers.map((cell, index) => __jsx(Table.HeaderCell, {\n    key: cell.key,\n    textAlign: \"left\",\n    verticalAlign: \"middle\",\n    sorted: state.column === index ? state.direction : null,\n    onClick: () => {\n      if (!data.table.sortable) return;\n      setState({\n        column: index,\n        direction: state.column !== index ? 'ascending' : state.direction === 'ascending' ? 'descending' : 'ascending'\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }, cell.value && Node.string({\n    children: cell.value\n  }).length > 0 ? serializeNodes(cell.value) : '\\u00A0')))) : '', __jsx(Table.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, map(sortedRows, row => __jsx(Table.Row, {\n    key: row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, map(rows[row], cell => __jsx(Table.Cell, {\n    key: cell.key,\n    textAlign: \"left\",\n    verticalAlign: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, cell.value)))))));\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default View;","map":{"version":3,"names":["React","useState","useMemo","PropTypes","Table","map","serializeNodes","serializeNodesToText","Node","View","data","state","setState","column","direction","headers","_data$table$rows","_data$table$rows$","table","rows","cells","items","forEach","row","index","cell","cellIndex","_objectSpread","value","string","children","length","valueText","sortedRows","Object","keys","sort","a","b","a_text","b_text","__jsx","Fragment","fixed","compact","basic","celled","inverted","striped","sortable","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","hideHeaders","Header","Row","HeaderCell","key","textAlign","verticalAlign","sorted","onClick","Body","Cell","propTypes","objectOf","any","isRequired"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto-slate/src/blocks/Table/TableBlockView.jsx"],"sourcesContent":["/**\n * Slate Table block's View component.\n * @module volto-slate/blocks/Table/View\n */\n\nimport React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\nimport map from 'lodash/map';\nimport {\n  serializeNodes,\n  serializeNodesToText,\n} from '@plone/volto-slate/editor/render';\nimport { Node } from 'slate';\n\n// TODO: loading LESS files with `volto-slate/...` paths does not work currently\nimport '../../editor/plugins/Table/less/public.less';\n\n/**\n * Slate Table block's View class.\n * @class View\n * @extends Component\n * @param {object} data The table data to render as a table.\n */\nconst View = ({ data }) => {\n  const [state, setState] = useState({\n    column: null,\n    direction: null,\n  });\n\n  const headers = useMemo(() => {\n    return data.table.rows?.[0]?.cells;\n  }, [data.table.rows]);\n\n  const rows = useMemo(() => {\n    const items = [];\n    if (!data.table.rows) return [];\n    data.table.rows.forEach((row, index) => {\n      if (index > 0) {\n        items[index] = [];\n        row.cells.forEach((cell, cellIndex) => {\n          items[index][cellIndex] = {\n            ...cell,\n            value:\n              cell.value && Node.string({ children: cell.value }).length > 0\n                ? serializeNodes(cell.value)\n                : '\\u00A0',\n            valueText:\n              cell.value && Node.string({ children: cell.value }).length > 0\n                ? serializeNodesToText(cell.value)\n                : '\\u00A0',\n          };\n        });\n      }\n    });\n    return items;\n  }, [data.table.rows]);\n\n  const sortedRows = useMemo(() => {\n    if (state.column === null) return Object.keys(rows);\n    return Object.keys(rows).sort((a, b) => {\n      const a_text = rows[a][state.column].valueText;\n      const b_text = rows[b][state.column].valueText;\n      if (state.direction === 'ascending' ? a_text < b_text : a_text > b_text) {\n        return -1;\n      }\n      if (state.direction === 'ascending' ? a_text > b_text : a_text < b_text) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [state, rows]);\n\n  return (\n    <>\n      {data && data.table && (\n        <Table\n          fixed={data.table.fixed}\n          compact={data.table.compact}\n          basic={data.table.basic ? 'very' : false}\n          celled={data.table.celled}\n          inverted={data.table.inverted}\n          striped={data.table.striped}\n          sortable={data.table.sortable}\n          className=\"slate-table-block\"\n        >\n          {!data.table.hideHeaders ? (\n            <Table.Header>\n              <Table.Row>\n                {headers.map((cell, index) => (\n                  <Table.HeaderCell\n                    key={cell.key}\n                    textAlign=\"left\"\n                    verticalAlign=\"middle\"\n                    sorted={state.column === index ? state.direction : null}\n                    onClick={() => {\n                      if (!data.table.sortable) return;\n                      setState({\n                        column: index,\n                        direction:\n                          state.column !== index\n                            ? 'ascending'\n                            : state.direction === 'ascending'\n                              ? 'descending'\n                              : 'ascending',\n                      });\n                    }}\n                  >\n                    {cell.value &&\n                    Node.string({ children: cell.value }).length > 0\n                      ? serializeNodes(cell.value)\n                      : '\\u00A0'}\n                  </Table.HeaderCell>\n                ))}\n              </Table.Row>\n            </Table.Header>\n          ) : (\n            ''\n          )}\n          <Table.Body>\n            {map(sortedRows, (row) => (\n              <Table.Row key={row}>\n                {map(rows[row], (cell) => (\n                  <Table.Cell\n                    key={cell.key}\n                    textAlign=\"left\"\n                    verticalAlign=\"middle\"\n                  >\n                    {cell.value}\n                  </Table.Cell>\n                ))}\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      )}\n    </>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default View;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}