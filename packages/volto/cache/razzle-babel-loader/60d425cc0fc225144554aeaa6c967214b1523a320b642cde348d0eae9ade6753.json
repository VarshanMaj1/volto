{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Controlpanels/Rules/Rules.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * Moderate content rules component.\n * @module components/manage/Controlpanels/Rules/Rules\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport { getBaseUrl, getParentUrl } from '@plone/volto/helpers/Url/Url';\nimport { createPortal } from 'react-dom';\nimport { Button, Checkbox, Container, Form, Header, Segment, Table } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nimport { toast } from 'react-toastify';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport { getControlPanelRules, deleteControlPanelRule, getContentRulesEvents, editRule } from '@plone/volto/actions/rules/rules';\nimport backSVG from '@plone/volto/icons/back.svg';\nconst messages = defineMessages({\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  rules: {\n    \"id\": \"Content Rules\",\n    \"defaultMessage\": \"Content Rules\"\n  },\n  success: {\n    \"id\": \"Success\",\n    \"defaultMessage\": \"Success\"\n  },\n  delete: {\n    \"id\": \"Deleted\",\n    \"defaultMessage\": \"Deleted\"\n  },\n  enable: {\n    \"id\": \"Rule enable changed\",\n    \"defaultMessage\": \"Rule enable changed\"\n  }\n});\n\n/**\n * Rules class.\n * @class Rules\n * @extends Component\n */\nclass Rules extends Component {\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Rules\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClient: false,\n      selectedFilters: [],\n      selectedRules: []\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getControlPanelRules(getBaseUrl(this.props.pathname));\n    this.props.getContentRulesEvents(getBaseUrl(this.props.pathname));\n    this.setState({\n      isClient: true\n    });\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidUpdate\n   * @returns {undefined}\n   */\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.rules !== this.props.rules && this.props.rules.items) {\n      this.setState({\n        selectedRules: this.props.rules.items\n      });\n    }\n    if (prevState.selectedFilters !== this.state.selectedFilters && this.props.rules.items) {\n      if (this.state.selectedFilters.length > 0) {\n        let filteredRules = this.props.rules.items.filter(rule => this.state.selectedFilters.includes(rule.trigger));\n        this.setState({\n          selectedRules: filteredRules\n        });\n      } else {\n        this.setState({\n          selectedRules: this.props.rules.items\n        });\n      }\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.indivRule.edit.loading && nextProps.indivRule.edit.loaded) {\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.enable),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }));\n      this.props.getControlPanelRules(getBaseUrl(this.props.pathname));\n    }\n    if (this.props.indivRule.delete.loading && nextProps.indivRule.delete.loaded) {\n      this.props.getControlPanelRules(getBaseUrl(this.props.pathname));\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.delete),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }\n      }));\n    }\n  }\n\n  /**\n   * Back/Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getParentUrl(this.props.pathname));\n  }\n\n  /**\n   * Select filter type handler\n   * @method handleSelectFilterType\n   * @returns {undefined}\n   */\n  handleSelectFilterType(type) {\n    this.setState({\n      filterType: type\n    });\n  }\n\n  /**\n   * Add Rule handler\n   * @method handleAddRule\n   * @returns {undefined}\n   */\n  handleAddRule() {\n    this.props.history.push(`${this.props.pathname}/add`);\n  }\n\n  /**\n   * Configure Rule handler\n   * @method handleConfigure\n   * @returns {undefined}\n   */\n  handleConfigure(ruleId) {\n    this.props.history.push(`${this.props.pathname}/${ruleId}/configure`);\n  }\n\n  /**\n   * Edit Rule handler\n   * @method handleEdit\n   * @returns {undefined}\n   */\n  handleEdit(ruleId) {\n    this.props.history.push(`${this.props.pathname}/${ruleId}/edit`);\n  }\n\n  /**\n   * Delete Rule handler\n   * @method handleDelete\n   * @returns {undefined}\n   */\n  handleDelete(ruleId) {\n    this.props.deleteControlPanelRule(getBaseUrl(this.props.pathname), ruleId);\n  }\n\n  /**\n   * Set filter handler\n   * @method handleSetFilters\n   * @returns {undefined}\n   */\n  handleSetFilters(value) {\n    if (!this.state.selectedFilters.includes(value)) {\n      this.setState({\n        selectedFilters: [...this.state.selectedFilters, value]\n      });\n    } else {\n      this.setState({\n        selectedFilters: this.state.selectedFilters.filter(f => f !== value)\n      });\n    }\n  }\n\n  /**\n   *Enable rule handler\n   * @method handleEnableRule\n   * @returns {undefined}\n   */\n  handleEnableRule(rule) {\n    const {\n      id,\n      cascading,\n      description,\n      enabled,\n      event,\n      stop,\n      title\n    } = rule;\n    this.props.editRule(getBaseUrl(this.props.pathname), {\n      id,\n      cascading,\n      description,\n      enabled: !enabled,\n      event,\n      stop,\n      title\n    }, id);\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return __jsx(\"div\", {\n      id: \"page-rules\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.rules),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }\n    }), __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }\n    }, __jsx(\"article\", {\n      id: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }\n    }, __jsx(Segment.Group, {\n      raised: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }\n    }, __jsx(Segment, {\n      className: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Content Rules\",\n      defaultMessage: \"Content Rules\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      className: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Use the form below to define, change or remove content rules. Rules will automatically perform actions on content when certain triggers take place. After defining rules, you may want to go to a folder to assign them, using the 'rules' item in the actions menu.\",\n      defaultMessage: \"Use the form below to define, change or remove content rules. Rules will automatically perform actions on content when certain triggers take place. After defining rules, you may want to go to a folder to assign them, using the 'rules' item in the actions menu.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 15\n      }\n    }, __jsx(Header, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Filter Rules:\",\n      defaultMessage: \"Filter Rules:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 19\n      }\n    })), __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 19\n      }\n    }, this.props.events && this.props.events.items && this.props.events.items.length > 0 && this.props.events.items.map(event => {\n      return {\n        label: event.title,\n        value: event.title\n      };\n    }).map((o, i) => __jsx(Form.Field, {\n      style: {\n        marginRight: '15px'\n      },\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 27\n      }\n    }, __jsx(Checkbox, {\n      onChange: (e, {\n        value\n      }) => this.handleSetFilters(value),\n      checked: this.state.selectedFilters.includes[o.value],\n      value: o.value,\n      label: o.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 29\n      }\n    }))))), __jsx(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }\n    }, __jsx(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 19\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }\n    }, __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Content Rule\",\n      defaultMessage: \"Content Rule\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 25\n      }\n    })), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Event\",\n      defaultMessage: \"Event\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 25\n      }\n    })), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Status\",\n      defaultMessage: \"Status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 25\n      }\n    })), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Actions\",\n      defaultMessage: \"Actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 25\n      }\n    }))), this.state.selectedRules && this.state.selectedRules.length > 0 && this.state.selectedRules.map((rule, i) => __jsx(Table.Row, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 25\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 27\n      }\n    }, __jsx(\"p\", {\n      style: {\n        fontSize: '16px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 29\n      }\n    }, rule.title), __jsx(\"p\", {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 29\n      }\n    }, rule.description)), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 27\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 29\n      }\n    }, rule.trigger)), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 27\n      }\n    }, __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 29\n      }\n    }, __jsx(Checkbox, {\n      onChange: (e, o) => this.handleEnableRule(rule),\n      checked: rule.enabled,\n      value: rule.enabled,\n      label: \"enabled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 31\n      }\n    }), !rule.assigned && __jsx(\"p\", {\n      style: {\n        marginLeft: '5px',\n        padding: '3px',\n        backgroundColor: '#ffc106',\n        borderRadius: '5px',\n        fontSize: '10px',\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 33\n      }\n    }, \"not assigned\"))), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 27\n      }\n    }, __jsx(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 29\n      }\n    }, __jsx(Button, {\n      size: \"mini\",\n      primary: true,\n      onClick: () => this.handleConfigure(rule.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 31\n      }\n    }, \"Configure\"), __jsx(Button, {\n      size: \"mini\",\n      secondary: true,\n      onClick: () => this.handleEdit(rule.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 31\n      }\n    }, \"Edit\"), __jsx(Button, {\n      size: \"mini\",\n      color: \"youtube\",\n      onClick: () => this.handleDelete(rule.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 31\n      }\n    }, \"Delete\"))))))), __jsx(Button, {\n      onClick: () => this.handleAddRule(),\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Add content rule\",\n      defaultMessage: \"Add content rule\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 19\n      }\n    })))))), this.state.isClient && /*#__PURE__*/createPortal(__jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(Link, {\n        className: \"item\",\n        to: \"#\",\n        onClick: () => this.onCancel(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 17\n        }\n      }, __jsx(Icon, {\n        name: backSVG,\n        className: \"contents circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 13\n      }\n    }), document.getElementById('toolbar')));\n  }\n}\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_defineProperty(Rules, \"propTypes\", {\n  getControlPanelRules: PropTypes.func.isRequired,\n  deleteControlPanelRule: PropTypes.func.isRequired,\n  getContentRulesEvents: PropTypes.func.isRequired,\n  editRule: PropTypes.func.isRequired\n});\nexport default compose(injectIntl, connect((state, props) => ({\n  indivRule: state.controlpanelrule,\n  rules: state.controlpanelrules,\n  events: state.contentrulesevents,\n  pathname: props.location.pathname\n}), {\n  getControlPanelRules,\n  deleteControlPanelRule,\n  getContentRulesEvents,\n  editRule\n}))(Rules);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Link","Helmet","getBaseUrl","getParentUrl","createPortal","Button","Checkbox","Container","Form","Header","Segment","Table","FormattedMessage","defineMessages","injectIntl","Icon","Toolbar","toast","Toast","getControlPanelRules","deleteControlPanelRule","getContentRulesEvents","editRule","backSVG","messages","back","rules","success","delete","enable","Rules","constructor","props","state","isClient","selectedFilters","selectedRules","componentDidMount","pathname","setState","componentDidUpdate","prevProps","prevState","items","length","filteredRules","filter","rule","includes","trigger","UNSAFE_componentWillReceiveProps","nextProps","indivRule","edit","loading","loaded","__jsx","title","intl","formatMessage","content","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onCancel","history","push","handleSelectFilterType","type","filterType","handleAddRule","handleConfigure","ruleId","handleEdit","handleDelete","handleSetFilters","value","f","handleEnableRule","id","cascading","description","enabled","event","stop","render","Group","raised","className","defaultMessage","size","style","display","flexWrap","events","map","label","o","i","Field","marginRight","key","onChange","e","checked","Body","Row","HeaderCell","Cell","fontSize","alignItems","assigned","marginLeft","padding","backgroundColor","borderRadius","fontWeight","primary","onClick","secondary","color","hideDefaultViewButtons","inner","to","name","document","getElementById","_defineProperty","func","isRequired","controlpanelrule","controlpanelrules","contentrulesevents","location"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Controlpanels/Rules/Rules.jsx"],"sourcesContent":["/**\n * Moderate content rules component.\n * @module components/manage/Controlpanels/Rules/Rules\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport { getBaseUrl, getParentUrl } from '@plone/volto/helpers/Url/Url';\nimport { createPortal } from 'react-dom';\nimport {\n  Button,\n  Checkbox,\n  Container,\n  Form,\n  Header,\n  Segment,\n  Table,\n} from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nimport { toast } from 'react-toastify';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\n\nimport {\n  getControlPanelRules,\n  deleteControlPanelRule,\n  getContentRulesEvents,\n  editRule,\n} from '@plone/volto/actions/rules/rules';\n\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  rules: {\n    id: 'Content Rules',\n    defaultMessage: 'Content Rules',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  delete: {\n    id: 'Deleted',\n    defaultMessage: 'Deleted',\n  },\n  enable: {\n    id: 'Rule enable changed',\n    defaultMessage: 'Rule enable changed',\n  },\n});\n\n/**\n * Rules class.\n * @class Rules\n * @extends Component\n */\nclass Rules extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getControlPanelRules: PropTypes.func.isRequired,\n    deleteControlPanelRule: PropTypes.func.isRequired,\n    getContentRulesEvents: PropTypes.func.isRequired,\n    editRule: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Rules\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClient: false,\n      selectedFilters: [],\n      selectedRules: [],\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getControlPanelRules(getBaseUrl(this.props.pathname));\n    this.props.getContentRulesEvents(getBaseUrl(this.props.pathname));\n\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidUpdate\n   * @returns {undefined}\n   */\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.rules !== this.props.rules && this.props.rules.items) {\n      this.setState({ selectedRules: this.props.rules.items });\n    }\n    if (\n      prevState.selectedFilters !== this.state.selectedFilters &&\n      this.props.rules.items\n    ) {\n      if (this.state.selectedFilters.length > 0) {\n        let filteredRules = this.props.rules.items.filter((rule) =>\n          this.state.selectedFilters.includes(rule.trigger),\n        );\n        this.setState({\n          selectedRules: filteredRules,\n        });\n      } else {\n        this.setState({ selectedRules: this.props.rules.items });\n      }\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.indivRule.edit.loading && nextProps.indivRule.edit.loaded) {\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.enable)}\n        />,\n      );\n      this.props.getControlPanelRules(getBaseUrl(this.props.pathname));\n    }\n    if (\n      this.props.indivRule.delete.loading &&\n      nextProps.indivRule.delete.loaded\n    ) {\n      this.props.getControlPanelRules(getBaseUrl(this.props.pathname));\n\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.delete)}\n        />,\n      );\n    }\n  }\n\n  /**\n   * Back/Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getParentUrl(this.props.pathname));\n  }\n\n  /**\n   * Select filter type handler\n   * @method handleSelectFilterType\n   * @returns {undefined}\n   */\n  handleSelectFilterType(type) {\n    this.setState({ filterType: type });\n  }\n\n  /**\n   * Add Rule handler\n   * @method handleAddRule\n   * @returns {undefined}\n   */\n  handleAddRule() {\n    this.props.history.push(`${this.props.pathname}/add`);\n  }\n\n  /**\n   * Configure Rule handler\n   * @method handleConfigure\n   * @returns {undefined}\n   */\n  handleConfigure(ruleId) {\n    this.props.history.push(`${this.props.pathname}/${ruleId}/configure`);\n  }\n\n  /**\n   * Edit Rule handler\n   * @method handleEdit\n   * @returns {undefined}\n   */\n  handleEdit(ruleId) {\n    this.props.history.push(`${this.props.pathname}/${ruleId}/edit`);\n  }\n\n  /**\n   * Delete Rule handler\n   * @method handleDelete\n   * @returns {undefined}\n   */\n  handleDelete(ruleId) {\n    this.props.deleteControlPanelRule(getBaseUrl(this.props.pathname), ruleId);\n  }\n\n  /**\n   * Set filter handler\n   * @method handleSetFilters\n   * @returns {undefined}\n   */\n  handleSetFilters(value) {\n    if (!this.state.selectedFilters.includes(value)) {\n      this.setState({\n        selectedFilters: [...this.state.selectedFilters, value],\n      });\n    } else {\n      this.setState({\n        selectedFilters: this.state.selectedFilters.filter((f) => f !== value),\n      });\n    }\n  }\n\n  /**\n   *Enable rule handler\n   * @method handleEnableRule\n   * @returns {undefined}\n   */\n  handleEnableRule(rule) {\n    const { id, cascading, description, enabled, event, stop, title } = rule;\n    this.props.editRule(\n      getBaseUrl(this.props.pathname),\n      { id, cascading, description, enabled: !enabled, event, stop, title },\n      id,\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <div id=\"page-rules\">\n        <Helmet title={this.props.intl.formatMessage(messages.rules)} />\n        <Container>\n          <article id=\"content\">\n            <Segment.Group raised>\n              <Segment className=\"primary\">\n                <FormattedMessage\n                  id=\"Content Rules\"\n                  defaultMessage=\"Content Rules\"\n                />\n              </Segment>\n              <Segment className=\"secondary\">\n                <FormattedMessage\n                  id=\"Use the form below to define, change or remove content rules. Rules will automatically perform actions on content when certain triggers take place. After defining rules, you may want to go to a folder to assign them, using the 'rules' item in the actions menu.\"\n                  defaultMessage=\"Use the form below to define, change or remove content rules. Rules will automatically perform actions on content when certain triggers take place. After defining rules, you may want to go to a folder to assign them, using the 'rules' item in the actions menu.\"\n                />\n              </Segment>\n              {/* <Segment>\n                <Checkbox\n                  // onChange={(e, { value }) => console.log(value)}\n                  //checked={}\n                  value={'disable-globally'}\n                  label=\"Disable globally\"\n                />\n              </Segment> */}\n              {/* <Segment className=\"secondary\">\n                <FormattedMessage\n                  id=\"Whether or not content rules should be disabled globally. If this is selected, no rules will be executed anywhere in the portal.\"\n                  defaultMessage=\"Whether or not content rules should be disabled globally. If this is selected, no rules will be executed anywhere in the portal.\"\n                />\n              </Segment> */}\n              <Segment>\n                <Header size=\"small\">\n                  <FormattedMessage\n                    id=\"Filter Rules:\"\n                    defaultMessage=\"Filter Rules:\"\n                  />\n                </Header>\n                <Form>\n                  <div\n                    style={{\n                      display: 'flex',\n                      flexWrap: 'wrap',\n                    }}\n                  >\n                    {this.props.events &&\n                      this.props.events.items &&\n                      this.props.events.items.length > 0 &&\n                      this.props.events.items\n                        .map((event) => {\n                          return { label: event.title, value: event.title };\n                        })\n                        .map((o, i) => (\n                          <Form.Field style={{ marginRight: '15px' }} key={i}>\n                            <Checkbox\n                              onChange={(e, { value }) =>\n                                this.handleSetFilters(value)\n                              }\n                              checked={\n                                this.state.selectedFilters.includes[o.value]\n                              }\n                              value={o.value}\n                              label={o.label}\n                            />\n                          </Form.Field>\n                        ))}\n                  </div>\n                </Form>\n                <Table>\n                  <Table.Body>\n                    <Table.Row>\n                      <Table.HeaderCell>\n                        <FormattedMessage\n                          id=\"Content Rule\"\n                          defaultMessage=\"Content Rule\"\n                        />\n                      </Table.HeaderCell>\n                      <Table.HeaderCell>\n                        <FormattedMessage id=\"Event\" defaultMessage=\"Event\" />\n                      </Table.HeaderCell>\n                      <Table.HeaderCell>\n                        <FormattedMessage id=\"Status\" defaultMessage=\"Status\" />\n                      </Table.HeaderCell>\n                      <Table.HeaderCell>\n                        <FormattedMessage\n                          id=\"Actions\"\n                          defaultMessage=\"Actions\"\n                        />\n                      </Table.HeaderCell>\n                    </Table.Row>\n                    {this.state.selectedRules &&\n                      this.state.selectedRules.length > 0 &&\n                      this.state.selectedRules.map((rule, i) => (\n                        <Table.Row key={i}>\n                          <Table.Cell>\n                            <p style={{ fontSize: '16px' }}>{rule.title}</p>\n                            <p style={{ fontSize: '14px' }}>\n                              {rule.description}\n                            </p>\n                          </Table.Cell>\n                          <Table.Cell>\n                            <p>{rule.trigger}</p>\n                          </Table.Cell>\n                          <Table.Cell>\n                            <div\n                              style={{ display: 'flex', alignItems: 'center' }}\n                            >\n                              <Checkbox\n                                onChange={(e, o) => this.handleEnableRule(rule)}\n                                checked={rule.enabled}\n                                value={rule.enabled}\n                                label=\"enabled\"\n                              />\n                              {!rule.assigned && (\n                                <p\n                                  style={{\n                                    marginLeft: '5px',\n                                    padding: '3px',\n                                    backgroundColor: '#ffc106',\n                                    borderRadius: '5px',\n                                    fontSize: '10px',\n                                    fontWeight: 'bold',\n                                  }}\n                                >\n                                  not assigned\n                                </p>\n                              )}\n                            </div>\n                          </Table.Cell>\n                          <Table.Cell>\n                            <div style={{ display: 'flex' }}>\n                              <Button\n                                size=\"mini\"\n                                primary\n                                onClick={() => this.handleConfigure(rule.id)}\n                              >\n                                Configure\n                              </Button>\n                              <Button\n                                size=\"mini\"\n                                secondary\n                                onClick={() => this.handleEdit(rule.id)}\n                              >\n                                Edit\n                              </Button>\n                              <Button\n                                size=\"mini\"\n                                color=\"youtube\"\n                                onClick={() => this.handleDelete(rule.id)}\n                              >\n                                Delete\n                              </Button>\n                            </div>\n                          </Table.Cell>\n                        </Table.Row>\n                      ))}\n                  </Table.Body>\n                </Table>\n                <Button onClick={() => this.handleAddRule()} primary>\n                  <FormattedMessage\n                    id=\"Add content rule\"\n                    defaultMessage=\"Add content rule\"\n                  />\n                </Button>\n              </Segment>\n            </Segment.Group>\n          </article>\n        </Container>\n        {this.state.isClient &&\n          createPortal(\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link className=\"item\" to=\"#\" onClick={() => this.onCancel()}>\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />,\n            document.getElementById('toolbar'),\n          )}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      indivRule: state.controlpanelrule,\n      rules: state.controlpanelrules,\n      events: state.contentrulesevents,\n\n      pathname: props.location.pathname,\n    }),\n    {\n      getControlPanelRules,\n      deleteControlPanelRule,\n      getContentRulesEvents,\n      editRule,\n    },\n  ),\n)(Rules);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Back","defaultMessage":"Back"},{"id":"Content Rules","defaultMessage":"Content Rules"},{"id":"Success","defaultMessage":"Success"},{"id":"Deleted","defaultMessage":"Deleted"},{"id":"Rule enable changed","defaultMessage":"Rule enable changed"},{"id":"Use the form below to define, change or remove content rules. Rules will automatically perform actions on content when certain triggers take place. After defining rules, you may want to go to a folder to assign them, using the 'rules' item in the actions menu.","defaultMessage":"Use the form below to define, change or remove content rules. Rules will automatically perform actions on content when certain triggers take place. After defining rules, you may want to go to a folder to assign them, using the 'rules' item in the actions menu."},{"id":"Filter Rules:","defaultMessage":"Filter Rules:"},{"id":"Content Rule","defaultMessage":"Content Rule"},{"id":"Event","defaultMessage":"Event"},{"id":"Status","defaultMessage":"Status"},{"id":"Actions","defaultMessage":"Actions"},{"id":"Add content rule","defaultMessage":"Add content rule"}]}},"sourceType":"module","externalDependencies":[]}