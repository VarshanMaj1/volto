{"ast":null,"code":"import _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/LeadImage/LeadImageSidebar.jsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'semantic-ui-react';\nimport { Accordion, Grid, Segment } from 'semantic-ui-react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Image from '@plone/volto/components/theme/Image/Image';\nimport { CheckboxWidget, TextWidget } from '@plone/volto/components/manage/Widgets';\nimport { flattenToAppURL } from '@plone/volto/helpers/Url/Url';\nimport AlignBlock from '@plone/volto/components/manage/Sidebar/AlignBlock';\nimport imageSVG from '@plone/volto/icons/image.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\nconst messages = defineMessages({\n  Image: {\n    \"id\": \"Image\",\n    \"defaultMessage\": \"Image\"\n  },\n  Origin: {\n    \"id\": \"Origin\",\n    \"defaultMessage\": \"Origin\"\n  },\n  AltText: {\n    \"id\": \"Alt text\",\n    \"defaultMessage\": \"Alt text\"\n  },\n  Align: {\n    \"id\": \"Alignment\",\n    \"defaultMessage\": \"Alignment\"\n  },\n  LinkTo: {\n    \"id\": \"Link to\",\n    \"defaultMessage\": \"Link to\"\n  },\n  openLinkInNewTab: {\n    \"id\": \"Open in a new tab\",\n    \"defaultMessage\": \"Open in a new tab\"\n  },\n  NoImageSelected: {\n    \"id\": \"No image set in image content field\",\n    \"defaultMessage\": \"No image set in image content field\"\n  },\n  externalURL: {\n    \"id\": \"External URL\",\n    \"defaultMessage\": \"External URL\"\n  }\n});\nconst LeadImageSidebar = ({\n  properties,\n  data,\n  block,\n  onChangeBlock,\n  openObjectBrowser,\n  required = false,\n  onChangeField,\n  intl\n}) => {\n  _s();\n  const {\n    0: activeAccIndex,\n    1: setActiveAccIndex\n  } = useState(0);\n  function handleAccClick(e, titleProps) {\n    const {\n      index\n    } = titleProps;\n    const newIndex = activeAccIndex === index ? -1 : index;\n    setActiveAccIndex(newIndex);\n  }\n  return __jsx(Segment.Group, {\n    raised: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, __jsx(\"header\", {\n    className: \"header pulled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Lead Image\",\n    defaultMessage: \"Lead Image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }))), !properties.image && __jsx(React.Fragment, null, __jsx(Segment, {\n    className: \"sidebar-metadata-container\",\n    secondary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"No image set in Lead Image content field\",\n    defaultMessage: \"No image set in Lead Image content field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), __jsx(Icon, {\n    name: imageSVG,\n    size: \"100px\",\n    color: \"#b8c6c8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }))), properties.image && __jsx(React.Fragment, null, __jsx(Segment, {\n    className: \"sidebar-metadata-container\",\n    secondary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, properties.image.filename, properties.image.data && __jsx(\"img\", {\n    // TODO understand when this actually happens\n    src: `data:${properties.image['content-type']};base64,${properties.image.data}`,\n    width: properties.image.width,\n    height: properties.image.height,\n    alt: data.image_caption || properties.image_caption || '',\n    className: \"responsive\",\n    style: {\n      aspectRatio: `${properties.image.width} / ${properties.image.height}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }), !properties.image.data && __jsx(Image, {\n    item: properties,\n    imageField: \"image\",\n    alt: data.image_caption || properties.image_caption || '',\n    responsive: true,\n    sizes: \"188px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  })), __jsx(Segment, {\n    className: \"form sidebar-image-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, __jsx(TextWidget, {\n    id: \"alt\",\n    title: intl.formatMessage(messages.AltText),\n    required: false,\n    value: properties.image_caption,\n    icon: properties.image_caption ? clearSVG : null,\n    iconAction: () => onChangeField('image_caption', ''),\n    onChange: (name, value) => {\n      onChangeField('image_caption', value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), __jsx(Form.Field, {\n    inline: true,\n    required: required,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, __jsx(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, __jsx(Grid.Column, {\n    width: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"field-align\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 23\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Alignment\",\n    defaultMessage: \"Alignment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  })))), __jsx(Grid.Column, {\n    width: \"8\",\n    className: \"align-tools\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 19\n    }\n  }, __jsx(AlignBlock, {\n    align: data.align,\n    onChangeBlock: onChangeBlock,\n    data: data,\n    block: block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  })))))), __jsx(Accordion, {\n    fluid: true,\n    styled: true,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, __jsx(Accordion.Title, {\n    active: activeAccIndex === 0,\n    index: 0,\n    onClick: handleAccClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, \"Link Settings\", activeAccIndex === 0 ? __jsx(Icon, {\n    name: upSVG,\n    size: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }) : __jsx(Icon, {\n    name: downSVG,\n    size: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  })), __jsx(Accordion.Content, {\n    active: activeAccIndex === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, __jsx(TextWidget, {\n    id: \"link\",\n    title: intl.formatMessage(messages.LinkTo),\n    required: false,\n    value: flattenToAppURL(data.href),\n    icon: data.href ? clearSVG : navTreeSVG,\n    iconAction: data.href ? () => {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        href: ''\n      }));\n    } : () => openObjectBrowser({\n      mode: 'link'\n    }),\n    onChange: (name, value) => {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        href: flattenToAppURL(value)\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }), __jsx(CheckboxWidget, {\n    id: \"openLinkInNewTab\",\n    title: intl.formatMessage(messages.openLinkInNewTab),\n    value: data.openLinkInNewTab ? data.openLinkInNewTab : false,\n    onChange: (name, value) => {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        openLinkInNewTab: value\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  })))));\n};\n_s(LeadImageSidebar, \"Nd/EHIHxJ3hQ2yJkM8yeOL7E6LY=\");\n_c = LeadImageSidebar;\nLeadImageSidebar.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  openObjectBrowser: PropTypes.func.isRequired,\n  onChangeField: PropTypes.func.isRequired\n};\nexport default _c2 = injectIntl(LeadImageSidebar);\nvar _c, _c2;\n$RefreshReg$(_c, \"LeadImageSidebar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","PropTypes","Form","Accordion","Grid","Segment","defineMessages","FormattedMessage","injectIntl","Icon","Image","CheckboxWidget","TextWidget","flattenToAppURL","AlignBlock","imageSVG","clearSVG","upSVG","downSVG","navTreeSVG","messages","Origin","AltText","Align","LinkTo","openLinkInNewTab","NoImageSelected","externalURL","LeadImageSidebar","properties","data","block","onChangeBlock","openObjectBrowser","required","onChangeField","intl","_s","activeAccIndex","setActiveAccIndex","handleAccClick","e","titleProps","index","newIndex","__jsx","Group","raised","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","id","defaultMessage","image","Fragment","secondary","name","size","color","filename","src","width","height","alt","image_caption","style","aspectRatio","item","imageField","responsive","sizes","title","formatMessage","value","icon","iconAction","onChange","Field","inline","Row","Column","htmlFor","align","fluid","styled","Title","active","onClick","Content","href","_objectSpread","mode","_c","propTypes","objectOf","any","isRequired","string","func","_c2","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/LeadImage/LeadImageSidebar.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'semantic-ui-react';\nimport { Accordion, Grid, Segment } from 'semantic-ui-react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Image from '@plone/volto/components/theme/Image/Image';\nimport {\n  CheckboxWidget,\n  TextWidget,\n} from '@plone/volto/components/manage/Widgets';\nimport { flattenToAppURL } from '@plone/volto/helpers/Url/Url';\nimport AlignBlock from '@plone/volto/components/manage/Sidebar/AlignBlock';\n\nimport imageSVG from '@plone/volto/icons/image.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\n\nconst messages = defineMessages({\n  Image: {\n    id: 'Image',\n    defaultMessage: 'Image',\n  },\n  Origin: {\n    id: 'Origin',\n    defaultMessage: 'Origin',\n  },\n  AltText: {\n    id: 'Alt text',\n    defaultMessage: 'Alt text',\n  },\n  Align: {\n    id: 'Alignment',\n    defaultMessage: 'Alignment',\n  },\n  LinkTo: {\n    id: 'Link to',\n    defaultMessage: 'Link to',\n  },\n  openLinkInNewTab: {\n    id: 'Open in a new tab',\n    defaultMessage: 'Open in a new tab',\n  },\n  NoImageSelected: {\n    id: 'No image set in image content field',\n    defaultMessage: 'No image set in image content field',\n  },\n  externalURL: {\n    id: 'External URL',\n    defaultMessage: 'External URL',\n  },\n});\n\nconst LeadImageSidebar = ({\n  properties,\n  data,\n  block,\n  onChangeBlock,\n  openObjectBrowser,\n  required = false,\n  onChangeField,\n  intl,\n}) => {\n  const [activeAccIndex, setActiveAccIndex] = useState(0);\n\n  function handleAccClick(e, titleProps) {\n    const { index } = titleProps;\n    const newIndex = activeAccIndex === index ? -1 : index;\n\n    setActiveAccIndex(newIndex);\n  }\n\n  return (\n    <Segment.Group raised>\n      <header className=\"header pulled\">\n        <h2>\n          <FormattedMessage id=\"Lead Image\" defaultMessage=\"Lead Image\" />\n        </h2>\n      </header>\n\n      {!properties.image && (\n        <>\n          <Segment className=\"sidebar-metadata-container\" secondary>\n            <FormattedMessage\n              id=\"No image set in Lead Image content field\"\n              defaultMessage=\"No image set in Lead Image content field\"\n            />\n            <Icon name={imageSVG} size=\"100px\" color=\"#b8c6c8\" />\n          </Segment>\n        </>\n      )}\n      {properties.image && (\n        <>\n          <Segment className=\"sidebar-metadata-container\" secondary>\n            {properties.image.filename}\n            {properties.image.data && (\n              <img\n                // TODO understand when this actually happens\n                src={`data:${properties.image['content-type']};base64,${properties.image.data}`}\n                width={properties.image.width}\n                height={properties.image.height}\n                alt={data.image_caption || properties.image_caption || ''}\n                className=\"responsive\"\n                style={{\n                  aspectRatio: `${properties.image.width} / ${properties.image.height}`,\n                }}\n              />\n            )}\n            {!properties.image.data && (\n              <Image\n                item={properties}\n                imageField=\"image\"\n                alt={data.image_caption || properties.image_caption || ''}\n                responsive={true}\n                sizes=\"188px\"\n              />\n            )}\n          </Segment>\n          <Segment className=\"form sidebar-image-data\">\n            <TextWidget\n              id=\"alt\"\n              title={intl.formatMessage(messages.AltText)}\n              required={false}\n              value={properties.image_caption}\n              icon={properties.image_caption ? clearSVG : null}\n              iconAction={() => onChangeField('image_caption', '')}\n              onChange={(name, value) => {\n                onChangeField('image_caption', value);\n              }}\n            />\n            <Form.Field inline required={required}>\n              <Grid>\n                <Grid.Row>\n                  <Grid.Column width=\"4\">\n                    <div className=\"wrapper\">\n                      <label htmlFor=\"field-align\">\n                        <FormattedMessage\n                          id=\"Alignment\"\n                          defaultMessage=\"Alignment\"\n                        />\n                      </label>\n                    </div>\n                  </Grid.Column>\n                  <Grid.Column width=\"8\" className=\"align-tools\">\n                    <AlignBlock\n                      align={data.align}\n                      onChangeBlock={onChangeBlock}\n                      data={data}\n                      block={block}\n                    />\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Form.Field>\n          </Segment>\n          <Accordion fluid styled className=\"form\">\n            <Accordion.Title\n              active={activeAccIndex === 0}\n              index={0}\n              onClick={handleAccClick}\n            >\n              Link Settings\n              {activeAccIndex === 0 ? (\n                <Icon name={upSVG} size=\"20px\" />\n              ) : (\n                <Icon name={downSVG} size=\"20px\" />\n              )}\n            </Accordion.Title>\n            <Accordion.Content active={activeAccIndex === 0}>\n              <TextWidget\n                id=\"link\"\n                title={intl.formatMessage(messages.LinkTo)}\n                required={false}\n                value={flattenToAppURL(data.href)}\n                icon={data.href ? clearSVG : navTreeSVG}\n                iconAction={\n                  data.href\n                    ? () => {\n                        onChangeBlock(block, {\n                          ...data,\n                          href: '',\n                        });\n                      }\n                    : () => openObjectBrowser({ mode: 'link' })\n                }\n                onChange={(name, value) => {\n                  onChangeBlock(block, {\n                    ...data,\n                    href: flattenToAppURL(value),\n                  });\n                }}\n              />\n              <CheckboxWidget\n                id=\"openLinkInNewTab\"\n                title={intl.formatMessage(messages.openLinkInNewTab)}\n                value={data.openLinkInNewTab ? data.openLinkInNewTab : false}\n                onChange={(name, value) => {\n                  onChangeBlock(block, {\n                    ...data,\n                    openLinkInNewTab: value,\n                  });\n                }}\n              />\n            </Accordion.Content>\n          </Accordion>\n        </>\n      )}\n    </Segment.Group>\n  );\n};\n\nLeadImageSidebar.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  openObjectBrowser: PropTypes.func.isRequired,\n  onChangeField: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(LeadImageSidebar);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Image","defaultMessage":"Image"},{"id":"Origin","defaultMessage":"Origin"},{"id":"Alt text","defaultMessage":"Alt text"},{"id":"Alignment","defaultMessage":"Alignment"},{"id":"Link to","defaultMessage":"Link to"},{"id":"Open in a new tab","defaultMessage":"Open in a new tab"},{"id":"No image set in image content field","defaultMessage":"No image set in image content field"},{"id":"External URL","defaultMessage":"External URL"},{"id":"Lead Image","defaultMessage":"Lead Image"},{"id":"No image set in Lead Image content field","defaultMessage":"No image set in Lead Image content field"}]}},"sourceType":"module","externalDependencies":[]}