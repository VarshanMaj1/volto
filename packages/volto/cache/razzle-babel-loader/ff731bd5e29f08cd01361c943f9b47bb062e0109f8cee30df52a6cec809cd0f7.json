{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/ToC/View.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n/**\n * View toc block.\n * @module components/manage/Blocks/ToC/View\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport cx from 'classnames';\nimport { Message } from 'semantic-ui-react';\nimport config from '@plone/volto/registry';\nimport { withBlockExtensions } from '@plone/volto/helpers/Extensions';\nimport { getBlocksFieldname, getBlocksLayoutFieldname } from '@plone/volto/helpers/Blocks/Blocks';\nexport const getBlocksTocEntries = (properties, tocData) => {\n  var _tocData$levels;\n  const blocksFieldName = getBlocksFieldname(properties);\n  const blocksLayoutFieldname = getBlocksLayoutFieldname(properties);\n  const blocks = properties[blocksFieldName];\n  const blocks_layout = properties[blocksLayoutFieldname];\n  const levels = ((_tocData$levels = tocData.levels) === null || _tocData$levels === void 0 ? void 0 : _tocData$levels.length) > 0 ? tocData.levels.map(l => parseInt(l.slice(1))) : [1, 2, 3, 4, 5, 6];\n  let rootLevel = Infinity;\n  let blocksFormEntries = [];\n  let tocEntries = {};\n  let tocEntriesLayout = [];\n  blocks_layout.items.forEach(id => {\n    var _blockConfig$tocEntry, _blockConfig$tocEntri;\n    const block = blocks[id];\n    const blockConfig = config.blocks.blocksConfig[block['@type']];\n    if (!block || !blockConfig) {\n      return null;\n    }\n    if (!blockConfig.tocEntries && !blockConfig.tocEntry) {\n      return null;\n    }\n    const blockTocEntry = (_blockConfig$tocEntry = blockConfig.tocEntry) === null || _blockConfig$tocEntry === void 0 ? void 0 : _blockConfig$tocEntry.call(blockConfig, block, tocData);\n    const blockTocEntries = [...(((_blockConfig$tocEntri = blockConfig.tocEntries) === null || _blockConfig$tocEntri === void 0 ? void 0 : _blockConfig$tocEntri.call(blockConfig, block, tocData)) || (blockTocEntry ? [blockTocEntry] : []))];\n    blocksFormEntries = [...blocksFormEntries, ...blockTocEntries];\n    blockTocEntries.forEach((entry, index) => {\n      const i = `${id}-${index}`;\n      const level = entry[0];\n      const title = entry[1];\n      const items = [];\n      if (!level || !levels.includes(level)) return;\n      tocEntriesLayout.push(i);\n      tocEntries[i] = {\n        level,\n        title: title || block.plaintext,\n        items,\n        id: i\n      };\n      if (level < rootLevel) {\n        rootLevel = level;\n      }\n    });\n  });\n  return {\n    rootLevel,\n    blocksFormEntries,\n    tocEntries,\n    tocEntriesLayout\n  };\n};\n\n/**\n * View toc block class.\n * @class View\n * @extends Component\n */\nconst View = props => {\n  const {\n    data\n  } = props;\n  const title = data.title ? data.title : '';\n  const {\n    variation\n  } = props;\n  const metadata = props.metadata || props.properties;\n  const blocksFieldname = getBlocksFieldname(metadata);\n  const levels = React.useMemo(() => {\n    var _data$levels;\n    return ((_data$levels = data.levels) === null || _data$levels === void 0 ? void 0 : _data$levels.length) > 0 ? data.levels.map(l => parseInt(l.slice(1))) : [1, 2, 3, 4, 5, 6];\n  }, [data]);\n  const tocEntries = React.useMemo(() => {\n    let entries = [];\n    let prevEntry = {};\n    const {\n      rootLevel,\n      tocEntries,\n      tocEntriesLayout\n    } = getBlocksTocEntries(metadata, data);\n    tocEntriesLayout.forEach(id => {\n      var _config$blocks$blocks, _config$blocks$blocks2;\n      const block = metadata[blocksFieldname][id];\n      if (typeof block === 'undefined') {\n        return null;\n      }\n      if (!((_config$blocks$blocks = config.blocks.blocksConfig[block['@type']]) !== null && _config$blocks$blocks !== void 0 && _config$blocks$blocks.tocEntry)) return null;\n      const entry = (_config$blocks$blocks2 = config.blocks.blocksConfig[block['@type']]) === null || _config$blocks$blocks2 === void 0 ? void 0 : _config$blocks$blocks2.tocEntry(block, data);\n      if (entry) {\n        var _block$plaintext;\n        const level = entry[0];\n        const title = entry[1];\n        const items = [];\n        if (!(title !== null && title !== void 0 && title.trim()) && !((_block$plaintext = block.plaintext) !== null && _block$plaintext !== void 0 && _block$plaintext.trim())) return;\n        if (!level || !levels.includes(level)) return;\n        tocEntriesLayout.push(id);\n        tocEntries[id] = {\n          level,\n          title: title || block.plaintext,\n          items,\n          id,\n          override_toc: block.override_toc,\n          plaintext: block.plaintext\n        };\n      }\n    });\n    tocEntriesLayout.forEach(id => {\n      const entry = tocEntries[id];\n      if (entry.level === rootLevel) {\n        entries.push(entry);\n        prevEntry = entry;\n        return;\n      }\n      if (!prevEntry.id) return;\n      if (entry.level > prevEntry.level) {\n        entry.parentId = prevEntry.id;\n        prevEntry.items.push(entry);\n        prevEntry = entry;\n      } else if (entry.level < prevEntry.level) {\n        let parent = tocEntries[prevEntry.parentId];\n        while (entry.level <= parent.level) {\n          parent = tocEntries[parent.parentId];\n        }\n        entry.parentId = parent.id;\n        parent.items.push(entry);\n        prevEntry = entry;\n      } else {\n        entry.parentId = prevEntry.parentId;\n        tocEntries[prevEntry.parentId].items.push(entry);\n        prevEntry = entry;\n      }\n    });\n    return entries;\n  }, [data, levels, metadata, blocksFieldname]);\n  const Renderer = variation === null || variation === void 0 ? void 0 : variation.view;\n  return __jsx(\"nav\", {\n    \"aria-label\": title && !data.hide_title ? title : '',\n    className: cx('table-of-contents', variation === null || variation === void 0 ? void 0 : variation.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }, props.mode === 'edit' && !title && !tocEntries.length && __jsx(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Table of Contents\",\n    defaultMessage: \"Table of Contents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  })), Renderer ? __jsx(Renderer, _extends({}, props, {\n    tocEntries: tocEntries,\n    metadata: metadata,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  })) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, \"View extension not found\"));\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  properties: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default withBlockExtensions(View);","map":{"version":3,"names":["React","PropTypes","FormattedMessage","cx","Message","config","withBlockExtensions","getBlocksFieldname","getBlocksLayoutFieldname","getBlocksTocEntries","properties","tocData","_tocData$levels","blocksFieldName","blocksLayoutFieldname","blocks","blocks_layout","levels","length","map","l","parseInt","slice","rootLevel","Infinity","blocksFormEntries","tocEntries","tocEntriesLayout","items","forEach","id","_blockConfig$tocEntry","_blockConfig$tocEntri","block","blockConfig","blocksConfig","tocEntry","blockTocEntry","call","blockTocEntries","entry","index","i","level","title","includes","push","plaintext","View","props","data","variation","metadata","blocksFieldname","useMemo","_data$levels","entries","prevEntry","_config$blocks$blocks","_config$blocks$blocks2","_block$plaintext","trim","override_toc","parentId","parent","Renderer","view","__jsx","hide_title","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mode","defaultMessage","_extends","propTypes","objectOf","any","isRequired"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/ToC/View.jsx"],"sourcesContent":["/**\n * View toc block.\n * @module components/manage/Blocks/ToC/View\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport cx from 'classnames';\nimport { Message } from 'semantic-ui-react';\nimport config from '@plone/volto/registry';\nimport { withBlockExtensions } from '@plone/volto/helpers/Extensions';\n\nimport {\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n} from '@plone/volto/helpers/Blocks/Blocks';\n\nexport const getBlocksTocEntries = (properties, tocData) => {\n  const blocksFieldName = getBlocksFieldname(properties);\n  const blocksLayoutFieldname = getBlocksLayoutFieldname(properties);\n\n  const blocks = properties[blocksFieldName];\n  const blocks_layout = properties[blocksLayoutFieldname];\n\n  const levels =\n    tocData.levels?.length > 0\n      ? tocData.levels.map((l) => parseInt(l.slice(1)))\n      : [1, 2, 3, 4, 5, 6];\n  let rootLevel = Infinity;\n  let blocksFormEntries = [];\n  let tocEntries = {};\n  let tocEntriesLayout = [];\n\n  blocks_layout.items.forEach((id) => {\n    const block = blocks[id];\n    const blockConfig = config.blocks.blocksConfig[block['@type']];\n\n    if (!block || !blockConfig) {\n      return null;\n    }\n    if (!blockConfig.tocEntries && !blockConfig.tocEntry) {\n      return null;\n    }\n\n    const blockTocEntry = blockConfig.tocEntry?.(block, tocData);\n\n    const blockTocEntries = [\n      ...(blockConfig.tocEntries?.(block, tocData) ||\n        (blockTocEntry ? [blockTocEntry] : [])),\n    ];\n\n    blocksFormEntries = [...blocksFormEntries, ...blockTocEntries];\n\n    blockTocEntries.forEach((entry, index) => {\n      const i = `${id}-${index}`;\n      const level = entry[0];\n      const title = entry[1];\n      const items = [];\n      if (!level || !levels.includes(level)) return;\n      tocEntriesLayout.push(i);\n      tocEntries[i] = {\n        level,\n        title: title || block.plaintext,\n        items,\n        id: i,\n      };\n      if (level < rootLevel) {\n        rootLevel = level;\n      }\n    });\n  });\n\n  return {\n    rootLevel,\n    blocksFormEntries,\n    tocEntries,\n    tocEntriesLayout,\n  };\n};\n\n/**\n * View toc block class.\n * @class View\n * @extends Component\n */\nconst View = (props) => {\n  const { data } = props;\n\n  const title = data.title ? data.title : '';\n  const { variation } = props;\n  const metadata = props.metadata || props.properties;\n  const blocksFieldname = getBlocksFieldname(metadata);\n  const levels = React.useMemo(\n    () =>\n      data.levels?.length > 0\n        ? data.levels.map((l) => parseInt(l.slice(1)))\n        : [1, 2, 3, 4, 5, 6],\n    [data],\n  );\n  const tocEntries = React.useMemo(() => {\n    let entries = [];\n    let prevEntry = {};\n    const { rootLevel, tocEntries, tocEntriesLayout } = getBlocksTocEntries(\n      metadata,\n      data,\n    );\n\n    tocEntriesLayout.forEach((id) => {\n      const block = metadata[blocksFieldname][id];\n      if (typeof block === 'undefined') {\n        return null;\n      }\n      if (!config.blocks.blocksConfig[block['@type']]?.tocEntry) return null;\n      const entry = config.blocks.blocksConfig[block['@type']]?.tocEntry(\n        block,\n        data,\n      );\n\n      if (entry) {\n        const level = entry[0];\n        const title = entry[1];\n        const items = [];\n        if (!title?.trim() && !block.plaintext?.trim()) return;\n        if (!level || !levels.includes(level)) return;\n        tocEntriesLayout.push(id);\n        tocEntries[id] = {\n          level,\n          title: title || block.plaintext,\n          items,\n          id,\n          override_toc: block.override_toc,\n          plaintext: block.plaintext,\n        };\n      }\n    });\n\n    tocEntriesLayout.forEach((id) => {\n      const entry = tocEntries[id];\n      if (entry.level === rootLevel) {\n        entries.push(entry);\n        prevEntry = entry;\n        return;\n      }\n      if (!prevEntry.id) return;\n      if (entry.level > prevEntry.level) {\n        entry.parentId = prevEntry.id;\n        prevEntry.items.push(entry);\n        prevEntry = entry;\n      } else if (entry.level < prevEntry.level) {\n        let parent = tocEntries[prevEntry.parentId];\n        while (entry.level <= parent.level) {\n          parent = tocEntries[parent.parentId];\n        }\n        entry.parentId = parent.id;\n        parent.items.push(entry);\n        prevEntry = entry;\n      } else {\n        entry.parentId = prevEntry.parentId;\n        tocEntries[prevEntry.parentId].items.push(entry);\n        prevEntry = entry;\n      }\n    });\n\n    return entries;\n  }, [data, levels, metadata, blocksFieldname]);\n\n  const Renderer = variation?.view;\n  return (\n    <nav\n      aria-label={title && !data.hide_title ? title : ''}\n      className={cx('table-of-contents', variation?.id)}\n    >\n      {props.mode === 'edit' && !title && !tocEntries.length && (\n        <Message>\n          {\n            <FormattedMessage\n              id=\"Table of Contents\"\n              defaultMessage=\"Table of Contents\"\n            />\n          }\n        </Message>\n      )}\n\n      {Renderer ? (\n        <Renderer {...props} tocEntries={tocEntries} metadata={metadata} />\n      ) : (\n        <div>View extension not found</div>\n      )}\n    </nav>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default withBlockExtensions(View);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Table of Contents","defaultMessage":"Table of Contents"}]}},"sourceType":"module","externalDependencies":[]}