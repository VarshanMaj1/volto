{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/LeadImage/Edit.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, useIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { Message } from 'semantic-ui-react';\nimport LeadImageSidebar from '@plone/volto/components/manage/Blocks/LeadImage/LeadImageSidebar';\nimport SidebarPortal from '@plone/volto/components/manage/Sidebar/SidebarPortal';\nimport config from '@plone/volto/registry';\nimport imageBlockSVG from '@plone/volto/components/manage/Blocks/Image/block-image.svg';\nconst messages = defineMessages({\n  ImageBlockInputPlaceholder: {\n    \"id\": \"Upload a lead image in the 'Lead Image' content field.\",\n    \"defaultMessage\": \"Upload a lead image in the 'Lead Image' content field.\"\n  }\n});\nconst Edit = props => {\n  const intl = useIntl();\n  const {\n    data,\n    properties,\n    selected\n  } = props;\n  const placeholder = () => data.placeholder || intl.formatMessage(messages.ImageBlockInputPlaceholder);\n  const Image = config.getComponent({\n    name: 'Image'\n  }).component;\n  const hasImage = !!properties.image;\n  const hasImageData = hasImage && !!properties.image.data;\n  const className = cx('responsive', {\n    'full-image': data.align === 'full'\n  });\n  const altText = data.image_caption || properties.image_caption || '';\n  return __jsx(\"div\", {\n    className: cx('block image align', {\n      center: !Boolean(data.align)\n    }, data.align),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, !hasImage && __jsx(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: imageBlockSVG,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"message-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, placeholder))), hasImage && hasImageData && __jsx(\"img\", {\n    className: className,\n    src: `data:${properties.image['content-type']};base64,${properties.image.data}`,\n    width: properties.image.width,\n    height: properties.image.height,\n    alt: altText,\n    style: {\n      aspectRatio: `${properties.image.width}/${properties.image.height}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), hasImage && !hasImageData && __jsx(Image, {\n    className: className,\n    item: properties,\n    imageField: \"image\",\n    sizes: (() => {\n      return data.align === 'full' || data.align === 'center' ? '100vw' : data.align === 'left' || data.align === 'right' ? '50vw' : undefined;\n    })(),\n    alt: altText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), __jsx(SidebarPortal, {\n    selected: selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, __jsx(LeadImageSidebar, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }))));\n};\nexport default Edit;\nEdit.propTypes = {\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n  selected: PropTypes.bool.isRequired,\n  block: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  pathname: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  openObjectBrowser: PropTypes.func.isRequired\n};","map":{"version":3,"names":["React","PropTypes","defineMessages","useIntl","cx","Message","LeadImageSidebar","SidebarPortal","config","imageBlockSVG","messages","ImageBlockInputPlaceholder","Edit","props","intl","data","properties","selected","placeholder","formatMessage","Image","getComponent","name","component","hasImage","image","hasImageData","className","align","altText","image_caption","__jsx","center","Boolean","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","width","height","style","aspectRatio","item","imageField","sizes","undefined","_extends","propTypes","objectOf","any","isRequired","bool","block","string","index","number","pathname","onChangeBlock","func","openObjectBrowser"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/LeadImage/Edit.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, useIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { Message } from 'semantic-ui-react';\n\nimport LeadImageSidebar from '@plone/volto/components/manage/Blocks/LeadImage/LeadImageSidebar';\nimport SidebarPortal from '@plone/volto/components/manage/Sidebar/SidebarPortal';\nimport config from '@plone/volto/registry';\n\nimport imageBlockSVG from '@plone/volto/components/manage/Blocks/Image/block-image.svg';\n\nconst messages = defineMessages({\n  ImageBlockInputPlaceholder: {\n    id: \"Upload a lead image in the 'Lead Image' content field.\",\n    defaultMessage: \"Upload a lead image in the 'Lead Image' content field.\",\n  },\n});\n\nconst Edit = (props) => {\n  const intl = useIntl();\n  const { data, properties, selected } = props;\n\n  const placeholder = () =>\n    data.placeholder || intl.formatMessage(messages.ImageBlockInputPlaceholder);\n\n  const Image = config.getComponent({ name: 'Image' }).component;\n  const hasImage = !!properties.image;\n  const hasImageData = hasImage && !!properties.image.data;\n  const className = cx('responsive', { 'full-image': data.align === 'full' });\n  const altText = data.image_caption || properties.image_caption || '';\n\n  return (\n    <div\n      className={cx(\n        'block image align',\n        {\n          center: !Boolean(data.align),\n        },\n        data.align,\n      )}\n    >\n      {!hasImage && (\n        <Message>\n          <center>\n            <img src={imageBlockSVG} alt=\"\" />\n            <div className=\"message-text\">{placeholder}</div>\n          </center>\n        </Message>\n      )}\n      {hasImage && hasImageData && (\n        <img\n          className={className}\n          src={`data:${properties.image['content-type']};base64,${properties.image.data}`}\n          width={properties.image.width}\n          height={properties.image.height}\n          alt={altText}\n          style={{\n            aspectRatio: `${properties.image.width}/${properties.image.height}`,\n          }}\n        />\n      )}\n      {hasImage && !hasImageData && (\n        <Image\n          className={className}\n          item={properties}\n          imageField=\"image\"\n          sizes={(() => {\n            return data.align === 'full' || data.align === 'center'\n              ? '100vw'\n              : data.align === 'left' || data.align === 'right'\n                ? '50vw'\n                : undefined;\n          })()}\n          alt={altText}\n        />\n      )}\n      <SidebarPortal selected={selected}>\n        <LeadImageSidebar {...props} />\n      </SidebarPortal>\n    </div>\n  );\n};\n\nexport default Edit;\nEdit.propTypes = {\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n  selected: PropTypes.bool.isRequired,\n  block: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  pathname: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  openObjectBrowser: PropTypes.func.isRequired,\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,cAAc,EAAEC,OAAO,QAAQ,YAAY;AACpD,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,OAAO,QAAQ,mBAAmB;AAE3C,OAAOC,gBAAgB,MAAM,kEAAkE;AAC/F,OAAOC,aAAa,MAAM,sDAAsD;AAChF,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,OAAOC,aAAa,MAAM,6DAA6D;AAEvF,MAAMC,QAAQ,GAAGR,cAAc,CAAC;EAC9BS,0BAA0B;IAAA;IAAA;EAAA;AAI5B,CAAC,CAAC;AAEF,MAAMC,IAAI,GAAIC,KAAK,IAAK;EACtB,MAAMC,IAAI,GAAGX,OAAO,CAAC,CAAC;EACtB,MAAM;IAAEY,IAAI;IAAEC,UAAU;IAAEC;EAAS,CAAC,GAAGJ,KAAK;EAE5C,MAAMK,WAAW,GAAGA,CAAA,KAClBH,IAAI,CAACG,WAAW,IAAIJ,IAAI,CAACK,aAAa,CAACT,QAAQ,CAACC,0BAA0B,CAAC;EAE7E,MAAMS,KAAK,GAAGZ,MAAM,CAACa,YAAY,CAAC;IAAEC,IAAI,EAAE;EAAQ,CAAC,CAAC,CAACC,SAAS;EAC9D,MAAMC,QAAQ,GAAG,CAAC,CAACR,UAAU,CAACS,KAAK;EACnC,MAAMC,YAAY,GAAGF,QAAQ,IAAI,CAAC,CAACR,UAAU,CAACS,KAAK,CAACV,IAAI;EACxD,MAAMY,SAAS,GAAGvB,EAAE,CAAC,YAAY,EAAE;IAAE,YAAY,EAAEW,IAAI,CAACa,KAAK,KAAK;EAAO,CAAC,CAAC;EAC3E,MAAMC,OAAO,GAAGd,IAAI,CAACe,aAAa,IAAId,UAAU,CAACc,aAAa,IAAI,EAAE;EAEpE,OACEC,KAAA;IACEJ,SAAS,EAAEvB,EAAE,CACX,mBAAmB,EACnB;MACE4B,MAAM,EAAE,CAACC,OAAO,CAAClB,IAAI,CAACa,KAAK;IAC7B,CAAC,EACDb,IAAI,CAACa,KACP,CAAE;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAED,CAACf,QAAQ,IACRO,KAAA,CAAC1B,OAAO;IAAA6B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACNR,KAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACER,KAAA;IAAKS,GAAG,EAAE/B,aAAc;IAACgC,GAAG,EAAC,EAAE;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EAClCR,KAAA;IAAKJ,SAAS,EAAC,cAAc;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAErB,WAAiB,CAC1C,CACD,CACV,EACAM,QAAQ,IAAIE,YAAY,IACvBK,KAAA;IACEJ,SAAS,EAAEA,SAAU;IACrBa,GAAG,EAAE,QAAQxB,UAAU,CAACS,KAAK,CAAC,cAAc,CAAC,WAAWT,UAAU,CAACS,KAAK,CAACV,IAAI,EAAG;IAChF2B,KAAK,EAAE1B,UAAU,CAACS,KAAK,CAACiB,KAAM;IAC9BC,MAAM,EAAE3B,UAAU,CAACS,KAAK,CAACkB,MAAO;IAChCF,GAAG,EAAEZ,OAAQ;IACbe,KAAK,EAAE;MACLC,WAAW,EAAE,GAAG7B,UAAU,CAACS,KAAK,CAACiB,KAAK,IAAI1B,UAAU,CAACS,KAAK,CAACkB,MAAM;IACnE,CAAE;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CACF,EACAf,QAAQ,IAAI,CAACE,YAAY,IACxBK,KAAA,CAACX,KAAK;IACJO,SAAS,EAAEA,SAAU;IACrBmB,IAAI,EAAE9B,UAAW;IACjB+B,UAAU,EAAC,OAAO;IAClBC,KAAK,EAAE,CAAC,MAAM;MACZ,OAAOjC,IAAI,CAACa,KAAK,KAAK,MAAM,IAAIb,IAAI,CAACa,KAAK,KAAK,QAAQ,GACnD,OAAO,GACPb,IAAI,CAACa,KAAK,KAAK,MAAM,IAAIb,IAAI,CAACa,KAAK,KAAK,OAAO,GAC7C,MAAM,GACNqB,SAAS;IACjB,CAAC,EAAE,CAAE;IACLR,GAAG,EAAEZ,OAAQ;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACd,CACF,EACDR,KAAA,CAACxB,aAAa;IAACU,QAAQ,EAAEA,QAAS;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAChCR,KAAA,CAACzB,gBAAgB,EAAA4C,QAAA,KAAKrC,KAAK;IAAAqB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,CACjB,CACZ,CAAC;AAEV,CAAC;AAED,eAAe3B,IAAI;AACnBA,IAAI,CAACuC,SAAS,GAAG;EACfnC,UAAU,EAAEf,SAAS,CAACmD,QAAQ,CAACnD,SAAS,CAACoD,GAAG,CAAC,CAACC,UAAU;EACxDrC,QAAQ,EAAEhB,SAAS,CAACsD,IAAI,CAACD,UAAU;EACnCE,KAAK,EAAEvD,SAAS,CAACwD,MAAM,CAACH,UAAU;EAClCI,KAAK,EAAEzD,SAAS,CAAC0D,MAAM,CAACL,UAAU;EAClCvC,IAAI,EAAEd,SAAS,CAACmD,QAAQ,CAACnD,SAAS,CAACoD,GAAG,CAAC,CAACC,UAAU;EAClDM,QAAQ,EAAE3D,SAAS,CAACwD,MAAM,CAACH,UAAU;EACrCO,aAAa,EAAE5D,SAAS,CAAC6D,IAAI,CAACR,UAAU;EACxCS,iBAAiB,EAAE9D,SAAS,CAAC6D,IAAI,CAACR;AACpC,CAAC","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Upload a lead image in the 'Lead Image' content field.","defaultMessage":"Upload a lead image in the 'Lead Image' content field."}]}},"sourceType":"module","externalDependencies":[]}