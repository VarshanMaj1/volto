{"ast":null,"code":"import ConfigRegistry from '@plone/volto/registry';\nimport { parse as parseUrl } from 'url';\nimport { nonContentRoutes } from './NonContentRoutes';\nimport { nonContentRoutesPublic } from './NonContentRoutesPublic';\nimport { loadables } from './Loadables';\nimport { workflowMapping } from './Workflows';\nimport slots from './slots';\nimport { contentIcons } from './ContentIcons';\nimport { styleClassNameConverters, styleClassNameExtenders } from './Style';\nimport { controlPanelsIcons, filterControlPanels, filterControlPanelsSchema, unwantedControlPanelsFields } from './ControlPanels';\nimport applyAddonConfiguration, { addonsInfo } from 'load-volto-addons';\nimport { installDefaultComponents } from './Components';\nimport { installDefaultWidgets } from './Widgets';\nimport { installDefaultViews } from './Views';\nimport { installDefaultBlocks } from './Blocks';\nimport { getSiteAsyncPropExtender } from '@plone/volto/helpers/Site';\nimport { registerValidators } from './validation';\nconst host = process.env.HOST || 'localhost';\nconst port = process.env.PORT || '3000';\nconst apiPath = process.env.RAZZLE_API_PATH || (__DEVELOPMENT__ ? `http://${host}:${port}` : '');\nconst getServerURL = url => {\n  if (!url) return;\n  const apiPathURL = parseUrl(url);\n  return `${apiPathURL.protocol}//${apiPathURL.hostname}${apiPathURL.port ? `:${apiPathURL.port}` : ''}`;\n};\n\n// Sensible defaults for publicURL\n// if RAZZLE_PUBLIC_URL is present, use it\n// if in DEV, use the host/port combination by default\n// if in PROD, assume it's RAZZLE_API_PATH server name (no /api or alikes) or fallback\n// to DEV settings if RAZZLE_API_PATH is not present\nconst publicURL = process.env.RAZZLE_PUBLIC_URL || (__DEVELOPMENT__ ? `http://${host}:${port}` : getServerURL(process.env.RAZZLE_API_PATH) || `http://${host}:${port}`);\nconst serverConfig = typeof __SERVER__ !== 'undefined' && __SERVER__ ? require('./server').default : {};\nlet config = {\n  settings: {\n    host,\n    port,\n    // The URL Volto is going to be served (see sensible defaults above)\n    publicURL,\n    okRoute: '/ok',\n    apiPath,\n    apiExpanders: [\n      // Added here for documentation purposes, added at the end because it\n      // depends on a value of this object.\n      // Add the following expanders for only issuing a single request.\n      // https://6.docs.plone.org/volto/configuration/settings-reference.html#term-apiExpanders\n      // {\n      //   match: '',\n      //   GET_CONTENT: [\n      //     'breadcrumbs',\n      //     'navigation',\n      //     'actions',\n      //     'types',\n      //     'navroot',\n      //   ],\n      // },\n    ],\n    // Internal proxy to bypass CORS *while developing*. NOT intended for production use.\n    // In production is recommended you use a Seamless mode deployment using a web server in\n    // front of both the frontend and the backend so you can bypass CORS safely.\n    // https://6.docs.plone.org/volto/deploying/seamless-mode.html\n    devProxyToApiPath: process.env.RAZZLE_DEV_PROXY_API_PATH || process.env.RAZZLE_INTERNAL_API_PATH || process.env.RAZZLE_API_PATH || 'http://localhost:8080/Plone',\n    // Set it to '' for disabling the proxy\n    // proxyRewriteTarget Set it for set a custom target for the proxy or override the internal VHM rewrite\n    // proxyRewriteTarget: '/VirtualHostBase/http/localhost:8080/Plone/VirtualHostRoot/_vh_api'\n    // proxyRewriteTarget: 'https://myvoltositeinproduction.com'\n    proxyRewriteTarget: process.env.RAZZLE_PROXY_REWRITE_TARGET || undefined,\n    // apiPath: process.env.RAZZLE_API_PATH || 'http://localhost:8000', // for Volto reference\n    // apiPath: process.env.RAZZLE_API_PATH || 'http://localhost:8081/db/web', // for guillotina\n    actions_raising_api_errors: ['GET_CONTENT', 'UPDATE_CONTENT'],\n    internalApiPath: process.env.RAZZLE_INTERNAL_API_PATH || undefined,\n    websockets: process.env.RAZZLE_WEBSOCKETS || false,\n    // TODO: legacyTraverse to be removed when the use of the legacy traverse is deprecated.\n    legacyTraverse: process.env.RAZZLE_LEGACY_TRAVERSE || false,\n    cookieExpires: 15552000,\n    //in seconds. Default is 6 month (15552000)\n    nonContentRoutes,\n    nonContentRoutesPublic,\n    imageObjects: ['Image'],\n    reservedIds: ['login', 'layout', 'plone', 'zip', 'properties'],\n    downloadableObjects: ['File'],\n    //list of content-types for which the direct download of the file will be carried out if the user is not authenticated\n    viewableInBrowserObjects: [],\n    //ex: ['File']. List of content-types for which the file will be displayed in browser if the user is not authenticated\n    listingPreviewImageField: 'image',\n    // deprecated from Volto 14 onwards\n    openExternalLinkInNewTab: false,\n    notSupportedBrowsers: ['ie'],\n    defaultPageSize: 25,\n    isMultilingual: false,\n    supportedLanguages: ['en'],\n    defaultLanguage: 'en',\n    navDepth: 1,\n    expressMiddleware: serverConfig.expressMiddleware,\n    // BBB\n    defaultBlockType: 'slate',\n    verticalFormTabs: false,\n    useEmailAsLogin: false,\n    persistentReducers: ['blocksClipboard'],\n    initialReducersBlacklist: [],\n    // reducers in this list won't be hydrated in windows.__data\n    asyncPropsExtenders: [getSiteAsyncPropExtender],\n    // per route asyncConnect customizers\n    contentIcons: contentIcons,\n    loadables,\n    lazyBundles: {\n      cms: ['prettierStandalone', 'prettierParserHtml', 'prismCore', 'toastify', 'reactSelect', 'reactBeautifulDnd'\n      // 'diffLib',\n      ]\n    },\n    appExtras: [],\n    maxResponseSize: 2000000000,\n    // This is superagent default (200 mb)\n    maxFileUploadSize: null,\n    serverConfig,\n    storeExtenders: [],\n    showTags: true,\n    showRelatedItems: false,\n    controlpanels: [],\n    controlPanelsIcons,\n    filterControlPanels,\n    filterControlPanelsSchema,\n    unwantedControlPanelsFields,\n    externalRoutes: [\n      // URL to be considered as external\n      // {\n      //   match: {\n      //     path: '/news',\n      //     exact: false,\n      //     strict: false,\n      //   },\n      //   url(payload) {\n      //     return payload.location.pathname;\n      //   },\n      // },\n    ],\n    showSelfRegistration: false,\n    contentMetadataTagsImageField: 'image',\n    contentPropertiesSchemaEnhancer: null,\n    maxUndoLevels: 200,\n    // undo history size for the main form\n    addonsInfo: addonsInfo,\n    workflowMapping,\n    errorHandlers: [],\n    // callables for unhandled errors\n    styleClassNameConverters,\n    hashLinkSmoothScroll: false,\n    styleClassNameExtenders,\n    querystringSearchGet: false,\n    blockSettingsTabFieldsetsInitialStateOpen: true,\n    excludeLinksAndReferencesMenuItem: false,\n    siteTitleFormat: {\n      includeSiteTitle: false,\n      titleAndSiteTitleSeparator: '-'\n    }\n  },\n  experimental: {\n    addBlockButton: {\n      enabled: true\n    }\n  },\n  widgets: {},\n  views: {},\n  blocks: {},\n  addonRoutes: [],\n  addonReducers: {},\n  components: {},\n  slots: {},\n  utilities: {}\n};\n\n// The apiExpanders depends on a config of the object, so it's done here\nconfig.settings.apiExpanders = [...config.settings.apiExpanders, {\n  match: '',\n  GET_CONTENT: ['breadcrumbs', 'actions', 'types', 'navroot']\n}, {\n  match: '',\n  GET_CONTENT: ['navigation'],\n  querystring: config => ({\n    'expand.navigation.depth': config.settings.navDepth\n  })\n}];\nConfigRegistry.settings = config.settings;\nConfigRegistry.experimental = config.experimental;\nConfigRegistry.blocks = config.blocks;\nConfigRegistry.views = config.views;\nConfigRegistry.widgets = config.widgets;\nConfigRegistry.addonRoutes = config.addonRoutes;\nConfigRegistry.addonReducers = config.addonReducers;\nConfigRegistry.components = config.components;\nConfigRegistry.slots = config.slots;\nConfigRegistry.utilities = config.utilities;\n\n// Register slots\nObject.entries(slots).forEach(([slotName, components]) => {\n  components.forEach(({\n    name,\n    component,\n    predicates = []\n  }) => {\n    ConfigRegistry.registerSlotComponent({\n      slot: slotName,\n      name,\n      component,\n      predicates\n    });\n  });\n});\nregisterValidators(ConfigRegistry);\ninstallDefaultComponents(ConfigRegistry);\ninstallDefaultWidgets(ConfigRegistry);\ninstallDefaultViews(ConfigRegistry);\ninstallDefaultBlocks(ConfigRegistry);\napplyAddonConfiguration(ConfigRegistry);","map":{"version":3,"names":["ConfigRegistry","parse","parseUrl","nonContentRoutes","nonContentRoutesPublic","loadables","workflowMapping","slots","contentIcons","styleClassNameConverters","styleClassNameExtenders","controlPanelsIcons","filterControlPanels","filterControlPanelsSchema","unwantedControlPanelsFields","applyAddonConfiguration","addonsInfo","installDefaultComponents","installDefaultWidgets","installDefaultViews","installDefaultBlocks","getSiteAsyncPropExtender","registerValidators","host","process","env","HOST","port","PORT","apiPath","RAZZLE_API_PATH","__DEVELOPMENT__","getServerURL","url","apiPathURL","protocol","hostname","publicURL","RAZZLE_PUBLIC_URL","serverConfig","__SERVER__","require","default","config","settings","okRoute","apiExpanders","devProxyToApiPath","RAZZLE_DEV_PROXY_API_PATH","RAZZLE_INTERNAL_API_PATH","proxyRewriteTarget","RAZZLE_PROXY_REWRITE_TARGET","undefined","actions_raising_api_errors","internalApiPath","websockets","RAZZLE_WEBSOCKETS","legacyTraverse","RAZZLE_LEGACY_TRAVERSE","cookieExpires","imageObjects","reservedIds","downloadableObjects","viewableInBrowserObjects","listingPreviewImageField","openExternalLinkInNewTab","notSupportedBrowsers","defaultPageSize","isMultilingual","supportedLanguages","defaultLanguage","navDepth","expressMiddleware","defaultBlockType","verticalFormTabs","useEmailAsLogin","persistentReducers","initialReducersBlacklist","asyncPropsExtenders","lazyBundles","cms","appExtras","maxResponseSize","maxFileUploadSize","storeExtenders","showTags","showRelatedItems","controlpanels","externalRoutes","showSelfRegistration","contentMetadataTagsImageField","contentPropertiesSchemaEnhancer","maxUndoLevels","errorHandlers","hashLinkSmoothScroll","querystringSearchGet","blockSettingsTabFieldsetsInitialStateOpen","excludeLinksAndReferencesMenuItem","siteTitleFormat","includeSiteTitle","titleAndSiteTitleSeparator","experimental","addBlockButton","enabled","widgets","views","blocks","addonRoutes","addonReducers","components","utilities","match","GET_CONTENT","querystring","Object","entries","forEach","slotName","name","component","predicates","registerSlotComponent","slot"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/config/index.js"],"sourcesContent":["import ConfigRegistry from '@plone/volto/registry';\nimport { parse as parseUrl } from 'url';\nimport { nonContentRoutes } from './NonContentRoutes';\nimport { nonContentRoutesPublic } from './NonContentRoutesPublic';\nimport { loadables } from './Loadables';\nimport { workflowMapping } from './Workflows';\nimport slots from './slots';\n\nimport { contentIcons } from './ContentIcons';\nimport { styleClassNameConverters, styleClassNameExtenders } from './Style';\nimport {\n  controlPanelsIcons,\n  filterControlPanels,\n  filterControlPanelsSchema,\n  unwantedControlPanelsFields,\n} from './ControlPanels';\n\nimport applyAddonConfiguration, { addonsInfo } from 'load-volto-addons';\n\nimport { installDefaultComponents } from './Components';\nimport { installDefaultWidgets } from './Widgets';\nimport { installDefaultViews } from './Views';\nimport { installDefaultBlocks } from './Blocks';\n\nimport { getSiteAsyncPropExtender } from '@plone/volto/helpers/Site';\nimport { registerValidators } from './validation';\n\nconst host = process.env.HOST || 'localhost';\nconst port = process.env.PORT || '3000';\n\nconst apiPath =\n  process.env.RAZZLE_API_PATH ||\n  (__DEVELOPMENT__ ? `http://${host}:${port}` : '');\n\nconst getServerURL = (url) => {\n  if (!url) return;\n  const apiPathURL = parseUrl(url);\n  return `${apiPathURL.protocol}//${apiPathURL.hostname}${\n    apiPathURL.port ? `:${apiPathURL.port}` : ''\n  }`;\n};\n\n// Sensible defaults for publicURL\n// if RAZZLE_PUBLIC_URL is present, use it\n// if in DEV, use the host/port combination by default\n// if in PROD, assume it's RAZZLE_API_PATH server name (no /api or alikes) or fallback\n// to DEV settings if RAZZLE_API_PATH is not present\nconst publicURL =\n  process.env.RAZZLE_PUBLIC_URL ||\n  (__DEVELOPMENT__\n    ? `http://${host}:${port}`\n    : getServerURL(process.env.RAZZLE_API_PATH) || `http://${host}:${port}`);\n\nconst serverConfig =\n  typeof __SERVER__ !== 'undefined' && __SERVER__\n    ? require('./server').default\n    : {};\n\nlet config = {\n  settings: {\n    host,\n    port,\n    // The URL Volto is going to be served (see sensible defaults above)\n    publicURL,\n    okRoute: '/ok',\n    apiPath,\n    apiExpanders: [\n      // Added here for documentation purposes, added at the end because it\n      // depends on a value of this object.\n      // Add the following expanders for only issuing a single request.\n      // https://6.docs.plone.org/volto/configuration/settings-reference.html#term-apiExpanders\n      // {\n      //   match: '',\n      //   GET_CONTENT: [\n      //     'breadcrumbs',\n      //     'navigation',\n      //     'actions',\n      //     'types',\n      //     'navroot',\n      //   ],\n      // },\n    ],\n    // Internal proxy to bypass CORS *while developing*. NOT intended for production use.\n    // In production is recommended you use a Seamless mode deployment using a web server in\n    // front of both the frontend and the backend so you can bypass CORS safely.\n    // https://6.docs.plone.org/volto/deploying/seamless-mode.html\n    devProxyToApiPath:\n      process.env.RAZZLE_DEV_PROXY_API_PATH ||\n      process.env.RAZZLE_INTERNAL_API_PATH ||\n      process.env.RAZZLE_API_PATH ||\n      'http://localhost:8080/Plone', // Set it to '' for disabling the proxy\n    // proxyRewriteTarget Set it for set a custom target for the proxy or override the internal VHM rewrite\n    // proxyRewriteTarget: '/VirtualHostBase/http/localhost:8080/Plone/VirtualHostRoot/_vh_api'\n    // proxyRewriteTarget: 'https://myvoltositeinproduction.com'\n    proxyRewriteTarget: process.env.RAZZLE_PROXY_REWRITE_TARGET || undefined,\n    // apiPath: process.env.RAZZLE_API_PATH || 'http://localhost:8000', // for Volto reference\n    // apiPath: process.env.RAZZLE_API_PATH || 'http://localhost:8081/db/web', // for guillotina\n    actions_raising_api_errors: ['GET_CONTENT', 'UPDATE_CONTENT'],\n    internalApiPath: process.env.RAZZLE_INTERNAL_API_PATH || undefined,\n    websockets: process.env.RAZZLE_WEBSOCKETS || false,\n    // TODO: legacyTraverse to be removed when the use of the legacy traverse is deprecated.\n    legacyTraverse: process.env.RAZZLE_LEGACY_TRAVERSE || false,\n    cookieExpires: 15552000, //in seconds. Default is 6 month (15552000)\n    nonContentRoutes,\n    nonContentRoutesPublic,\n    imageObjects: ['Image'],\n    reservedIds: ['login', 'layout', 'plone', 'zip', 'properties'],\n    downloadableObjects: ['File'], //list of content-types for which the direct download of the file will be carried out if the user is not authenticated\n    viewableInBrowserObjects: [], //ex: ['File']. List of content-types for which the file will be displayed in browser if the user is not authenticated\n    listingPreviewImageField: 'image', // deprecated from Volto 14 onwards\n    openExternalLinkInNewTab: false,\n    notSupportedBrowsers: ['ie'],\n    defaultPageSize: 25,\n    isMultilingual: false,\n    supportedLanguages: ['en'],\n    defaultLanguage: 'en',\n    navDepth: 1,\n    expressMiddleware: serverConfig.expressMiddleware, // BBB\n    defaultBlockType: 'slate',\n    verticalFormTabs: false,\n    useEmailAsLogin: false,\n    persistentReducers: ['blocksClipboard'],\n    initialReducersBlacklist: [], // reducers in this list won't be hydrated in windows.__data\n    asyncPropsExtenders: [getSiteAsyncPropExtender], // per route asyncConnect customizers\n    contentIcons: contentIcons,\n    loadables,\n    lazyBundles: {\n      cms: [\n        'prettierStandalone',\n        'prettierParserHtml',\n        'prismCore',\n        'toastify',\n        'reactSelect',\n        'reactBeautifulDnd',\n        // 'diffLib',\n      ],\n    },\n    appExtras: [],\n    maxResponseSize: 2000000000, // This is superagent default (200 mb)\n    maxFileUploadSize: null,\n    serverConfig,\n    storeExtenders: [],\n    showTags: true,\n    showRelatedItems: false,\n    controlpanels: [],\n    controlPanelsIcons,\n    filterControlPanels,\n    filterControlPanelsSchema,\n    unwantedControlPanelsFields,\n    externalRoutes: [\n      // URL to be considered as external\n      // {\n      //   match: {\n      //     path: '/news',\n      //     exact: false,\n      //     strict: false,\n      //   },\n      //   url(payload) {\n      //     return payload.location.pathname;\n      //   },\n      // },\n    ],\n    showSelfRegistration: false,\n    contentMetadataTagsImageField: 'image',\n    contentPropertiesSchemaEnhancer: null,\n    maxUndoLevels: 200, // undo history size for the main form\n    addonsInfo: addonsInfo,\n    workflowMapping,\n    errorHandlers: [], // callables for unhandled errors\n    styleClassNameConverters,\n    hashLinkSmoothScroll: false,\n    styleClassNameExtenders,\n    querystringSearchGet: false,\n    blockSettingsTabFieldsetsInitialStateOpen: true,\n    excludeLinksAndReferencesMenuItem: false,\n    siteTitleFormat: {\n      includeSiteTitle: false,\n      titleAndSiteTitleSeparator: '-',\n    },\n  },\n  experimental: {\n    addBlockButton: {\n      enabled: true,\n    },\n  },\n  widgets: {},\n  views: {},\n  blocks: {},\n  addonRoutes: [],\n  addonReducers: {},\n  components: {},\n  slots: {},\n  utilities: {},\n};\n\n// The apiExpanders depends on a config of the object, so it's done here\nconfig.settings.apiExpanders = [\n  ...config.settings.apiExpanders,\n  {\n    match: '',\n    GET_CONTENT: ['breadcrumbs', 'actions', 'types', 'navroot'],\n  },\n  {\n    match: '',\n    GET_CONTENT: ['navigation'],\n    querystring: (config) => ({\n      'expand.navigation.depth': config.settings.navDepth,\n    }),\n  },\n];\n\nConfigRegistry.settings = config.settings;\nConfigRegistry.experimental = config.experimental;\nConfigRegistry.blocks = config.blocks;\nConfigRegistry.views = config.views;\nConfigRegistry.widgets = config.widgets;\nConfigRegistry.addonRoutes = config.addonRoutes;\nConfigRegistry.addonReducers = config.addonReducers;\nConfigRegistry.components = config.components;\nConfigRegistry.slots = config.slots;\nConfigRegistry.utilities = config.utilities;\n\n// Register slots\nObject.entries(slots).forEach(([slotName, components]) => {\n  components.forEach(({ name, component, predicates = [] }) => {\n    ConfigRegistry.registerSlotComponent({\n      slot: slotName,\n      name,\n      component,\n      predicates,\n    });\n  });\n});\n\nregisterValidators(ConfigRegistry);\ninstallDefaultComponents(ConfigRegistry);\ninstallDefaultWidgets(ConfigRegistry);\ninstallDefaultViews(ConfigRegistry);\ninstallDefaultBlocks(ConfigRegistry);\n\napplyAddonConfiguration(ConfigRegistry);\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,uBAAuB;AAClD,SAASC,KAAK,IAAIC,QAAQ,QAAQ,KAAK;AACvC,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,sBAAsB,QAAQ,0BAA0B;AACjE,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,eAAe,QAAQ,aAAa;AAC7C,OAAOC,KAAK,MAAM,SAAS;AAE3B,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,wBAAwB,EAAEC,uBAAuB,QAAQ,SAAS;AAC3E,SACEC,kBAAkB,EAClBC,mBAAmB,EACnBC,yBAAyB,EACzBC,2BAA2B,QACtB,iBAAiB;AAExB,OAAOC,uBAAuB,IAAIC,UAAU,QAAQ,mBAAmB;AAEvE,SAASC,wBAAwB,QAAQ,cAAc;AACvD,SAASC,qBAAqB,QAAQ,WAAW;AACjD,SAASC,mBAAmB,QAAQ,SAAS;AAC7C,SAASC,oBAAoB,QAAQ,UAAU;AAE/C,SAASC,wBAAwB,QAAQ,2BAA2B;AACpE,SAASC,kBAAkB,QAAQ,cAAc;AAEjD,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,WAAW;AAC5C,MAAMC,IAAI,GAAGH,OAAO,CAACC,GAAG,CAACG,IAAI,IAAI,MAAM;AAEvC,MAAMC,OAAO,GACXL,OAAO,CAACC,GAAG,CAACK,eAAe,KAC1BC,eAAe,GAAG,UAAUR,IAAI,IAAII,IAAI,EAAE,GAAG,EAAE,CAAC;AAEnD,MAAMK,YAAY,GAAIC,GAAG,IAAK;EAC5B,IAAI,CAACA,GAAG,EAAE;EACV,MAAMC,UAAU,GAAGhC,QAAQ,CAAC+B,GAAG,CAAC;EAChC,OAAO,GAAGC,UAAU,CAACC,QAAQ,KAAKD,UAAU,CAACE,QAAQ,GACnDF,UAAU,CAACP,IAAI,GAAG,IAAIO,UAAU,CAACP,IAAI,EAAE,GAAG,EAAE,EAC5C;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMU,SAAS,GACbb,OAAO,CAACC,GAAG,CAACa,iBAAiB,KAC5BP,eAAe,GACZ,UAAUR,IAAI,IAAII,IAAI,EAAE,GACxBK,YAAY,CAACR,OAAO,CAACC,GAAG,CAACK,eAAe,CAAC,IAAI,UAAUP,IAAI,IAAII,IAAI,EAAE,CAAC;AAE5E,MAAMY,YAAY,GAChB,OAAOC,UAAU,KAAK,WAAW,IAAIA,UAAU,GAC3CC,OAAO,CAAC,UAAU,CAAC,CAACC,OAAO,GAC3B,CAAC,CAAC;AAER,IAAIC,MAAM,GAAG;EACXC,QAAQ,EAAE;IACRrB,IAAI;IACJI,IAAI;IACJ;IACAU,SAAS;IACTQ,OAAO,EAAE,KAAK;IACdhB,OAAO;IACPiB,YAAY,EAAE;MACZ;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,CACD;IACD;IACA;IACA;IACA;IACAC,iBAAiB,EACfvB,OAAO,CAACC,GAAG,CAACuB,yBAAyB,IACrCxB,OAAO,CAACC,GAAG,CAACwB,wBAAwB,IACpCzB,OAAO,CAACC,GAAG,CAACK,eAAe,IAC3B,6BAA6B;IAAE;IACjC;IACA;IACA;IACAoB,kBAAkB,EAAE1B,OAAO,CAACC,GAAG,CAAC0B,2BAA2B,IAAIC,SAAS;IACxE;IACA;IACAC,0BAA0B,EAAE,CAAC,aAAa,EAAE,gBAAgB,CAAC;IAC7DC,eAAe,EAAE9B,OAAO,CAACC,GAAG,CAACwB,wBAAwB,IAAIG,SAAS;IAClEG,UAAU,EAAE/B,OAAO,CAACC,GAAG,CAAC+B,iBAAiB,IAAI,KAAK;IAClD;IACAC,cAAc,EAAEjC,OAAO,CAACC,GAAG,CAACiC,sBAAsB,IAAI,KAAK;IAC3DC,aAAa,EAAE,QAAQ;IAAE;IACzBxD,gBAAgB;IAChBC,sBAAsB;IACtBwD,YAAY,EAAE,CAAC,OAAO,CAAC;IACvBC,WAAW,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,YAAY,CAAC;IAC9DC,mBAAmB,EAAE,CAAC,MAAM,CAAC;IAAE;IAC/BC,wBAAwB,EAAE,EAAE;IAAE;IAC9BC,wBAAwB,EAAE,OAAO;IAAE;IACnCC,wBAAwB,EAAE,KAAK;IAC/BC,oBAAoB,EAAE,CAAC,IAAI,CAAC;IAC5BC,eAAe,EAAE,EAAE;IACnBC,cAAc,EAAE,KAAK;IACrBC,kBAAkB,EAAE,CAAC,IAAI,CAAC;IAC1BC,eAAe,EAAE,IAAI;IACrBC,QAAQ,EAAE,CAAC;IACXC,iBAAiB,EAAEjC,YAAY,CAACiC,iBAAiB;IAAE;IACnDC,gBAAgB,EAAE,OAAO;IACzBC,gBAAgB,EAAE,KAAK;IACvBC,eAAe,EAAE,KAAK;IACtBC,kBAAkB,EAAE,CAAC,iBAAiB,CAAC;IACvCC,wBAAwB,EAAE,EAAE;IAAE;IAC9BC,mBAAmB,EAAE,CAACzD,wBAAwB,CAAC;IAAE;IACjDb,YAAY,EAAEA,YAAY;IAC1BH,SAAS;IACT0E,WAAW,EAAE;MACXC,GAAG,EAAE,CACH,oBAAoB,EACpB,oBAAoB,EACpB,WAAW,EACX,UAAU,EACV,aAAa,EACb;MACA;MAAA;IAEJ,CAAC;IACDC,SAAS,EAAE,EAAE;IACbC,eAAe,EAAE,UAAU;IAAE;IAC7BC,iBAAiB,EAAE,IAAI;IACvB5C,YAAY;IACZ6C,cAAc,EAAE,EAAE;IAClBC,QAAQ,EAAE,IAAI;IACdC,gBAAgB,EAAE,KAAK;IACvBC,aAAa,EAAE,EAAE;IACjB5E,kBAAkB;IAClBC,mBAAmB;IACnBC,yBAAyB;IACzBC,2BAA2B;IAC3B0E,cAAc,EAAE;MACd;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,CACD;IACDC,oBAAoB,EAAE,KAAK;IAC3BC,6BAA6B,EAAE,OAAO;IACtCC,+BAA+B,EAAE,IAAI;IACrCC,aAAa,EAAE,GAAG;IAAE;IACpB5E,UAAU,EAAEA,UAAU;IACtBV,eAAe;IACfuF,aAAa,EAAE,EAAE;IAAE;IACnBpF,wBAAwB;IACxBqF,oBAAoB,EAAE,KAAK;IAC3BpF,uBAAuB;IACvBqF,oBAAoB,EAAE,KAAK;IAC3BC,yCAAyC,EAAE,IAAI;IAC/CC,iCAAiC,EAAE,KAAK;IACxCC,eAAe,EAAE;MACfC,gBAAgB,EAAE,KAAK;MACvBC,0BAA0B,EAAE;IAC9B;EACF,CAAC;EACDC,YAAY,EAAE;IACZC,cAAc,EAAE;MACdC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAO,EAAE,CAAC,CAAC;EACXC,KAAK,EAAE,CAAC,CAAC;EACTC,MAAM,EAAE,CAAC,CAAC;EACVC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAE,CAAC,CAAC;EACjBC,UAAU,EAAE,CAAC,CAAC;EACdtG,KAAK,EAAE,CAAC,CAAC;EACTuG,SAAS,EAAE,CAAC;AACd,CAAC;;AAED;AACAnE,MAAM,CAACC,QAAQ,CAACE,YAAY,GAAG,CAC7B,GAAGH,MAAM,CAACC,QAAQ,CAACE,YAAY,EAC/B;EACEiE,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE,CAAC,aAAa,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS;AAC5D,CAAC,EACD;EACED,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE,CAAC,YAAY,CAAC;EAC3BC,WAAW,EAAGtE,MAAM,KAAM;IACxB,yBAAyB,EAAEA,MAAM,CAACC,QAAQ,CAAC2B;EAC7C,CAAC;AACH,CAAC,CACF;AAEDvE,cAAc,CAAC4C,QAAQ,GAAGD,MAAM,CAACC,QAAQ;AACzC5C,cAAc,CAACqG,YAAY,GAAG1D,MAAM,CAAC0D,YAAY;AACjDrG,cAAc,CAAC0G,MAAM,GAAG/D,MAAM,CAAC+D,MAAM;AACrC1G,cAAc,CAACyG,KAAK,GAAG9D,MAAM,CAAC8D,KAAK;AACnCzG,cAAc,CAACwG,OAAO,GAAG7D,MAAM,CAAC6D,OAAO;AACvCxG,cAAc,CAAC2G,WAAW,GAAGhE,MAAM,CAACgE,WAAW;AAC/C3G,cAAc,CAAC4G,aAAa,GAAGjE,MAAM,CAACiE,aAAa;AACnD5G,cAAc,CAAC6G,UAAU,GAAGlE,MAAM,CAACkE,UAAU;AAC7C7G,cAAc,CAACO,KAAK,GAAGoC,MAAM,CAACpC,KAAK;AACnCP,cAAc,CAAC8G,SAAS,GAAGnE,MAAM,CAACmE,SAAS;;AAE3C;AACAI,MAAM,CAACC,OAAO,CAAC5G,KAAK,CAAC,CAAC6G,OAAO,CAAC,CAAC,CAACC,QAAQ,EAAER,UAAU,CAAC,KAAK;EACxDA,UAAU,CAACO,OAAO,CAAC,CAAC;IAAEE,IAAI;IAAEC,SAAS;IAAEC,UAAU,GAAG;EAAG,CAAC,KAAK;IAC3DxH,cAAc,CAACyH,qBAAqB,CAAC;MACnCC,IAAI,EAAEL,QAAQ;MACdC,IAAI;MACJC,SAAS;MACTC;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFlG,kBAAkB,CAACtB,cAAc,CAAC;AAClCiB,wBAAwB,CAACjB,cAAc,CAAC;AACxCkB,qBAAqB,CAAClB,cAAc,CAAC;AACrCmB,mBAAmB,CAACnB,cAAc,CAAC;AACnCoB,oBAAoB,CAACpB,cAAc,CAAC;AAEpCe,uBAAuB,CAACf,cAAc,CAAC","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}