{"ast":null,"code":"import _extends from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Widgets/PasswordWidget.jsx\";\nvar __jsx = React.createElement;\n/**\n * PasswordWidget component.\n * @module components/manage/Widgets/PassswordWidget\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'semantic-ui-react';\nimport FormFieldWrapper from '@plone/volto/components/manage/Widgets/FormFieldWrapper';\nimport { injectIntl } from 'react-intl';\n\n/**\n * PasswordWidget component class.\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Password\",\n *  type: 'password',\n * }\n * ```\n */\nconst PasswordWidget = props => {\n  const {\n    id,\n    value,\n    onChange,\n    onBlur,\n    onClick,\n    minLength,\n    maxLength,\n    placeholder,\n    isDisabled\n  } = props;\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), __jsx(Input, {\n    id: `field-${id}`,\n    name: id,\n    type: \"password\",\n    disabled: isDisabled,\n    value: value || '',\n    placeholder: placeholder,\n    onChange: ({\n      target\n    }) => onChange(id, target.value === '' ? undefined : target.value),\n    onBlur: ({\n      target\n    }) => onBlur(id, target.value === '' ? undefined : target.value),\n    onClick: () => onClick(),\n    minLength: minLength || null,\n    maxLength: maxLength || null,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n};\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_c = PasswordWidget;\nPasswordWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  wrapped: PropTypes.bool,\n  placeholder: PropTypes.string\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nPasswordWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: () => {},\n  onBlur: () => {},\n  onClick: () => {},\n  minLength: null,\n  maxLength: null\n};\nexport default _c2 = injectIntl(PasswordWidget);\nvar _c, _c2;\n$RefreshReg$(_c, \"PasswordWidget\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","PropTypes","Input","FormFieldWrapper","injectIntl","PasswordWidget","props","id","value","onChange","onBlur","onClick","minLength","maxLength","placeholder","isDisabled","__jsx","_extends","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","name","type","disabled","target","undefined","autoComplete","_c","propTypes","string","isRequired","title","description","required","bool","error","arrayOf","func","number","wrapped","defaultProps","_c2","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Widgets/PasswordWidget.jsx"],"sourcesContent":["/**\n * PasswordWidget component.\n * @module components/manage/Widgets/PassswordWidget\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'semantic-ui-react';\nimport FormFieldWrapper from '@plone/volto/components/manage/Widgets/FormFieldWrapper';\nimport { injectIntl } from 'react-intl';\n\n/**\n * PasswordWidget component class.\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Password\",\n *  type: 'password',\n * }\n * ```\n */\nconst PasswordWidget = (props) => {\n  const {\n    id,\n    value,\n    onChange,\n    onBlur,\n    onClick,\n    minLength,\n    maxLength,\n    placeholder,\n    isDisabled,\n  } = props;\n\n  return (\n    <FormFieldWrapper {...props}>\n      <Input\n        id={`field-${id}`}\n        name={id}\n        type=\"password\"\n        disabled={isDisabled}\n        value={value || ''}\n        placeholder={placeholder}\n        onChange={({ target }) =>\n          onChange(id, target.value === '' ? undefined : target.value)\n        }\n        onBlur={({ target }) =>\n          onBlur(id, target.value === '' ? undefined : target.value)\n        }\n        onClick={() => onClick()}\n        minLength={minLength || null}\n        maxLength={maxLength || null}\n        autoComplete=\"off\"\n      />\n    </FormFieldWrapper>\n  );\n};\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nPasswordWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  wrapped: PropTypes.bool,\n  placeholder: PropTypes.string,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nPasswordWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: () => {},\n  onBlur: () => {},\n  onClick: () => {},\n  minLength: null,\n  maxLength: null,\n};\n\nexport default injectIntl(PasswordWidget);\n"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,KAAK,QAAQ,mBAAmB;AACzC,OAAOC,gBAAgB,MAAM,yDAAyD;AACtF,SAASC,UAAU,QAAQ,YAAY;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAChC,MAAM;IACJC,EAAE;IACFC,KAAK;IACLC,QAAQ;IACRC,MAAM;IACNC,OAAO;IACPC,SAAS;IACTC,SAAS;IACTC,WAAW;IACXC;EACF,CAAC,GAAGT,KAAK;EAET,OACEU,KAAA,CAACb,gBAAgB,EAAAc,QAAA,KAAKX,KAAK;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,IACzBP,KAAA,CAACd,KAAK;IACJK,EAAE,EAAE,SAASA,EAAE,EAAG;IAClBiB,IAAI,EAAEjB,EAAG;IACTkB,IAAI,EAAC,UAAU;IACfC,QAAQ,EAAEX,UAAW;IACrBP,KAAK,EAAEA,KAAK,IAAI,EAAG;IACnBM,WAAW,EAAEA,WAAY;IACzBL,QAAQ,EAAEA,CAAC;MAAEkB;IAAO,CAAC,KACnBlB,QAAQ,CAACF,EAAE,EAAEoB,MAAM,CAACnB,KAAK,KAAK,EAAE,GAAGoB,SAAS,GAAGD,MAAM,CAACnB,KAAK,CAC5D;IACDE,MAAM,EAAEA,CAAC;MAAEiB;IAAO,CAAC,KACjBjB,MAAM,CAACH,EAAE,EAAEoB,MAAM,CAACnB,KAAK,KAAK,EAAE,GAAGoB,SAAS,GAAGD,MAAM,CAACnB,KAAK,CAC1D;IACDG,OAAO,EAAEA,CAAA,KAAMA,OAAO,CAAC,CAAE;IACzBC,SAAS,EAAEA,SAAS,IAAI,IAAK;IAC7BC,SAAS,EAAEA,SAAS,IAAI,IAAK;IAC7BgB,YAAY,EAAC,KAAK;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACnB,CACe,CAAC;AAEvB,CAAC;AACD;AACA;AACA;AACA;AACA;AAJAO,EAAA,GApCMzB,cAAc;AAyCpBA,cAAc,CAAC0B,SAAS,GAAG;EACzBxB,EAAE,EAAEN,SAAS,CAAC+B,MAAM,CAACC,UAAU;EAC/BC,KAAK,EAAEjC,SAAS,CAAC+B,MAAM,CAACC,UAAU;EAClCE,WAAW,EAAElC,SAAS,CAAC+B,MAAM;EAC7BI,QAAQ,EAAEnC,SAAS,CAACoC,IAAI;EACxBC,KAAK,EAAErC,SAAS,CAACsC,OAAO,CAACtC,SAAS,CAAC+B,MAAM,CAAC;EAC1CxB,KAAK,EAAEP,SAAS,CAAC+B,MAAM;EACvBvB,QAAQ,EAAER,SAAS,CAACuC,IAAI,CAACP,UAAU;EACnCvB,MAAM,EAAET,SAAS,CAACuC,IAAI;EACtB7B,OAAO,EAAEV,SAAS,CAACuC,IAAI;EACvB5B,SAAS,EAAEX,SAAS,CAACwC,MAAM;EAC3B5B,SAAS,EAAEZ,SAAS,CAACwC,MAAM;EAC3BC,OAAO,EAAEzC,SAAS,CAACoC,IAAI;EACvBvB,WAAW,EAAEb,SAAS,CAAC+B;AACzB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA3B,cAAc,CAACsC,YAAY,GAAG;EAC5BR,WAAW,EAAE,IAAI;EACjBC,QAAQ,EAAE,KAAK;EACfE,KAAK,EAAE,EAAE;EACT9B,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAEA,CAAA,KAAM,CAAC,CAAC;EAClBC,MAAM,EAAEA,CAAA,KAAM,CAAC,CAAC;EAChBC,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAC;EACjBC,SAAS,EAAE,IAAI;EACfC,SAAS,EAAE;AACb,CAAC;AAED,eAAA+B,GAAA,GAAexC,UAAU,CAACC,cAAc,CAAC;AAAC,IAAAyB,EAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}