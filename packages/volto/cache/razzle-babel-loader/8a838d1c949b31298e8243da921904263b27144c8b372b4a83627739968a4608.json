{"ast":null,"code":"import { minLengthValidator, maxLengthValidator, urlValidator, emailValidator, isNumberValidator, maximumValidator, minimumValidator, isIntegerValidator, maxItemsValidator, minItemsValidator, hasUniqueItemsValidator, startEventDateRangeValidator, endEventDateRangeValidator, patternValidator } from '@plone/volto/helpers/FormValidation/validators';\nconst registerValidators = config => {\n  config.registerUtility({\n    name: 'minLength',\n    type: 'validator',\n    dependencies: {\n      fieldType: 'string'\n    },\n    method: minLengthValidator\n  });\n  config.registerUtility({\n    name: 'maxLength',\n    type: 'validator',\n    dependencies: {\n      fieldType: 'string'\n    },\n    method: maxLengthValidator\n  });\n  config.registerUtility({\n    name: 'pattern',\n    type: 'validator',\n    dependencies: {\n      fieldType: 'string'\n    },\n    method: patternValidator\n  });\n  config.registerUtility({\n    name: 'minLength',\n    type: 'validator',\n    dependencies: {\n      fieldType: 'password'\n    },\n    method: minLengthValidator\n  });\n  config.registerUtility({\n    name: 'maxLength',\n    type: 'validator',\n    dependencies: {\n      fieldType: 'password'\n    },\n    method: maxLengthValidator\n  });\n  config.registerUtility({\n    name: 'pattern',\n    type: 'validator',\n    dependencies: {\n      fieldType: 'password'\n    },\n    method: patternValidator\n  });\n  config.registerUtility({\n    name: 'email',\n    type: 'validator',\n    dependencies: {\n      widget: 'email'\n    },\n    method: emailValidator\n  });\n  config.registerUtility({\n    name: 'url',\n    type: 'validator',\n    dependencies: {\n      widget: 'url'\n    },\n    method: urlValidator\n  });\n  config.registerUtility({\n    name: 'number',\n    type: 'validator',\n    dependencies: {\n      fieldType: 'number'\n    },\n    method: isNumberValidator\n  });\n  config.registerUtility({\n    name: 'minimum',\n    type: 'validator',\n    dependencies: {\n      fieldType: 'number'\n    },\n    method: minimumValidator\n  });\n  config.registerUtility({\n    name: 'maximum',\n    type: 'validator',\n    dependencies: {\n      fieldType: 'number'\n    },\n    method: maximumValidator\n  });\n  config.registerUtility({\n    name: 'integer',\n    type: 'validator',\n    dependencies: {\n      fieldType: 'integer'\n    },\n    method: isIntegerValidator\n  });\n  config.registerUtility({\n    name: 'minimum',\n    type: 'validator',\n    dependencies: {\n      fieldType: 'integer'\n    },\n    method: minimumValidator\n  });\n  config.registerUtility({\n    name: 'maximum',\n    type: 'validator',\n    dependencies: {\n      fieldType: 'integer'\n    },\n    method: maximumValidator\n  });\n  config.registerUtility({\n    name: 'maxItems',\n    type: 'validator',\n    dependencies: {\n      fieldType: 'array'\n    },\n    method: maxItemsValidator\n  });\n  config.registerUtility({\n    name: 'minItems',\n    type: 'validator',\n    dependencies: {\n      fieldType: 'array'\n    },\n    method: minItemsValidator\n  });\n  config.registerUtility({\n    name: 'uniqueItems',\n    type: 'validator',\n    dependencies: {\n      fieldType: 'array'\n    },\n    method: hasUniqueItemsValidator\n  });\n  config.registerUtility({\n    name: 'dateRangeValidator',\n    type: 'validator',\n    dependencies: {\n      behaviorName: 'plone.eventbasic',\n      fieldName: 'start'\n    },\n    method: startEventDateRangeValidator\n  });\n  config.registerUtility({\n    name: 'dateRangeValidator',\n    type: 'validator',\n    dependencies: {\n      behaviorName: 'plone.eventbasic',\n      fieldName: 'end'\n    },\n    method: endEventDateRangeValidator\n  });\n};\nexport { registerValidators };","map":{"version":3,"names":["minLengthValidator","maxLengthValidator","urlValidator","emailValidator","isNumberValidator","maximumValidator","minimumValidator","isIntegerValidator","maxItemsValidator","minItemsValidator","hasUniqueItemsValidator","startEventDateRangeValidator","endEventDateRangeValidator","patternValidator","registerValidators","config","registerUtility","name","type","dependencies","fieldType","method","widget","behaviorName","fieldName"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/config/validation.ts"],"sourcesContent":["import { ConfigType } from '@plone/registry';\n\nimport {\n  minLengthValidator,\n  maxLengthValidator,\n  urlValidator,\n  emailValidator,\n  isNumberValidator,\n  maximumValidator,\n  minimumValidator,\n  isIntegerValidator,\n  maxItemsValidator,\n  minItemsValidator,\n  hasUniqueItemsValidator,\n  startEventDateRangeValidator,\n  endEventDateRangeValidator,\n  patternValidator,\n} from '@plone/volto/helpers/FormValidation/validators';\n\nconst registerValidators = (config: ConfigType) => {\n  config.registerUtility({\n    name: 'minLength',\n    type: 'validator',\n    dependencies: { fieldType: 'string' },\n    method: minLengthValidator,\n  });\n\n  config.registerUtility({\n    name: 'maxLength',\n    type: 'validator',\n    dependencies: { fieldType: 'string' },\n    method: maxLengthValidator,\n  });\n\n  config.registerUtility({\n    name: 'pattern',\n    type: 'validator',\n    dependencies: { fieldType: 'string' },\n    method: patternValidator,\n  });\n\n  config.registerUtility({\n    name: 'minLength',\n    type: 'validator',\n    dependencies: { fieldType: 'password' },\n    method: minLengthValidator,\n  });\n\n  config.registerUtility({\n    name: 'maxLength',\n    type: 'validator',\n    dependencies: { fieldType: 'password' },\n    method: maxLengthValidator,\n  });\n\n  config.registerUtility({\n    name: 'pattern',\n    type: 'validator',\n    dependencies: { fieldType: 'password' },\n    method: patternValidator,\n  });\n\n  config.registerUtility({\n    name: 'email',\n    type: 'validator',\n    dependencies: { widget: 'email' },\n    method: emailValidator,\n  });\n\n  config.registerUtility({\n    name: 'url',\n    type: 'validator',\n    dependencies: { widget: 'url' },\n    method: urlValidator,\n  });\n\n  config.registerUtility({\n    name: 'number',\n    type: 'validator',\n    dependencies: { fieldType: 'number' },\n    method: isNumberValidator,\n  });\n\n  config.registerUtility({\n    name: 'minimum',\n    type: 'validator',\n    dependencies: { fieldType: 'number' },\n    method: minimumValidator,\n  });\n\n  config.registerUtility({\n    name: 'maximum',\n    type: 'validator',\n    dependencies: { fieldType: 'number' },\n    method: maximumValidator,\n  });\n\n  config.registerUtility({\n    name: 'integer',\n    type: 'validator',\n    dependencies: { fieldType: 'integer' },\n    method: isIntegerValidator,\n  });\n\n  config.registerUtility({\n    name: 'minimum',\n    type: 'validator',\n    dependencies: { fieldType: 'integer' },\n    method: minimumValidator,\n  });\n\n  config.registerUtility({\n    name: 'maximum',\n    type: 'validator',\n    dependencies: { fieldType: 'integer' },\n    method: maximumValidator,\n  });\n\n  config.registerUtility({\n    name: 'maxItems',\n    type: 'validator',\n    dependencies: { fieldType: 'array' },\n    method: maxItemsValidator,\n  });\n\n  config.registerUtility({\n    name: 'minItems',\n    type: 'validator',\n    dependencies: { fieldType: 'array' },\n    method: minItemsValidator,\n  });\n\n  config.registerUtility({\n    name: 'uniqueItems',\n    type: 'validator',\n    dependencies: { fieldType: 'array' },\n    method: hasUniqueItemsValidator,\n  });\n\n  config.registerUtility({\n    name: 'dateRangeValidator',\n    type: 'validator',\n    dependencies: { behaviorName: 'plone.eventbasic', fieldName: 'start' },\n    method: startEventDateRangeValidator,\n  });\n\n  config.registerUtility({\n    name: 'dateRangeValidator',\n    type: 'validator',\n    dependencies: { behaviorName: 'plone.eventbasic', fieldName: 'end' },\n    method: endEventDateRangeValidator,\n  });\n};\n\nexport { registerValidators };\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}