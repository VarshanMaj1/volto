{"ast":null,"code":"import _extends from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Listing/withQuerystringResults.jsx\";\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\nimport { getContent } from '@plone/volto/actions/content/content';\nimport { getQueryStringResults } from '@plone/volto/actions/querystringsearch/querystringsearch';\nimport { usePagination } from '@plone/volto/helpers/Utils/usePagination';\nimport { getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport config from '@plone/volto/registry';\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\nexport default function withQuerystringResults(WrappedComponent) {\n  var _s = $RefreshSig$();\n  function WithQuerystringResults(props) {\n    _s();\n    var _querystring$query, _querystringResults$s, _querystringResults$s2, _querystringResults$s3, _content$batching, _querystringResults$s4, _content$batching2, _querystringResults$s5, _querystringResults$s6;\n    const {\n      data = {},\n      id = data.block,\n      properties: content,\n      path,\n      variation\n    } = props;\n    const {\n      settings\n    } = config;\n    const querystring = data.querystring || data; // For backwards compat with data saved before Blocks schema. Note, this is also how the Search block passes data to ListingBody\n    const subrequestID = content !== null && content !== void 0 && content.UID ? `${content === null || content === void 0 ? void 0 : content.UID}-${id}` : id;\n    const {\n      b_size = settings.defaultPageSize\n    } = querystring; // batchsize\n\n    // save the path so it won't trigger dispatch on eager router location change\n    const [initialPath] = React.useState(getBaseUrl(path));\n    const copyFields = ['limit', 'query', 'sort_on', 'sort_order', 'depth'];\n    const {\n      currentPage,\n      setCurrentPage\n    } = usePagination(id, 1);\n    const adaptedQuery = Object.assign(variation !== null && variation !== void 0 && variation.fullobjects ? {\n      fullobjects: 1\n    } : {\n      metadata_fields: '_all'\n    }, {\n      b_size: b_size\n    }, ...copyFields.map(name => Object.keys(querystring).includes(name) ? {\n      [name]: querystring[name]\n    } : {}));\n    const adaptedQueryRef = useRef(adaptedQuery);\n    const currentPageRef = useRef(currentPage);\n    const querystringResults = useSelector(state => state.querystringsearch.subrequests);\n    const dispatch = useDispatch();\n    const folderItems = content !== null && content !== void 0 && content.is_folderish ? content.items : [];\n    const hasQuery = (querystring === null || querystring === void 0 ? void 0 : (_querystring$query = querystring.query) === null || _querystring$query === void 0 ? void 0 : _querystring$query.length) > 0;\n    const hasLoaded = hasQuery ? querystringResults === null || querystringResults === void 0 ? void 0 : (_querystringResults$s = querystringResults[subrequestID]) === null || _querystringResults$s === void 0 ? void 0 : _querystringResults$s.loaded : true;\n    const listingItems = hasQuery ? (querystringResults === null || querystringResults === void 0 ? void 0 : (_querystringResults$s2 = querystringResults[subrequestID]) === null || _querystringResults$s2 === void 0 ? void 0 : _querystringResults$s2.items) || [] : folderItems;\n    const showAsFolderListing = !hasQuery && (content === null || content === void 0 ? void 0 : content.items_total) > b_size;\n    const showAsQueryListing = hasQuery && (querystringResults === null || querystringResults === void 0 ? void 0 : (_querystringResults$s3 = querystringResults[subrequestID]) === null || _querystringResults$s3 === void 0 ? void 0 : _querystringResults$s3.total) > b_size;\n    const totalPages = showAsFolderListing ? Math.ceil(content.items_total / b_size) : showAsQueryListing ? Math.ceil(querystringResults[subrequestID].total / b_size) : 0;\n    const prevBatch = showAsFolderListing ? (_content$batching = content.batching) === null || _content$batching === void 0 ? void 0 : _content$batching.prev : showAsQueryListing ? (_querystringResults$s4 = querystringResults[subrequestID].batching) === null || _querystringResults$s4 === void 0 ? void 0 : _querystringResults$s4.prev : null;\n    const nextBatch = showAsFolderListing ? (_content$batching2 = content.batching) === null || _content$batching2 === void 0 ? void 0 : _content$batching2.next : showAsQueryListing ? (_querystringResults$s5 = querystringResults[subrequestID].batching) === null || _querystringResults$s5 === void 0 ? void 0 : _querystringResults$s5.next : null;\n    const isImageGallery = !data.variation && data.template === 'imageGallery' || data.variation === 'imageGallery';\n    useDeepCompareEffect(() => {\n      if (hasQuery) {\n        dispatch(getQueryStringResults(initialPath, adaptedQuery, subrequestID, currentPage));\n      } else if (isImageGallery && !hasQuery) {\n        // when used as image gallery, it doesn't need a query to list children\n        dispatch(getQueryStringResults(initialPath, _objectSpread(_objectSpread({}, adaptedQuery), {}, {\n          b_size: 10000000000,\n          query: [{\n            i: 'path',\n            o: 'plone.app.querystring.operation.string.relativePath',\n            v: ''\n          }]\n        }), subrequestID));\n      } else {\n        dispatch(getContent(initialPath, null, null, currentPage));\n      }\n      adaptedQueryRef.current = adaptedQuery;\n      currentPageRef.current = currentPage;\n    }, [subrequestID, isImageGallery, adaptedQuery, hasQuery, initialPath, dispatch, currentPage]);\n    return __jsx(WrappedComponent, _extends({}, props, {\n      onPaginationChange: (e, {\n        activePage\n      }) => setCurrentPage(activePage),\n      total: querystringResults === null || querystringResults === void 0 ? void 0 : (_querystringResults$s6 = querystringResults[subrequestID]) === null || _querystringResults$s6 === void 0 ? void 0 : _querystringResults$s6.total,\n      batch_size: b_size,\n      currentPage: currentPage,\n      totalPages: totalPages,\n      prevBatch: prevBatch,\n      nextBatch: nextBatch,\n      listingItems: listingItems,\n      hasLoaded: hasLoaded,\n      isFolderContentsListing: showAsFolderListing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }));\n  }\n  _s(WithQuerystringResults, \"NfKt+TmZPDsJPxsEL4eobP4HGBQ=\", false, function () {\n    return [usePagination, useSelector, useDispatch, useDeepCompareEffect];\n  });\n  WithQuerystringResults.displayName = `WithQuerystringResults(${getDisplayName(WrappedComponent)})`;\n  return hoistNonReactStatics(WithQuerystringResults, WrappedComponent);\n}","map":{"version":3,"names":["React","useRef","useDispatch","useSelector","hoistNonReactStatics","useDeepCompareEffect","getContent","getQueryStringResults","usePagination","getBaseUrl","config","getDisplayName","WrappedComponent","displayName","name","withQuerystringResults","_s","$RefreshSig$","WithQuerystringResults","props","_querystring$query","_querystringResults$s","_querystringResults$s2","_querystringResults$s3","_content$batching","_querystringResults$s4","_content$batching2","_querystringResults$s5","_querystringResults$s6","data","id","block","properties","content","path","variation","settings","querystring","subrequestID","UID","b_size","defaultPageSize","initialPath","useState","copyFields","currentPage","setCurrentPage","adaptedQuery","Object","assign","fullobjects","metadata_fields","map","keys","includes","adaptedQueryRef","currentPageRef","querystringResults","state","querystringsearch","subrequests","dispatch","folderItems","is_folderish","items","hasQuery","query","length","hasLoaded","loaded","listingItems","showAsFolderListing","items_total","showAsQueryListing","total","totalPages","Math","ceil","prevBatch","batching","prev","nextBatch","next","isImageGallery","template","_objectSpread","i","o","v","current","__jsx","_extends","onPaginationChange","e","activePage","batch_size","isFolderContentsListing","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Listing/withQuerystringResults.jsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\n\nimport { getContent } from '@plone/volto/actions/content/content';\nimport { getQueryStringResults } from '@plone/volto/actions/querystringsearch/querystringsearch';\nimport { usePagination } from '@plone/volto/helpers/Utils/usePagination';\nimport { getBaseUrl } from '@plone/volto/helpers/Url/Url';\n\nimport config from '@plone/volto/registry';\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\nexport default function withQuerystringResults(WrappedComponent) {\n  function WithQuerystringResults(props) {\n    const {\n      data = {},\n      id = data.block,\n      properties: content,\n      path,\n      variation,\n    } = props;\n    const { settings } = config;\n    const querystring = data.querystring || data; // For backwards compat with data saved before Blocks schema. Note, this is also how the Search block passes data to ListingBody\n    const subrequestID = content?.UID ? `${content?.UID}-${id}` : id;\n    const { b_size = settings.defaultPageSize } = querystring; // batchsize\n\n    // save the path so it won't trigger dispatch on eager router location change\n    const [initialPath] = React.useState(getBaseUrl(path));\n\n    const copyFields = ['limit', 'query', 'sort_on', 'sort_order', 'depth'];\n    const { currentPage, setCurrentPage } = usePagination(id, 1);\n    const adaptedQuery = Object.assign(\n      variation?.fullobjects ? { fullobjects: 1 } : { metadata_fields: '_all' },\n      {\n        b_size: b_size,\n      },\n      ...copyFields.map((name) =>\n        Object.keys(querystring).includes(name)\n          ? { [name]: querystring[name] }\n          : {},\n      ),\n    );\n    const adaptedQueryRef = useRef(adaptedQuery);\n    const currentPageRef = useRef(currentPage);\n\n    const querystringResults = useSelector(\n      (state) => state.querystringsearch.subrequests,\n    );\n    const dispatch = useDispatch();\n\n    const folderItems = content?.is_folderish ? content.items : [];\n    const hasQuery = querystring?.query?.length > 0;\n    const hasLoaded = hasQuery\n      ? querystringResults?.[subrequestID]?.loaded\n      : true;\n\n    const listingItems = hasQuery\n      ? querystringResults?.[subrequestID]?.items || []\n      : folderItems;\n\n    const showAsFolderListing = !hasQuery && content?.items_total > b_size;\n    const showAsQueryListing =\n      hasQuery && querystringResults?.[subrequestID]?.total > b_size;\n\n    const totalPages = showAsFolderListing\n      ? Math.ceil(content.items_total / b_size)\n      : showAsQueryListing\n        ? Math.ceil(querystringResults[subrequestID].total / b_size)\n        : 0;\n\n    const prevBatch = showAsFolderListing\n      ? content.batching?.prev\n      : showAsQueryListing\n        ? querystringResults[subrequestID].batching?.prev\n        : null;\n    const nextBatch = showAsFolderListing\n      ? content.batching?.next\n      : showAsQueryListing\n        ? querystringResults[subrequestID].batching?.next\n        : null;\n\n    const isImageGallery =\n      (!data.variation && data.template === 'imageGallery') ||\n      data.variation === 'imageGallery';\n\n    useDeepCompareEffect(() => {\n      if (hasQuery) {\n        dispatch(\n          getQueryStringResults(\n            initialPath,\n            adaptedQuery,\n            subrequestID,\n            currentPage,\n          ),\n        );\n      } else if (isImageGallery && !hasQuery) {\n        // when used as image gallery, it doesn't need a query to list children\n        dispatch(\n          getQueryStringResults(\n            initialPath,\n            {\n              ...adaptedQuery,\n              b_size: 10000000000,\n              query: [\n                {\n                  i: 'path',\n                  o: 'plone.app.querystring.operation.string.relativePath',\n                  v: '',\n                },\n              ],\n            },\n            subrequestID,\n          ),\n        );\n      } else {\n        dispatch(getContent(initialPath, null, null, currentPage));\n      }\n      adaptedQueryRef.current = adaptedQuery;\n      currentPageRef.current = currentPage;\n    }, [\n      subrequestID,\n      isImageGallery,\n      adaptedQuery,\n      hasQuery,\n      initialPath,\n      dispatch,\n      currentPage,\n    ]);\n\n    return (\n      <WrappedComponent\n        {...props}\n        onPaginationChange={(e, { activePage }) => setCurrentPage(activePage)}\n        total={querystringResults?.[subrequestID]?.total}\n        batch_size={b_size}\n        currentPage={currentPage}\n        totalPages={totalPages}\n        prevBatch={prevBatch}\n        nextBatch={nextBatch}\n        listingItems={listingItems}\n        hasLoaded={hasLoaded}\n        isFolderContentsListing={showAsFolderListing}\n      />\n    );\n  }\n\n  WithQuerystringResults.displayName = `WithQuerystringResults(${getDisplayName(\n    WrappedComponent,\n  )})`;\n\n  return hoistNonReactStatics(WithQuerystringResults, WrappedComponent);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}