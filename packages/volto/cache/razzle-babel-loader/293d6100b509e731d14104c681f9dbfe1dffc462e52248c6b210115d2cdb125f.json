{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Widgets/ColorPickerWidget.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Form } from 'semantic-ui-react';\nimport { Grid, Button } from 'semantic-ui-react';\nimport isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\nimport { defineMessages, useIntl } from 'react-intl';\nconst messages = defineMessages({\n  Color: {\n    \"id\": \"Color\",\n    \"defaultMessage\": \"Color\"\n  }\n});\nconst ColorPickerWidget = props => {\n  const {\n    id,\n    title,\n    required,\n    value,\n    onChange,\n    colors,\n    className\n  } = props;\n  const intl = useIntl();\n  React.useEffect(() => {\n    if (isEmpty(props.value) && props.default) {\n      props.onChange(props.id, props.default);\n    }\n    // Yes, this is correct.\n  });\n  return colors.length > 0 ? __jsx(Form.Field, {\n    inline: true,\n    required: required,\n    className: className,\n    id: 'field-' + id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(Grid.Column, {\n    width: \"12\",\n    className: \"color-picker-widget\",\n    verticalAlign: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: `field-${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, title ? title : intl.formatMessage(messages.Color)), __jsx(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, colors.map(color => {\n    let colorValue;\n    const colorName = color.name;\n    if (color.style !== undefined) {\n      colorValue = color.style;\n    } else {\n      colorValue = color.name;\n    }\n    return __jsx(Button, {\n      key: id + colorName,\n      className: colorName,\n      onClick: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        onChange(id, value === colorValue ? props.missing_value : colorValue);\n      },\n      style: color.style,\n      active: isEqual(value, colorValue),\n      circular: true,\n      \"aria-label\": color.label,\n      title: color.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    });\n  }))))))) : null;\n};\nexport default ColorPickerWidget;","map":{"version":3,"names":["React","Form","Grid","Button","isEmpty","isEqual","defineMessages","useIntl","messages","Color","ColorPickerWidget","props","id","title","required","value","onChange","colors","className","intl","useEffect","default","length","__jsx","Field","inline","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Row","Column","width","verticalAlign","htmlFor","formatMessage","map","color","colorValue","colorName","name","style","undefined","key","onClick","e","preventDefault","stopPropagation","missing_value","active","circular","label"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Widgets/ColorPickerWidget.tsx"],"sourcesContent":["import React from 'react';\nimport { Form } from 'semantic-ui-react';\nimport { Grid, Button } from 'semantic-ui-react';\nimport isEmpty from 'lodash/isEmpty';\nimport isEqual from 'lodash/isEqual';\nimport { defineMessages, useIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  Color: {\n    id: 'Color',\n    defaultMessage: 'Color',\n  },\n});\n\ntype Color =\n  | {\n      name: string;\n      label: string;\n      style: Record<`--${string}`, string>;\n    }\n  | {\n      name: string;\n      label: string;\n      style: undefined;\n    };\n\nexport type ColorPickerWidgetProps = {\n  id: string;\n  title: string;\n  value?: string;\n  default?: string | object;\n  required?: boolean;\n  missing_value?: unknown;\n  className?: string;\n  onChange: (id: string, value: any) => void;\n  colors: Color[];\n};\n\nconst ColorPickerWidget = (props: ColorPickerWidgetProps) => {\n  const { id, title, required, value, onChange, colors, className } = props;\n\n  const intl = useIntl();\n\n  React.useEffect(() => {\n    if (isEmpty(props.value) && props.default) {\n      props.onChange(props.id, props.default);\n    }\n    // Yes, this is correct.\n  });\n\n  return colors.length > 0 ? (\n    <Form.Field\n      inline\n      required={required}\n      className={className}\n      id={'field-' + id}\n    >\n      {/* @ts-ignore */}\n      <Grid>\n        <Grid.Row>\n          <Grid.Column\n            width=\"12\"\n            className=\"color-picker-widget\"\n            verticalAlign=\"middle\"\n          >\n            <div className=\"wrapper\">\n              <label htmlFor={`field-${id}`}>\n                {title ? title : intl.formatMessage(messages.Color)}\n              </label>\n\n              <div className=\"buttons\">\n                {colors.map((color) => {\n                  let colorValue: string | Color['style'];\n                  const colorName = color.name;\n                  if (color.style !== undefined) {\n                    colorValue = color.style;\n                  } else {\n                    colorValue = color.name;\n                  }\n                  return (\n                    <Button\n                      key={id + colorName}\n                      className={colorName}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        onChange(\n                          id,\n                          value === colorValue\n                            ? props.missing_value\n                            : colorValue,\n                        );\n                      }}\n                      style={color.style}\n                      active={isEqual(value, colorValue)}\n                      circular\n                      aria-label={color.label}\n                      title={color.label}\n                    />\n                  );\n                })}\n              </div>\n            </div>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Form.Field>\n  ) : null;\n};\n\nexport default ColorPickerWidget;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Color","defaultMessage":"Color"}]}},"sourceType":"module","externalDependencies":[]}