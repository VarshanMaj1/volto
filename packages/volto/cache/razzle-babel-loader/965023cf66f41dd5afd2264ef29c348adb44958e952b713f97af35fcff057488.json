{"ast":null,"code":"import { defineMessages } from 'react-intl';\nconst messages = defineMessages({\n  hideHeaders: {\n    \"id\": \"Hide headers\",\n    \"defaultMessage\": \"Hide headers\"\n  },\n  sortable: {\n    \"id\": \"Make the table sortable\",\n    \"defaultMessage\": \"Make the table sortable\"\n  },\n  sortableDescription: {\n    \"id\": \"Visible only in view mode\",\n    \"defaultMessage\": \"Visible only in view mode\"\n  },\n  fixed: {\n    \"id\": \"Fixed width table cells\",\n    \"defaultMessage\": \"Fixed width table cells\"\n  },\n  compact: {\n    \"id\": \"Make the table compact\",\n    \"defaultMessage\": \"Make the table compact\"\n  },\n  basic: {\n    \"id\": \"Reduce complexity\",\n    \"defaultMessage\": \"Reduce complexity\"\n  },\n  celled: {\n    \"id\": \"Divide each row into separate cells\",\n    \"defaultMessage\": \"Divide each row into separate cells\"\n  },\n  inverted: {\n    \"id\": \"Table color inverted\",\n    \"defaultMessage\": \"Table color inverted\"\n  },\n  striped: {\n    \"id\": \"Stripe alternate rows with color\",\n    \"defaultMessage\": \"Stripe alternate rows with color\"\n  },\n  table_block: {\n    \"id\": \"Table block\",\n    \"defaultMessage\": \"Table block\"\n  }\n});\nfunction TableSchema(props) {\n  const {\n    intl\n  } = props;\n  return {\n    title: intl.formatMessage(messages.table_block),\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['hideHeaders', 'sortable', 'fixed', 'celled', 'striped', 'compact', 'basic', 'inverted']\n    }],\n    properties: {\n      hideHeaders: {\n        title: intl.formatMessage(messages.hideHeaders),\n        type: 'boolean'\n      },\n      sortable: {\n        title: intl.formatMessage(messages.sortable),\n        type: 'boolean'\n      },\n      fixed: {\n        title: intl.formatMessage(messages.fixed),\n        type: 'boolean'\n      },\n      celled: {\n        title: intl.formatMessage(messages.celled),\n        type: 'boolean'\n      },\n      striped: {\n        title: intl.formatMessage(messages.striped),\n        type: 'boolean'\n      },\n      compact: {\n        title: intl.formatMessage(messages.compact),\n        type: 'boolean'\n      },\n      basic: {\n        title: intl.formatMessage(messages.basic),\n        type: 'boolean'\n      },\n      inverted: {\n        title: intl.formatMessage(messages.inverted),\n        type: 'boolean'\n      }\n    },\n    required: []\n  };\n}\n_c = TableSchema;\nexport function TableBlockSchema(props) {\n  return {\n    title: 'Table block',\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['table']\n    }],\n    properties: {\n      table: {\n        title: 'Table block',\n        widget: 'object',\n        schema: TableSchema(props)\n      }\n    },\n    required: []\n  };\n}\n_c2 = TableBlockSchema;\nexport default TableBlockSchema;\nvar _c, _c2;\n$RefreshReg$(_c, \"TableSchema\");\n$RefreshReg$(_c2, \"TableBlockSchema\");","map":{"version":3,"names":["defineMessages","messages","hideHeaders","sortable","sortableDescription","fixed","compact","basic","celled","inverted","striped","table_block","TableSchema","props","intl","title","formatMessage","fieldsets","id","fields","properties","type","required","_c","TableBlockSchema","table","widget","schema","_c2","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto-slate/src/blocks/Table/schema.js"],"sourcesContent":["import { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  hideHeaders: {\n    id: 'Hide headers',\n    defaultMessage: 'Hide headers',\n  },\n  sortable: {\n    id: 'Make the table sortable',\n    defaultMessage: 'Make the table sortable',\n  },\n  sortableDescription: {\n    id: 'Visible only in view mode',\n    defaultMessage: 'Visible only in view mode',\n  },\n  fixed: {\n    id: 'Fixed width table cells',\n    defaultMessage: 'Fixed width table cells',\n  },\n  compact: {\n    id: 'Make the table compact',\n    defaultMessage: 'Make the table compact',\n  },\n  basic: {\n    id: 'Reduce complexity',\n    defaultMessage: 'Reduce complexity',\n  },\n  celled: {\n    id: 'Divide each row into separate cells',\n    defaultMessage: 'Divide each row into separate cells',\n  },\n  inverted: {\n    id: 'Table color inverted',\n    defaultMessage: 'Table color inverted',\n  },\n  striped: {\n    id: 'Stripe alternate rows with color',\n    defaultMessage: 'Stripe alternate rows with color',\n  },\n  table_block: {\n    id: 'Table block',\n    defaultMessage: 'Table block',\n  },\n});\n\nfunction TableSchema(props) {\n  const { intl } = props;\n  return {\n    title: intl.formatMessage(messages.table_block),\n    fieldsets: [\n      {\n        id: 'default',\n        title: 'Default',\n        fields: [\n          'hideHeaders',\n          'sortable',\n          'fixed',\n          'celled',\n          'striped',\n          'compact',\n          'basic',\n          'inverted',\n        ],\n      },\n    ],\n    properties: {\n      hideHeaders: {\n        title: intl.formatMessage(messages.hideHeaders),\n        type: 'boolean',\n      },\n      sortable: {\n        title: intl.formatMessage(messages.sortable),\n        type: 'boolean',\n      },\n      fixed: {\n        title: intl.formatMessage(messages.fixed),\n        type: 'boolean',\n      },\n      celled: {\n        title: intl.formatMessage(messages.celled),\n        type: 'boolean',\n      },\n      striped: {\n        title: intl.formatMessage(messages.striped),\n        type: 'boolean',\n      },\n      compact: {\n        title: intl.formatMessage(messages.compact),\n        type: 'boolean',\n      },\n      basic: {\n        title: intl.formatMessage(messages.basic),\n        type: 'boolean',\n      },\n      inverted: {\n        title: intl.formatMessage(messages.inverted),\n        type: 'boolean',\n      },\n    },\n    required: [],\n  };\n}\n\nexport function TableBlockSchema(props) {\n  return {\n    title: 'Table block',\n    fieldsets: [\n      {\n        id: 'default',\n        title: 'Default',\n        fields: ['table'],\n      },\n    ],\n    properties: {\n      table: {\n        title: 'Table block',\n        widget: 'object',\n        schema: TableSchema(props),\n      },\n    },\n\n    required: [],\n  };\n}\n\nexport default TableBlockSchema;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Hide headers","defaultMessage":"Hide headers"},{"id":"Make the table sortable","defaultMessage":"Make the table sortable"},{"id":"Visible only in view mode","defaultMessage":"Visible only in view mode"},{"id":"Fixed width table cells","defaultMessage":"Fixed width table cells"},{"id":"Make the table compact","defaultMessage":"Make the table compact"},{"id":"Reduce complexity","defaultMessage":"Reduce complexity"},{"id":"Divide each row into separate cells","defaultMessage":"Divide each row into separate cells"},{"id":"Table color inverted","defaultMessage":"Table color inverted"},{"id":"Stripe alternate rows with color","defaultMessage":"Stripe alternate rows with color"},{"id":"Table block","defaultMessage":"Table block"}]}},"sourceType":"module","externalDependencies":[]}