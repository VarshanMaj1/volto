{"ast":null,"code":"import _extends from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/ReactVirtualized/DynamicRowHeightList.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nclass DynamicHeightList extends React.PureComponent {\n  // As per `react-virtualized` docs, one should use a PureComponent\n  // to avoid performance issues\n  // We could have used a React.memo + functional component instead,\n  // but relied on the class-based implementation for simplicity\n  constructor(props) {\n    super(props);\n    this._cache = new props.reactVirtualized.CellMeasurerCache({\n      fixedWidth: true,\n      minHeight: 50\n    });\n    this._rowRenderer = this._rowRenderer.bind(this);\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.children.length !== this.props.children.length) {\n      if (this._list && this._list.forceUpdateGrid) {\n        this._list.forceUpdateGrid();\n      }\n      this._cache.clearAll();\n    }\n  }\n  _rowRenderer({\n    index,\n    key,\n    parent,\n    style\n  }) {\n    const CellMeasurer = this.props.reactVirtualized.CellMeasurer;\n    return __jsx(CellMeasurer, {\n      cache: this._cache,\n      columnIndex: 0,\n      key: key,\n      rowIndex: index,\n      parent: parent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, ({\n      measure,\n      registerChild\n    }) => __jsx(\"div\", {\n      style: style,\n      ref: registerChild,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, this.props.children[index]));\n  }\n  render() {\n    var _this$props$children;\n    const List = this.props.reactVirtualized.List;\n    return __jsx(List, _extends({}, this.props, {\n      ref: element => {\n        this._list = element;\n      },\n      deferredMeasurementCache: this._cache,\n      overscanRowCount: 0,\n      rowCount: ((_this$props$children = this.props.children) === null || _this$props$children === void 0 ? void 0 : _this$props$children.length) || 0,\n      rowHeight: this._cache.rowHeight,\n      rowRenderer: this._rowRenderer,\n      width: 200,\n      height: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }));\n  }\n}\nexport default injectLazyLibs('reactVirtualized')(DynamicHeightList);","map":{"version":3,"names":["React","injectLazyLibs","DynamicHeightList","PureComponent","constructor","props","_cache","reactVirtualized","CellMeasurerCache","fixedWidth","minHeight","_rowRenderer","bind","componentDidUpdate","prevProps","children","length","_list","forceUpdateGrid","clearAll","index","key","parent","style","CellMeasurer","__jsx","cache","columnIndex","rowIndex","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","measure","registerChild","ref","render","_this$props$children","List","_extends","element","deferredMeasurementCache","overscanRowCount","rowCount","rowHeight","rowRenderer","width","height"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/ReactVirtualized/DynamicRowHeightList.jsx"],"sourcesContent":["import React from 'react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nclass DynamicHeightList extends React.PureComponent {\n  // As per `react-virtualized` docs, one should use a PureComponent\n  // to avoid performance issues\n  // We could have used a React.memo + functional component instead,\n  // but relied on the class-based implementation for simplicity\n  constructor(props) {\n    super(props);\n\n    this._cache = new props.reactVirtualized.CellMeasurerCache({\n      fixedWidth: true,\n      minHeight: 50,\n    });\n\n    this._rowRenderer = this._rowRenderer.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.children.length !== this.props.children.length) {\n      if (this._list && this._list.forceUpdateGrid) {\n        this._list.forceUpdateGrid();\n      }\n      this._cache.clearAll();\n    }\n  }\n\n  _rowRenderer({ index, key, parent, style }) {\n    const CellMeasurer = this.props.reactVirtualized.CellMeasurer;\n    return (\n      <CellMeasurer\n        cache={this._cache}\n        columnIndex={0}\n        key={key}\n        rowIndex={index}\n        parent={parent}\n      >\n        {({ measure, registerChild }) => (\n          <div style={style} ref={registerChild}>\n            {this.props.children[index]}\n          </div>\n        )}\n      </CellMeasurer>\n    );\n  }\n\n  render() {\n    const List = this.props.reactVirtualized.List;\n\n    return (\n      <List\n        {...this.props}\n        ref={(element) => {\n          this._list = element;\n        }}\n        deferredMeasurementCache={this._cache}\n        overscanRowCount={0}\n        rowCount={this.props.children?.length || 0}\n        rowHeight={this._cache.rowHeight}\n        rowRenderer={this._rowRenderer}\n        width={200}\n        height={500}\n      />\n    );\n  }\n}\n\nexport default injectLazyLibs('reactVirtualized')(DynamicHeightList);\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,wCAAwC;AAEvE,MAAMC,iBAAiB,SAASF,KAAK,CAACG,aAAa,CAAC;EAClD;EACA;EACA;EACA;EACAC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,MAAM,GAAG,IAAID,KAAK,CAACE,gBAAgB,CAACC,iBAAiB,CAAC;MACzDC,UAAU,EAAE,IAAI;MAChBC,SAAS,EAAE;IACb,CAAC,CAAC;IAEF,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;EAClD;EAEAC,kBAAkBA,CAACC,SAAS,EAAE;IAC5B,IAAIA,SAAS,CAACC,QAAQ,CAACC,MAAM,KAAK,IAAI,CAACX,KAAK,CAACU,QAAQ,CAACC,MAAM,EAAE;MAC5D,IAAI,IAAI,CAACC,KAAK,IAAI,IAAI,CAACA,KAAK,CAACC,eAAe,EAAE;QAC5C,IAAI,CAACD,KAAK,CAACC,eAAe,CAAC,CAAC;MAC9B;MACA,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC;IACxB;EACF;EAEAR,YAAYA,CAAC;IAAES,KAAK;IAAEC,GAAG;IAAEC,MAAM;IAAEC;EAAM,CAAC,EAAE;IAC1C,MAAMC,YAAY,GAAG,IAAI,CAACnB,KAAK,CAACE,gBAAgB,CAACiB,YAAY;IAC7D,OACEC,KAAA,CAACD,YAAY;MACXE,KAAK,EAAE,IAAI,CAACpB,MAAO;MACnBqB,WAAW,EAAE,CAAE;MACfN,GAAG,EAAEA,GAAI;MACTO,QAAQ,EAAER,KAAM;MAChBE,MAAM,EAAEA,MAAO;MAAAO,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAEd,CAAC;MAAEC,OAAO;MAAEC;IAAc,CAAC,KAC1BX,KAAA;MAAKF,KAAK,EAAEA,KAAM;MAACc,GAAG,EAAED,aAAc;MAAAP,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACnC,IAAI,CAAC7B,KAAK,CAACU,QAAQ,CAACK,KAAK,CACvB,CAEK,CAAC;EAEnB;EAEAkB,MAAMA,CAAA,EAAG;IAAA,IAAAC,oBAAA;IACP,MAAMC,IAAI,GAAG,IAAI,CAACnC,KAAK,CAACE,gBAAgB,CAACiC,IAAI;IAE7C,OACEf,KAAA,CAACe,IAAI,EAAAC,QAAA,KACC,IAAI,CAACpC,KAAK;MACdgC,GAAG,EAAGK,OAAO,IAAK;QAChB,IAAI,CAACzB,KAAK,GAAGyB,OAAO;MACtB,CAAE;MACFC,wBAAwB,EAAE,IAAI,CAACrC,MAAO;MACtCsC,gBAAgB,EAAE,CAAE;MACpBC,QAAQ,EAAE,EAAAN,oBAAA,OAAI,CAAClC,KAAK,CAACU,QAAQ,cAAAwB,oBAAA,uBAAnBA,oBAAA,CAAqBvB,MAAM,KAAI,CAAE;MAC3C8B,SAAS,EAAE,IAAI,CAACxC,MAAM,CAACwC,SAAU;MACjCC,WAAW,EAAE,IAAI,CAACpC,YAAa;MAC/BqC,KAAK,EAAE,GAAI;MACXC,MAAM,EAAE,GAAI;MAAApB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EACb,CAAC;EAEN;AACF;AAEA,eAAejC,cAAc,CAAC,kBAAkB,CAAC,CAACC,iBAAiB,CAAC","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}