{"ast":null,"code":"import _defineProperty from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Diff/Diff.jsx\";\nvar __jsx = React.createElement;\n/**\n * Diff component.\n * @module components/manage/Diff/Diff\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport filter from 'lodash/filter';\nimport isEqual from 'lodash/isEqual';\nimport map from 'lodash/map';\nimport { Container, Button, Dropdown, Grid, Table } from 'semantic-ui-react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { createPortal } from 'react-dom';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport qs from 'query-string';\nimport { getDiff } from '@plone/volto/actions/diff/diff';\nimport { getSchema } from '@plone/volto/actions/schema/schema';\nimport { getHistory } from '@plone/volto/actions/history/history';\nimport { getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport { getBlocksFieldname, getBlocksLayoutFieldname, hasBlocksData } from '@plone/volto/helpers/Blocks/Blocks';\nimport FormattedDate from '@plone/volto/components/theme/FormattedDate/FormattedDate';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nimport Unauthorized from '@plone/volto/components/theme/Unauthorized/Unauthorized';\nimport DiffField from '@plone/volto/components/manage/Diff/DiffField';\nimport backSVG from '@plone/volto/icons/back.svg';\nconst messages = defineMessages({\n  diff: {\n    \"id\": \"Diff\",\n    \"defaultMessage\": \"Diff\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  split: {\n    \"id\": \"Split\",\n    \"defaultMessage\": \"Split\"\n  },\n  unified: {\n    \"id\": \"Unified\",\n    \"defaultMessage\": \"Unified\"\n  }\n});\n\n/**\n * Diff class.\n * @class Diff\n * @extends Component\n */\nclass Diff extends Component {\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs DiffComponent\n   */\n  constructor(props) {\n    super(props);\n    this.onChangeOne = this.onChangeOne.bind(this);\n    this.onChangeTwo = this.onChangeTwo.bind(this);\n    this.onSelectView = this.onSelectView.bind(this);\n    this.state = {\n      isClient: false\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getSchema(this.props.type);\n    this.props.getHistory(getBaseUrl(this.props.pathname));\n    this.props.getDiff(getBaseUrl(this.props.pathname), this.props.one, this.props.two);\n    this.setState({\n      isClient: true\n    });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.pathname !== nextProps.pathname || this.props.one !== nextProps.one || this.props.two !== nextProps.two) {\n      this.props.getDiff(getBaseUrl(nextProps.pathname), nextProps.one, nextProps.two);\n    }\n  }\n\n  /**\n   * On select view handler\n   * @method onSelectView\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onSelectView(event, {\n    value\n  }) {\n    this.props.history.push(`${this.props.pathname}?one=${this.props.one}&two=${this.props.two}&view=${value}`);\n  }\n\n  /**\n   * On change one handler\n   * @method onChangeOne\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onChangeOne(event, {\n    value\n  }) {\n    this.props.history.push(`${this.props.pathname}?one=${value}&two=${this.props.two}&view=${this.props.view}`);\n  }\n\n  /**\n   * On change two handler\n   * @method onChangeTwo\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onChangeTwo(event, {\n    value\n  }) {\n    this.props.history.push(`${this.props.pathname}?one=${this.props.one}&two=${value}&view=${this.props.view}`);\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    var _this$props$error;\n    const versions = map(filter(this.props.historyEntries, entry => 'version' in entry), (entry, index) => ({\n      text: __jsx(React.Fragment, null, index === 0 ? 'Current' : entry.version, \"\\xA0(\", __jsx(FormattedDate, {\n        date: entry.time,\n        long: true,\n        className: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }\n      }), \", \\xA0\", entry.actor.fullname, \")\"),\n      value: `${entry.version}`,\n      key: `${entry.version}`\n    }));\n    return ((_this$props$error = this.props.error) === null || _this$props$error === void 0 ? void 0 : _this$props$error.status) === 401 ? __jsx(Unauthorized, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }\n    }) : __jsx(Container, {\n      id: \"page-diff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.diff),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }\n    }), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Difference between revision {one} and {two} of {title}\",\n      defaultMessage: \"Difference between revision {one} and {two} of {title}\",\n      values: {\n        one: this.props.one,\n        two: this.props.two,\n        title: this.props.title\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    })), __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }\n    }, __jsx(Grid.Column, {\n      width: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"You can view the difference of the revisions below.\",\n      defaultMessage: \"You can view the difference of the revisions below.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }\n    }))), __jsx(Grid.Column, {\n      width: 3,\n      textAlign: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }\n    }, __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }, map([{\n      id: 'split',\n      label: this.props.intl.formatMessage(messages.split)\n    }, {\n      id: 'unified',\n      label: this.props.intl.formatMessage(messages.unified)\n    }], view => __jsx(Button, {\n      key: view.id,\n      value: view.id,\n      active: this.props.view === view.id,\n      onClick: this.onSelectView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 19\n      }\n    }, view.label))))), this.props.historyEntries.length > 0 && __jsx(Table, {\n      basic: \"very\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }\n    }, __jsx(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 13\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 15\n      }\n    }, __jsx(Table.HeaderCell, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Base\",\n      defaultMessage: \"Base\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 19\n      }\n    }), __jsx(Dropdown, {\n      onChange: this.onChangeOne,\n      value: this.props.one,\n      selection: true,\n      fluid: true,\n      options: versions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 19\n      }\n    })), __jsx(Table.HeaderCell, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Compare\",\n      defaultMessage: \"Compare\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 19\n      }\n    }), __jsx(Dropdown, {\n      onChange: this.onChangeTwo,\n      value: this.props.two,\n      selection: true,\n      fluid: true,\n      options: versions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 19\n      }\n    }))))), this.props.schema && this.props.data.length > 0 && map(this.props.schema.fieldsets, fieldset => map(fieldset.fields, field => !isEqual(this.props.data[0][field], this.props.data[1][field]) && field !== getBlocksFieldname(this.props.data[0]) && field !== getBlocksLayoutFieldname(this.props.data[0]) && __jsx(DiffField, {\n      key: field,\n      one: this.props.data[0][field],\n      two: this.props.data[1][field],\n      schema: this.props.schema.properties[field],\n      view: this.props.view,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 19\n      }\n    }))), this.props.schema && this.props.data.length > 0 && hasBlocksData(this.props.data[0]) && (!isEqual(this.props.data[0][getBlocksFieldname(this.props.data[0])], this.props.data[1][getBlocksFieldname(this.props.data[1])]) || !isEqual(this.props.data[0][getBlocksLayoutFieldname(this.props.data[0])], this.props.data[1][getBlocksLayoutFieldname(this.props.data[1])])) && __jsx(DiffField, {\n      one: this.props.data[0][getBlocksFieldname(this.props.data[0])],\n      two: this.props.data[1][getBlocksFieldname(this.props.data[1])],\n      contentOne: this.props.data[0],\n      contentTwo: this.props.data[1],\n      schema: this.props.schema.properties[getBlocksFieldname(this.props.data[0])],\n      view: this.props.view,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }\n    }), this.state.isClient && /*#__PURE__*/createPortal(__jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(Link, {\n        to: `${getBaseUrl(this.props.pathname)}/historyview`,\n        className: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 17\n        }\n      }, __jsx(Icon, {\n        name: backSVG,\n        className: \"contents circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 13\n      }\n    }), document.getElementById('toolbar')));\n  }\n}\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_defineProperty(Diff, \"propTypes\", {\n  getDiff: PropTypes.func.isRequired,\n  getSchema: PropTypes.func.isRequired,\n  getHistory: PropTypes.func.isRequired,\n  schema: PropTypes.objectOf(PropTypes.any),\n  error: PropTypes.objectOf(PropTypes.any),\n  pathname: PropTypes.string.isRequired,\n  one: PropTypes.string.isRequired,\n  two: PropTypes.string.isRequired,\n  view: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({\n    '@id': PropTypes.string\n  })).isRequired,\n  historyEntries: PropTypes.arrayOf(PropTypes.shape({\n    version: PropTypes.number,\n    time: PropTypes.string,\n    actor: PropTypes.shape({\n      fullname: PropTypes.string\n    })\n  })).isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n});\n/**\n * Default properties\n * @property {Object} defaultProps Default properties.\n * @static\n */\n_defineProperty(Diff, \"defaultProps\", {\n  schema: null\n});\nexport default compose(withRouter, injectIntl, connect((state, props) => {\n  var _state$content$data, _state$content$data2;\n  return {\n    data: state.diff.data,\n    historyEntries: state.history.entries,\n    schema: state.schema.schema,\n    error: state.diff.error,\n    pathname: props.location.pathname,\n    one: qs.parse(props.location.search).one,\n    two: qs.parse(props.location.search).two,\n    view: qs.parse(props.location.search).view || 'split',\n    title: (_state$content$data = state.content.data) === null || _state$content$data === void 0 ? void 0 : _state$content$data.title,\n    type: (_state$content$data2 = state.content.data) === null || _state$content$data2 === void 0 ? void 0 : _state$content$data2['@type']\n  };\n}, {\n  getDiff,\n  getSchema,\n  getHistory\n}))(Diff);","map":{"version":3,"names":["React","Component","PropTypes","Helmet","connect","compose","filter","isEqual","map","Container","Button","Dropdown","Grid","Table","Link","withRouter","createPortal","FormattedMessage","defineMessages","injectIntl","qs","getDiff","getSchema","getHistory","getBaseUrl","getBlocksFieldname","getBlocksLayoutFieldname","hasBlocksData","FormattedDate","Icon","Toolbar","Unauthorized","DiffField","backSVG","messages","diff","back","split","unified","Diff","constructor","props","onChangeOne","bind","onChangeTwo","onSelectView","state","isClient","componentDidMount","type","pathname","one","two","setState","UNSAFE_componentWillReceiveProps","nextProps","event","value","history","push","view","render","_this$props$error","versions","historyEntries","entry","index","text","__jsx","Fragment","version","date","time","long","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","actor","fullname","key","error","status","id","title","intl","formatMessage","defaultMessage","values","Column","width","textAlign","Group","label","active","onClick","length","basic","Header","Row","HeaderCell","onChange","selection","fluid","options","schema","data","fieldsets","fieldset","fields","field","properties","contentOne","contentTwo","hideDefaultViewButtons","inner","to","name","size","document","getElementById","_defineProperty","func","isRequired","objectOf","any","string","arrayOf","shape","number","_state$content$data","_state$content$data2","entries","location","parse","search","content"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Diff/Diff.jsx"],"sourcesContent":["/**\n * Diff component.\n * @module components/manage/Diff/Diff\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport filter from 'lodash/filter';\nimport isEqual from 'lodash/isEqual';\nimport map from 'lodash/map';\nimport { Container, Button, Dropdown, Grid, Table } from 'semantic-ui-react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { createPortal } from 'react-dom';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport qs from 'query-string';\n\nimport { getDiff } from '@plone/volto/actions/diff/diff';\nimport { getSchema } from '@plone/volto/actions/schema/schema';\nimport { getHistory } from '@plone/volto/actions/history/history';\nimport { getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport {\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n  hasBlocksData,\n} from '@plone/volto/helpers/Blocks/Blocks';\nimport FormattedDate from '@plone/volto/components/theme/FormattedDate/FormattedDate';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nimport Unauthorized from '@plone/volto/components/theme/Unauthorized/Unauthorized';\nimport DiffField from '@plone/volto/components/manage/Diff/DiffField';\n\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  diff: {\n    id: 'Diff',\n    defaultMessage: 'Diff',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  split: {\n    id: 'Split',\n    defaultMessage: 'Split',\n  },\n  unified: {\n    id: 'Unified',\n    defaultMessage: 'Unified',\n  },\n});\n\n/**\n * Diff class.\n * @class Diff\n * @extends Component\n */\nclass Diff extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getDiff: PropTypes.func.isRequired,\n    getSchema: PropTypes.func.isRequired,\n    getHistory: PropTypes.func.isRequired,\n    schema: PropTypes.objectOf(PropTypes.any),\n    error: PropTypes.objectOf(PropTypes.any),\n    pathname: PropTypes.string.isRequired,\n    one: PropTypes.string.isRequired,\n    two: PropTypes.string.isRequired,\n    view: PropTypes.string.isRequired,\n    data: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n      }),\n    ).isRequired,\n    historyEntries: PropTypes.arrayOf(\n      PropTypes.shape({\n        version: PropTypes.number,\n        time: PropTypes.string,\n        actor: PropTypes.shape({ fullname: PropTypes.string }),\n      }),\n    ).isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    schema: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs DiffComponent\n   */\n  constructor(props) {\n    super(props);\n    this.onChangeOne = this.onChangeOne.bind(this);\n    this.onChangeTwo = this.onChangeTwo.bind(this);\n    this.onSelectView = this.onSelectView.bind(this);\n    this.state = { isClient: false };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getSchema(this.props.type);\n    this.props.getHistory(getBaseUrl(this.props.pathname));\n    this.props.getDiff(\n      getBaseUrl(this.props.pathname),\n      this.props.one,\n      this.props.two,\n    );\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      this.props.pathname !== nextProps.pathname ||\n      this.props.one !== nextProps.one ||\n      this.props.two !== nextProps.two\n    ) {\n      this.props.getDiff(\n        getBaseUrl(nextProps.pathname),\n        nextProps.one,\n        nextProps.two,\n      );\n    }\n  }\n\n  /**\n   * On select view handler\n   * @method onSelectView\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onSelectView(event, { value }) {\n    this.props.history.push(\n      `${this.props.pathname}?one=${this.props.one}&two=${this.props.two}&view=${value}`,\n    );\n  }\n\n  /**\n   * On change one handler\n   * @method onChangeOne\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onChangeOne(event, { value }) {\n    this.props.history.push(\n      `${this.props.pathname}?one=${value}&two=${this.props.two}&view=${this.props.view}`,\n    );\n  }\n\n  /**\n   * On change two handler\n   * @method onChangeTwo\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onChangeTwo(event, { value }) {\n    this.props.history.push(\n      `${this.props.pathname}?one=${this.props.one}&two=${value}&view=${this.props.view}`,\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const versions = map(\n      filter(this.props.historyEntries, (entry) => 'version' in entry),\n      (entry, index) => ({\n        text: (\n          <>\n            {index === 0 ? 'Current' : entry.version}&nbsp;(\n            <FormattedDate date={entry.time} long className=\"text\" />, &nbsp;\n            {entry.actor.fullname})\n          </>\n        ),\n        value: `${entry.version}`,\n        key: `${entry.version}`,\n      }),\n    );\n\n    return this.props.error?.status === 401 ? (\n      <Unauthorized />\n    ) : (\n      <Container id=\"page-diff\">\n        <Helmet title={this.props.intl.formatMessage(messages.diff)} />\n        <h1>\n          <FormattedMessage\n            id=\"Difference between revision {one} and {two} of {title}\"\n            defaultMessage=\"Difference between revision {one} and {two} of {title}\"\n            values={{\n              one: this.props.one,\n              two: this.props.two,\n              title: this.props.title,\n            }}\n          />\n        </h1>\n        <Grid>\n          <Grid.Column width={9}>\n            <p className=\"description\">\n              <FormattedMessage\n                id=\"You can view the difference of the revisions below.\"\n                defaultMessage=\"You can view the difference of the revisions below.\"\n              />\n            </p>\n          </Grid.Column>\n          <Grid.Column width={3} textAlign=\"right\">\n            <Button.Group>\n              {map(\n                [\n                  {\n                    id: 'split',\n                    label: this.props.intl.formatMessage(messages.split),\n                  },\n                  {\n                    id: 'unified',\n                    label: this.props.intl.formatMessage(messages.unified),\n                  },\n                ],\n                (view) => (\n                  <Button\n                    key={view.id}\n                    value={view.id}\n                    active={this.props.view === view.id}\n                    onClick={this.onSelectView}\n                  >\n                    {view.label}\n                  </Button>\n                ),\n              )}\n            </Button.Group>\n          </Grid.Column>\n        </Grid>\n        {this.props.historyEntries.length > 0 && (\n          <Table basic=\"very\">\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell width={6}>\n                  <FormattedMessage id=\"Base\" defaultMessage=\"Base\" />\n                  <Dropdown\n                    onChange={this.onChangeOne}\n                    value={this.props.one}\n                    selection\n                    fluid\n                    options={versions}\n                  />\n                </Table.HeaderCell>\n                <Table.HeaderCell width={6}>\n                  <FormattedMessage id=\"Compare\" defaultMessage=\"Compare\" />\n                  <Dropdown\n                    onChange={this.onChangeTwo}\n                    value={this.props.two}\n                    selection\n                    fluid\n                    options={versions}\n                  />\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n          </Table>\n        )}\n        {this.props.schema &&\n          this.props.data.length > 0 &&\n          map(this.props.schema.fieldsets, (fieldset) =>\n            map(\n              fieldset.fields,\n              (field) =>\n                !isEqual(\n                  this.props.data[0][field],\n                  this.props.data[1][field],\n                ) &&\n                field !== getBlocksFieldname(this.props.data[0]) &&\n                field !== getBlocksLayoutFieldname(this.props.data[0]) && (\n                  <DiffField\n                    key={field}\n                    one={this.props.data[0][field]}\n                    two={this.props.data[1][field]}\n                    schema={this.props.schema.properties[field]}\n                    view={this.props.view}\n                  />\n                ),\n            ),\n          )}\n        {this.props.schema &&\n          this.props.data.length > 0 &&\n          hasBlocksData(this.props.data[0]) &&\n          (!isEqual(\n            this.props.data[0][getBlocksFieldname(this.props.data[0])],\n            this.props.data[1][getBlocksFieldname(this.props.data[1])],\n          ) ||\n            !isEqual(\n              this.props.data[0][getBlocksLayoutFieldname(this.props.data[0])],\n              this.props.data[1][getBlocksLayoutFieldname(this.props.data[1])],\n            )) && (\n            <DiffField\n              one={this.props.data[0][getBlocksFieldname(this.props.data[0])]}\n              two={this.props.data[1][getBlocksFieldname(this.props.data[1])]}\n              contentOne={this.props.data[0]}\n              contentTwo={this.props.data[1]}\n              schema={\n                this.props.schema.properties[\n                  getBlocksFieldname(this.props.data[0])\n                ]\n              }\n              view={this.props.view}\n            />\n          )}\n        {this.state.isClient &&\n          createPortal(\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link\n                  to={`${getBaseUrl(this.props.pathname)}/historyview`}\n                  className=\"item\"\n                >\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />,\n            document.getElementById('toolbar'),\n          )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state, props) => ({\n      data: state.diff.data,\n      historyEntries: state.history.entries,\n      schema: state.schema.schema,\n      error: state.diff.error,\n      pathname: props.location.pathname,\n      one: qs.parse(props.location.search).one,\n      two: qs.parse(props.location.search).two,\n      view: qs.parse(props.location.search).view || 'split',\n      title: state.content.data?.title,\n      type: state.content.data?.['@type'],\n    }),\n    { getDiff, getSchema, getHistory },\n  ),\n)(Diff);\n"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,MAAM,MAAM,oCAAoC;AACvD,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,OAAO,QAAQ,OAAO;AAC/B,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,OAAO,MAAM,gBAAgB;AACpC,OAAOC,GAAG,MAAM,YAAY;AAC5B,SAASC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,QAAQ,mBAAmB;AAC5E,SAASC,IAAI,EAAEC,UAAU,QAAQ,kBAAkB;AACnD,SAASC,YAAY,QAAQ,WAAW;AACxC,SAASC,gBAAgB,EAAEC,cAAc,EAAEC,UAAU,QAAQ,YAAY;AACzE,OAAOC,EAAE,MAAM,cAAc;AAE7B,SAASC,OAAO,QAAQ,gCAAgC;AACxD,SAASC,SAAS,QAAQ,oCAAoC;AAC9D,SAASC,UAAU,QAAQ,sCAAsC;AACjE,SAASC,UAAU,QAAQ,8BAA8B;AACzD,SACEC,kBAAkB,EAClBC,wBAAwB,EACxBC,aAAa,QACR,oCAAoC;AAC3C,OAAOC,aAAa,MAAM,2DAA2D;AACrF,OAAOC,IAAI,MAAM,yCAAyC;AAC1D,OAAOC,OAAO,MAAM,gDAAgD;AACpE,OAAOC,YAAY,MAAM,yDAAyD;AAClF,OAAOC,SAAS,MAAM,+CAA+C;AAErE,OAAOC,OAAO,MAAM,6BAA6B;AAEjD,MAAMC,QAAQ,GAAGhB,cAAc,CAAC;EAC9BiB,IAAI;IAAA;IAAA;EAAA,CAGH;EACDC,IAAI;IAAA;IAAA;EAAA,CAGH;EACDC,KAAK;IAAA;IAAA;EAAA,CAGJ;EACDC,OAAO;IAAA;IAAA;EAAA;AAIT,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,MAAMC,IAAI,SAAStC,SAAS,CAAC;EAyC3B;AACF;AACA;AACA;AACA;AACA;EACEuC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,WAAW,GAAG,IAAI,CAACA,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;IAC9C,IAAI,CAACC,WAAW,GAAG,IAAI,CAACA,WAAW,CAACD,IAAI,CAAC,IAAI,CAAC;IAC9C,IAAI,CAACE,YAAY,GAAG,IAAI,CAACA,YAAY,CAACF,IAAI,CAAC,IAAI,CAAC;IAChD,IAAI,CAACG,KAAK,GAAG;MAAEC,QAAQ,EAAE;IAAM,CAAC;EAClC;;EAEA;AACF;AACA;AACA;AACA;EACEC,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACP,KAAK,CAACnB,SAAS,CAAC,IAAI,CAACmB,KAAK,CAACQ,IAAI,CAAC;IACrC,IAAI,CAACR,KAAK,CAAClB,UAAU,CAACC,UAAU,CAAC,IAAI,CAACiB,KAAK,CAACS,QAAQ,CAAC,CAAC;IACtD,IAAI,CAACT,KAAK,CAACpB,OAAO,CAChBG,UAAU,CAAC,IAAI,CAACiB,KAAK,CAACS,QAAQ,CAAC,EAC/B,IAAI,CAACT,KAAK,CAACU,GAAG,EACd,IAAI,CAACV,KAAK,CAACW,GACb,CAAC;IACD,IAAI,CAACC,QAAQ,CAAC;MAAEN,QAAQ,EAAE;IAAK,CAAC,CAAC;EACnC;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEO,gCAAgCA,CAACC,SAAS,EAAE;IAC1C,IACE,IAAI,CAACd,KAAK,CAACS,QAAQ,KAAKK,SAAS,CAACL,QAAQ,IAC1C,IAAI,CAACT,KAAK,CAACU,GAAG,KAAKI,SAAS,CAACJ,GAAG,IAChC,IAAI,CAACV,KAAK,CAACW,GAAG,KAAKG,SAAS,CAACH,GAAG,EAChC;MACA,IAAI,CAACX,KAAK,CAACpB,OAAO,CAChBG,UAAU,CAAC+B,SAAS,CAACL,QAAQ,CAAC,EAC9BK,SAAS,CAACJ,GAAG,EACbI,SAAS,CAACH,GACZ,CAAC;IACH;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEP,YAAYA,CAACW,KAAK,EAAE;IAAEC;EAAM,CAAC,EAAE;IAC7B,IAAI,CAAChB,KAAK,CAACiB,OAAO,CAACC,IAAI,CACrB,GAAG,IAAI,CAAClB,KAAK,CAACS,QAAQ,QAAQ,IAAI,CAACT,KAAK,CAACU,GAAG,QAAQ,IAAI,CAACV,KAAK,CAACW,GAAG,SAASK,KAAK,EAClF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEf,WAAWA,CAACc,KAAK,EAAE;IAAEC;EAAM,CAAC,EAAE;IAC5B,IAAI,CAAChB,KAAK,CAACiB,OAAO,CAACC,IAAI,CACrB,GAAG,IAAI,CAAClB,KAAK,CAACS,QAAQ,QAAQO,KAAK,QAAQ,IAAI,CAAChB,KAAK,CAACW,GAAG,SAAS,IAAI,CAACX,KAAK,CAACmB,IAAI,EACnF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEhB,WAAWA,CAACY,KAAK,EAAE;IAAEC;EAAM,CAAC,EAAE;IAC5B,IAAI,CAAChB,KAAK,CAACiB,OAAO,CAACC,IAAI,CACrB,GAAG,IAAI,CAAClB,KAAK,CAACS,QAAQ,QAAQ,IAAI,CAACT,KAAK,CAACU,GAAG,QAAQM,KAAK,SAAS,IAAI,CAAChB,KAAK,CAACmB,IAAI,EACnF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,MAAMA,CAAA,EAAG;IAAA,IAAAC,iBAAA;IACP,MAAMC,QAAQ,GAAGvD,GAAG,CAClBF,MAAM,CAAC,IAAI,CAACmC,KAAK,CAACuB,cAAc,EAAGC,KAAK,IAAK,SAAS,IAAIA,KAAK,CAAC,EAChE,CAACA,KAAK,EAAEC,KAAK,MAAM;MACjBC,IAAI,EACFC,KAAA,CAAApE,KAAA,CAAAqE,QAAA,QACGH,KAAK,KAAK,CAAC,GAAG,SAAS,GAAGD,KAAK,CAACK,OAAO,EAAC,OACzC,EAAAF,KAAA,CAACxC,aAAa;QAAC2C,IAAI,EAAEN,KAAK,CAACO,IAAK;QAACC,IAAI;QAACC,SAAS,EAAC,MAAM;QAAAC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAAC,UACzD,EAACf,KAAK,CAACgB,KAAK,CAACC,QAAQ,EAAC,GACtB,CACH;MACDzB,KAAK,EAAE,GAAGQ,KAAK,CAACK,OAAO,EAAE;MACzBa,GAAG,EAAE,GAAGlB,KAAK,CAACK,OAAO;IACvB,CAAC,CACH,CAAC;IAED,OAAO,EAAAR,iBAAA,OAAI,CAACrB,KAAK,CAAC2C,KAAK,cAAAtB,iBAAA,uBAAhBA,iBAAA,CAAkBuB,MAAM,MAAK,GAAG,GACrCjB,KAAA,CAACrC,YAAY;MAAA4C,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,GAEhBZ,KAAA,CAAC3D,SAAS;MAAC6E,EAAE,EAAC,WAAW;MAAAX,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACvBZ,KAAA,CAACjE,MAAM;MAACoF,KAAK,EAAE,IAAI,CAAC9C,KAAK,CAAC+C,IAAI,CAACC,aAAa,CAACvD,QAAQ,CAACC,IAAI,CAAE;MAAAwC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,EAC/DZ,KAAA;MAAAO,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACEZ,KAAA,CAACnD,gBAAgB;MACfqE,EAAE,EAAC,wDAAwD;MAC3DI,cAAc,EAAC,wDAAwD;MACvEC,MAAM,EAAE;QACNxC,GAAG,EAAE,IAAI,CAACV,KAAK,CAACU,GAAG;QACnBC,GAAG,EAAE,IAAI,CAACX,KAAK,CAACW,GAAG;QACnBmC,KAAK,EAAE,IAAI,CAAC9C,KAAK,CAAC8C;MACpB,CAAE;MAAAZ,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACH,CACC,CAAC,EACLZ,KAAA,CAACxD,IAAI;MAAA+D,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACHZ,KAAA,CAACxD,IAAI,CAACgF,MAAM;MAACC,KAAK,EAAE,CAAE;MAAAlB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACpBZ,KAAA;MAAGM,SAAS,EAAC,aAAa;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACxBZ,KAAA,CAACnD,gBAAgB;MACfqE,EAAE,EAAC,qDAAqD;MACxDI,cAAc,EAAC,qDAAqD;MAAAf,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACrE,CACA,CACQ,CAAC,EACdZ,KAAA,CAACxD,IAAI,CAACgF,MAAM;MAACC,KAAK,EAAE,CAAE;MAACC,SAAS,EAAC,OAAO;MAAAnB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACtCZ,KAAA,CAAC1D,MAAM,CAACqF,KAAK;MAAApB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACVxE,GAAG,CACF,CACE;MACE8E,EAAE,EAAE,OAAO;MACXU,KAAK,EAAE,IAAI,CAACvD,KAAK,CAAC+C,IAAI,CAACC,aAAa,CAACvD,QAAQ,CAACG,KAAK;IACrD,CAAC,EACD;MACEiD,EAAE,EAAE,SAAS;MACbU,KAAK,EAAE,IAAI,CAACvD,KAAK,CAAC+C,IAAI,CAACC,aAAa,CAACvD,QAAQ,CAACI,OAAO;IACvD,CAAC,CACF,EACAsB,IAAI,IACHQ,KAAA,CAAC1D,MAAM;MACLyE,GAAG,EAAEvB,IAAI,CAAC0B,EAAG;MACb7B,KAAK,EAAEG,IAAI,CAAC0B,EAAG;MACfW,MAAM,EAAE,IAAI,CAACxD,KAAK,CAACmB,IAAI,KAAKA,IAAI,CAAC0B,EAAG;MACpCY,OAAO,EAAE,IAAI,CAACrD,YAAa;MAAA8B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAE1BpB,IAAI,CAACoC,KACA,CAEZ,CACY,CACH,CACT,CAAC,EACN,IAAI,CAACvD,KAAK,CAACuB,cAAc,CAACmC,MAAM,GAAG,CAAC,IACnC/B,KAAA,CAACvD,KAAK;MAACuF,KAAK,EAAC,MAAM;MAAAzB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACjBZ,KAAA,CAACvD,KAAK,CAACwF,MAAM;MAAA1B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACXZ,KAAA,CAACvD,KAAK,CAACyF,GAAG;MAAA3B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACRZ,KAAA,CAACvD,KAAK,CAAC0F,UAAU;MAACV,KAAK,EAAE,CAAE;MAAAlB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACzBZ,KAAA,CAACnD,gBAAgB;MAACqE,EAAE,EAAC,MAAM;MAACI,cAAc,EAAC,MAAM;MAAAf,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,EACpDZ,KAAA,CAACzD,QAAQ;MACP6F,QAAQ,EAAE,IAAI,CAAC9D,WAAY;MAC3Be,KAAK,EAAE,IAAI,CAAChB,KAAK,CAACU,GAAI;MACtBsD,SAAS;MACTC,KAAK;MACLC,OAAO,EAAE5C,QAAS;MAAAY,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACnB,CACe,CAAC,EACnBZ,KAAA,CAACvD,KAAK,CAAC0F,UAAU;MAACV,KAAK,EAAE,CAAE;MAAAlB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACzBZ,KAAA,CAACnD,gBAAgB;MAACqE,EAAE,EAAC,SAAS;MAACI,cAAc,EAAC,SAAS;MAAAf,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,EAC1DZ,KAAA,CAACzD,QAAQ;MACP6F,QAAQ,EAAE,IAAI,CAAC5D,WAAY;MAC3Ba,KAAK,EAAE,IAAI,CAAChB,KAAK,CAACW,GAAI;MACtBqD,SAAS;MACTC,KAAK;MACLC,OAAO,EAAE5C,QAAS;MAAAY,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACnB,CACe,CACT,CACC,CACT,CACR,EACA,IAAI,CAACvC,KAAK,CAACmE,MAAM,IAChB,IAAI,CAACnE,KAAK,CAACoE,IAAI,CAACV,MAAM,GAAG,CAAC,IAC1B3F,GAAG,CAAC,IAAI,CAACiC,KAAK,CAACmE,MAAM,CAACE,SAAS,EAAGC,QAAQ,IACxCvG,GAAG,CACDuG,QAAQ,CAACC,MAAM,EACdC,KAAK,IACJ,CAAC1G,OAAO,CACN,IAAI,CAACkC,KAAK,CAACoE,IAAI,CAAC,CAAC,CAAC,CAACI,KAAK,CAAC,EACzB,IAAI,CAACxE,KAAK,CAACoE,IAAI,CAAC,CAAC,CAAC,CAACI,KAAK,CAC1B,CAAC,IACDA,KAAK,KAAKxF,kBAAkB,CAAC,IAAI,CAACgB,KAAK,CAACoE,IAAI,CAAC,CAAC,CAAC,CAAC,IAChDI,KAAK,KAAKvF,wBAAwB,CAAC,IAAI,CAACe,KAAK,CAACoE,IAAI,CAAC,CAAC,CAAC,CAAC,IACpDzC,KAAA,CAACpC,SAAS;MACRmD,GAAG,EAAE8B,KAAM;MACX9D,GAAG,EAAE,IAAI,CAACV,KAAK,CAACoE,IAAI,CAAC,CAAC,CAAC,CAACI,KAAK,CAAE;MAC/B7D,GAAG,EAAE,IAAI,CAACX,KAAK,CAACoE,IAAI,CAAC,CAAC,CAAC,CAACI,KAAK,CAAE;MAC/BL,MAAM,EAAE,IAAI,CAACnE,KAAK,CAACmE,MAAM,CAACM,UAAU,CAACD,KAAK,CAAE;MAC5CrD,IAAI,EAAE,IAAI,CAACnB,KAAK,CAACmB,IAAK;MAAAe,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACvB,CAEP,CACF,CAAC,EACF,IAAI,CAACvC,KAAK,CAACmE,MAAM,IAChB,IAAI,CAACnE,KAAK,CAACoE,IAAI,CAACV,MAAM,GAAG,CAAC,IAC1BxE,aAAa,CAAC,IAAI,CAACc,KAAK,CAACoE,IAAI,CAAC,CAAC,CAAC,CAAC,KAChC,CAACtG,OAAO,CACP,IAAI,CAACkC,KAAK,CAACoE,IAAI,CAAC,CAAC,CAAC,CAACpF,kBAAkB,CAAC,IAAI,CAACgB,KAAK,CAACoE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAC1D,IAAI,CAACpE,KAAK,CAACoE,IAAI,CAAC,CAAC,CAAC,CAACpF,kBAAkB,CAAC,IAAI,CAACgB,KAAK,CAACoE,IAAI,CAAC,CAAC,CAAC,CAAC,CAC3D,CAAC,IACC,CAACtG,OAAO,CACN,IAAI,CAACkC,KAAK,CAACoE,IAAI,CAAC,CAAC,CAAC,CAACnF,wBAAwB,CAAC,IAAI,CAACe,KAAK,CAACoE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAChE,IAAI,CAACpE,KAAK,CAACoE,IAAI,CAAC,CAAC,CAAC,CAACnF,wBAAwB,CAAC,IAAI,CAACe,KAAK,CAACoE,IAAI,CAAC,CAAC,CAAC,CAAC,CACjE,CAAC,CAAC,IACFzC,KAAA,CAACpC,SAAS;MACRmB,GAAG,EAAE,IAAI,CAACV,KAAK,CAACoE,IAAI,CAAC,CAAC,CAAC,CAACpF,kBAAkB,CAAC,IAAI,CAACgB,KAAK,CAACoE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAE;MAChEzD,GAAG,EAAE,IAAI,CAACX,KAAK,CAACoE,IAAI,CAAC,CAAC,CAAC,CAACpF,kBAAkB,CAAC,IAAI,CAACgB,KAAK,CAACoE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAE;MAChEM,UAAU,EAAE,IAAI,CAAC1E,KAAK,CAACoE,IAAI,CAAC,CAAC,CAAE;MAC/BO,UAAU,EAAE,IAAI,CAAC3E,KAAK,CAACoE,IAAI,CAAC,CAAC,CAAE;MAC/BD,MAAM,EACJ,IAAI,CAACnE,KAAK,CAACmE,MAAM,CAACM,UAAU,CAC1BzF,kBAAkB,CAAC,IAAI,CAACgB,KAAK,CAACoE,IAAI,CAAC,CAAC,CAAC,CAAC,CAEzC;MACDjD,IAAI,EAAE,IAAI,CAACnB,KAAK,CAACmB,IAAK;MAAAe,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACvB,CACF,EACF,IAAI,CAAClC,KAAK,CAACC,QAAQ,iBAClB/B,YAAY,CACVoD,KAAA,CAACtC,OAAO;MACNoB,QAAQ,EAAE,IAAI,CAACT,KAAK,CAACS,QAAS;MAC9BmE,sBAAsB;MACtBC,KAAK,EACHlD,KAAA,CAACtD,IAAI;QACHyG,EAAE,EAAE,GAAG/F,UAAU,CAAC,IAAI,CAACiB,KAAK,CAACS,QAAQ,CAAC,cAAe;QACrDwB,SAAS,EAAC,MAAM;QAAAC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAEhBZ,KAAA,CAACvC,IAAI;QACH2F,IAAI,EAAEvF,OAAQ;QACdyC,SAAS,EAAC,kBAAkB;QAC5B+C,IAAI,EAAC,MAAM;QACXlC,KAAK,EAAE,IAAI,CAAC9C,KAAK,CAAC+C,IAAI,CAACC,aAAa,CAACvD,QAAQ,CAACE,IAAI,CAAE;QAAAuC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CACrD,CACG,CACP;MAAAL,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACF,CAAC,EACF0C,QAAQ,CAACC,cAAc,CAAC,SAAS,CACnC,CACO,CACZ;EACH;AACF;AA5SE;AACF;AACA;AACA;AACA;AAJEC,eAAA,CADIrF,IAAI,eAMW;EACjBlB,OAAO,EAAEnB,SAAS,CAAC2H,IAAI,CAACC,UAAU;EAClCxG,SAAS,EAAEpB,SAAS,CAAC2H,IAAI,CAACC,UAAU;EACpCvG,UAAU,EAAErB,SAAS,CAAC2H,IAAI,CAACC,UAAU;EACrClB,MAAM,EAAE1G,SAAS,CAAC6H,QAAQ,CAAC7H,SAAS,CAAC8H,GAAG,CAAC;EACzC5C,KAAK,EAAElF,SAAS,CAAC6H,QAAQ,CAAC7H,SAAS,CAAC8H,GAAG,CAAC;EACxC9E,QAAQ,EAAEhD,SAAS,CAAC+H,MAAM,CAACH,UAAU;EACrC3E,GAAG,EAAEjD,SAAS,CAAC+H,MAAM,CAACH,UAAU;EAChC1E,GAAG,EAAElD,SAAS,CAAC+H,MAAM,CAACH,UAAU;EAChClE,IAAI,EAAE1D,SAAS,CAAC+H,MAAM,CAACH,UAAU;EACjCjB,IAAI,EAAE3G,SAAS,CAACgI,OAAO,CACrBhI,SAAS,CAACiI,KAAK,CAAC;IACd,KAAK,EAAEjI,SAAS,CAAC+H;EACnB,CAAC,CACH,CAAC,CAACH,UAAU;EACZ9D,cAAc,EAAE9D,SAAS,CAACgI,OAAO,CAC/BhI,SAAS,CAACiI,KAAK,CAAC;IACd7D,OAAO,EAAEpE,SAAS,CAACkI,MAAM;IACzB5D,IAAI,EAAEtE,SAAS,CAAC+H,MAAM;IACtBhD,KAAK,EAAE/E,SAAS,CAACiI,KAAK,CAAC;MAAEjD,QAAQ,EAAEhF,SAAS,CAAC+H;IAAO,CAAC;EACvD,CAAC,CACH,CAAC,CAACH,UAAU;EACZvC,KAAK,EAAErF,SAAS,CAAC+H,MAAM,CAACH,UAAU;EAClC7E,IAAI,EAAE/C,SAAS,CAAC+H,MAAM,CAACH;AACzB,CAAC;AAED;AACF;AACA;AACA;AACA;AAJEF,eAAA,CAhCIrF,IAAI,kBAqCc;EACpBqE,MAAM,EAAE;AACV,CAAC;AAwQH,eAAevG,OAAO,CACpBU,UAAU,EACVI,UAAU,EACVf,OAAO,CACL,CAAC0C,KAAK,EAAEL,KAAK;EAAA,IAAA4F,mBAAA,EAAAC,oBAAA;EAAA,OAAM;IACjBzB,IAAI,EAAE/D,KAAK,CAACX,IAAI,CAAC0E,IAAI;IACrB7C,cAAc,EAAElB,KAAK,CAACY,OAAO,CAAC6E,OAAO;IACrC3B,MAAM,EAAE9D,KAAK,CAAC8D,MAAM,CAACA,MAAM;IAC3BxB,KAAK,EAAEtC,KAAK,CAACX,IAAI,CAACiD,KAAK;IACvBlC,QAAQ,EAAET,KAAK,CAAC+F,QAAQ,CAACtF,QAAQ;IACjCC,GAAG,EAAE/B,EAAE,CAACqH,KAAK,CAAChG,KAAK,CAAC+F,QAAQ,CAACE,MAAM,CAAC,CAACvF,GAAG;IACxCC,GAAG,EAAEhC,EAAE,CAACqH,KAAK,CAAChG,KAAK,CAAC+F,QAAQ,CAACE,MAAM,CAAC,CAACtF,GAAG;IACxCQ,IAAI,EAAExC,EAAE,CAACqH,KAAK,CAAChG,KAAK,CAAC+F,QAAQ,CAACE,MAAM,CAAC,CAAC9E,IAAI,IAAI,OAAO;IACrD2B,KAAK,GAAA8C,mBAAA,GAAEvF,KAAK,CAAC6F,OAAO,CAAC9B,IAAI,cAAAwB,mBAAA,uBAAlBA,mBAAA,CAAoB9C,KAAK;IAChCtC,IAAI,GAAAqF,oBAAA,GAAExF,KAAK,CAAC6F,OAAO,CAAC9B,IAAI,cAAAyB,oBAAA,uBAAlBA,oBAAA,CAAqB,OAAO;EACpC,CAAC;AAAA,CAAC,EACF;EAAEjH,OAAO;EAAEC,SAAS;EAAEC;AAAW,CACnC,CACF,CAAC,CAACgB,IAAI,CAAC","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Diff","defaultMessage":"Diff"},{"id":"Back","defaultMessage":"Back"},{"id":"Split","defaultMessage":"Split"},{"id":"Unified","defaultMessage":"Unified"},{"id":"Difference between revision {one} and {two} of {title}","defaultMessage":"Difference between revision {one} and {two} of {title}"},{"id":"You can view the difference of the revisions below.","defaultMessage":"You can view the difference of the revisions below."},{"id":"Base","defaultMessage":"Base"},{"id":"Compare","defaultMessage":"Compare"}]}},"sourceType":"module","externalDependencies":[]}