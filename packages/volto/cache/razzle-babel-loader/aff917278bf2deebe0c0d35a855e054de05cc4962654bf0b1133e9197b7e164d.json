{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Display/Display.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { compose } from 'redux';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { getSchema } from '@plone/volto/actions/schema/schema';\nimport { updateContent, getContent } from '@plone/volto/actions/content/content';\nimport { getLayoutFieldname } from '@plone/volto/helpers/Content/Content';\nimport { usePrevious } from '@plone/volto/helpers/Utils/usePrevious';\nimport { FormFieldWrapper } from '@plone/volto/components/manage/Widgets';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { defineMessages, useIntl } from 'react-intl';\nimport config from '@plone/volto/registry';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\nconst messages = defineMessages({\n  Viewmode: {\n    \"id\": \"Viewmode\",\n    \"defaultMessage\": \"View\"\n  }\n});\nconst Option = injectLazyLibs('reactSelect')(props => {\n  const {\n    Option\n  } = props.reactSelect.components;\n  return __jsx(Option, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, props.label), props.isFocused && !props.isSelected && __jsx(Icon, {\n    name: checkSVG,\n    size: \"18px\",\n    color: \"#b8c6c8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), props.isSelected && __jsx(Icon, {\n    name: checkSVG,\n    size: \"18px\",\n    color: \"#007bc1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 28\n    }\n  }));\n});\nconst DropdownIndicator = injectLazyLibs('reactSelect')(props => {\n  const {\n    DropdownIndicator\n  } = props.reactSelect.components;\n  return __jsx(DropdownIndicator, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }), props.selectProps.menuIsOpen ? __jsx(Icon, {\n    name: upSVG,\n    size: \"24px\",\n    color: \"#007bc1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }) : __jsx(Icon, {\n    name: downSVG,\n    size: \"24px\",\n    color: \"#007bc1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }));\n});\nconst selectTheme = theme => _objectSpread(_objectSpread({}, theme), {}, {\n  borderRadius: 0,\n  colors: _objectSpread(_objectSpread({}, theme.colors), {}, {\n    primary25: 'hotpink',\n    primary: '#b8c6c8'\n  })\n});\nconst customSelectStyles = {\n  control: (styles, state) => _objectSpread(_objectSpread({}, styles), {}, {\n    border: 'none',\n    borderBottom: '2px solid #b8c6c8',\n    boxShadow: 'none',\n    borderBottomStyle: state.menuIsOpen ? 'dotted' : 'solid'\n  }),\n  menu: (styles, state) => _objectSpread(_objectSpread({}, styles), {}, {\n    top: null,\n    marginTop: 0,\n    boxShadow: 'none',\n    borderBottom: '2px solid #b8c6c8'\n  }),\n  menuList: (styles, state) => _objectSpread(_objectSpread({}, styles), {}, {\n    maxHeight: '400px'\n  }),\n  indicatorSeparator: styles => _objectSpread(_objectSpread({}, styles), {}, {\n    width: null\n  }),\n  valueContainer: styles => _objectSpread(_objectSpread({}, styles), {}, {\n    padding: 0\n  }),\n  option: (styles, state) => _objectSpread(_objectSpread({}, styles), {}, {\n    backgroundColor: null,\n    minHeight: '50px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '12px 12px',\n    color: state.isSelected ? '#007bc1' : state.isFocused ? '#4a4a4a' : 'inherit',\n    ':active': {\n      backgroundColor: null\n    },\n    span: {\n      flex: '0 0 auto'\n    },\n    svg: {\n      flex: '0 0 auto'\n    }\n  })\n};\nconst DisplaySelect = props => {\n  var _config$views$layoutV;\n  const {\n    pathname\n  } = props;\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const loaded = useSelector(state => state.content.update.loaded);\n  const layouts = useSelector(state => state.schema.schema ? state.schema.schema.layouts : []);\n  const layout = useSelector(state => state.content.data ? state.content.data[getLayoutFieldname(state.content.data)] : '');\n  const layoutMappingId = (_config$views$layoutV = config.views.layoutViewsNamesMapping) === null || _config$views$layoutV === void 0 ? void 0 : _config$views$layoutV[layout];\n  const {\n    0: selectedOption,\n    1: setselectedOption\n  } = useState({\n    value: layout,\n    label: layoutMappingId ? intl.formatMessage({\n      id: layoutMappingId,\n      defaultMessage: layoutMappingId\n    }) : layout\n  });\n  const type = useSelector(state => state.content.data ? state.content.data['@type'] : '');\n  const prevloaded = usePrevious(loaded);\n  const prevpathname = usePrevious(pathname);\n  useEffect(() => {\n    dispatch(getSchema(type));\n  }, [dispatch, type]);\n  useEffect(() => {\n    if (pathname !== prevpathname) {\n      dispatch(getSchema(type));\n    }\n    if (!prevloaded && loaded) {\n      dispatch(getContent(pathname));\n    }\n  }, [dispatch, type, pathname, prevpathname, prevloaded, loaded]);\n  const setLayout = selectedOption => {\n    dispatch(updateContent(pathname, {\n      layout: selectedOption.value\n    }));\n    setselectedOption(selectedOption);\n  };\n  const Select = props.reactSelect.default;\n  const layoutsNames = config.views.layoutViewsNamesMapping;\n  const layoutOptions = layouts.filter(layout => Object.keys(config.views.contentTypesViews).includes(layout) || Object.keys(config.views.layoutViews).includes(layout)).map(item => ({\n    value: item,\n    label: intl.formatMessage({\n      id: layoutsNames[item],\n      defaultMessage: layoutsNames[item]\n    }) || item\n  }));\n  return (layoutOptions === null || layoutOptions === void 0 ? void 0 : layoutOptions.length) > 1 ? __jsx(FormFieldWrapper, _extends({\n    id: \"display-select\",\n    title: intl.formatMessage(messages.Viewmode)\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }\n  }), __jsx(Select, {\n    name: \"display-select\",\n    className: \"react-select-container\",\n    classNamePrefix: \"react-select\",\n    options: layoutOptions,\n    styles: customSelectStyles,\n    theme: selectTheme,\n    components: {\n      DropdownIndicator,\n      Option\n    },\n    onChange: setLayout,\n    defaultValue: selectedOption,\n    isSearchable: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  })) : null;\n};\nDisplaySelect.propTypes = {\n  pathname: PropTypes.string.isRequired\n};\nexport default compose(injectLazyLibs('reactSelect'))(DisplaySelect);","map":{"version":3,"names":["React","useState","useEffect","PropTypes","useDispatch","useSelector","compose","injectLazyLibs","getSchema","updateContent","getContent","getLayoutFieldname","usePrevious","FormFieldWrapper","Icon","defineMessages","useIntl","config","downSVG","upSVG","checkSVG","messages","Viewmode","Option","props","reactSelect","components","__jsx","_extends","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","label","isFocused","isSelected","name","size","color","DropdownIndicator","selectProps","menuIsOpen","selectTheme","theme","_objectSpread","borderRadius","colors","primary25","primary","customSelectStyles","control","styles","state","border","borderBottom","boxShadow","borderBottomStyle","menu","top","marginTop","menuList","maxHeight","indicatorSeparator","width","valueContainer","padding","option","backgroundColor","minHeight","display","justifyContent","alignItems","span","flex","svg","DisplaySelect","_config$views$layoutV","pathname","intl","dispatch","loaded","content","update","layouts","schema","layout","data","layoutMappingId","views","layoutViewsNamesMapping","selectedOption","setselectedOption","value","formatMessage","id","defaultMessage","type","prevloaded","prevpathname","setLayout","Select","default","layoutsNames","layoutOptions","filter","Object","keys","contentTypesViews","includes","layoutViews","map","item","length","title","className","classNamePrefix","options","onChange","defaultValue","isSearchable","propTypes","string","isRequired"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Display/Display.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { compose } from 'redux';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nimport { getSchema } from '@plone/volto/actions/schema/schema';\nimport {\n  updateContent,\n  getContent,\n} from '@plone/volto/actions/content/content';\nimport { getLayoutFieldname } from '@plone/volto/helpers/Content/Content';\nimport { usePrevious } from '@plone/volto/helpers/Utils/usePrevious';\nimport { FormFieldWrapper } from '@plone/volto/components/manage/Widgets';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { defineMessages, useIntl } from 'react-intl';\nimport config from '@plone/volto/registry';\n\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\n\nconst messages = defineMessages({\n  Viewmode: {\n    id: 'Viewmode',\n    defaultMessage: 'View',\n  },\n});\n\nconst Option = injectLazyLibs('reactSelect')((props) => {\n  const { Option } = props.reactSelect.components;\n  return (\n    <Option {...props}>\n      <div>{props.label}</div>\n      {props.isFocused && !props.isSelected && (\n        <Icon name={checkSVG} size=\"18px\" color=\"#b8c6c8\" />\n      )}\n      {props.isSelected && <Icon name={checkSVG} size=\"18px\" color=\"#007bc1\" />}\n    </Option>\n  );\n});\n\nconst DropdownIndicator = injectLazyLibs('reactSelect')((props) => {\n  const { DropdownIndicator } = props.reactSelect.components;\n  return (\n    <DropdownIndicator {...props}>\n      {props.selectProps.menuIsOpen ? (\n        <Icon name={upSVG} size=\"24px\" color=\"#007bc1\" />\n      ) : (\n        <Icon name={downSVG} size=\"24px\" color=\"#007bc1\" />\n      )}\n    </DropdownIndicator>\n  );\n});\n\nconst selectTheme = (theme) => ({\n  ...theme,\n  borderRadius: 0,\n  colors: {\n    ...theme.colors,\n    primary25: 'hotpink',\n    primary: '#b8c6c8',\n  },\n});\n\nconst customSelectStyles = {\n  control: (styles, state) => ({\n    ...styles,\n    border: 'none',\n    borderBottom: '2px solid #b8c6c8',\n    boxShadow: 'none',\n    borderBottomStyle: state.menuIsOpen ? 'dotted' : 'solid',\n  }),\n  menu: (styles, state) => ({\n    ...styles,\n    top: null,\n    marginTop: 0,\n    boxShadow: 'none',\n    borderBottom: '2px solid #b8c6c8',\n  }),\n  menuList: (styles, state) => ({\n    ...styles,\n    maxHeight: '400px',\n  }),\n  indicatorSeparator: (styles) => ({\n    ...styles,\n    width: null,\n  }),\n  valueContainer: (styles) => ({\n    ...styles,\n    padding: 0,\n  }),\n  option: (styles, state) => ({\n    ...styles,\n    backgroundColor: null,\n    minHeight: '50px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '12px 12px',\n    color: state.isSelected\n      ? '#007bc1'\n      : state.isFocused\n        ? '#4a4a4a'\n        : 'inherit',\n    ':active': {\n      backgroundColor: null,\n    },\n    span: {\n      flex: '0 0 auto',\n    },\n    svg: {\n      flex: '0 0 auto',\n    },\n  }),\n};\n\nconst DisplaySelect = (props) => {\n  const { pathname } = props;\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const loaded = useSelector((state) => state.content.update.loaded);\n  const layouts = useSelector((state) =>\n    state.schema.schema ? state.schema.schema.layouts : [],\n  );\n  const layout = useSelector((state) =>\n    state.content.data\n      ? state.content.data[getLayoutFieldname(state.content.data)]\n      : '',\n  );\n  const layoutMappingId = config.views.layoutViewsNamesMapping?.[layout];\n  const [selectedOption, setselectedOption] = useState({\n    value: layout,\n    label: layoutMappingId\n      ? intl.formatMessage({\n          id: layoutMappingId,\n          defaultMessage: layoutMappingId,\n        })\n      : layout,\n  });\n\n  const type = useSelector((state) =>\n    state.content.data ? state.content.data['@type'] : '',\n  );\n  const prevloaded = usePrevious(loaded);\n  const prevpathname = usePrevious(pathname);\n\n  useEffect(() => {\n    dispatch(getSchema(type));\n  }, [dispatch, type]);\n  useEffect(() => {\n    if (pathname !== prevpathname) {\n      dispatch(getSchema(type));\n    }\n    if (!prevloaded && loaded) {\n      dispatch(getContent(pathname));\n    }\n  }, [dispatch, type, pathname, prevpathname, prevloaded, loaded]);\n\n  const setLayout = (selectedOption) => {\n    dispatch(\n      updateContent(pathname, {\n        layout: selectedOption.value,\n      }),\n    );\n    setselectedOption(selectedOption);\n  };\n\n  const Select = props.reactSelect.default;\n  const layoutsNames = config.views.layoutViewsNamesMapping;\n  const layoutOptions = layouts\n    .filter(\n      (layout) =>\n        Object.keys(config.views.contentTypesViews).includes(layout) ||\n        Object.keys(config.views.layoutViews).includes(layout),\n    )\n    .map((item) => ({\n      value: item,\n      label:\n        intl.formatMessage({\n          id: layoutsNames[item],\n          defaultMessage: layoutsNames[item],\n        }) || item,\n    }));\n\n  return layoutOptions?.length > 1 ? (\n    <FormFieldWrapper\n      id=\"display-select\"\n      title={intl.formatMessage(messages.Viewmode)}\n      {...props}\n    >\n      <Select\n        name=\"display-select\"\n        className=\"react-select-container\"\n        classNamePrefix=\"react-select\"\n        options={layoutOptions}\n        styles={customSelectStyles}\n        theme={selectTheme}\n        components={{ DropdownIndicator, Option }}\n        onChange={setLayout}\n        defaultValue={selectedOption}\n        isSearchable={false}\n      />\n    </FormFieldWrapper>\n  ) : null;\n};\n\nDisplaySelect.propTypes = {\n  pathname: PropTypes.string.isRequired,\n};\n\nexport default compose(injectLazyLibs('reactSelect'))(DisplaySelect);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Viewmode","defaultMessage":"View"}]}},"sourceType":"module","externalDependencies":[]}