{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto-slate/src/blocks/Text/index.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport React from 'react';\nimport TextBlockView from './TextBlockView';\nimport TextBlockEdit from './TextBlockEdit';\nimport TextBlockSchema from './TextBlockSchema';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { goDown, goUp, backspaceInList, indentListItems, joinWithNextBlock, joinWithPreviousBlock, softBreak, moveListItemDown, moveListItemUp, traverseBlocks, unwrapEmptyString, slashMenu, cancelEsc } from './keyboard';\nimport { withDeleteSelectionOnEnter } from '@plone/volto-slate/editor/extensions';\nimport { breakList, breakListInWidget, withDeserializers, withLists, withSplitBlocksOnBreak, withIsSelected, normalizeExternalData } from './extensions';\nimport { extractImages } from '@plone/volto-slate/editor/plugins/Image/deconstruct';\nimport { extractTables } from '@plone/volto-slate/blocks/Table/deconstruct';\nimport textSVG from '@plone/volto/icons/subtext.svg';\nexport { TextBlockView, TextBlockEdit, TextBlockSchema };\nexport default function applyConfig(config) {\n  config.settings.slate = _objectSpread({\n    // TODO: should we inverse order? First here gets executed last\n    textblockExtensions: [withLists, withSplitBlocksOnBreak,\n    // TODO: do we still need this one?\n    withDeleteSelectionOnEnter, withDeserializers, withIsSelected, breakList, normalizeExternalData],\n    slateWidgetExtensions: [breakListInWidget],\n    // Pluggable handlers for the onKeyDown event of <Editable />\n    // Order matters here. A handler can return `true` to stop executing any\n    // following handler\n    textblockKeyboardHandlers: {\n      Backspace: [unwrapEmptyString, backspaceInList,\n      // Backspace in list item lifts node and breaks Volto blocks\n      joinWithPreviousBlock // Backspace at beginning of block joins with previous block\n      ],\n      Delete: [unwrapEmptyString, joinWithNextBlock // Delete at end of block joins with next block\n      ],\n      Enter: [slashMenu, unwrapEmptyString, softBreak // Handles shift+Enter as a newline (<br/>)\n      ],\n      ArrowUp: [slashMenu, moveListItemUp,\n      // Move up a list with with Ctrl+up\n      goUp // Select previous block\n      ],\n      ArrowDown: [slashMenu, moveListItemDown,\n      // Move down a list item with Ctrl+down\n      goDown // Select next block\n      ],\n      Tab: [indentListItems,\n      // <tab> and <c-tab> behaviour for list items\n      traverseBlocks],\n      Escape: [cancelEsc]\n    },\n    textblockDetachedKeyboardHandlers: {\n      Enter: [softBreak // Handles shift+Enter as a newline (<br/>)\n      ]\n    },\n    // Used by deconstructToVoltoBlocks to transform tags such as <img> to a Volto image block\n    // These emiters receive (editor, pathRef), emit [blockid, blockoptions] and\n    // are allowed to change the editor contents (for the given path)\n    voltoBlockEmiters: [...(config.settings.slate.voltoBlockEmiters || []), extractImages, extractTables],\n    // These elements will get an id, to make them targets in TOC\n    topLevelTargetElements: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']\n  }, config.settings.slate);\n  const slateBlockConfig = {\n    id: 'slate',\n    title: 'Text',\n    icon: textSVG,\n    group: 'text',\n    view: TextBlockView,\n    edit: TextBlockEdit,\n    schema: TextBlockSchema,\n    restricted: false,\n    mostUsed: false,\n    blockHasOwnFocusManagement: true,\n    sidebarTab: 0,\n    security: {\n      addPermission: [],\n      view: []\n    },\n    blockHasValue: data => {\n      var _data$plaintext;\n      // TODO: this should be handled better\n      return data && !!((_data$plaintext = data.plaintext) !== null && _data$plaintext !== void 0 && _data$plaintext.trim());\n    },\n    tocEntry: (block = {}) => {\n      var _value$;\n      const {\n        value,\n        override_toc,\n        entry_text,\n        level,\n        plaintext\n      } = block;\n      const type = value === null || value === void 0 ? void 0 : (_value$ = value[0]) === null || _value$ === void 0 ? void 0 : _value$.type;\n      return override_toc && level ? [parseInt(level.slice(1)), entry_text] : config.settings.slate.topLevelTargetElements.includes(type) ? [parseInt(type.slice(1)), plaintext] : null;\n    }\n  };\n  config.blocks.blocksConfig.slate = slateBlockConfig;\n  config.blocks.blocksConfig.detachedSlate = _objectSpread(_objectSpread({}, config.blocks.blocksConfig.slate), {}, {\n    id: 'detachedSlate',\n    title: 'Detached Slate',\n    edit: props => __jsx(TextBlockEdit, _extends({}, props, {\n      detached: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 22\n      }\n    })),\n    restricted: true\n  });\n  if (config.blocks.blocksConfig.gridBlock) {\n    // This is required in order to initialize the inner blocksConfig\n    // for the grid block, since the slate block lives in an add-on\n    // it should be responsible to fill itself into the grid configuration\n    // The cloneDeep is mandatory in order to not mess with pass by reference problems\n    config.blocks.blocksConfig.gridBlock.blocksConfig.slate = cloneDeep(slateBlockConfig);\n  }\n  return config;\n}","map":{"version":3,"names":["React","TextBlockView","TextBlockEdit","TextBlockSchema","cloneDeep","goDown","goUp","backspaceInList","indentListItems","joinWithNextBlock","joinWithPreviousBlock","softBreak","moveListItemDown","moveListItemUp","traverseBlocks","unwrapEmptyString","slashMenu","cancelEsc","withDeleteSelectionOnEnter","breakList","breakListInWidget","withDeserializers","withLists","withSplitBlocksOnBreak","withIsSelected","normalizeExternalData","extractImages","extractTables","textSVG","applyConfig","config","settings","slate","_objectSpread","textblockExtensions","slateWidgetExtensions","textblockKeyboardHandlers","Backspace","Delete","Enter","ArrowUp","ArrowDown","Tab","Escape","textblockDetachedKeyboardHandlers","voltoBlockEmiters","topLevelTargetElements","slateBlockConfig","id","title","icon","group","view","edit","schema","restricted","mostUsed","blockHasOwnFocusManagement","sidebarTab","security","addPermission","blockHasValue","data","_data$plaintext","plaintext","trim","tocEntry","block","_value$","value","override_toc","entry_text","level","type","parseInt","slice","includes","blocks","blocksConfig","detachedSlate","props","__jsx","_extends","detached","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","gridBlock"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto-slate/src/blocks/Text/index.jsx"],"sourcesContent":["import React from 'react';\nimport TextBlockView from './TextBlockView';\nimport TextBlockEdit from './TextBlockEdit';\nimport TextBlockSchema from './TextBlockSchema';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport {\n  goDown,\n  goUp,\n  backspaceInList,\n  indentListItems,\n  joinWithNextBlock,\n  joinWithPreviousBlock,\n  softBreak,\n  moveListItemDown,\n  moveListItemUp,\n  traverseBlocks,\n  unwrapEmptyString,\n  slashMenu,\n  cancelEsc,\n} from './keyboard';\nimport { withDeleteSelectionOnEnter } from '@plone/volto-slate/editor/extensions';\nimport {\n  breakList,\n  breakListInWidget,\n  withDeserializers,\n  withLists,\n  withSplitBlocksOnBreak,\n  withIsSelected,\n  normalizeExternalData,\n} from './extensions';\nimport { extractImages } from '@plone/volto-slate/editor/plugins/Image/deconstruct';\nimport { extractTables } from '@plone/volto-slate/blocks/Table/deconstruct';\n\nimport textSVG from '@plone/volto/icons/subtext.svg';\n\nexport { TextBlockView, TextBlockEdit, TextBlockSchema };\n\nexport default function applyConfig(config) {\n  config.settings.slate = {\n    // TODO: should we inverse order? First here gets executed last\n    textblockExtensions: [\n      withLists,\n      withSplitBlocksOnBreak, // TODO: do we still need this one?\n      withDeleteSelectionOnEnter,\n      withDeserializers,\n      withIsSelected,\n      breakList,\n      normalizeExternalData,\n    ],\n    slateWidgetExtensions: [breakListInWidget],\n\n    // Pluggable handlers for the onKeyDown event of <Editable />\n    // Order matters here. A handler can return `true` to stop executing any\n    // following handler\n    textblockKeyboardHandlers: {\n      Backspace: [\n        unwrapEmptyString,\n        backspaceInList, // Backspace in list item lifts node and breaks Volto blocks\n        joinWithPreviousBlock, // Backspace at beginning of block joins with previous block\n      ],\n      Delete: [\n        unwrapEmptyString,\n        joinWithNextBlock, // Delete at end of block joins with next block\n      ],\n      Enter: [\n        slashMenu,\n        unwrapEmptyString,\n        softBreak, // Handles shift+Enter as a newline (<br/>)\n      ],\n      ArrowUp: [\n        slashMenu,\n        moveListItemUp, // Move up a list with with Ctrl+up\n        goUp, // Select previous block\n      ],\n      ArrowDown: [\n        slashMenu,\n        moveListItemDown, // Move down a list item with Ctrl+down\n        goDown, // Select next block\n      ],\n      Tab: [\n        indentListItems, // <tab> and <c-tab> behaviour for list items\n        traverseBlocks,\n      ],\n      Escape: [cancelEsc],\n    },\n    textblockDetachedKeyboardHandlers: {\n      Enter: [\n        softBreak, // Handles shift+Enter as a newline (<br/>)\n      ],\n    },\n    // Used by deconstructToVoltoBlocks to transform tags such as <img> to a Volto image block\n    // These emiters receive (editor, pathRef), emit [blockid, blockoptions] and\n    // are allowed to change the editor contents (for the given path)\n    voltoBlockEmiters: [\n      ...(config.settings.slate.voltoBlockEmiters || []),\n      extractImages,\n      extractTables,\n    ],\n\n    // These elements will get an id, to make them targets in TOC\n    topLevelTargetElements: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\n    ...config.settings.slate, // TODO: is this correct for volto-slate addons?\n  };\n\n  const slateBlockConfig = {\n    id: 'slate',\n    title: 'Text',\n    icon: textSVG,\n    group: 'text',\n    view: TextBlockView,\n    edit: TextBlockEdit,\n    schema: TextBlockSchema,\n    restricted: false,\n    mostUsed: false,\n    blockHasOwnFocusManagement: true,\n    sidebarTab: 0,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n    blockHasValue: (data) => {\n      // TODO: this should be handled better\n      return data && !!data.plaintext?.trim();\n    },\n    tocEntry: (block = {}) => {\n      const { value, override_toc, entry_text, level, plaintext } = block;\n      const type = value?.[0]?.type;\n      return override_toc && level\n        ? [parseInt(level.slice(1)), entry_text]\n        : config.settings.slate.topLevelTargetElements.includes(type)\n          ? [parseInt(type.slice(1)), plaintext]\n          : null;\n    },\n  };\n\n  config.blocks.blocksConfig.slate = slateBlockConfig;\n  config.blocks.blocksConfig.detachedSlate = {\n    ...config.blocks.blocksConfig.slate,\n    id: 'detachedSlate',\n    title: 'Detached Slate',\n    edit: (props) => <TextBlockEdit {...props} detached />,\n    restricted: true,\n  };\n\n  if (config.blocks.blocksConfig.gridBlock) {\n    // This is required in order to initialize the inner blocksConfig\n    // for the grid block, since the slate block lives in an add-on\n    // it should be responsible to fill itself into the grid configuration\n    // The cloneDeep is mandatory in order to not mess with pass by reference problems\n    config.blocks.blocksConfig.gridBlock.blocksConfig.slate =\n      cloneDeep(slateBlockConfig);\n  }\n\n  return config;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}