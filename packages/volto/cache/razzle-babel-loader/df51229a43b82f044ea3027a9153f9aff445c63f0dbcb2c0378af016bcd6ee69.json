{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/ContactForm/ContactForm.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useCallback, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Container, Message, Icon } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { emailNotification } from '@plone/volto/actions/emailNotification/emailNotification';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport { Form } from '@plone/volto/components/manage/Form';\nimport { getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport { usePrevious } from '@plone/volto/helpers/Utils/usePrevious';\nimport { useClient } from '@plone/volto/hooks/client/useClient';\nconst messages = defineMessages({\n  send: {\n    \"id\": \"Send\",\n    \"defaultMessage\": \"Send\"\n  },\n  contactForm: {\n    \"id\": \"Contact form\",\n    \"defaultMessage\": \"Contact form\"\n  },\n  default: {\n    \"id\": \"Default\",\n    \"defaultMessage\": \"Default\"\n  },\n  name: {\n    \"id\": \"Name\",\n    \"defaultMessage\": \"Name\"\n  },\n  from: {\n    \"id\": \"From\",\n    \"defaultMessage\": \"From\"\n  },\n  subject: {\n    \"id\": \"Subject\",\n    \"defaultMessage\": \"Subject\"\n  },\n  message: {\n    \"id\": \"Message\",\n    \"defaultMessage\": \"Message\"\n  },\n  error: {\n    \"id\": \"Error\",\n    \"defaultMessage\": \"Error\"\n  },\n  messageSent: {\n    \"id\": \"Email sent\",\n    \"defaultMessage\": \"Email sent\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  success: {\n    \"id\": \"Success\",\n    \"defaultMessage\": \"Success\"\n  }\n});\nconst useEmailNotification = () => {\n  _s();\n  const loading = useSelector(state => state.emailNotification.loading);\n  const loaded = useSelector(state => state.emailNotification.loaded);\n  const error = useSelector(state => state.emailNotification.error);\n  return {\n    loading,\n    loaded,\n    error\n  };\n};\n_s(useEmailNotification, \"4GeQKeGBbOQfU85yMYaNG/ikXcI=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\nconst ContactFormComponent = () => {\n  _s2();\n  const history = useHistory();\n  const {\n    pathname\n  } = useLocation();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const isClient = useClient();\n  const {\n    loaded,\n    loading,\n    error\n  } = useEmailNotification();\n  const prevloading = usePrevious(loading);\n  useEffect(() => {\n    if (prevloading && loaded) {\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: intl.formatMessage(messages.success),\n        content: intl.formatMessage(messages.messageSent),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, [intl, loaded, prevloading]);\n  const onSubmit = data => {\n    const {\n      from,\n      message,\n      name,\n      subject\n    } = data;\n    dispatch(emailNotification(from, message, name, subject));\n  };\n  const onCancel = useCallback(() => {\n    history.goBack();\n  }, [history]);\n  return __jsx(\"div\", {\n    id: \"contact-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    id: \"view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, __jsx(Helmet, {\n    title: intl.formatMessage(messages.contactForm),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), error && __jsx(Message, {\n    icon: \"warning\",\n    negative: true,\n    attached: true,\n    header: intl.formatMessage(messages.error),\n    content: error.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }), __jsx(Form, {\n    onSubmit: onSubmit,\n    onCancel: onCancel,\n    formData: {\n      blocksLayoutFieldname: {}\n    },\n    submitLabel: intl.formatMessage(messages.send),\n    resetAfterSubmit: true,\n    title: intl.formatMessage(messages.contactForm),\n    loading: loading,\n    schema: {\n      fieldsets: [{\n        fields: ['name', 'from', 'subject', 'message'],\n        id: 'default',\n        title: intl.formatMessage(messages.default)\n      }],\n      properties: {\n        name: {\n          title: intl.formatMessage(messages.name),\n          type: 'string'\n        },\n        from: {\n          title: intl.formatMessage(messages.from),\n          type: 'email'\n        },\n        subject: {\n          title: intl.formatMessage(messages.subject),\n          type: 'string'\n        },\n        message: {\n          title: intl.formatMessage(messages.message),\n          type: 'string',\n          widget: 'textarea'\n        }\n      },\n      required: ['from', 'message']\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), isClient && /*#__PURE__*/createPortal(__jsx(Toolbar, {\n    pathname: pathname,\n    hideDefaultViewButtons: true,\n    inner: __jsx(Link, {\n      to: `${getBaseUrl(pathname)}`,\n      className: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      name: \"arrow left\",\n      size: \"big\",\n      color: \"blue\",\n      title: intl.formatMessage(messages.back),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }), document.getElementById('toolbar'))));\n};\n_s2(ContactFormComponent, \"vrXWwddwkTBUpaCf811v8d7o080=\", false, function () {\n  return [useHistory, useLocation, useDispatch, useIntl, useClient, useEmailNotification, usePrevious];\n});\n_c = ContactFormComponent;\nexport default ContactFormComponent;\nvar _c;\n$RefreshReg$(_c, \"ContactFormComponent\");","map":{"version":3,"names":["useCallback","useEffect","createPortal","Container","Message","Icon","defineMessages","useIntl","Link","useHistory","useLocation","toast","emailNotification","useDispatch","useSelector","Toolbar","Toast","Form","getBaseUrl","Helmet","usePrevious","useClient","messages","send","contactForm","default","name","from","subject","message","error","messageSent","back","success","useEmailNotification","_s","loading","state","loaded","ContactFormComponent","_s2","history","pathname","dispatch","intl","isClient","prevloading","__jsx","title","formatMessage","content","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","data","onCancel","goBack","id","icon","negative","attached","header","formData","blocksLayoutFieldname","submitLabel","resetAfterSubmit","schema","fieldsets","fields","properties","type","widget","required","hideDefaultViewButtons","inner","to","className","size","color","document","getElementById","_c","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/ContactForm/ContactForm.jsx"],"sourcesContent":["import { useCallback, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Container, Message, Icon } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { emailNotification } from '@plone/volto/actions/emailNotification/emailNotification';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport { Form } from '@plone/volto/components/manage/Form';\nimport { getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport { usePrevious } from '@plone/volto/helpers/Utils/usePrevious';\nimport { useClient } from '@plone/volto/hooks/client/useClient';\n\nconst messages = defineMessages({\n  send: {\n    id: 'Send',\n    defaultMessage: 'Send',\n  },\n  contactForm: {\n    id: 'Contact form',\n    defaultMessage: 'Contact form',\n  },\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  name: {\n    id: 'Name',\n    defaultMessage: 'Name',\n  },\n  from: {\n    id: 'From',\n    defaultMessage: 'From',\n  },\n  subject: {\n    id: 'Subject',\n    defaultMessage: 'Subject',\n  },\n  message: {\n    id: 'Message',\n    defaultMessage: 'Message',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  messageSent: {\n    id: 'Email sent',\n    defaultMessage: 'Email sent',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n});\n\nconst useEmailNotification = () => {\n  const loading = useSelector((state) => state.emailNotification.loading);\n  const loaded = useSelector((state) => state.emailNotification.loaded);\n  const error = useSelector((state) => state.emailNotification.error);\n\n  return { loading, loaded, error };\n};\n\nconst ContactFormComponent = () => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const isClient = useClient();\n\n  const { loaded, loading, error } = useEmailNotification();\n\n  const prevloading = usePrevious(loading);\n\n  useEffect(() => {\n    if (prevloading && loaded) {\n      toast.success(\n        <Toast\n          success\n          title={intl.formatMessage(messages.success)}\n          content={intl.formatMessage(messages.messageSent)}\n        />,\n      );\n    }\n  }, [intl, loaded, prevloading]);\n\n  const onSubmit = (data) => {\n    const { from, message, name, subject } = data;\n    dispatch(emailNotification(from, message, name, subject));\n  };\n\n  const onCancel = useCallback(() => {\n    history.goBack();\n  }, [history]);\n\n  return (\n    <div id=\"contact-form\">\n      <Container id=\"view\">\n        <Helmet title={intl.formatMessage(messages.contactForm)} />\n        {error && (\n          <Message\n            icon=\"warning\"\n            negative\n            attached\n            header={intl.formatMessage(messages.error)}\n            content={error.message}\n          />\n        )}\n        <Form\n          onSubmit={onSubmit}\n          onCancel={onCancel}\n          formData={{ blocksLayoutFieldname: {} }}\n          submitLabel={intl.formatMessage(messages.send)}\n          resetAfterSubmit\n          title={intl.formatMessage(messages.contactForm)}\n          loading={loading}\n          schema={{\n            fieldsets: [\n              {\n                fields: ['name', 'from', 'subject', 'message'],\n                id: 'default',\n                title: intl.formatMessage(messages.default),\n              },\n            ],\n            properties: {\n              name: {\n                title: intl.formatMessage(messages.name),\n                type: 'string',\n              },\n              from: {\n                title: intl.formatMessage(messages.from),\n                type: 'email',\n              },\n              subject: {\n                title: intl.formatMessage(messages.subject),\n                type: 'string',\n              },\n              message: {\n                title: intl.formatMessage(messages.message),\n                type: 'string',\n                widget: 'textarea',\n              },\n            },\n            required: ['from', 'message'],\n          }}\n        />\n        {isClient &&\n          createPortal(\n            <Toolbar\n              pathname={pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link to={`${getBaseUrl(pathname)}`} className=\"item\">\n                  <Icon\n                    name=\"arrow left\"\n                    size=\"big\"\n                    color=\"blue\"\n                    title={intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />,\n            document.getElementById('toolbar'),\n          )}\n      </Container>\n    </div>\n  );\n};\n\nexport default ContactFormComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Send","defaultMessage":"Send"},{"id":"Contact form","defaultMessage":"Contact form"},{"id":"Default","defaultMessage":"Default"},{"id":"Name","defaultMessage":"Name"},{"id":"From","defaultMessage":"From"},{"id":"Subject","defaultMessage":"Subject"},{"id":"Message","defaultMessage":"Message"},{"id":"Error","defaultMessage":"Error"},{"id":"Email sent","defaultMessage":"Email sent"},{"id":"Back","defaultMessage":"Back"},{"id":"Success","defaultMessage":"Success"}]}},"sourceType":"module","externalDependencies":[]}