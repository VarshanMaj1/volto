{"ast":null,"code":"import _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Sharing/Sharing.jsx\";\nvar __jsx = React.createElement;\n/**\n * Sharing container.\n * @module components/manage/Sharing/Sharing\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Plug, Pluggable } from '@plone/volto/components/manage/Pluggable';\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport find from 'lodash/find';\nimport isEqual from 'lodash/isEqual';\nimport map from 'lodash/map';\nimport { createPortal } from 'react-dom';\nimport { Button, Checkbox, Container as SemanticContainer, Form, Icon as IconOld, Input, Segment, Table } from 'semantic-ui-react';\nimport jwtDecode from 'jwt-decode';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { updateSharing, getSharing } from '@plone/volto/actions/sharing/sharing';\nimport { getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport { toast } from 'react-toastify';\nimport config from '@plone/volto/registry';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\nconst messages = defineMessages({\n  searchForUserOrGroup: {\n    \"id\": \"Search for user or group\",\n    \"defaultMessage\": \"Search for user or group\"\n  },\n  search: {\n    \"id\": \"Search\",\n    \"defaultMessage\": \"Search\"\n  },\n  inherit: {\n    \"id\": \"Inherit permissions from higher levels\",\n    \"defaultMessage\": \"Inherit permissions from higher levels\"\n  },\n  save: {\n    \"id\": \"Save\",\n    \"defaultMessage\": \"Save\"\n  },\n  cancel: {\n    \"id\": \"Cancel\",\n    \"defaultMessage\": \"Cancel\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  sharing: {\n    \"id\": \"Sharing\",\n    \"defaultMessage\": \"Sharing\"\n  },\n  user: {\n    \"id\": \"User\",\n    \"defaultMessage\": \"User\"\n  },\n  group: {\n    \"id\": \"Group\",\n    \"defaultMessage\": \"Group\"\n  },\n  globalRole: {\n    \"id\": \"Global role\",\n    \"defaultMessage\": \"Global role\"\n  },\n  inheritedValue: {\n    \"id\": \"Inherited value\",\n    \"defaultMessage\": \"Inherited value\"\n  },\n  permissionsUpdated: {\n    \"id\": \"Permissions updated\",\n    \"defaultMessage\": \"Permissions updated\"\n  },\n  permissionsUpdatedSuccessfully: {\n    \"id\": \"Permissions have been updated successfully\",\n    \"defaultMessage\": \"Permissions have been updated successfully\"\n  },\n  assignNewRoles: {\n    \"id\": \"Assign the {role} role to {entry}\",\n    \"defaultMessage\": \"Assign the {role} role to {entry}\"\n  }\n});\n\n/**\n * SharingComponent class.\n * @class SharingComponent\n * @extends Component\n */\nclass SharingComponent extends Component {\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    this.onCancel = this.onCancel.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onChangeSearch = this.onChangeSearch.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onToggleInherit = this.onToggleInherit.bind(this);\n    this.state = {\n      search: '',\n      isLoading: false,\n      inherit: props.inherit,\n      entries: props.entries,\n      isClient: false\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getSharing(getBaseUrl(this.props.pathname), this.state.search);\n    this.setState({\n      isClient: true\n    });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      this.props.getSharing(getBaseUrl(this.props.pathname), this.state.search);\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.permissionsUpdated),\n        content: this.props.intl.formatMessage(messages.permissionsUpdatedSuccessfully),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }\n      }));\n    }\n    this.setState({\n      inherit: this.props.inherit === null ? nextProps.inherit : this.state.inherit,\n      entries: map(nextProps.entries, entry => {\n        const values = find(this.state.entries, {\n          id: entry.id\n        });\n        return _objectSpread(_objectSpread({}, entry), {}, {\n          roles: values ? values.roles : entry.roles\n        });\n      })\n    });\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onSubmit(event) {\n    const data = {\n      entries: []\n    };\n    event.preventDefault();\n    if (this.props.inherit !== this.state.inherit) {\n      data.inherit = this.state.inherit;\n    }\n    for (let i = 0; i < this.props.entries.length; i += 1) {\n      if (!isEqual(this.props.entries[i].roles, this.state.entries[i].roles)) {\n        data.entries.push({\n          id: this.state.entries[i].id,\n          type: this.state.entries[i].type,\n          roles: this.state.entries[i].roles\n        });\n      }\n    }\n    this.props.updateSharing(getBaseUrl(this.props.pathname), data);\n  }\n\n  /**\n   * Search handler\n   * @method onSearch\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onSearch(event) {\n    event.preventDefault();\n    this.setState({\n      isLoading: true\n    });\n    this.props.getSharing(getBaseUrl(this.props.pathname), this.state.search).then(() => {\n      this.setState({\n        isLoading: false\n      });\n    }).catch(error => {\n      this.setState({\n        isLoading: false\n      });\n      // eslint-disable-next-line no-console\n      console.error('Error searching users or groups', error);\n    });\n  }\n\n  /**\n   * On change search handler\n   * @method onChangeSearch\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onChangeSearch(event) {\n    this.setState({\n      search: event.target.value\n    });\n  }\n\n  /**\n   * On toggle inherit handler\n   * @method onToggleInherit\n   * @returns {undefined}\n   */\n  onToggleInherit() {\n    this.setState(state => ({\n      inherit: !state.inherit\n    }));\n  }\n\n  /**\n   * On change handler\n   * @method onChange\n   * @param {object} event Event object\n   * @param {string} value Entry value\n   * @returns {undefined}\n   */\n  onChange(event, {\n    value\n  }) {\n    const [principal, role] = value.split(':');\n    this.setState({\n      entries: map(this.state.entries, entry => _objectSpread(_objectSpread({}, entry), {}, {\n        roles: entry.id === principal ? _objectSpread(_objectSpread({}, entry.roles), {}, {\n          [role]: !entry.roles[role]\n        }) : entry.roles\n      }))\n    });\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    var _this$props$available, _this$state$entries;\n    const Container = config.getComponent({\n      name: 'Container'\n    }).component || SemanticContainer;\n    return __jsx(Container, {\n      id: \"page-sharing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.sharing),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }\n    }), __jsx(Segment.Group, {\n      raised: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }\n    }, __jsx(Pluggable, {\n      name: \"sharing-component\",\n      params: {\n        isLoading: this.state.isLoading\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }\n    }), __jsx(Plug, {\n      pluggable: \"sharing-component\",\n      id: \"sharing-component-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }\n    }, __jsx(Segment, {\n      className: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Sharing for {title}\",\n      defaultMessage: \"Sharing for {title}\",\n      values: {\n        title: __jsx(\"q\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 34\n          }\n        }, this.props.title)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 15\n      }\n    }))), __jsx(Plug, {\n      pluggable: \"sharing-component\",\n      id: \"sharing-component-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }\n    }, __jsx(Segment, {\n      secondary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"You can control who can view and edit your item using the list below.\",\n      defaultMessage: \"You can control who can view and edit your item using the list below.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 15\n      }\n    }))), __jsx(Plug, {\n      pluggable: \"sharing-component\",\n      id: \"sharing-component-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }\n    }, ({\n      isLoading\n    }) => {\n      return __jsx(Segment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 17\n        }\n      }, __jsx(Form, {\n        onSubmit: this.onSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 19\n        }\n      }, __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }\n      }, __jsx(Input, {\n        name: \"SearchableText\",\n        action: {\n          icon: 'search',\n          loading: isLoading,\n          disabled: isLoading,\n          'aria-label': this.props.intl.formatMessage(messages.search)\n        },\n        placeholder: this.props.intl.formatMessage(messages.searchForUserOrGroup),\n        onChange: this.onChangeSearch,\n        id: \"sharing-component-search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 23\n        }\n      }))));\n    }), __jsx(Plug, {\n      pluggable: \"sharing-component\",\n      id: \"sharing-component-form\",\n      dependencies: [this.state.entries, this.props.available_roles],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }\n    }, __jsx(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 13\n      }\n    }, __jsx(Table, {\n      celled: true,\n      padded: true,\n      striped: true,\n      attached: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 15\n      }\n    }, __jsx(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 19\n      }\n    }, __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Name\",\n      defaultMessage: \"Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 23\n      }\n    })), (_this$props$available = this.props.available_roles) === null || _this$props$available === void 0 ? void 0 : _this$props$available.map(role => __jsx(Table.HeaderCell, {\n      key: role.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 23\n      }\n    }, role.title)))), __jsx(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }\n    }, (_this$state$entries = this.state.entries) === null || _this$state$entries === void 0 ? void 0 : _this$state$entries.map(entry => {\n      var _this$props$available2;\n      return __jsx(Table.Row, {\n        key: entry.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 21\n        }\n      }, __jsx(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 23\n        }\n      }, __jsx(IconOld, {\n        name: entry.type === 'user' ? 'user' : 'users',\n        title: entry.type === 'user' ? this.props.intl.formatMessage(messages.user) : this.props.intl.formatMessage(messages.group),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 25\n        }\n      }), ' ', entry.title, entry.login && ` (${entry.login})`), (_this$props$available2 = this.props.available_roles) === null || _this$props$available2 === void 0 ? void 0 : _this$props$available2.map(role => __jsx(Table.Cell, {\n        key: role.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 25\n        }\n      }, entry.roles[role.id] === 'global' && __jsx(IconOld, {\n        name: \"check circle outline\",\n        title: this.props.intl.formatMessage(messages.globalRole),\n        color: \"blue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 29\n        }\n      }), entry.roles[role.id] === 'acquired' && __jsx(IconOld, {\n        name: \"check circle outline\",\n        color: \"green\",\n        title: this.props.intl.formatMessage(messages.inheritedValue),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 29\n        }\n      }), typeof entry.roles[role.id] === 'boolean' && __jsx(Checkbox, {\n        name: this.props.intl.formatMessage(messages.assignNewRoles, {\n          entry: entry.title,\n          role: role.id\n        }),\n        \"aria-label\": this.props.intl.formatMessage(messages.assignNewRoles, {\n          entry: entry.title,\n          role: role.id\n        }),\n        onChange: this.onChange,\n        value: `${entry.id}:${role.id}`,\n        checked: entry.roles[role.id],\n        disabled: entry.login === this.props.login,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 29\n        }\n      }))));\n    }))), __jsx(Segment, {\n      attached: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 17\n      }\n    }, __jsx(Checkbox, {\n      id: \"inherit-permissions-checkbox\",\n      name: \"inherit-permissions-checkbox\",\n      defaultChecked: this.state.inherit,\n      onChange: this.onToggleInherit,\n      label: __jsx(\"label\", {\n        htmlFor: \"inherit-permissions-checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 23\n        }\n      }, this.props.intl.formatMessage(messages.inherit)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 19\n      }\n    })), __jsx(\"p\", {\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"By default, permissions from the container of this item are inherited. If you disable this, only the explicitly defined sharing permissions will be valid. In the overview, the symbol {inherited} indicates an inherited value. Similarly, the symbol {global} indicates a global role, which is managed by the site administrator.\",\n      defaultMessage: \"By default, permissions from the container of this item are inherited. If you disable this, only the explicitly defined sharing permissions will be valid. In the overview, the symbol {inherited} indicates an inherited value. Similarly, the symbol {global} indicates a global role, which is managed by the site administrator.\",\n      values: {\n        inherited: __jsx(IconOld, {\n          name: \"check circle outline\",\n          color: \"green\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 25\n          }\n        }),\n        global: __jsx(IconOld, {\n          name: \"check circle outline\",\n          color: \"blue\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 25\n          }\n        })\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 19\n      }\n    }))), __jsx(Segment, {\n      className: \"actions\",\n      attached: true,\n      clearing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      basic: true,\n      primary: true,\n      floated: \"right\",\n      type: \"submit\",\n      \"aria-label\": this.props.intl.formatMessage(messages.save),\n      title: this.props.intl.formatMessage(messages.save),\n      loading: this.props.updateRequest.loading,\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      className: \"circled\",\n      name: aheadSVG,\n      size: \"30px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 19\n      }\n    })), __jsx(Button, {\n      basic: true,\n      secondary: true,\n      \"aria-label\": this.props.intl.formatMessage(messages.cancel),\n      title: this.props.intl.formatMessage(messages.cancel),\n      floated: \"right\",\n      onClick: this.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      className: \"circled\",\n      name: clearSVG,\n      size: \"30px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 19\n      }\n    })))))), this.state.isClient && /*#__PURE__*/createPortal(__jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(Link, {\n        to: `${getBaseUrl(this.props.pathname)}`,\n        className: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 17\n        }\n      }, __jsx(Icon, {\n        name: backSVG,\n        className: \"contents circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 13\n      }\n    }), document.getElementById('toolbar')));\n  }\n}\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_defineProperty(SharingComponent, \"propTypes\", {\n  updateSharing: PropTypes.func.isRequired,\n  getSharing: PropTypes.func.isRequired,\n  updateRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  pathname: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    login: PropTypes.string,\n    roles: PropTypes.object,\n    title: PropTypes.string,\n    type: PropTypes.string\n  })).isRequired,\n  available_roles: PropTypes.arrayOf(PropTypes.object).isRequired,\n  inherit: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  login: PropTypes.string\n});\n/**\n * Default properties\n * @property {Object} defaultProps Default properties.\n * @static\n */\n_defineProperty(SharingComponent, \"defaultProps\", {\n  inherit: null,\n  login: ''\n});\nexport default compose(withRouter, injectIntl, connect((state, props) => ({\n  entries: state.sharing.data.entries,\n  inherit: state.sharing.data.inherit,\n  available_roles: state.sharing.data.available_roles,\n  updateRequest: state.sharing.update,\n  pathname: props.location.pathname,\n  title: state.content.data.title,\n  login: state.userSession.token ? jwtDecode(state.userSession.token).sub : ''\n}), {\n  updateSharing,\n  getSharing\n}))(SharingComponent);","map":{"version":3,"names":["React","Component","PropTypes","Plug","Pluggable","Helmet","connect","compose","Link","withRouter","find","isEqual","map","createPortal","Button","Checkbox","Container","SemanticContainer","Form","Icon","IconOld","Input","Segment","Table","jwtDecode","FormattedMessage","defineMessages","injectIntl","updateSharing","getSharing","getBaseUrl","Toolbar","Toast","toast","config","aheadSVG","clearSVG","backSVG","messages","searchForUserOrGroup","search","inherit","save","cancel","back","sharing","user","group","globalRole","inheritedValue","permissionsUpdated","permissionsUpdatedSuccessfully","assignNewRoles","SharingComponent","constructor","props","onCancel","bind","onChange","onChangeSearch","onSearch","onSubmit","onToggleInherit","state","isLoading","entries","isClient","componentDidMount","pathname","setState","UNSAFE_componentWillReceiveProps","nextProps","updateRequest","loading","loaded","success","__jsx","title","intl","formatMessage","content","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","entry","values","id","_objectSpread","roles","event","data","preventDefault","i","length","push","type","then","catch","error","console","target","value","principal","role","split","history","render","_this$props$available","_this$state$entries","getComponent","name","component","Group","raised","params","pluggable","className","defaultMessage","secondary","Field","action","icon","disabled","placeholder","dependencies","available_roles","celled","padded","striped","attached","Header","Row","HeaderCell","key","Body","_this$props$available2","Cell","login","color","checked","defaultChecked","label","htmlFor","inherited","global","clearing","basic","primary","floated","onClick","size","hideDefaultViewButtons","inner","to","document","getElementById","_defineProperty","func","isRequired","shape","bool","string","arrayOf","object","update","location","userSession","token","sub"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Sharing/Sharing.jsx"],"sourcesContent":["/**\n * Sharing container.\n * @module components/manage/Sharing/Sharing\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Plug, Pluggable } from '@plone/volto/components/manage/Pluggable';\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport find from 'lodash/find';\nimport isEqual from 'lodash/isEqual';\nimport map from 'lodash/map';\nimport { createPortal } from 'react-dom';\nimport {\n  Button,\n  Checkbox,\n  Container as SemanticContainer,\n  Form,\n  Icon as IconOld,\n  Input,\n  Segment,\n  Table,\n} from 'semantic-ui-react';\nimport jwtDecode from 'jwt-decode';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport {\n  updateSharing,\n  getSharing,\n} from '@plone/volto/actions/sharing/sharing';\nimport { getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport { toast } from 'react-toastify';\nimport config from '@plone/volto/registry';\n\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  searchForUserOrGroup: {\n    id: 'Search for user or group',\n    defaultMessage: 'Search for user or group',\n  },\n  search: {\n    id: 'Search',\n    defaultMessage: 'Search',\n  },\n  inherit: {\n    id: 'Inherit permissions from higher levels',\n    defaultMessage: 'Inherit permissions from higher levels',\n  },\n  save: {\n    id: 'Save',\n    defaultMessage: 'Save',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  sharing: {\n    id: 'Sharing',\n    defaultMessage: 'Sharing',\n  },\n  user: {\n    id: 'User',\n    defaultMessage: 'User',\n  },\n  group: {\n    id: 'Group',\n    defaultMessage: 'Group',\n  },\n  globalRole: {\n    id: 'Global role',\n    defaultMessage: 'Global role',\n  },\n  inheritedValue: {\n    id: 'Inherited value',\n    defaultMessage: 'Inherited value',\n  },\n  permissionsUpdated: {\n    id: 'Permissions updated',\n    defaultMessage: 'Permissions updated',\n  },\n  permissionsUpdatedSuccessfully: {\n    id: 'Permissions have been updated successfully',\n    defaultMessage: 'Permissions have been updated successfully',\n  },\n  assignNewRoles: {\n    id: 'Assign the {role} role to {entry}',\n    defaultMessage: 'Assign the {role} role to {entry}',\n  },\n});\n\n/**\n * SharingComponent class.\n * @class SharingComponent\n * @extends Component\n */\nclass SharingComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateSharing: PropTypes.func.isRequired,\n    getSharing: PropTypes.func.isRequired,\n    updateRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    pathname: PropTypes.string.isRequired,\n    entries: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        login: PropTypes.string,\n        roles: PropTypes.object,\n        title: PropTypes.string,\n        type: PropTypes.string,\n      }),\n    ).isRequired,\n    available_roles: PropTypes.arrayOf(PropTypes.object).isRequired,\n    inherit: PropTypes.bool,\n    title: PropTypes.string.isRequired,\n    login: PropTypes.string,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    inherit: null,\n    login: '',\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    this.onCancel = this.onCancel.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onChangeSearch = this.onChangeSearch.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onToggleInherit = this.onToggleInherit.bind(this);\n    this.state = {\n      search: '',\n      isLoading: false,\n      inherit: props.inherit,\n      entries: props.entries,\n      isClient: false,\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getSharing(getBaseUrl(this.props.pathname), this.state.search);\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      this.props.getSharing(getBaseUrl(this.props.pathname), this.state.search);\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.permissionsUpdated)}\n          content={this.props.intl.formatMessage(\n            messages.permissionsUpdatedSuccessfully,\n          )}\n        />,\n      );\n    }\n    this.setState({\n      inherit:\n        this.props.inherit === null ? nextProps.inherit : this.state.inherit,\n      entries: map(nextProps.entries, (entry) => {\n        const values = find(this.state.entries, { id: entry.id });\n        return {\n          ...entry,\n          roles: values ? values.roles : entry.roles,\n        };\n      }),\n    });\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onSubmit(event) {\n    const data = { entries: [] };\n    event.preventDefault();\n    if (this.props.inherit !== this.state.inherit) {\n      data.inherit = this.state.inherit;\n    }\n    for (let i = 0; i < this.props.entries.length; i += 1) {\n      if (!isEqual(this.props.entries[i].roles, this.state.entries[i].roles)) {\n        data.entries.push({\n          id: this.state.entries[i].id,\n          type: this.state.entries[i].type,\n          roles: this.state.entries[i].roles,\n        });\n      }\n    }\n    this.props.updateSharing(getBaseUrl(this.props.pathname), data);\n  }\n\n  /**\n   * Search handler\n   * @method onSearch\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onSearch(event) {\n    event.preventDefault();\n    this.setState({ isLoading: true });\n    this.props\n      .getSharing(getBaseUrl(this.props.pathname), this.state.search)\n      .then(() => {\n        this.setState({ isLoading: false });\n      })\n      .catch((error) => {\n        this.setState({ isLoading: false });\n        // eslint-disable-next-line no-console\n        console.error('Error searching users or groups', error);\n      });\n  }\n\n  /**\n   * On change search handler\n   * @method onChangeSearch\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onChangeSearch(event) {\n    this.setState({\n      search: event.target.value,\n    });\n  }\n\n  /**\n   * On toggle inherit handler\n   * @method onToggleInherit\n   * @returns {undefined}\n   */\n  onToggleInherit() {\n    this.setState((state) => ({\n      inherit: !state.inherit,\n    }));\n  }\n\n  /**\n   * On change handler\n   * @method onChange\n   * @param {object} event Event object\n   * @param {string} value Entry value\n   * @returns {undefined}\n   */\n  onChange(event, { value }) {\n    const [principal, role] = value.split(':');\n    this.setState({\n      entries: map(this.state.entries, (entry) => ({\n        ...entry,\n        roles:\n          entry.id === principal\n            ? {\n                ...entry.roles,\n                [role]: !entry.roles[role],\n              }\n            : entry.roles,\n      })),\n    });\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const Container =\n      config.getComponent({ name: 'Container' }).component || SemanticContainer;\n\n    return (\n      <Container id=\"page-sharing\">\n        <Helmet title={this.props.intl.formatMessage(messages.sharing)} />\n        <Segment.Group raised>\n          <Pluggable\n            name=\"sharing-component\"\n            params={{ isLoading: this.state.isLoading }}\n          />\n          <Plug pluggable=\"sharing-component\" id=\"sharing-component-title\">\n            <Segment className=\"primary\">\n              <FormattedMessage\n                id=\"Sharing for {title}\"\n                defaultMessage=\"Sharing for {title}\"\n                values={{ title: <q>{this.props.title}</q> }}\n              />\n            </Segment>\n          </Plug>\n          <Plug\n            pluggable=\"sharing-component\"\n            id=\"sharing-component-description\"\n          >\n            <Segment secondary>\n              <FormattedMessage\n                id=\"You can control who can view and edit your item using the list below.\"\n                defaultMessage=\"You can control who can view and edit your item using the list below.\"\n              />\n            </Segment>\n          </Plug>\n          <Plug pluggable=\"sharing-component\" id=\"sharing-component-search\">\n            {({ isLoading }) => {\n              return (\n                <Segment>\n                  <Form onSubmit={this.onSearch}>\n                    <Form.Field>\n                      <Input\n                        name=\"SearchableText\"\n                        action={{\n                          icon: 'search',\n                          loading: isLoading,\n                          disabled: isLoading,\n                          'aria-label': this.props.intl.formatMessage(\n                            messages.search,\n                          ),\n                        }}\n                        placeholder={this.props.intl.formatMessage(\n                          messages.searchForUserOrGroup,\n                        )}\n                        onChange={this.onChangeSearch}\n                        id=\"sharing-component-search\"\n                      />\n                    </Form.Field>\n                  </Form>\n                </Segment>\n              );\n            }}\n          </Plug>\n          <Plug\n            pluggable=\"sharing-component\"\n            id=\"sharing-component-form\"\n            dependencies={[this.state.entries, this.props.available_roles]}\n          >\n            <Form onSubmit={this.onSubmit}>\n              <Table celled padded striped attached>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>\n                      <FormattedMessage id=\"Name\" defaultMessage=\"Name\" />\n                    </Table.HeaderCell>\n                    {this.props.available_roles?.map((role) => (\n                      <Table.HeaderCell key={role.id}>\n                        {role.title}\n                      </Table.HeaderCell>\n                    ))}\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {this.state.entries?.map((entry) => (\n                    <Table.Row key={entry.id}>\n                      <Table.Cell>\n                        <IconOld\n                          name={entry.type === 'user' ? 'user' : 'users'}\n                          title={\n                            entry.type === 'user'\n                              ? this.props.intl.formatMessage(messages.user)\n                              : this.props.intl.formatMessage(messages.group)\n                          }\n                        />{' '}\n                        {entry.title}\n                        {entry.login && ` (${entry.login})`}\n                      </Table.Cell>\n                      {this.props.available_roles?.map((role) => (\n                        <Table.Cell key={role.id}>\n                          {entry.roles[role.id] === 'global' && (\n                            <IconOld\n                              name=\"check circle outline\"\n                              title={this.props.intl.formatMessage(\n                                messages.globalRole,\n                              )}\n                              color=\"blue\"\n                            />\n                          )}\n                          {entry.roles[role.id] === 'acquired' && (\n                            <IconOld\n                              name=\"check circle outline\"\n                              color=\"green\"\n                              title={this.props.intl.formatMessage(\n                                messages.inheritedValue,\n                              )}\n                            />\n                          )}\n                          {typeof entry.roles[role.id] === 'boolean' && (\n                            <Checkbox\n                              name={this.props.intl.formatMessage(\n                                messages.assignNewRoles,\n                                {\n                                  entry: entry.title,\n                                  role: role.id,\n                                },\n                              )}\n                              aria-label={this.props.intl.formatMessage(\n                                messages.assignNewRoles,\n                                {\n                                  entry: entry.title,\n                                  role: role.id,\n                                },\n                              )}\n                              onChange={this.onChange}\n                              value={`${entry.id}:${role.id}`}\n                              checked={entry.roles[role.id]}\n                              disabled={entry.login === this.props.login}\n                            />\n                          )}\n                        </Table.Cell>\n                      ))}\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n              <Segment attached>\n                <Form.Field>\n                  <Checkbox\n                    id=\"inherit-permissions-checkbox\"\n                    name=\"inherit-permissions-checkbox\"\n                    defaultChecked={this.state.inherit}\n                    onChange={this.onToggleInherit}\n                    label={\n                      <label htmlFor=\"inherit-permissions-checkbox\">\n                        {this.props.intl.formatMessage(messages.inherit)}\n                      </label>\n                    }\n                  />\n                </Form.Field>\n                <p className=\"help\">\n                  <FormattedMessage\n                    id=\"By default, permissions from the container of this item are inherited. If you disable this, only the explicitly defined sharing permissions will be valid. In the overview, the symbol {inherited} indicates an inherited value. Similarly, the symbol {global} indicates a global role, which is managed by the site administrator.\"\n                    defaultMessage=\"By default, permissions from the container of this item are inherited. If you disable this, only the explicitly defined sharing permissions will be valid. In the overview, the symbol {inherited} indicates an inherited value. Similarly, the symbol {global} indicates a global role, which is managed by the site administrator.\"\n                    values={{\n                      inherited: (\n                        <IconOld name=\"check circle outline\" color=\"green\" />\n                      ),\n                      global: (\n                        <IconOld name=\"check circle outline\" color=\"blue\" />\n                      ),\n                    }}\n                  />\n                </p>\n              </Segment>\n              <Segment className=\"actions\" attached clearing>\n                <Button\n                  basic\n                  primary\n                  floated=\"right\"\n                  type=\"submit\"\n                  aria-label={this.props.intl.formatMessage(messages.save)}\n                  title={this.props.intl.formatMessage(messages.save)}\n                  loading={this.props.updateRequest.loading}\n                  onClick={this.onSubmit}\n                >\n                  <Icon className=\"circled\" name={aheadSVG} size=\"30px\" />\n                </Button>\n                <Button\n                  basic\n                  secondary\n                  aria-label={this.props.intl.formatMessage(messages.cancel)}\n                  title={this.props.intl.formatMessage(messages.cancel)}\n                  floated=\"right\"\n                  onClick={this.onCancel}\n                >\n                  <Icon className=\"circled\" name={clearSVG} size=\"30px\" />\n                </Button>\n              </Segment>\n            </Form>\n          </Plug>\n        </Segment.Group>\n        {this.state.isClient &&\n          createPortal(\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link\n                  to={`${getBaseUrl(this.props.pathname)}`}\n                  className=\"item\"\n                >\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />,\n            document.getElementById('toolbar'),\n          )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state, props) => ({\n      entries: state.sharing.data.entries,\n      inherit: state.sharing.data.inherit,\n      available_roles: state.sharing.data.available_roles,\n      updateRequest: state.sharing.update,\n      pathname: props.location.pathname,\n      title: state.content.data.title,\n      login: state.userSession.token\n        ? jwtDecode(state.userSession.token).sub\n        : '',\n    }),\n    { updateSharing, getSharing },\n  ),\n)(SharingComponent);\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,IAAI,EAAEC,SAAS,QAAQ,0CAA0C;AAC1E,OAAOC,MAAM,MAAM,oCAAoC;AACvD,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,IAAI,EAAEC,UAAU,QAAQ,kBAAkB;AACnD,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,OAAO,MAAM,gBAAgB;AACpC,OAAOC,GAAG,MAAM,YAAY;AAC5B,SAASC,YAAY,QAAQ,WAAW;AACxC,SACEC,MAAM,EACNC,QAAQ,EACRC,SAAS,IAAIC,iBAAiB,EAC9BC,IAAI,EACJC,IAAI,IAAIC,OAAO,EACfC,KAAK,EACLC,OAAO,EACPC,KAAK,QACA,mBAAmB;AAC1B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,gBAAgB,EAAEC,cAAc,EAAEC,UAAU,QAAQ,YAAY;AAEzE,SACEC,aAAa,EACbC,UAAU,QACL,sCAAsC;AAC7C,SAASC,UAAU,QAAQ,8BAA8B;AACzD,OAAOX,IAAI,MAAM,yCAAyC;AAC1D,OAAOY,OAAO,MAAM,gDAAgD;AACpE,OAAOC,KAAK,MAAM,4CAA4C;AAC9D,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,OAAO,MAAM,6BAA6B;AAEjD,MAAMC,QAAQ,GAAGZ,cAAc,CAAC;EAC9Ba,oBAAoB;IAAA;IAAA;EAAA,CAGnB;EACDC,MAAM;IAAA;IAAA;EAAA,CAGL;EACDC,OAAO;IAAA;IAAA;EAAA,CAGN;EACDC,IAAI;IAAA;IAAA;EAAA,CAGH;EACDC,MAAM;IAAA;IAAA;EAAA,CAGL;EACDC,IAAI;IAAA;IAAA;EAAA,CAGH;EACDC,OAAO;IAAA;IAAA;EAAA,CAGN;EACDC,IAAI;IAAA;IAAA;EAAA,CAGH;EACDC,KAAK;IAAA;IAAA;EAAA,CAGJ;EACDC,UAAU;IAAA;IAAA;EAAA,CAGT;EACDC,cAAc;IAAA;IAAA;EAAA,CAGb;EACDC,kBAAkB;IAAA;IAAA;EAAA,CAGjB;EACDC,8BAA8B;IAAA;IAAA;EAAA,CAG7B;EACDC,cAAc;IAAA;IAAA;EAAA;AAIhB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,SAASpD,SAAS,CAAC;EAuCvC;AACF;AACA;AACA;AACA;AACA;EACEqD,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAC;IACxC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACD,IAAI,CAAC,IAAI,CAAC;IACxC,IAAI,CAACE,cAAc,GAAG,IAAI,CAACA,cAAc,CAACF,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACG,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACH,IAAI,CAAC,IAAI,CAAC;IACxC,IAAI,CAACI,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACJ,IAAI,CAAC,IAAI,CAAC;IACxC,IAAI,CAACK,eAAe,GAAG,IAAI,CAACA,eAAe,CAACL,IAAI,CAAC,IAAI,CAAC;IACtD,IAAI,CAACM,KAAK,GAAG;MACXvB,MAAM,EAAE,EAAE;MACVwB,SAAS,EAAE,KAAK;MAChBvB,OAAO,EAAEc,KAAK,CAACd,OAAO;MACtBwB,OAAO,EAAEV,KAAK,CAACU,OAAO;MACtBC,QAAQ,EAAE;IACZ,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACZ,KAAK,CAAC1B,UAAU,CAACC,UAAU,CAAC,IAAI,CAACyB,KAAK,CAACa,QAAQ,CAAC,EAAE,IAAI,CAACL,KAAK,CAACvB,MAAM,CAAC;IACzE,IAAI,CAAC6B,QAAQ,CAAC;MAAEH,QAAQ,EAAE;IAAK,CAAC,CAAC;EACnC;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEI,gCAAgCA,CAACC,SAAS,EAAE;IAC1C,IAAI,IAAI,CAAChB,KAAK,CAACiB,aAAa,CAACC,OAAO,IAAIF,SAAS,CAACC,aAAa,CAACE,MAAM,EAAE;MACtE,IAAI,CAACnB,KAAK,CAAC1B,UAAU,CAACC,UAAU,CAAC,IAAI,CAACyB,KAAK,CAACa,QAAQ,CAAC,EAAE,IAAI,CAACL,KAAK,CAACvB,MAAM,CAAC;MACzEP,KAAK,CAAC0C,OAAO,CACXC,KAAA,CAAC5C,KAAK;QACJ2C,OAAO;QACPE,KAAK,EAAE,IAAI,CAACtB,KAAK,CAACuB,IAAI,CAACC,aAAa,CAACzC,QAAQ,CAACY,kBAAkB,CAAE;QAClE8B,OAAO,EAAE,IAAI,CAACzB,KAAK,CAACuB,IAAI,CAACC,aAAa,CACpCzC,QAAQ,CAACa,8BACX,CAAE;QAAA8B,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CACH,CACH,CAAC;IACH;IACA,IAAI,CAACjB,QAAQ,CAAC;MACZ5B,OAAO,EACL,IAAI,CAACc,KAAK,CAACd,OAAO,KAAK,IAAI,GAAG8B,SAAS,CAAC9B,OAAO,GAAG,IAAI,CAACsB,KAAK,CAACtB,OAAO;MACtEwB,OAAO,EAAErD,GAAG,CAAC2D,SAAS,CAACN,OAAO,EAAGsB,KAAK,IAAK;QACzC,MAAMC,MAAM,GAAG9E,IAAI,CAAC,IAAI,CAACqD,KAAK,CAACE,OAAO,EAAE;UAAEwB,EAAE,EAAEF,KAAK,CAACE;QAAG,CAAC,CAAC;QACzD,OAAAC,aAAA,CAAAA,aAAA,KACKH,KAAK;UACRI,KAAK,EAAEH,MAAM,GAAGA,MAAM,CAACG,KAAK,GAAGJ,KAAK,CAACI;QAAK;MAE9C,CAAC;IACH,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE9B,QAAQA,CAAC+B,KAAK,EAAE;IACd,MAAMC,IAAI,GAAG;MAAE5B,OAAO,EAAE;IAAG,CAAC;IAC5B2B,KAAK,CAACE,cAAc,CAAC,CAAC;IACtB,IAAI,IAAI,CAACvC,KAAK,CAACd,OAAO,KAAK,IAAI,CAACsB,KAAK,CAACtB,OAAO,EAAE;MAC7CoD,IAAI,CAACpD,OAAO,GAAG,IAAI,CAACsB,KAAK,CAACtB,OAAO;IACnC;IACA,KAAK,IAAIsD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACxC,KAAK,CAACU,OAAO,CAAC+B,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MACrD,IAAI,CAACpF,OAAO,CAAC,IAAI,CAAC4C,KAAK,CAACU,OAAO,CAAC8B,CAAC,CAAC,CAACJ,KAAK,EAAE,IAAI,CAAC5B,KAAK,CAACE,OAAO,CAAC8B,CAAC,CAAC,CAACJ,KAAK,CAAC,EAAE;QACtEE,IAAI,CAAC5B,OAAO,CAACgC,IAAI,CAAC;UAChBR,EAAE,EAAE,IAAI,CAAC1B,KAAK,CAACE,OAAO,CAAC8B,CAAC,CAAC,CAACN,EAAE;UAC5BS,IAAI,EAAE,IAAI,CAACnC,KAAK,CAACE,OAAO,CAAC8B,CAAC,CAAC,CAACG,IAAI;UAChCP,KAAK,EAAE,IAAI,CAAC5B,KAAK,CAACE,OAAO,CAAC8B,CAAC,CAAC,CAACJ;QAC/B,CAAC,CAAC;MACJ;IACF;IACA,IAAI,CAACpC,KAAK,CAAC3B,aAAa,CAACE,UAAU,CAAC,IAAI,CAACyB,KAAK,CAACa,QAAQ,CAAC,EAAEyB,IAAI,CAAC;EACjE;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEjC,QAAQA,CAACgC,KAAK,EAAE;IACdA,KAAK,CAACE,cAAc,CAAC,CAAC;IACtB,IAAI,CAACzB,QAAQ,CAAC;MAAEL,SAAS,EAAE;IAAK,CAAC,CAAC;IAClC,IAAI,CAACT,KAAK,CACP1B,UAAU,CAACC,UAAU,CAAC,IAAI,CAACyB,KAAK,CAACa,QAAQ,CAAC,EAAE,IAAI,CAACL,KAAK,CAACvB,MAAM,CAAC,CAC9D2D,IAAI,CAAC,MAAM;MACV,IAAI,CAAC9B,QAAQ,CAAC;QAAEL,SAAS,EAAE;MAAM,CAAC,CAAC;IACrC,CAAC,CAAC,CACDoC,KAAK,CAAEC,KAAK,IAAK;MAChB,IAAI,CAAChC,QAAQ,CAAC;QAAEL,SAAS,EAAE;MAAM,CAAC,CAAC;MACnC;MACAsC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD,CAAC,CAAC;EACN;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE1C,cAAcA,CAACiC,KAAK,EAAE;IACpB,IAAI,CAACvB,QAAQ,CAAC;MACZ7B,MAAM,EAAEoD,KAAK,CAACW,MAAM,CAACC;IACvB,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;EACE1C,eAAeA,CAAA,EAAG;IAChB,IAAI,CAACO,QAAQ,CAAEN,KAAK,KAAM;MACxBtB,OAAO,EAAE,CAACsB,KAAK,CAACtB;IAClB,CAAC,CAAC,CAAC;EACL;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEiB,QAAQA,CAACkC,KAAK,EAAE;IAAEY;EAAM,CAAC,EAAE;IACzB,MAAM,CAACC,SAAS,EAAEC,IAAI,CAAC,GAAGF,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC;IAC1C,IAAI,CAACtC,QAAQ,CAAC;MACZJ,OAAO,EAAErD,GAAG,CAAC,IAAI,CAACmD,KAAK,CAACE,OAAO,EAAGsB,KAAK,IAAAG,aAAA,CAAAA,aAAA,KAClCH,KAAK;QACRI,KAAK,EACHJ,KAAK,CAACE,EAAE,KAAKgB,SAAS,GAAAf,aAAA,CAAAA,aAAA,KAEbH,KAAK,CAACI,KAAK;UACd,CAACe,IAAI,GAAG,CAACnB,KAAK,CAACI,KAAK,CAACe,IAAI;QAAC,KAE5BnB,KAAK,CAACI;MAAK,EACjB;IACJ,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;EACEnC,QAAQA,CAAA,EAAG;IACT,IAAI,CAACD,KAAK,CAACqD,OAAO,CAACX,IAAI,CAACnE,UAAU,CAAC,IAAI,CAACyB,KAAK,CAACa,QAAQ,CAAC,CAAC;EAC1D;;EAEA;AACF;AACA;AACA;AACA;EACEyC,MAAMA,CAAA,EAAG;IAAA,IAAAC,qBAAA,EAAAC,mBAAA;IACP,MAAM/F,SAAS,GACbkB,MAAM,CAAC8E,YAAY,CAAC;MAAEC,IAAI,EAAE;IAAY,CAAC,CAAC,CAACC,SAAS,IAAIjG,iBAAiB;IAE3E,OACE2D,KAAA,CAAC5D,SAAS;MAACyE,EAAE,EAAC,cAAc;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAC1BV,KAAA,CAACvE,MAAM;MAACwE,KAAK,EAAE,IAAI,CAACtB,KAAK,CAACuB,IAAI,CAACC,aAAa,CAACzC,QAAQ,CAACO,OAAO,CAAE;MAAAoC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,EAClEV,KAAA,CAACtD,OAAO,CAAC6F,KAAK;MAACC,MAAM;MAAAnC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACnBV,KAAA,CAACxE,SAAS;MACR6G,IAAI,EAAC,mBAAmB;MACxBI,MAAM,EAAE;QAAErD,SAAS,EAAE,IAAI,CAACD,KAAK,CAACC;MAAU,CAAE;MAAAiB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAC7C,CAAC,EACFV,KAAA,CAACzE,IAAI;MAACmH,SAAS,EAAC,mBAAmB;MAAC7B,EAAE,EAAC,yBAAyB;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAC9DV,KAAA,CAACtD,OAAO;MAACiG,SAAS,EAAC,SAAS;MAAAtC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAC1BV,KAAA,CAACnD,gBAAgB;MACfgE,EAAE,EAAC,qBAAqB;MACxB+B,cAAc,EAAC,qBAAqB;MACpChC,MAAM,EAAE;QAAEX,KAAK,EAAED,KAAA;UAAAK,MAAA;UAAAC,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,GAAI,IAAI,CAAC/B,KAAK,CAACsB,KAAS;MAAE,CAAE;MAAAI,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAC9C,CACM,CACL,CAAC,EACPV,KAAA,CAACzE,IAAI;MACHmH,SAAS,EAAC,mBAAmB;MAC7B7B,EAAE,EAAC,+BAA+B;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAElCV,KAAA,CAACtD,OAAO;MAACmG,SAAS;MAAAxC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAChBV,KAAA,CAACnD,gBAAgB;MACfgE,EAAE,EAAC,uEAAuE;MAC1E+B,cAAc,EAAC,uEAAuE;MAAAvC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACvF,CACM,CACL,CAAC,EACPV,KAAA,CAACzE,IAAI;MAACmH,SAAS,EAAC,mBAAmB;MAAC7B,EAAE,EAAC,0BAA0B;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAC9D,CAAC;MAAEtB;IAAU,CAAC,KAAK;MAClB,OACEY,KAAA,CAACtD,OAAO;QAAA2D,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GACNV,KAAA,CAAC1D,IAAI;QAAC2C,QAAQ,EAAE,IAAI,CAACD,QAAS;QAAAqB,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAC5BV,KAAA,CAAC1D,IAAI,CAACwG,KAAK;QAAAzC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GACTV,KAAA,CAACvD,KAAK;QACJ4F,IAAI,EAAC,gBAAgB;QACrBU,MAAM,EAAE;UACNC,IAAI,EAAE,QAAQ;UACdnD,OAAO,EAAET,SAAS;UAClB6D,QAAQ,EAAE7D,SAAS;UACnB,YAAY,EAAE,IAAI,CAACT,KAAK,CAACuB,IAAI,CAACC,aAAa,CACzCzC,QAAQ,CAACE,MACX;QACF,CAAE;QACFsF,WAAW,EAAE,IAAI,CAACvE,KAAK,CAACuB,IAAI,CAACC,aAAa,CACxCzC,QAAQ,CAACC,oBACX,CAAE;QACFmB,QAAQ,EAAE,IAAI,CAACC,cAAe;QAC9B8B,EAAE,EAAC,0BAA0B;QAAAR,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAC9B,CACS,CACR,CACC,CAAC;IAEd,CACI,CAAC,EACPV,KAAA,CAACzE,IAAI;MACHmH,SAAS,EAAC,mBAAmB;MAC7B7B,EAAE,EAAC,wBAAwB;MAC3BsC,YAAY,EAAE,CAAC,IAAI,CAAChE,KAAK,CAACE,OAAO,EAAE,IAAI,CAACV,KAAK,CAACyE,eAAe,CAAE;MAAA/C,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAE/DV,KAAA,CAAC1D,IAAI;MAAC2C,QAAQ,EAAE,IAAI,CAACA,QAAS;MAAAoB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAC5BV,KAAA,CAACrD,KAAK;MAAC0G,MAAM;MAACC,MAAM;MAACC,OAAO;MAACC,QAAQ;MAAAnD,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACnCV,KAAA,CAACrD,KAAK,CAAC8G,MAAM;MAAApD,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACXV,KAAA,CAACrD,KAAK,CAAC+G,GAAG;MAAArD,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACRV,KAAA,CAACrD,KAAK,CAACgH,UAAU;MAAAtD,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACfV,KAAA,CAACnD,gBAAgB;MAACgE,EAAE,EAAC,MAAM;MAAC+B,cAAc,EAAC,MAAM;MAAAvC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CACnC,CAAC,GAAAwB,qBAAA,GAClB,IAAI,CAACvD,KAAK,CAACyE,eAAe,cAAAlB,qBAAA,uBAA1BA,qBAAA,CAA4BlG,GAAG,CAAE8F,IAAI,IACpC9B,KAAA,CAACrD,KAAK,CAACgH,UAAU;MAACC,GAAG,EAAE9B,IAAI,CAACjB,EAAG;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAC5BoB,IAAI,CAAC7B,KACU,CACnB,CACQ,CACC,CAAC,EACfD,KAAA,CAACrD,KAAK,CAACkH,IAAI;MAAAxD,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,IAAAyB,mBAAA,GACR,IAAI,CAAChD,KAAK,CAACE,OAAO,cAAA8C,mBAAA,uBAAlBA,mBAAA,CAAoBnG,GAAG,CAAE2E,KAAK;MAAA,IAAAmD,sBAAA;MAAA,OAC7B9D,KAAA,CAACrD,KAAK,CAAC+G,GAAG;QAACE,GAAG,EAAEjD,KAAK,CAACE,EAAG;QAAAR,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GACvBV,KAAA,CAACrD,KAAK,CAACoH,IAAI;QAAA1D,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GACTV,KAAA,CAACxD,OAAO;QACN6F,IAAI,EAAE1B,KAAK,CAACW,IAAI,KAAK,MAAM,GAAG,MAAM,GAAG,OAAQ;QAC/CrB,KAAK,EACHU,KAAK,CAACW,IAAI,KAAK,MAAM,GACjB,IAAI,CAAC3C,KAAK,CAACuB,IAAI,CAACC,aAAa,CAACzC,QAAQ,CAACQ,IAAI,CAAC,GAC5C,IAAI,CAACS,KAAK,CAACuB,IAAI,CAACC,aAAa,CAACzC,QAAQ,CAACS,KAAK,CACjD;QAAAkC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CACF,CAAC,EAAC,GAAG,EACLC,KAAK,CAACV,KAAK,EACXU,KAAK,CAACqD,KAAK,IAAI,KAAKrD,KAAK,CAACqD,KAAK,GACtB,CAAC,GAAAF,sBAAA,GACZ,IAAI,CAACnF,KAAK,CAACyE,eAAe,cAAAU,sBAAA,uBAA1BA,sBAAA,CAA4B9H,GAAG,CAAE8F,IAAI,IACpC9B,KAAA,CAACrD,KAAK,CAACoH,IAAI;QAACH,GAAG,EAAE9B,IAAI,CAACjB,EAAG;QAAAR,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GACtBC,KAAK,CAACI,KAAK,CAACe,IAAI,CAACjB,EAAE,CAAC,KAAK,QAAQ,IAChCb,KAAA,CAACxD,OAAO;QACN6F,IAAI,EAAC,sBAAsB;QAC3BpC,KAAK,EAAE,IAAI,CAACtB,KAAK,CAACuB,IAAI,CAACC,aAAa,CAClCzC,QAAQ,CAACU,UACX,CAAE;QACF6F,KAAK,EAAC,MAAM;QAAA5D,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CACb,CACF,EACAC,KAAK,CAACI,KAAK,CAACe,IAAI,CAACjB,EAAE,CAAC,KAAK,UAAU,IAClCb,KAAA,CAACxD,OAAO;QACN6F,IAAI,EAAC,sBAAsB;QAC3B4B,KAAK,EAAC,OAAO;QACbhE,KAAK,EAAE,IAAI,CAACtB,KAAK,CAACuB,IAAI,CAACC,aAAa,CAClCzC,QAAQ,CAACW,cACX,CAAE;QAAAgC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CACH,CACF,EACA,OAAOC,KAAK,CAACI,KAAK,CAACe,IAAI,CAACjB,EAAE,CAAC,KAAK,SAAS,IACxCb,KAAA,CAAC7D,QAAQ;QACPkG,IAAI,EAAE,IAAI,CAAC1D,KAAK,CAACuB,IAAI,CAACC,aAAa,CACjCzC,QAAQ,CAACc,cAAc,EACvB;UACEmC,KAAK,EAAEA,KAAK,CAACV,KAAK;UAClB6B,IAAI,EAAEA,IAAI,CAACjB;QACb,CACF,CAAE;QACF,cAAY,IAAI,CAAClC,KAAK,CAACuB,IAAI,CAACC,aAAa,CACvCzC,QAAQ,CAACc,cAAc,EACvB;UACEmC,KAAK,EAAEA,KAAK,CAACV,KAAK;UAClB6B,IAAI,EAAEA,IAAI,CAACjB;QACb,CACF,CAAE;QACF/B,QAAQ,EAAE,IAAI,CAACA,QAAS;QACxB8C,KAAK,EAAE,GAAGjB,KAAK,CAACE,EAAE,IAAIiB,IAAI,CAACjB,EAAE,EAAG;QAChCqD,OAAO,EAAEvD,KAAK,CAACI,KAAK,CAACe,IAAI,CAACjB,EAAE,CAAE;QAC9BoC,QAAQ,EAAEtC,KAAK,CAACqD,KAAK,KAAK,IAAI,CAACrF,KAAK,CAACqF,KAAM;QAAA3D,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAC5C,CAEO,CACb,CACQ,CAAC;IAAA,CACb,CACS,CACP,CAAC,EACRV,KAAA,CAACtD,OAAO;MAAC8G,QAAQ;MAAAnD,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACfV,KAAA,CAAC1D,IAAI,CAACwG,KAAK;MAAAzC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACTV,KAAA,CAAC7D,QAAQ;MACP0E,EAAE,EAAC,8BAA8B;MACjCwB,IAAI,EAAC,8BAA8B;MACnC8B,cAAc,EAAE,IAAI,CAAChF,KAAK,CAACtB,OAAQ;MACnCiB,QAAQ,EAAE,IAAI,CAACI,eAAgB;MAC/BkF,KAAK,EACHpE,KAAA;QAAOqE,OAAO,EAAC,8BAA8B;QAAAhE,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAC1C,IAAI,CAAC/B,KAAK,CAACuB,IAAI,CAACC,aAAa,CAACzC,QAAQ,CAACG,OAAO,CAC1C,CACR;MAAAwC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACF,CACS,CAAC,EACbV,KAAA;MAAG2C,SAAS,EAAC,MAAM;MAAAtC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACjBV,KAAA,CAACnD,gBAAgB;MACfgE,EAAE,EAAC,sUAAsU;MACzU+B,cAAc,EAAC,sUAAsU;MACrVhC,MAAM,EAAE;QACN0D,SAAS,EACPtE,KAAA,CAACxD,OAAO;UAAC6F,IAAI,EAAC,sBAAsB;UAAC4B,KAAK,EAAC,OAAO;UAAA5D,MAAA;UAAAC,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,CAAE,CACrD;QACD6D,MAAM,EACJvE,KAAA,CAACxD,OAAO;UAAC6F,IAAI,EAAC,sBAAsB;UAAC4B,KAAK,EAAC,MAAM;UAAA5D,MAAA;UAAAC,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,CAAE;MAEvD,CAAE;MAAAL,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACH,CACA,CACI,CAAC,EACVV,KAAA,CAACtD,OAAO;MAACiG,SAAS,EAAC,SAAS;MAACa,QAAQ;MAACgB,QAAQ;MAAAnE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAC5CV,KAAA,CAAC9D,MAAM;MACLuI,KAAK;MACLC,OAAO;MACPC,OAAO,EAAC,OAAO;MACfrD,IAAI,EAAC,QAAQ;MACb,cAAY,IAAI,CAAC3C,KAAK,CAACuB,IAAI,CAACC,aAAa,CAACzC,QAAQ,CAACI,IAAI,CAAE;MACzDmC,KAAK,EAAE,IAAI,CAACtB,KAAK,CAACuB,IAAI,CAACC,aAAa,CAACzC,QAAQ,CAACI,IAAI,CAAE;MACpD+B,OAAO,EAAE,IAAI,CAAClB,KAAK,CAACiB,aAAa,CAACC,OAAQ;MAC1C+E,OAAO,EAAE,IAAI,CAAC3F,QAAS;MAAAoB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAEvBV,KAAA,CAACzD,IAAI;MAACoG,SAAS,EAAC,SAAS;MAACN,IAAI,EAAE9E,QAAS;MAACsH,IAAI,EAAC,MAAM;MAAAxE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CACjD,CAAC,EACTV,KAAA,CAAC9D,MAAM;MACLuI,KAAK;MACL5B,SAAS;MACT,cAAY,IAAI,CAAClE,KAAK,CAACuB,IAAI,CAACC,aAAa,CAACzC,QAAQ,CAACK,MAAM,CAAE;MAC3DkC,KAAK,EAAE,IAAI,CAACtB,KAAK,CAACuB,IAAI,CAACC,aAAa,CAACzC,QAAQ,CAACK,MAAM,CAAE;MACtD4G,OAAO,EAAC,OAAO;MACfC,OAAO,EAAE,IAAI,CAAChG,QAAS;MAAAyB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAEvBV,KAAA,CAACzD,IAAI;MAACoG,SAAS,EAAC,SAAS;MAACN,IAAI,EAAE7E,QAAS;MAACqH,IAAI,EAAC,MAAM;MAAAxE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CACjD,CACD,CACL,CACF,CACO,CAAC,EACf,IAAI,CAACvB,KAAK,CAACG,QAAQ,iBAClBrD,YAAY,CACV+D,KAAA,CAAC7C,OAAO;MACNqC,QAAQ,EAAE,IAAI,CAACb,KAAK,CAACa,QAAS;MAC9BsF,sBAAsB;MACtBC,KAAK,EACH/E,KAAA,CAACpE,IAAI;QACHoJ,EAAE,EAAE,GAAG9H,UAAU,CAAC,IAAI,CAACyB,KAAK,CAACa,QAAQ,CAAC,EAAG;QACzCmD,SAAS,EAAC,MAAM;QAAAtC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAEhBV,KAAA,CAACzD,IAAI;QACH8F,IAAI,EAAE5E,OAAQ;QACdkF,SAAS,EAAC,kBAAkB;QAC5BkC,IAAI,EAAC,MAAM;QACX5E,KAAK,EAAE,IAAI,CAACtB,KAAK,CAACuB,IAAI,CAACC,aAAa,CAACzC,QAAQ,CAACM,IAAI,CAAE;QAAAqC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CACrD,CACG,CACP;MAAAL,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACF,CAAC,EACFuE,QAAQ,CAACC,cAAc,CAAC,SAAS,CACnC,CACO,CAAC;EAEhB;AACF;AA9aE;AACF;AACA;AACA;AACA;AAJEC,eAAA,CADI1G,gBAAgB,eAMD;EACjBzB,aAAa,EAAE1B,SAAS,CAAC8J,IAAI,CAACC,UAAU;EACxCpI,UAAU,EAAE3B,SAAS,CAAC8J,IAAI,CAACC,UAAU;EACrCzF,aAAa,EAAEtE,SAAS,CAACgK,KAAK,CAAC;IAC7BzF,OAAO,EAAEvE,SAAS,CAACiK,IAAI;IACvBzF,MAAM,EAAExE,SAAS,CAACiK;EACpB,CAAC,CAAC,CAACF,UAAU;EACb7F,QAAQ,EAAElE,SAAS,CAACkK,MAAM,CAACH,UAAU;EACrChG,OAAO,EAAE/D,SAAS,CAACmK,OAAO,CACxBnK,SAAS,CAACgK,KAAK,CAAC;IACdzE,EAAE,EAAEvF,SAAS,CAACkK,MAAM;IACpBxB,KAAK,EAAE1I,SAAS,CAACkK,MAAM;IACvBzE,KAAK,EAAEzF,SAAS,CAACoK,MAAM;IACvBzF,KAAK,EAAE3E,SAAS,CAACkK,MAAM;IACvBlE,IAAI,EAAEhG,SAAS,CAACkK;EAClB,CAAC,CACH,CAAC,CAACH,UAAU;EACZjC,eAAe,EAAE9H,SAAS,CAACmK,OAAO,CAACnK,SAAS,CAACoK,MAAM,CAAC,CAACL,UAAU;EAC/DxH,OAAO,EAAEvC,SAAS,CAACiK,IAAI;EACvBtF,KAAK,EAAE3E,SAAS,CAACkK,MAAM,CAACH,UAAU;EAClCrB,KAAK,EAAE1I,SAAS,CAACkK;AACnB,CAAC;AAED;AACF;AACA;AACA;AACA;AAJEL,eAAA,CA7BI1G,gBAAgB,kBAkCE;EACpBZ,OAAO,EAAE,IAAI;EACbmG,KAAK,EAAE;AACT,CAAC;AA4YH,eAAerI,OAAO,CACpBE,UAAU,EACVkB,UAAU,EACVrB,OAAO,CACL,CAACyD,KAAK,EAAER,KAAK,MAAM;EACjBU,OAAO,EAAEF,KAAK,CAAClB,OAAO,CAACgD,IAAI,CAAC5B,OAAO;EACnCxB,OAAO,EAAEsB,KAAK,CAAClB,OAAO,CAACgD,IAAI,CAACpD,OAAO;EACnCuF,eAAe,EAAEjE,KAAK,CAAClB,OAAO,CAACgD,IAAI,CAACmC,eAAe;EACnDxD,aAAa,EAAET,KAAK,CAAClB,OAAO,CAAC0H,MAAM;EACnCnG,QAAQ,EAAEb,KAAK,CAACiH,QAAQ,CAACpG,QAAQ;EACjCS,KAAK,EAAEd,KAAK,CAACiB,OAAO,CAACa,IAAI,CAAChB,KAAK;EAC/B+D,KAAK,EAAE7E,KAAK,CAAC0G,WAAW,CAACC,KAAK,GAC1BlJ,SAAS,CAACuC,KAAK,CAAC0G,WAAW,CAACC,KAAK,CAAC,CAACC,GAAG,GACtC;AACN,CAAC,CAAC,EACF;EAAE/I,aAAa;EAAEC;AAAW,CAC9B,CACF,CAAC,CAACwB,gBAAgB,CAAC","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Search for user or group","defaultMessage":"Search for user or group"},{"id":"Search","defaultMessage":"Search"},{"id":"Inherit permissions from higher levels","defaultMessage":"Inherit permissions from higher levels"},{"id":"Save","defaultMessage":"Save"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Back","defaultMessage":"Back"},{"id":"Sharing","defaultMessage":"Sharing"},{"id":"User","defaultMessage":"User"},{"id":"Group","defaultMessage":"Group"},{"id":"Global role","defaultMessage":"Global role"},{"id":"Inherited value","defaultMessage":"Inherited value"},{"id":"Permissions updated","defaultMessage":"Permissions updated"},{"id":"Permissions have been updated successfully","defaultMessage":"Permissions have been updated successfully"},{"id":"Assign the {role} role to {entry}","defaultMessage":"Assign the {role} role to {entry}"},{"id":"Sharing for {title}","defaultMessage":"Sharing for {title}"},{"id":"You can control who can view and edit your item using the list below.","defaultMessage":"You can control who can view and edit your item using the list below."},{"id":"Name","defaultMessage":"Name"},{"id":"By default, permissions from the container of this item are inherited. If you disable this, only the explicitly defined sharing permissions will be valid. In the overview, the symbol {inherited} indicates an inherited value. Similarly, the symbol {global} indicates a global role, which is managed by the site administrator.","defaultMessage":"By default, permissions from the container of this item are inherited. If you disable this, only the explicitly defined sharing permissions will be valid. In the overview, the symbol {inherited} indicates an inherited value. Similarly, the symbol {global} indicates a global role, which is managed by the site administrator."}]}},"sourceType":"module","externalDependencies":[]}