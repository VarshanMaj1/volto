{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Search/components/ToggleFacet.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Radio, Header } from 'semantic-ui-react';\nconst ToggleFacet = props => {\n  var _facet$title, _facet$field;\n  const {\n    facet,\n    isEditMode,\n    onChange,\n    value\n  } = props; // value, choices, isMulti, onChange,\n\n  return __jsx(\"div\", {\n    className: \"checkbox-facet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    as: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, (_facet$title = facet === null || facet === void 0 ? void 0 : facet.title) !== null && _facet$title !== void 0 ? _facet$title : facet === null || facet === void 0 ? void 0 : (_facet$field = facet.field) === null || _facet$field === void 0 ? void 0 : _facet$field.label), __jsx(\"div\", {\n    className: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, __jsx(Radio, {\n    toggle: true,\n    checked: value || typeof value === 'string',\n    disabled: isEditMode,\n    onChange: (e, {\n      checked\n    }) => {\n      onChange(facet.field.value, checked);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  })));\n};\nToggleFacet.stateToValue = ({\n  facetSettings,\n  index,\n  selectedValue\n}) => {\n  return selectedValue || typeof selectedValue === 'string';\n};\nToggleFacet.valueToQuery = ({\n  value,\n  facet\n}) => {\n  return value || typeof value === 'string' ? {\n    i: facet.field.value,\n    o: 'plone.app.querystring.operation.boolean.isTrue',\n    v: ''\n  } : null;\n};\nexport default ToggleFacet;","map":{"version":3,"names":["React","Radio","Header","ToggleFacet","props","_facet$title","_facet$field","facet","isEditMode","onChange","value","__jsx","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","as","title","field","label","toggle","checked","disabled","e","stateToValue","facetSettings","index","selectedValue","valueToQuery","i","o","v"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Search/components/ToggleFacet.jsx"],"sourcesContent":["import React from 'react';\nimport { Radio, Header } from 'semantic-ui-react';\n\nconst ToggleFacet = (props) => {\n  const { facet, isEditMode, onChange, value } = props; // value, choices, isMulti, onChange,\n\n  return (\n    <div className=\"checkbox-facet\">\n      <Header as=\"h4\">{facet?.title ?? facet?.field?.label}</Header>\n      <div className=\"radio\">\n        <Radio\n          toggle\n          checked={value || typeof value === 'string'}\n          disabled={isEditMode}\n          onChange={(e, { checked }) => {\n            onChange(facet.field.value, checked);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nToggleFacet.stateToValue = ({ facetSettings, index, selectedValue }) => {\n  return selectedValue || typeof selectedValue === 'string';\n};\n\nToggleFacet.valueToQuery = ({ value, facet }) => {\n  return value || typeof value === 'string'\n    ? {\n        i: facet.field.value,\n        o: 'plone.app.querystring.operation.boolean.isTrue',\n        v: '',\n      }\n    : null;\n};\n\nexport default ToggleFacet;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,MAAM,QAAQ,mBAAmB;AAEjD,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA,IAAAC,YAAA,EAAAC,YAAA;EAC7B,MAAM;IAAEC,KAAK;IAAEC,UAAU;IAAEC,QAAQ;IAAEC;EAAM,CAAC,GAAGN,KAAK,CAAC,CAAC;;EAEtD,OACEO,KAAA;IAAKC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC7BP,KAAA,CAACT,MAAM;IAACiB,EAAE,EAAC,IAAI;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,IAAAb,YAAA,GAAEE,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEa,KAAK,cAAAf,YAAA,cAAAA,YAAA,GAAIE,KAAK,aAALA,KAAK,wBAAAD,YAAA,GAALC,KAAK,CAAEc,KAAK,cAAAf,YAAA,uBAAZA,YAAA,CAAcgB,KAAc,CAAC,EAC9DX,KAAA;IAAKC,SAAS,EAAC,OAAO;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACpBP,KAAA,CAACV,KAAK;IACJsB,MAAM;IACNC,OAAO,EAAEd,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAS;IAC5Ce,QAAQ,EAAEjB,UAAW;IACrBC,QAAQ,EAAEA,CAACiB,CAAC,EAAE;MAAEF;IAAQ,CAAC,KAAK;MAC5Bf,QAAQ,CAACF,KAAK,CAACc,KAAK,CAACX,KAAK,EAAEc,OAAO,CAAC;IACtC,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CACE,CACF,CAAC;AAEV,CAAC;AAEDf,WAAW,CAACwB,YAAY,GAAG,CAAC;EAAEC,aAAa;EAAEC,KAAK;EAAEC;AAAc,CAAC,KAAK;EACtE,OAAOA,aAAa,IAAI,OAAOA,aAAa,KAAK,QAAQ;AAC3D,CAAC;AAED3B,WAAW,CAAC4B,YAAY,GAAG,CAAC;EAAErB,KAAK;EAAEH;AAAM,CAAC,KAAK;EAC/C,OAAOG,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,GACrC;IACEsB,CAAC,EAAEzB,KAAK,CAACc,KAAK,CAACX,KAAK;IACpBuB,CAAC,EAAE,gDAAgD;IACnDC,CAAC,EAAE;EACL,CAAC,GACD,IAAI;AACV,CAAC;AAED,eAAe/B,WAAW","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}