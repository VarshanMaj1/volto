{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Teaser/Data.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Button } from 'semantic-ui-react';\nimport { toast } from 'react-toastify';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport { BlockDataForm } from '@plone/volto/components/manage/Form';\nimport { flattenToAppURL } from '@plone/volto/helpers/Url/Url';\nimport { messages as defaultMessages } from '@plone/volto/helpers/MessageLabels/MessageLabels';\nimport { getContent } from '@plone/volto/actions/content/content';\nimport isEmpty from 'lodash/isEmpty';\nimport reloadSVG from '@plone/volto/icons/reload.svg';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nconst messages = defineMessages({\n  resetTeaser: {\n    \"id\": \"Reset the block\",\n    \"defaultMessage\": \"Reset the block\"\n  },\n  refreshTeaser: {\n    \"id\": \"Refresh source content\",\n    \"defaultMessage\": \"Refresh source content\"\n  },\n  invalidTeaser: {\n    \"id\": \"Invalid teaser source\",\n    \"defaultMessage\": \"Invalid teaser source\"\n  }\n});\nconst TeaserData = props => {\n  const {\n    block,\n    blocksConfig,\n    blocksErrors,\n    data,\n    onChangeBlock,\n    navRoot,\n    contentType\n  } = props;\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const reset = () => {\n    onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n      href: '',\n      title: '',\n      description: '',\n      head_title: ''\n    }));\n  };\n  const dataTransformer = (resp, data) => {\n    var _resp$head_title;\n    let hrefData = {\n      '@id': flattenToAppURL(resp['@id']),\n      '@type': resp === null || resp === void 0 ? void 0 : resp['@type'],\n      Description: resp === null || resp === void 0 ? void 0 : resp.description,\n      Title: resp.title,\n      hasPreviewImage: resp !== null && resp !== void 0 && resp.preview_image ? true : false,\n      head_title: (_resp$head_title = resp.head_title) !== null && _resp$head_title !== void 0 ? _resp$head_title : null,\n      image_field: resp !== null && resp !== void 0 && resp.preview_image ? 'preview_image' : resp !== null && resp !== void 0 && resp.image ? 'image' : null,\n      image_scales: {\n        preview_image: [resp === null || resp === void 0 ? void 0 : resp.preview_image],\n        image: [resp === null || resp === void 0 ? void 0 : resp.image]\n      },\n      title: resp.title\n    };\n    let blockData = {\n      '@type': data['@type'],\n      description: resp === null || resp === void 0 ? void 0 : resp.description,\n      head_title: resp === null || resp === void 0 ? void 0 : resp.head_title,\n      overwrite: data.overwrite,\n      href: [hrefData],\n      styles: data.styles,\n      title: resp.title\n    };\n    return blockData;\n  };\n  const refresh = () => {\n    var _data$href, _data$href$;\n    if ((_data$href = data.href) !== null && _data$href !== void 0 && (_data$href$ = _data$href[0]) !== null && _data$href$ !== void 0 && _data$href$['@id']) {\n      dispatch(getContent(flattenToAppURL(data.href[0]['@id']), null, `${block}-teaser`)).then(resp => {\n        if (resp) {\n          let blockData = dataTransformer(resp, data);\n          onChangeBlock(block, blockData);\n        }\n      }).catch(e => {\n        toast.error(__jsx(Toast, {\n          error: true,\n          title: props.intl.formatMessage(defaultMessages.error),\n          content: props.intl.formatMessage(messages.invalidTeaser),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }\n        }));\n      });\n    }\n  };\n  const isReseteable = isEmpty(data.href) && !data.title && !data.description && !data.head_title;\n  const HeaderActions = __jsx(Button.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    \"aria-label\": intl.formatMessage(messages.resetTeaser),\n    basic: true,\n    disabled: isReseteable,\n    onClick: () => reset(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    name: trashSVG,\n    size: \"24px\",\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  })));\n  const ActionButton = __jsx(Button.Group, {\n    className: \"refresh teaser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    \"aria-label\": intl.formatMessage(messages.refreshTeaser),\n    basic: true,\n    onClick: () => refresh(),\n    disabled: isEmpty(data.href),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, intl.formatMessage(messages.refreshTeaser), __jsx(Icon, {\n    name: reloadSVG,\n    size: \"20px\",\n    color: \"#00000099\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  })));\n  const schema = blocksConfig[data['@type']].blockSchema({\n    data,\n    intl\n  });\n  const dataAdapter = blocksConfig[data['@type']].dataAdapter;\n  return __jsx(BlockDataForm, {\n    schema: schema,\n    title: schema.title,\n    onChangeField: (id, value) => {\n      dataAdapter({\n        block,\n        data,\n        id,\n        onChangeBlock,\n        value\n      });\n    },\n    onChangeBlock: onChangeBlock,\n    formData: data,\n    block: block,\n    blocksConfig: blocksConfig,\n    headerActions: HeaderActions,\n    actionButton: data.overwrite && ActionButton,\n    navRoot: navRoot,\n    contentType: contentType,\n    errors: blocksErrors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  });\n};\nexport default TeaserData;","map":{"version":3,"names":["React","useDispatch","defineMessages","useIntl","Button","toast","Icon","Toast","BlockDataForm","flattenToAppURL","messages","defaultMessages","getContent","isEmpty","reloadSVG","trashSVG","resetTeaser","refreshTeaser","invalidTeaser","TeaserData","props","block","blocksConfig","blocksErrors","data","onChangeBlock","navRoot","contentType","dispatch","intl","reset","_objectSpread","href","title","description","head_title","dataTransformer","resp","_resp$head_title","hrefData","Description","Title","hasPreviewImage","preview_image","image_field","image","image_scales","blockData","overwrite","styles","refresh","_data$href","_data$href$","then","catch","e","error","__jsx","formatMessage","content","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","isReseteable","HeaderActions","Group","basic","disabled","onClick","name","size","color","ActionButton","className","schema","blockSchema","dataAdapter","onChangeField","id","value","formData","headerActions","actionButton","errors"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Teaser/Data.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Button } from 'semantic-ui-react';\nimport { toast } from 'react-toastify';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport { BlockDataForm } from '@plone/volto/components/manage/Form';\nimport { flattenToAppURL } from '@plone/volto/helpers/Url/Url';\nimport { messages as defaultMessages } from '@plone/volto/helpers/MessageLabels/MessageLabels';\nimport { getContent } from '@plone/volto/actions/content/content';\nimport isEmpty from 'lodash/isEmpty';\n\nimport reloadSVG from '@plone/volto/icons/reload.svg';\nimport trashSVG from '@plone/volto/icons/delete.svg';\n\nconst messages = defineMessages({\n  resetTeaser: {\n    id: 'Reset the block',\n    defaultMessage: 'Reset the block',\n  },\n  refreshTeaser: {\n    id: 'Refresh source content',\n    defaultMessage: 'Refresh source content',\n  },\n  invalidTeaser: {\n    id: 'Invalid teaser source',\n    defaultMessage: 'Invalid teaser source',\n  },\n});\n\nconst TeaserData = (props) => {\n  const {\n    block,\n    blocksConfig,\n    blocksErrors,\n    data,\n    onChangeBlock,\n    navRoot,\n    contentType,\n  } = props;\n  const dispatch = useDispatch();\n  const intl = useIntl();\n\n  const reset = () => {\n    onChangeBlock(block, {\n      ...data,\n      href: '',\n      title: '',\n      description: '',\n      head_title: '',\n    });\n  };\n\n  const dataTransformer = (resp, data) => {\n    let hrefData = {\n      '@id': flattenToAppURL(resp['@id']),\n      '@type': resp?.['@type'],\n      Description: resp?.description,\n      Title: resp.title,\n      hasPreviewImage: resp?.preview_image ? true : false,\n      head_title: resp.head_title ?? null,\n      image_field: resp?.preview_image\n        ? 'preview_image'\n        : resp?.image\n          ? 'image'\n          : null,\n      image_scales: {\n        preview_image: [resp?.preview_image],\n        image: [resp?.image],\n      },\n      title: resp.title,\n    };\n    let blockData = {\n      '@type': data['@type'],\n      description: resp?.description,\n      head_title: resp?.head_title,\n      overwrite: data.overwrite,\n      href: [hrefData],\n      styles: data.styles,\n      title: resp.title,\n    };\n    return blockData;\n  };\n\n  const refresh = () => {\n    if (data.href?.[0]?.['@id']) {\n      dispatch(\n        getContent(\n          flattenToAppURL(data.href[0]['@id']),\n          null,\n          `${block}-teaser`,\n        ),\n      )\n        .then((resp) => {\n          if (resp) {\n            let blockData = dataTransformer(resp, data);\n            onChangeBlock(block, blockData);\n          }\n        })\n        .catch((e) => {\n          toast.error(\n            <Toast\n              error\n              title={props.intl.formatMessage(defaultMessages.error)}\n              content={props.intl.formatMessage(messages.invalidTeaser)}\n            />,\n          );\n        });\n    }\n  };\n\n  const isReseteable =\n    isEmpty(data.href) && !data.title && !data.description && !data.head_title;\n\n  const HeaderActions = (\n    <Button.Group>\n      <Button\n        aria-label={intl.formatMessage(messages.resetTeaser)}\n        basic\n        disabled={isReseteable}\n        onClick={() => reset()}\n      >\n        <Icon name={trashSVG} size=\"24px\" color=\"red\" />\n      </Button>\n    </Button.Group>\n  );\n\n  const ActionButton = (\n    <Button.Group className=\"refresh teaser\">\n      <Button\n        aria-label={intl.formatMessage(messages.refreshTeaser)}\n        basic\n        onClick={() => refresh()}\n        disabled={isEmpty(data.href)}\n      >\n        {intl.formatMessage(messages.refreshTeaser)}\n        <Icon name={reloadSVG} size=\"20px\" color=\"#00000099\" />\n      </Button>\n    </Button.Group>\n  );\n\n  const schema = blocksConfig[data['@type']].blockSchema({\n    data,\n    intl,\n  });\n  const dataAdapter = blocksConfig[data['@type']].dataAdapter;\n\n  return (\n    <BlockDataForm\n      schema={schema}\n      title={schema.title}\n      onChangeField={(id, value) => {\n        dataAdapter({\n          block,\n          data,\n          id,\n          onChangeBlock,\n          value,\n        });\n      }}\n      onChangeBlock={onChangeBlock}\n      formData={data}\n      block={block}\n      blocksConfig={blocksConfig}\n      headerActions={HeaderActions}\n      actionButton={data.overwrite && ActionButton}\n      navRoot={navRoot}\n      contentType={contentType}\n      errors={blocksErrors}\n    />\n  );\n};\n\nexport default TeaserData;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Reset the block","defaultMessage":"Reset the block"},{"id":"Refresh source content","defaultMessage":"Refresh source content"},{"id":"Invalid teaser source","defaultMessage":"Invalid teaser source"}]}},"sourceType":"module","externalDependencies":[]}