{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/Logout/Logout.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { defineMessages, useIntl } from 'react-intl';\nimport qs from 'query-string';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport { logout } from '@plone/volto/actions/userSession/userSession';\nimport { purgeMessages } from '@plone/volto/actions/messages/messages';\nimport { toast } from 'react-toastify';\nconst messages = defineMessages({\n  loggedOut: {\n    \"id\": \"Logged out\",\n    \"defaultMessage\": \"Logged out\"\n  },\n  loggedOutContent: {\n    \"id\": \"You have been logged out from the site.\",\n    \"defaultMessage\": \"You have been logged out from the site.\"\n  }\n});\nconst Logout = ({\n  location\n}) => {\n  const token = useSelector(state => state.userSession.token, shallowEqual);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const returnUrl = useMemo(() => qs.parse(location.search).return_url || location.pathname.replace(/\\/login\\/?$/, '').replace(/\\/logout\\/?$/, '') || '/', [location]);\n  useEffect(() => {\n    dispatch(logout());\n    dispatch(purgeMessages());\n  }, [dispatch]);\n  useEffect(() => {\n    if (!token) {\n      history.replace(returnUrl || '/');\n      if (!toast.isActive('loggedOut')) {\n        toast.info(__jsx(Toast, {\n          info: true,\n          title: intl.formatMessage(messages.loggedOut),\n          content: intl.formatMessage(messages.loggedOutContent),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }\n        }), {\n          autoClose: false,\n          toastId: 'loggedOut'\n        });\n      }\n    }\n  }, [history, returnUrl, intl, token]);\n  return '';\n};\nexport default Logout;","map":{"version":3,"names":["useEffect","useMemo","useDispatch","useSelector","shallowEqual","useHistory","defineMessages","useIntl","qs","Toast","logout","purgeMessages","toast","messages","loggedOut","loggedOutContent","Logout","location","token","state","userSession","history","dispatch","intl","returnUrl","parse","search","return_url","pathname","replace","isActive","info","__jsx","title","formatMessage","content","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","autoClose","toastId"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/Logout/Logout.jsx"],"sourcesContent":["import { useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { defineMessages, useIntl } from 'react-intl';\nimport qs from 'query-string';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport { logout } from '@plone/volto/actions/userSession/userSession';\nimport { purgeMessages } from '@plone/volto/actions/messages/messages';\nimport { toast } from 'react-toastify';\n\nconst messages = defineMessages({\n  loggedOut: {\n    id: 'Logged out',\n    defaultMessage: 'Logged out',\n  },\n  loggedOutContent: {\n    id: 'You have been logged out from the site.',\n    defaultMessage: 'You have been logged out from the site.',\n  },\n});\n\nconst Logout = ({ location }) => {\n  const token = useSelector((state) => state.userSession.token, shallowEqual);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const intl = useIntl();\n\n  const returnUrl = useMemo(\n    () =>\n      qs.parse(location.search).return_url ||\n      location.pathname\n        .replace(/\\/login\\/?$/, '')\n        .replace(/\\/logout\\/?$/, '') ||\n      '/',\n    [location],\n  );\n\n  useEffect(() => {\n    dispatch(logout());\n    dispatch(purgeMessages());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!token) {\n      history.replace(returnUrl || '/');\n      if (!toast.isActive('loggedOut')) {\n        toast.info(\n          <Toast\n            info\n            title={intl.formatMessage(messages.loggedOut)}\n            content={intl.formatMessage(messages.loggedOutContent)}\n          />,\n          { autoClose: false, toastId: 'loggedOut' },\n        );\n      }\n    }\n  }, [history, returnUrl, intl, token]);\n\n  return '';\n};\n\nexport default Logout;\n"],"mappings":";;;AAAA,SAASA,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC1C,SAASC,WAAW,EAAEC,WAAW,EAAEC,YAAY,QAAQ,aAAa;AACpE,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,cAAc,EAAEC,OAAO,QAAQ,YAAY;AACpD,OAAOC,EAAE,MAAM,cAAc;AAC7B,OAAOC,KAAK,MAAM,4CAA4C;AAC9D,SAASC,MAAM,QAAQ,8CAA8C;AACrE,SAASC,aAAa,QAAQ,wCAAwC;AACtE,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,MAAMC,QAAQ,GAAGP,cAAc,CAAC;EAC9BQ,SAAS;IAAA;IAAA;EAAA,CAGR;EACDC,gBAAgB;IAAA;IAAA;EAAA;AAIlB,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC/B,MAAMC,KAAK,GAAGf,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACC,WAAW,CAACF,KAAK,EAAEd,YAAY,CAAC;EAC3E,MAAMiB,OAAO,GAAGhB,UAAU,CAAC,CAAC;EAC5B,MAAMiB,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAC9B,MAAMqB,IAAI,GAAGhB,OAAO,CAAC,CAAC;EAEtB,MAAMiB,SAAS,GAAGvB,OAAO,CACvB,MACEO,EAAE,CAACiB,KAAK,CAACR,QAAQ,CAACS,MAAM,CAAC,CAACC,UAAU,IACpCV,QAAQ,CAACW,QAAQ,CACdC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAC1BA,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,IAC9B,GAAG,EACL,CAACZ,QAAQ,CACX,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACdsB,QAAQ,CAACZ,MAAM,CAAC,CAAC,CAAC;IAClBY,QAAQ,CAACX,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACW,QAAQ,CAAC,CAAC;EAEdtB,SAAS,CAAC,MAAM;IACd,IAAI,CAACkB,KAAK,EAAE;MACVG,OAAO,CAACQ,OAAO,CAACL,SAAS,IAAI,GAAG,CAAC;MACjC,IAAI,CAACZ,KAAK,CAACkB,QAAQ,CAAC,WAAW,CAAC,EAAE;QAChClB,KAAK,CAACmB,IAAI,CACRC,KAAA,CAACvB,KAAK;UACJsB,IAAI;UACJE,KAAK,EAAEV,IAAI,CAACW,aAAa,CAACrB,QAAQ,CAACC,SAAS,CAAE;UAC9CqB,OAAO,EAAEZ,IAAI,CAACW,aAAa,CAACrB,QAAQ,CAACE,gBAAgB,CAAE;UAAAqB,MAAA;UAAAC,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,CACxD,CAAC,EACF;UAAEC,SAAS,EAAE,KAAK;UAAEC,OAAO,EAAE;QAAY,CAC3C,CAAC;MACH;IACF;EACF,CAAC,EAAE,CAACtB,OAAO,EAAEG,SAAS,EAAED,IAAI,EAAEL,KAAK,CAAC,CAAC;EAErC,OAAO,EAAE;AACX,CAAC;AAED,eAAeF,MAAM","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Logged out","defaultMessage":"Logged out"},{"id":"You have been logged out from the site.","defaultMessage":"You have been logged out from the site."}]}},"sourceType":"module","externalDependencies":[]}