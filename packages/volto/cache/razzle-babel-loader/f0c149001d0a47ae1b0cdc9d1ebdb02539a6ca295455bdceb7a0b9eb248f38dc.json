{"ast":null,"code":"const _excluded = [\"condition\", \"to\", \"item\"];\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/ConditionalLink/ConditionalLink.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport UniversalLink from '@plone/volto/components/manage/UniversalLink/UniversalLink';\nimport PropTypes from 'prop-types';\nconst ConditionalLink = _ref => {\n  let {\n      condition,\n      to,\n      item\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  if (condition) {\n    return __jsx(UniversalLink, _extends({\n      href: to,\n      item: item\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    }), props.children);\n  } else {\n    return __jsx(React.Fragment, null, props.children);\n  }\n};\nConditionalLink.propTypes = {\n  condition: PropTypes.bool,\n  to: PropTypes.string,\n  item: PropTypes.shape({\n    '@id': PropTypes.string,\n    remoteUrl: PropTypes.string //of plone @type 'Link'\n  }),\n  children: PropTypes.node\n};\nexport default ConditionalLink;","map":{"version":3,"names":["React","UniversalLink","PropTypes","ConditionalLink","_ref","condition","to","item","props","_objectWithoutProperties","_excluded","__jsx","_extends","href","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","children","Fragment","propTypes","bool","string","shape","remoteUrl","node"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/ConditionalLink/ConditionalLink.jsx"],"sourcesContent":["import React from 'react';\nimport UniversalLink from '@plone/volto/components/manage/UniversalLink/UniversalLink';\nimport PropTypes from 'prop-types';\n\nconst ConditionalLink = ({ condition, to, item, ...props }) => {\n  if (condition) {\n    return (\n      <UniversalLink href={to} item={item} {...props}>\n        {props.children}\n      </UniversalLink>\n    );\n  } else {\n    return <>{props.children}</>;\n  }\n};\n\nConditionalLink.propTypes = {\n  condition: PropTypes.bool,\n  to: PropTypes.string,\n  item: PropTypes.shape({\n    '@id': PropTypes.string,\n    remoteUrl: PropTypes.string, //of plone @type 'Link'\n  }),\n  children: PropTypes.node,\n};\n\nexport default ConditionalLink;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,4DAA4D;AACtF,OAAOC,SAAS,MAAM,YAAY;AAElC,MAAMC,eAAe,GAAGC,IAAA,IAAuC;EAAA,IAAtC;MAAEC,SAAS;MAAEC,EAAE;MAAEC;IAAe,CAAC,GAAAH,IAAA;IAAPI,KAAK,GAAAC,wBAAA,CAAAL,IAAA,EAAAM,SAAA;EACtD,IAAIL,SAAS,EAAE;IACb,OACEM,KAAA,CAACV,aAAa,EAAAW,QAAA;MAACC,IAAI,EAAEP,EAAG;MAACC,IAAI,EAAEA;IAAK,GAAKC,KAAK;MAAAM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,IAC3CX,KAAK,CAACY,QACM,CAAC;EAEpB,CAAC,MAAM;IACL,OAAOT,KAAA,CAAAX,KAAA,CAAAqB,QAAA,QAAGb,KAAK,CAACY,QAAW,CAAC;EAC9B;AACF,CAAC;AAEDjB,eAAe,CAACmB,SAAS,GAAG;EAC1BjB,SAAS,EAAEH,SAAS,CAACqB,IAAI;EACzBjB,EAAE,EAAEJ,SAAS,CAACsB,MAAM;EACpBjB,IAAI,EAAEL,SAAS,CAACuB,KAAK,CAAC;IACpB,KAAK,EAAEvB,SAAS,CAACsB,MAAM;IACvBE,SAAS,EAAExB,SAAS,CAACsB,MAAM,CAAE;EAC/B,CAAC,CAAC;EACFJ,QAAQ,EAAElB,SAAS,CAACyB;AACtB,CAAC;AAED,eAAexB,eAAe","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}