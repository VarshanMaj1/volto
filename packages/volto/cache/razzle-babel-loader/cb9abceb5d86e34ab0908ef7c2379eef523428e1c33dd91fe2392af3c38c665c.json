{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Toast/Toast.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport successSVG from '@plone/volto/icons/ready.svg';\nimport infoSVG from '@plone/volto/icons/info.svg';\nimport errorSVG from '@plone/volto/icons/error.svg';\nimport warningSVG from '@plone/volto/icons/warning.svg';\nconst Toast = props => {\n  function getIcon(props) {\n    if (props.info) {\n      return infoSVG;\n    } else if (props.success) {\n      return successSVG;\n    } else if (props.error) {\n      return errorSVG;\n    } else if (props.warning) {\n      return warningSVG;\n    } else {\n      return successSVG;\n    }\n  }\n  const {\n    title,\n    content\n  } = props;\n  return __jsx(React.Fragment, null, __jsx(Icon, {\n    name: getIcon(props),\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"toast-inner-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, title && __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }\n  }, title), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, content)));\n};\nToast.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  info: PropTypes.bool,\n  success: PropTypes.bool,\n  error: PropTypes.bool,\n  warning: PropTypes.bool\n};\nexport default Toast;","map":{"version":3,"names":["React","PropTypes","Icon","successSVG","infoSVG","errorSVG","warningSVG","Toast","props","getIcon","info","success","error","warning","title","content","__jsx","Fragment","name","size","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","propTypes","oneOfType","string","array","object","isRequired","bool"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Toast/Toast.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\n\nimport successSVG from '@plone/volto/icons/ready.svg';\nimport infoSVG from '@plone/volto/icons/info.svg';\nimport errorSVG from '@plone/volto/icons/error.svg';\nimport warningSVG from '@plone/volto/icons/warning.svg';\n\nconst Toast = (props) => {\n  function getIcon(props) {\n    if (props.info) {\n      return infoSVG;\n    } else if (props.success) {\n      return successSVG;\n    } else if (props.error) {\n      return errorSVG;\n    } else if (props.warning) {\n      return warningSVG;\n    } else {\n      return successSVG;\n    }\n  }\n\n  const { title, content } = props;\n\n  return (\n    <>\n      <Icon name={getIcon(props)} size=\"18px\" />\n      <div className=\"toast-inner-content\">\n        {title && <h4>{title}</h4>}\n        <div>{content}</div>\n      </div>\n    </>\n  );\n};\n\nToast.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  info: PropTypes.bool,\n  success: PropTypes.bool,\n  error: PropTypes.bool,\n  warning: PropTypes.bool,\n};\n\nexport default Toast;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,yCAAyC;AAE1D,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,UAAU,MAAM,gCAAgC;AAEvD,MAAMC,KAAK,GAAIC,KAAK,IAAK;EACvB,SAASC,OAAOA,CAACD,KAAK,EAAE;IACtB,IAAIA,KAAK,CAACE,IAAI,EAAE;MACd,OAAON,OAAO;IAChB,CAAC,MAAM,IAAII,KAAK,CAACG,OAAO,EAAE;MACxB,OAAOR,UAAU;IACnB,CAAC,MAAM,IAAIK,KAAK,CAACI,KAAK,EAAE;MACtB,OAAOP,QAAQ;IACjB,CAAC,MAAM,IAAIG,KAAK,CAACK,OAAO,EAAE;MACxB,OAAOP,UAAU;IACnB,CAAC,MAAM;MACL,OAAOH,UAAU;IACnB;EACF;EAEA,MAAM;IAAEW,KAAK;IAAEC;EAAQ,CAAC,GAAGP,KAAK;EAEhC,OACEQ,KAAA,CAAAhB,KAAA,CAAAiB,QAAA,QACED,KAAA,CAACd,IAAI;IAACgB,IAAI,EAAET,OAAO,CAACD,KAAK,CAAE;IAACW,IAAI,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EAC1CT,KAAA;IAAKU,SAAS,EAAC,qBAAqB;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjCX,KAAK,IAAIE,KAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKX,KAAU,CAAC,EAC1BE,KAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAMV,OAAa,CAChB,CACL,CAAC;AAEP,CAAC;AAEDR,KAAK,CAACoB,SAAS,GAAG;EAChBb,KAAK,EAAEb,SAAS,CAAC2B,SAAS,CAAC,CAAC3B,SAAS,CAAC4B,MAAM,EAAE5B,SAAS,CAAC6B,KAAK,CAAC,CAAC;EAC/Df,OAAO,EAAEd,SAAS,CAAC2B,SAAS,CAAC,CAAC3B,SAAS,CAAC4B,MAAM,EAAE5B,SAAS,CAAC8B,MAAM,CAAC,CAAC,CAACC,UAAU;EAC7EtB,IAAI,EAAET,SAAS,CAACgC,IAAI;EACpBtB,OAAO,EAAEV,SAAS,CAACgC,IAAI;EACvBrB,KAAK,EAAEX,SAAS,CAACgC,IAAI;EACrBpB,OAAO,EAAEZ,SAAS,CAACgC;AACrB,CAAC;AAED,eAAe1B,KAAK","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}