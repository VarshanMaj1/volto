{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto-slate/src/editor/ui/SlateToolbar.jsx\";\nvar __jsx = React.createElement;\n/**\n * This is the main toolbar, which:\n *\n * - appears only when a range selection exists\n * - can be toggled between expanded and hovering state\n *\n */\n\nimport React from 'react';\nimport cx from 'classnames';\nimport toggleIcon from '@plone/volto/icons/more.svg';\nimport Toolbar from './Toolbar';\nimport ExpandedToolbar from './ExpandedToolbar';\nimport ToolbarButton from './ToolbarButton';\nimport config from '@plone/volto/registry';\nconst SlateToolbar = props => {\n  const {\n    selected,\n    showExpandedToolbar,\n    setShowExpandedToolbar,\n    className,\n    enableExpando = false,\n    show\n  } = props;\n  const slate = props.slateSettings || config.settings.slate;\n  const {\n    toolbarButtons,\n    expandedToolbarButtons,\n    buttons\n  } = slate;\n  function renderButton(name, index) {\n    const Btn = buttons[name];\n    if (!Btn) {\n      // eslint-disable-next-line\n      console.warn('Button not found:', name);\n      return null;\n    }\n    // using also name because some buttons can be like \"Separator\"\n    return __jsx(Btn, {\n      key: `${name}-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }\n    });\n  }\n  return __jsx(React.Fragment, null, !showExpandedToolbar && __jsx(Toolbar, {\n    show: show,\n    toggleButton: enableExpando && __jsx(ToolbarButton, {\n      title: \"More...\",\n      onMouseDown: event => {\n        setShowExpandedToolbar(!showExpandedToolbar);\n        event.preventDefault();\n      },\n      icon: toggleIcon,\n      active: showExpandedToolbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }),\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, toolbarButtons === null || toolbarButtons === void 0 ? void 0 : toolbarButtons.map(renderButton)), __jsx(\"div\", {\n    className: cx('toolbar-wrapper', {\n      active: showExpandedToolbar && selected\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, selected && showExpandedToolbar && __jsx(ExpandedToolbar, {\n    show: show,\n    toggleButton: __jsx(ToolbarButton, {\n      title: \"Less...\",\n      onMouseDown: event => {\n        setShowExpandedToolbar(!showExpandedToolbar);\n        event.preventDefault();\n      },\n      icon: toggleIcon,\n      active: showExpandedToolbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, expandedToolbarButtons === null || expandedToolbarButtons === void 0 ? void 0 : expandedToolbarButtons.map(renderButton))));\n};\n_c = SlateToolbar;\nexport default SlateToolbar;\nvar _c;\n$RefreshReg$(_c, \"SlateToolbar\");","map":{"version":3,"names":["React","cx","toggleIcon","Toolbar","ExpandedToolbar","ToolbarButton","config","SlateToolbar","props","selected","showExpandedToolbar","setShowExpandedToolbar","className","enableExpando","show","slate","slateSettings","settings","toolbarButtons","expandedToolbarButtons","buttons","renderButton","name","index","Btn","console","warn","__jsx","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","toggleButton","title","onMouseDown","event","preventDefault","icon","active","map","_c","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto-slate/src/editor/ui/SlateToolbar.jsx"],"sourcesContent":["/**\n * This is the main toolbar, which:\n *\n * - appears only when a range selection exists\n * - can be toggled between expanded and hovering state\n *\n */\n\nimport React from 'react';\nimport cx from 'classnames';\n\nimport toggleIcon from '@plone/volto/icons/more.svg';\n\nimport Toolbar from './Toolbar';\nimport ExpandedToolbar from './ExpandedToolbar';\nimport ToolbarButton from './ToolbarButton';\n\nimport config from '@plone/volto/registry';\n\nconst SlateToolbar = (props) => {\n  const {\n    selected,\n    showExpandedToolbar,\n    setShowExpandedToolbar,\n    className,\n    enableExpando = false,\n    show,\n  } = props;\n\n  const slate = props.slateSettings || config.settings.slate;\n\n  const { toolbarButtons, expandedToolbarButtons, buttons } = slate;\n\n  function renderButton(name, index) {\n    const Btn = buttons[name];\n    if (!Btn) {\n      // eslint-disable-next-line\n      console.warn('Button not found:', name);\n      return null;\n    }\n    // using also name because some buttons can be like \"Separator\"\n    return <Btn key={`${name}-${index}`} />;\n  }\n\n  return (\n    <>\n      {!showExpandedToolbar && (\n        <Toolbar\n          show={show}\n          toggleButton={\n            enableExpando && (\n              <ToolbarButton\n                title=\"More...\"\n                onMouseDown={(event) => {\n                  setShowExpandedToolbar(!showExpandedToolbar);\n                  event.preventDefault();\n                }}\n                icon={toggleIcon}\n                active={showExpandedToolbar}\n              />\n            )\n          }\n          className={className}\n        >\n          {toolbarButtons?.map(renderButton)}\n        </Toolbar>\n      )}\n      <div\n        className={cx('toolbar-wrapper', {\n          active: showExpandedToolbar && selected,\n        })}\n      >\n        {selected && showExpandedToolbar && (\n          <ExpandedToolbar\n            show={show}\n            toggleButton={\n              <ToolbarButton\n                title=\"Less...\"\n                onMouseDown={(event) => {\n                  setShowExpandedToolbar(!showExpandedToolbar);\n                  event.preventDefault();\n                }}\n                icon={toggleIcon}\n                active={showExpandedToolbar}\n              />\n            }\n          >\n            {expandedToolbarButtons?.map(renderButton)}\n          </ExpandedToolbar>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default SlateToolbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}