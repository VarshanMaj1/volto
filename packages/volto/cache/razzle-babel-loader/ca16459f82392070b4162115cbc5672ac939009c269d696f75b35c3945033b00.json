{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Listing/DefaultTemplate.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ConditionalLink from '@plone/volto/components/manage/ConditionalLink/ConditionalLink';\nimport UniversalLink from '@plone/volto/components/manage/UniversalLink/UniversalLink';\nimport { flattenToAppURL, isInternalURL } from '@plone/volto/helpers/Url/Url';\nconst DefaultTemplate = ({\n  headlineTag,\n  items,\n  linkTitle,\n  linkHref,\n  isEditMode\n}) => {\n  var _linkHref$;\n  let link = null;\n  let href = (linkHref === null || linkHref === void 0 ? void 0 : (_linkHref$ = linkHref[0]) === null || _linkHref$ === void 0 ? void 0 : _linkHref$['@id']) || '';\n  if (isInternalURL(href)) {\n    link = __jsx(ConditionalLink, {\n      to: flattenToAppURL(href),\n      condition: !isEditMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, linkTitle || href);\n  } else if (href) {\n    link = __jsx(UniversalLink, {\n      href: href,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }\n    }, linkTitle || href);\n  }\n  const getTitleTag = tag => {\n    const level = tag.slice(-1);\n    if (/\\d/.test(level)) {\n      return `h${Number(level) + 1}`;\n    } else {\n      return 'h3';\n    }\n  };\n  const TitleTag = headlineTag ? getTitleTag(headlineTag) : 'h3';\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, items.map(item => __jsx(\"div\", {\n    className: \"listing-item\",\n    key: item['@id'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, __jsx(ConditionalLink, {\n    item: item,\n    condition: !isEditMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"listing-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, __jsx(TitleTag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, item.title ? item.title : item.id), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, item.description)))))), link && __jsx(\"div\", {\n    className: \"footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }\n  }, link));\n};\n_c = DefaultTemplate;\nDefaultTemplate.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n  linkMore: PropTypes.any,\n  isEditMode: PropTypes.bool\n};\nexport default DefaultTemplate;\nvar _c;\n$RefreshReg$(_c, \"DefaultTemplate\");","map":{"version":3,"names":["React","PropTypes","ConditionalLink","UniversalLink","flattenToAppURL","isInternalURL","DefaultTemplate","headlineTag","items","linkTitle","linkHref","isEditMode","_linkHref$","link","href","__jsx","to","condition","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","getTitleTag","tag","level","slice","test","Number","TitleTag","Fragment","className","map","item","key","title","id","description","_c","propTypes","arrayOf","any","isRequired","linkMore","bool","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Listing/DefaultTemplate.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ConditionalLink from '@plone/volto/components/manage/ConditionalLink/ConditionalLink';\nimport UniversalLink from '@plone/volto/components/manage/UniversalLink/UniversalLink';\nimport { flattenToAppURL, isInternalURL } from '@plone/volto/helpers/Url/Url';\n\nconst DefaultTemplate = ({\n  headlineTag,\n  items,\n  linkTitle,\n  linkHref,\n  isEditMode,\n}) => {\n  let link = null;\n  let href = linkHref?.[0]?.['@id'] || '';\n\n  if (isInternalURL(href)) {\n    link = (\n      <ConditionalLink to={flattenToAppURL(href)} condition={!isEditMode}>\n        {linkTitle || href}\n      </ConditionalLink>\n    );\n  } else if (href) {\n    link = <UniversalLink href={href}>{linkTitle || href}</UniversalLink>;\n  }\n\n  const getTitleTag = (tag) => {\n    const level = tag.slice(-1);\n    if (/\\d/.test(level)) {\n      return `h${Number(level) + 1}`;\n    } else {\n      return 'h3';\n    }\n  };\n  const TitleTag = headlineTag ? getTitleTag(headlineTag) : 'h3';\n\n  return (\n    <>\n      <div className=\"items\">\n        {items.map((item) => (\n          <div className=\"listing-item\" key={item['@id']}>\n            <ConditionalLink item={item} condition={!isEditMode}>\n              <div className=\"listing-body\">\n                <TitleTag>{item.title ? item.title : item.id}</TitleTag>\n                <p>{item.description}</p>\n              </div>\n            </ConditionalLink>\n          </div>\n        ))}\n      </div>\n\n      {link && <div className=\"footer\">{link}</div>}\n    </>\n  );\n};\nDefaultTemplate.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n  linkMore: PropTypes.any,\n  isEditMode: PropTypes.bool,\n};\nexport default DefaultTemplate;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}