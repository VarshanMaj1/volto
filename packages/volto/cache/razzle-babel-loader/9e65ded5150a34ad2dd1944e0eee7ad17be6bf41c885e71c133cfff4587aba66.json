{"ast":null,"code":"const _excluded = [\"className\", \"active\", \"reversed\", \"icon\", \"style\", \"title\"];\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto-slate/src/editor/ui/ToolbarButton.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport cx from 'classnames';\nimport React from 'react';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { Button } from 'semantic-ui-react';\nimport { useIntl } from 'react-intl';\nconst ToolbarButton = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      className,\n      active,\n      reversed,\n      icon,\n      style,\n      title = ''\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  const intl = useIntl();\n  const i18ntitle = typeof title !== 'string' ? intl.formatMessage(title) : title;\n  return __jsx(\"div\", {\n    className: \"button-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, __jsx(Button, _extends({\n    as: \"a\"\n  }, props, {\n    title: i18ntitle,\n    ref: ref,\n    style: style,\n    className: cx(className),\n    active: active,\n    inverted: reversed,\n    compact: true,\n    toggle: true,\n    size: \"tiny\",\n    icon: icon && __jsx(Icon, {\n      name: icon,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  })));\n});\nexport default ToolbarButton;","map":{"version":3,"names":["cx","React","Icon","Button","useIntl","ToolbarButton","forwardRef","_ref","ref","className","active","reversed","icon","style","title","props","_objectWithoutProperties","_excluded","intl","i18ntitle","formatMessage","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_extends","as","inverted","compact","toggle","size","name"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto-slate/src/editor/ui/ToolbarButton.jsx"],"sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { Button } from 'semantic-ui-react';\nimport { useIntl } from 'react-intl';\n\nconst ToolbarButton = React.forwardRef(\n  ({ className, active, reversed, icon, style, title = '', ...props }, ref) => {\n    const intl = useIntl();\n    const i18ntitle =\n      typeof title !== 'string' ? intl.formatMessage(title) : title;\n    return (\n      <div className=\"button-wrapper\">\n        <Button\n          as=\"a\"\n          {...props}\n          title={i18ntitle}\n          ref={ref}\n          style={style}\n          className={cx(className)}\n          active={active}\n          inverted={reversed}\n          compact\n          toggle\n          size=\"tiny\"\n          icon={icon && <Icon name={icon} size=\"24px\" />}\n        ></Button>\n      </div>\n    );\n  },\n);\n\nexport default ToolbarButton;\n"],"mappings":";;;;;;AAAA,OAAOA,EAAE,MAAM,YAAY;AAC3B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,yCAAyC;AAC1D,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,OAAO,QAAQ,YAAY;AAEpC,MAAMC,aAAa,gBAAGJ,KAAK,CAACK,UAAU,CACpC,CAAAC,IAAA,EAAqEC,GAAG,KAAK;EAAA,IAA5E;MAAEC,SAAS;MAAEC,MAAM;MAAEC,QAAQ;MAAEC,IAAI;MAAEC,KAAK;MAAEC,KAAK,GAAG;IAAa,CAAC,GAAAP,IAAA;IAAPQ,KAAK,GAAAC,wBAAA,CAAAT,IAAA,EAAAU,SAAA;EAC/D,MAAMC,IAAI,GAAGd,OAAO,CAAC,CAAC;EACtB,MAAMe,SAAS,GACb,OAAOL,KAAK,KAAK,QAAQ,GAAGI,IAAI,CAACE,aAAa,CAACN,KAAK,CAAC,GAAGA,KAAK;EAC/D,OACEO,KAAA;IAAKZ,SAAS,EAAC,gBAAgB;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC7BN,KAAA,CAAClB,MAAM,EAAAyB,QAAA;IACLC,EAAE,EAAC;EAAG,GACFd,KAAK;IACTD,KAAK,EAAEK,SAAU;IACjBX,GAAG,EAAEA,GAAI;IACTK,KAAK,EAAEA,KAAM;IACbJ,SAAS,EAAET,EAAE,CAACS,SAAS,CAAE;IACzBC,MAAM,EAAEA,MAAO;IACfoB,QAAQ,EAAEnB,QAAS;IACnBoB,OAAO;IACPC,MAAM;IACNC,IAAI,EAAC,MAAM;IACXrB,IAAI,EAAEA,IAAI,IAAIS,KAAA,CAACnB,IAAI;MAACgC,IAAI,EAAEtB,IAAK;MAACqB,IAAI,EAAC,MAAM;MAAAX,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAE;IAAAL,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACxC,CACN,CAAC;AAEV,CACF,CAAC;AAED,eAAetB,aAAa","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}