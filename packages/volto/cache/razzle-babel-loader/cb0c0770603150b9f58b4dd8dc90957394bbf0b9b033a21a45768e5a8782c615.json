{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/TemplateChooser/TemplateChooser.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { Button, Grid, Message } from 'semantic-ui-react';\nconst TemplateChooser = ({\n  templates,\n  onSelectTemplate\n}) => {\n  _s();\n  const intl = useIntl();\n  return __jsx(\"div\", {\n    className: \"template-chooser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    columns: templates(intl).length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, templates(intl).map((template, index) => __jsx(Grid.Column, {\n    key: template.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    className: \"template-chooser-item\",\n    onClick: () => onSelectTemplate(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: template.image,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"template-chooser-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, intl.formatMessage({\n    id: template.id,\n    defaultMessage: template.title\n  }))))))));\n};\n_s(TemplateChooser, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n_c = TemplateChooser;\nTemplateChooser.propTypes = {\n  templates: PropTypes.func.isRequired,\n  onSelectTemplate: PropTypes.func.isRequired\n};\nexport default TemplateChooser;\nvar _c;\n$RefreshReg$(_c, \"TemplateChooser\");","map":{"version":3,"names":["PropTypes","useIntl","Button","Grid","Message","TemplateChooser","templates","onSelectTemplate","_s","intl","__jsx","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","columns","length","map","template","index","Column","key","id","onClick","src","image","alt","formatMessage","defaultMessage","title","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/TemplateChooser/TemplateChooser.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { Button, Grid, Message } from 'semantic-ui-react';\n\nconst TemplateChooser = ({ templates, onSelectTemplate }) => {\n  const intl = useIntl();\n  return (\n    <div className=\"template-chooser\">\n      <Message>\n        <Grid columns={templates(intl).length}>\n          {templates(intl).map((template, index) => (\n            <Grid.Column key={template.id}>\n              <Button\n                className=\"template-chooser-item\"\n                onClick={() => onSelectTemplate(index)}\n              >\n                <img src={template.image} alt=\"\" />\n                <div className=\"template-chooser-title\">\n                  {intl.formatMessage({\n                    id: template.id,\n                    defaultMessage: template.title,\n                  })}\n                </div>\n              </Button>\n            </Grid.Column>\n          ))}\n        </Grid>\n      </Message>\n    </div>\n  );\n};\n\nTemplateChooser.propTypes = {\n  templates: PropTypes.func.isRequired,\n  onSelectTemplate: PropTypes.func.isRequired,\n};\n\nexport default TemplateChooser;\n"],"mappings":";;;;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,MAAM,EAAEC,IAAI,EAAEC,OAAO,QAAQ,mBAAmB;AAEzD,MAAMC,eAAe,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAMC,IAAI,GAAGR,OAAO,CAAC,CAAC;EACtB,OACES,KAAA;IAAKC,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC/BP,KAAA,CAACN,OAAO;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACNP,KAAA,CAACP,IAAI;IAACe,OAAO,EAAEZ,SAAS,CAACG,IAAI,CAAC,CAACU,MAAO;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACnCX,SAAS,CAACG,IAAI,CAAC,CAACW,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,KACnCZ,KAAA,CAACP,IAAI,CAACoB,MAAM;IAACC,GAAG,EAAEH,QAAQ,CAACI,EAAG;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC5BP,KAAA,CAACR,MAAM;IACLS,SAAS,EAAC,uBAAuB;IACjCe,OAAO,EAAEA,CAAA,KAAMnB,gBAAgB,CAACe,KAAK,CAAE;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEvCP,KAAA;IAAKiB,GAAG,EAAEN,QAAQ,CAACO,KAAM;IAACC,GAAG,EAAC,EAAE;IAAAjB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EACnCP,KAAA;IAAKC,SAAS,EAAC,wBAAwB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACpCR,IAAI,CAACqB,aAAa,CAAC;IAClBL,EAAE,EAAEJ,QAAQ,CAACI,EAAE;IACfM,cAAc,EAAEV,QAAQ,CAACW;EAC3B,CAAC,CACE,CACC,CACG,CACd,CACG,CACC,CACN,CAAC;AAEV,CAAC;AAACxB,EAAA,CA1BIH,eAAe;EAAA,QACNJ,OAAO;AAAA;AAAAgC,EAAA,GADhB5B,eAAe;AA4BrBA,eAAe,CAAC6B,SAAS,GAAG;EAC1B5B,SAAS,EAAEN,SAAS,CAACmC,IAAI,CAACC,UAAU;EACpC7B,gBAAgB,EAAEP,SAAS,CAACmC,IAAI,CAACC;AACnC,CAAC;AAED,eAAe/B,eAAe;AAAC,IAAA4B,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}