{"ast":null,"code":"import _extends from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Block/EditBlockWrapper.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { applyBlockDefaults, applyBlockInitialValue, getBlocksFieldname, blockHasValue, buildStyleClassNamesFromData, buildStyleObjectFromData, buildStyleClassNamesExtenders } from '@plone/volto/helpers/Blocks/Blocks';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport { Button } from 'semantic-ui-react';\nimport includes from 'lodash/includes';\nimport isBoolean from 'lodash/isBoolean';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport config from '@plone/volto/registry';\nimport BlockChooserButton from '@plone/volto/components/manage/BlockChooser/BlockChooserButton';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nconst messages = defineMessages({\n  delete: {\n    \"id\": \"delete\",\n    \"defaultMessage\": \"delete\"\n  }\n});\nconst EditBlockWrapper = props => {\n  const hideHandler = data => {\n    return !!data.fixed || !config.experimental.addBlockButton.enabled && !(blockHasValue(data) && props.blockProps.editable);\n  };\n  const {\n    intl,\n    blockProps,\n    draginfo,\n    children\n  } = props;\n  const {\n    allowedBlocks,\n    showRestricted,\n    block,\n    blocksConfig,\n    selected,\n    type,\n    onChangeBlock,\n    onDeleteBlock,\n    onInsertBlock,\n    onSelectBlock,\n    onMutateBlock,\n    data: originalData,\n    editable,\n    properties,\n    showBlockChooser,\n    navRoot,\n    contentType\n  } = blockProps;\n  const data = applyBlockDefaults(_objectSpread(_objectSpread({\n    data: originalData\n  }, blockProps), {}, {\n    intl\n  }));\n  const visible = selected && !hideHandler(data);\n  const required = isBoolean(data.required) ? data.required : includes(config.blocks.requiredBlocks, type);\n  let classNames = buildStyleClassNamesFromData(data.styles);\n  classNames = buildStyleClassNamesExtenders({\n    block,\n    content: properties,\n    data,\n    classNames\n  });\n  const style = buildStyleObjectFromData(data);\n\n  // We need to merge the StyleWrapper styles with the draggable props from b-D&D\n  const styleMergedWithDragProps = _objectSpread(_objectSpread({}, draginfo.draggableProps), {}, {\n    style: _objectSpread(_objectSpread({}, style), draginfo.draggableProps.style)\n  });\n  return __jsx(\"div\", _extends({\n    ref: draginfo.innerRef\n  }, styleMergedWithDragProps, {\n    // Right now, we can have the alignment information in the styles property or in the\n    // block data root, we inject the classname here for having control over the whole\n    // Block Edit wrapper\n    className: cx(`block-editor-${data['@type']}`, classNames, {\n      [data.align]: data.align\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", _extends({\n    style: {\n      visibility: visible ? 'visible' : 'hidden',\n      display: 'inline-block'\n    }\n  }, draginfo.dragHandleProps, {\n    className: \"drag handle wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), __jsx(Icon, {\n    name: dragSVG,\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: `ui drag block inner ${type}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, children, selected && !required && editable && __jsx(Button, {\n    icon: true,\n    basic: true,\n    onClick: () => onDeleteBlock(block, true),\n    className: \"delete-button\",\n    \"aria-label\": intl.formatMessage(messages.delete),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    name: trashSVG,\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  })), config.experimental.addBlockButton.enabled && showBlockChooser && __jsx(BlockChooserButton, {\n    data: data,\n    block: block,\n    onInsertBlock: (id, value) => {\n      if (blockHasValue(data)) {\n        onSelectBlock(onInsertBlock(id, value));\n      } else {\n        const blocksFieldname = getBlocksFieldname(properties);\n        const newFormData = applyBlockInitialValue({\n          id,\n          value,\n          blocksConfig,\n          formData: _objectSpread(_objectSpread({}, properties), {}, {\n            [blocksFieldname]: _objectSpread(_objectSpread({}, properties[blocksFieldname]), {}, {\n              [id]: value || null\n            })\n          }),\n          intl\n        });\n        const newValue = newFormData[blocksFieldname][id];\n        onChangeBlock(id, newValue);\n      }\n    },\n    onMutateBlock: onMutateBlock,\n    allowedBlocks: allowedBlocks,\n    showRestricted: showRestricted,\n    blocksConfig: blocksConfig,\n    size: \"24px\",\n    properties: properties,\n    navRoot: navRoot,\n    contentType: contentType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }))));\n};\n_c = EditBlockWrapper;\nexport default _c2 = injectIntl(EditBlockWrapper);\nvar _c, _c2;\n$RefreshReg$(_c, \"EditBlockWrapper\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","Icon","applyBlockDefaults","applyBlockInitialValue","getBlocksFieldname","blockHasValue","buildStyleClassNamesFromData","buildStyleObjectFromData","buildStyleClassNamesExtenders","dragSVG","Button","includes","isBoolean","defineMessages","injectIntl","cx","config","BlockChooserButton","trashSVG","messages","delete","EditBlockWrapper","props","hideHandler","data","fixed","experimental","addBlockButton","enabled","blockProps","editable","intl","draginfo","children","allowedBlocks","showRestricted","block","blocksConfig","selected","type","onChangeBlock","onDeleteBlock","onInsertBlock","onSelectBlock","onMutateBlock","originalData","properties","showBlockChooser","navRoot","contentType","_objectSpread","visible","required","blocks","requiredBlocks","classNames","styles","content","style","styleMergedWithDragProps","draggableProps","__jsx","_extends","ref","innerRef","className","align","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","position","visibility","display","dragHandleProps","name","size","icon","basic","onClick","formatMessage","id","value","blocksFieldname","newFormData","formData","newValue","_c","_c2","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Block/EditBlockWrapper.jsx"],"sourcesContent":["import React from 'react';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport {\n  applyBlockDefaults,\n  applyBlockInitialValue,\n  getBlocksFieldname,\n  blockHasValue,\n  buildStyleClassNamesFromData,\n  buildStyleObjectFromData,\n  buildStyleClassNamesExtenders,\n} from '@plone/volto/helpers/Blocks/Blocks';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport { Button } from 'semantic-ui-react';\nimport includes from 'lodash/includes';\nimport isBoolean from 'lodash/isBoolean';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport config from '@plone/volto/registry';\nimport BlockChooserButton from '@plone/volto/components/manage/BlockChooser/BlockChooserButton';\n\nimport trashSVG from '@plone/volto/icons/delete.svg';\n\nconst messages = defineMessages({\n  delete: {\n    id: 'delete',\n    defaultMessage: 'delete',\n  },\n});\n\nconst EditBlockWrapper = (props) => {\n  const hideHandler = (data) => {\n    return (\n      !!data.fixed ||\n      (!config.experimental.addBlockButton.enabled &&\n        !(blockHasValue(data) && props.blockProps.editable))\n    );\n  };\n\n  const { intl, blockProps, draginfo, children } = props;\n  const {\n    allowedBlocks,\n    showRestricted,\n    block,\n    blocksConfig,\n    selected,\n    type,\n    onChangeBlock,\n    onDeleteBlock,\n    onInsertBlock,\n    onSelectBlock,\n    onMutateBlock,\n    data: originalData,\n    editable,\n    properties,\n    showBlockChooser,\n    navRoot,\n    contentType,\n  } = blockProps;\n\n  const data = applyBlockDefaults({ data: originalData, ...blockProps, intl });\n\n  const visible = selected && !hideHandler(data);\n\n  const required = isBoolean(data.required)\n    ? data.required\n    : includes(config.blocks.requiredBlocks, type);\n\n  let classNames = buildStyleClassNamesFromData(data.styles);\n  classNames = buildStyleClassNamesExtenders({\n    block,\n    content: properties,\n    data,\n    classNames,\n  });\n  const style = buildStyleObjectFromData(data);\n\n  // We need to merge the StyleWrapper styles with the draggable props from b-D&D\n  const styleMergedWithDragProps = {\n    ...draginfo.draggableProps,\n    style: { ...style, ...draginfo.draggableProps.style },\n  };\n\n  return (\n    <div\n      ref={draginfo.innerRef}\n      {...styleMergedWithDragProps}\n      // Right now, we can have the alignment information in the styles property or in the\n      // block data root, we inject the classname here for having control over the whole\n      // Block Edit wrapper\n      className={cx(`block-editor-${data['@type']}`, classNames, {\n        [data.align]: data.align,\n      })}\n    >\n      <div style={{ position: 'relative' }}>\n        <div\n          style={{\n            visibility: visible ? 'visible' : 'hidden',\n            display: 'inline-block',\n          }}\n          {...draginfo.dragHandleProps}\n          className=\"drag handle wrapper\"\n        >\n          <Icon name={dragSVG} size=\"18px\" />\n        </div>\n        <div className={`ui drag block inner ${type}`}>\n          {children}\n          {selected && !required && editable && (\n            <Button\n              icon\n              basic\n              onClick={() => onDeleteBlock(block, true)}\n              className=\"delete-button\"\n              aria-label={intl.formatMessage(messages.delete)}\n            >\n              <Icon name={trashSVG} size=\"18px\" />\n            </Button>\n          )}\n          {config.experimental.addBlockButton.enabled && showBlockChooser && (\n            <BlockChooserButton\n              data={data}\n              block={block}\n              onInsertBlock={(id, value) => {\n                if (blockHasValue(data)) {\n                  onSelectBlock(onInsertBlock(id, value));\n                } else {\n                  const blocksFieldname = getBlocksFieldname(properties);\n                  const newFormData = applyBlockInitialValue({\n                    id,\n                    value,\n                    blocksConfig,\n                    formData: {\n                      ...properties,\n                      [blocksFieldname]: {\n                        ...properties[blocksFieldname],\n                        [id]: value || null,\n                      },\n                    },\n                    intl,\n                  });\n                  const newValue = newFormData[blocksFieldname][id];\n                  onChangeBlock(id, newValue);\n                }\n              }}\n              onMutateBlock={onMutateBlock}\n              allowedBlocks={allowedBlocks}\n              showRestricted={showRestricted}\n              blocksConfig={blocksConfig}\n              size=\"24px\"\n              properties={properties}\n              navRoot={navRoot}\n              contentType={contentType}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default injectIntl(EditBlockWrapper);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"delete","defaultMessage":"delete"}]}},"sourceType":"module","externalDependencies":[]}