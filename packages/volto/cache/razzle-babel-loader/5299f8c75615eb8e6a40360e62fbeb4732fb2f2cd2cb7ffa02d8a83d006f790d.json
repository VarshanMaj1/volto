{"ast":null,"code":"import _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/**\n * Url helper.\n * @module helpers/Url\n */\n\nimport last from 'lodash/last';\nimport memoize from 'lodash/memoize';\nimport isArray from 'lodash/isArray';\nimport isObject from 'lodash/isObject';\nimport isString from 'lodash/isString';\nimport { urlRegex, telRegex, mailRegex } from './urlRegex';\nimport prependHttp from 'prepend-http';\nimport config from '@plone/volto/registry';\nimport { matchPath } from 'react-router';\n\n/**\n * Get base url.\n * @function getBaseUrl\n * @param {string} url Url to be parsed.\n * @return {string} Base url of content object.\n */\nexport const getBaseUrl = memoize(url => {\n  const {\n    settings\n  } = config;\n  if (url === undefined) return;\n\n  // We allow settings.nonContentRoutes to have strings (that are supposed to match\n  // ending strings of pathnames, so we are converting them to RegEx to match also\n  const normalized_nonContentRoutes = settings.nonContentRoutes.map(item => {\n    if (item.test) {\n      return item;\n    } else {\n      return new RegExp(item + '$');\n    }\n  });\n  let adjustedUrl = normalized_nonContentRoutes.reduce((acc, item) => acc.replace(item, ''), url);\n  adjustedUrl = adjustedUrl || '/';\n  return adjustedUrl === '/' ? '' : adjustedUrl;\n});\n\n/**\n * Get parent url.\n * @function getParentUrl\n * @param {string} url Url to be parsed.\n * @return {string} Parent url of content object.\n */\nexport const getParentUrl = memoize(url => {\n  return url.substring(0, url.lastIndexOf('/'));\n});\n\n/**\n * Get id from url.\n * @function getId\n * @param {string} url Url to be parsed.\n * @return {string} Id of content object.\n */\nexport function getId(url) {\n  return last(url.replace(/\\?.*$/, '').split('/'));\n}\n\n/**\n * Get view of an url.\n * @function getView\n * @param {string} url Url to be parsed.\n * @return {string} View of content object.\n */\nexport function getView(url) {\n  const view = last(url.replace(/\\?.*$/, '').split('/'));\n  if (['add', 'layout', 'contents', 'edit', 'delete', 'diff', 'history', 'sharing', 'controlpanel'].indexOf(view) === -1) {\n    return 'view';\n  }\n  return view === 'layout' ? 'edit' : view;\n}\n\n/**\n * Flatten to app server URL - Given a URL if it starts with the API server URL\n * this method flattens it (removes) the server part\n * TODO: Update it when implementing non-root based app location (on a\n * directory other than /, eg. /myapp)\n * @method flattenToAppURL\n * @param {string} url URL of the object\n * @returns {string} Flattened URL to the app server\n */\nexport function flattenToAppURL(url) {\n  const {\n    settings\n  } = config;\n  return url && url.replace(settings.internalApiPath, '').replace(settings.apiPath, '').replace(settings.publicURL, '');\n}\n/**\n * Given a URL it remove the querystring from the URL.\n * @method stripQuerystring\n * @param {string} url URL of the object\n * @returns {string} URL without querystring\n */\nexport function stripQuerystring(url) {\n  return url.replace(/\\?.*$/, '');\n}\n\n/**\n * Given a URL if it starts with the API server URL\n * this method removes the /api or the /Plone part.\n * @method toPublicURL\n * @param {string} url URL of the object\n * @returns {string} public URL\n */\nexport function toPublicURL(url) {\n  const {\n    settings\n  } = config;\n  return settings.publicURL.concat(flattenToAppURL(url));\n}\n\n/**\n * Returns true if the current view is a cms ui view\n * @method isCmsUi\n * @param {string} currentPathname pathname of the current view\n * @returns {boolean} true if the current view is a cms ui view\n */\nexport const isCmsUi = memoize(currentPathname => {\n  const {\n    settings\n  } = config;\n  const fullPath = currentPathname.replace(/\\?.*$/, '');\n  // WARNING:\n  // not working properly for paths like /editors or similar\n  // because the regexp test does not take that into account\n  // https://github.com/plone/volto/issues/870\n  return settings.nonContentRoutes.reduce((acc, route) => {\n    var _settings$nonContentR;\n    return acc || !((_settings$nonContentR = settings.nonContentRoutesPublic) !== null && _settings$nonContentR !== void 0 && _settings$nonContentR.includes(route)) && new RegExp(route).test(fullPath);\n  }, false);\n});\n\n/**\n * Flatten to app server HTML - Given a text if it contains some urls that starts\n * with the API server URL this method flattens it (removes) the server part.\n * TODO: Update it when implementing non-root based app location (on a\n * directory other than /, eg. /myapp)\n * @method flattenHTMLToAppURL\n * @param {string} html Some html snippet\n * @returns {string} Same HTML with Flattened URLs to the app server\n */\nexport function flattenHTMLToAppURL(html) {\n  const {\n    settings\n  } = config;\n  return settings.internalApiPath ? html.replace(new RegExp(settings.internalApiPath, 'g'), '').replace(new RegExp(settings.apiPath, 'g'), '') : html.replace(new RegExp(settings.apiPath, 'g'), '');\n}\n\n/**\n * Add the app url\n * @method addAppURL\n * @param {string} url URL of the object\n * @returns {string} New URL with app\n */\nexport function addAppURL(url) {\n  const {\n    settings\n  } = config;\n  return url.indexOf(settings.apiPath) === 0 ? url : `${settings.apiPath}${url}`;\n}\n\n/**\n * Given a URL expands it to the backend URL\n * Useful when you have to actually call the backend from the\n * frontend code (eg. ICS calendar download)\n * It is seamless mode aware\n * @method expandToBackendURL\n * @param {string} url URL or path of the object\n * @returns {string} New URL with the backend URL\n */\nexport function expandToBackendURL(path) {\n  const {\n    settings\n  } = config;\n  const APISUFIX = settings.legacyTraverse ? '' : '/++api++';\n  let adjustedPath;\n  if (path.startsWith('http://') || path.startsWith('https://')) {\n    // flattenToAppURL first if we get a full URL\n    adjustedPath = flattenToAppURL(path);\n  } else {\n    // Next adds a / in front if not a full URL to make sure it's a valid relative path\n    adjustedPath = path[0] !== '/' ? `/${path}` : path;\n  }\n  let apiPath = '';\n  if (settings.internalApiPath && __SERVER__) {\n    apiPath = settings.internalApiPath;\n  } else if (settings.apiPath) {\n    apiPath = settings.apiPath;\n  }\n  return `${apiPath}${APISUFIX}${adjustedPath}`;\n}\n\n/**\n * Check if internal url\n * @method isInternalURL\n * @param {string} url URL of the object\n * @returns {boolean} True if internal url\n */\nexport function isInternalURL(url) {\n  var _config$settings$exte, _Object$keys;\n  const {\n    settings\n  } = config;\n  const isMatch = ((_config$settings$exte = config.settings.externalRoutes) !== null && _config$settings$exte !== void 0 ? _config$settings$exte : []).find(route => {\n    if (typeof route === 'object') {\n      return matchPath(flattenToAppURL(url), route.match);\n    }\n    return matchPath(flattenToAppURL(url), route);\n  });\n  const isExcluded = isMatch && ((_Object$keys = Object.keys(isMatch)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.length) > 0;\n  const internalURL = url && (url.indexOf(settings.publicURL) !== -1 || settings.internalApiPath && url.indexOf(settings.internalApiPath) !== -1 || url.indexOf(settings.apiPath) !== -1 || url.charAt(0) === '/' || url.charAt(0) === '.' || url.startsWith('#'));\n  if (internalURL && isExcluded) {\n    return false;\n  }\n  return internalURL;\n}\n\n/**\n * Check if it's a valid url\n * @method isUrl\n * @param {string} url URL of the object\n * @returns {boolean} True if is a valid url\n */\nexport function isUrl(url) {\n  return urlRegex().test(url);\n}\n\n/**\n * Get field url\n * @method getFieldURL\n * @param {object} data\n * @returns {string | any} URL string value if field is of url type or any.\n */\nexport const getFieldURL = data => {\n  let url = data;\n  const _isObject = data && isObject(data) && !isArray(data);\n  if (_isObject && data['@type'] === 'URL') {\n    var _ref, _ref2, _data$value;\n    url = (_ref = (_ref2 = (_data$value = data['value']) !== null && _data$value !== void 0 ? _data$value : data['url']) !== null && _ref2 !== void 0 ? _ref2 : data['href']) !== null && _ref !== void 0 ? _ref : data;\n  } else if (_isObject) {\n    var _ref3, _ref4, _data$Id;\n    url = (_ref3 = (_ref4 = (_data$Id = data['@id']) !== null && _data$Id !== void 0 ? _data$Id : data['url']) !== null && _ref4 !== void 0 ? _ref4 : data['href']) !== null && _ref3 !== void 0 ? _ref3 : data;\n  }\n  if (isArray(data)) {\n    url = data.map(item => getFieldURL(item));\n  }\n  if (isString(url) && isInternalURL(url)) return flattenToAppURL(url);\n  return url;\n};\n\n/**\n * Normalize URL, adds protocol (if required eg. user has not entered the protocol)\n * @method normalizeUrl\n * @param {string} url URL of the object\n * @returns {boolean} URL with the protocol\n */\nexport function normalizeUrl(url) {\n  return prependHttp(url);\n}\n\n/**\n * Removes protocol from URL (for display)\n * @method removeProtocol\n * @param {string} url URL of the object\n * @returns {string} URL without the protocol part\n */\nexport function removeProtocol(url) {\n  return url.replace('https://', '').replace('http://', '');\n}\nexport function isMail(text) {\n  return mailRegex().test(text);\n}\nexport function isTelephone(text) {\n  return telRegex().test(text);\n}\nexport function normaliseMail(email) {\n  var _email$toLowerCase;\n  if (email !== null && email !== void 0 && (_email$toLowerCase = email.toLowerCase()) !== null && _email$toLowerCase !== void 0 && _email$toLowerCase.startsWith('mailto:')) {\n    return email;\n  }\n  return `mailto:${email}`;\n}\nexport function normalizeTelephone(tel) {\n  var _tel$toLowerCase;\n  if (tel !== null && tel !== void 0 && (_tel$toLowerCase = tel.toLowerCase()) !== null && _tel$toLowerCase !== void 0 && _tel$toLowerCase.startsWith('tel:')) {\n    return tel;\n  }\n  return `tel:${tel}`;\n}\nexport function checkAndNormalizeUrl(url) {\n  let res = {\n    isMail: false,\n    isTelephone: false,\n    url: url,\n    isValid: true\n  };\n  if (URLUtils.isMail(URLUtils.normaliseMail(url))) {\n    //Mail\n    res.isMail = true;\n    res.url = URLUtils.normaliseMail(url);\n  } else if (URLUtils.isTelephone(url)) {\n    //Phone\n    res.isTelephone = true;\n    res.url = URLUtils.normalizeTelephone(url);\n  } else {\n    var _res$url;\n    //url\n    if (((_res$url = res.url) === null || _res$url === void 0 ? void 0 : _res$url.length) >= 0 && !res.url.startsWith('/') && !res.url.startsWith('#')) {\n      res.url = URLUtils.normalizeUrl(url);\n      if (!URLUtils.isUrl(res.url)) {\n        res.isValid = false;\n      }\n    }\n    if (res.url === undefined || res.url === null) res.isValid = false;\n  }\n  return res;\n}\nexport const URLUtils = {\n  normalizeTelephone,\n  normaliseMail,\n  normalizeUrl,\n  isTelephone,\n  isMail,\n  isUrl,\n  checkAndNormalizeUrl\n};\n\n/**\n * Given an image info object, it does flatten all the scales information to\n * match the ones stored in the catalog\n * 'http://localhost:3000/{path}/@@images/{scalefile}' -> '@images/{scalefile}'\n * @function flattenScales\n * @param {string} path path of the content object\n * @param {object} image image information object\n * @returns {object} New object with the flattened scale URLs\n */\nexport function flattenScales(path, image) {\n  function removeObjectIdFromURL(basePath, scale) {\n    return scale.replace(`${basePath}/`, '');\n  }\n  if (!image) return;\n  const basePath = image.base_path || path;\n  const imageInfo = _objectSpread(_objectSpread({}, image), {}, {\n    download: flattenToAppURL(removeObjectIdFromURL(basePath, image.download))\n  });\n  Object.keys(imageInfo.scales).forEach(key => {\n    imageInfo.scales[key].download = flattenToAppURL(removeObjectIdFromURL(basePath, image.scales[key].download));\n  });\n  return imageInfo;\n}","map":{"version":3,"names":["last","memoize","isArray","isObject","isString","urlRegex","telRegex","mailRegex","prependHttp","config","matchPath","getBaseUrl","url","settings","undefined","normalized_nonContentRoutes","nonContentRoutes","map","item","test","RegExp","adjustedUrl","reduce","acc","replace","getParentUrl","substring","lastIndexOf","getId","split","getView","view","indexOf","flattenToAppURL","internalApiPath","apiPath","publicURL","stripQuerystring","toPublicURL","concat","isCmsUi","currentPathname","fullPath","route","_settings$nonContentR","nonContentRoutesPublic","includes","flattenHTMLToAppURL","html","addAppURL","expandToBackendURL","path","APISUFIX","legacyTraverse","adjustedPath","startsWith","__SERVER__","isInternalURL","_config$settings$exte","_Object$keys","isMatch","externalRoutes","find","match","isExcluded","Object","keys","length","internalURL","charAt","isUrl","getFieldURL","data","_isObject","_ref","_ref2","_data$value","_ref3","_ref4","_data$Id","normalizeUrl","removeProtocol","isMail","text","isTelephone","normaliseMail","email","_email$toLowerCase","toLowerCase","normalizeTelephone","tel","_tel$toLowerCase","checkAndNormalizeUrl","res","isValid","URLUtils","_res$url","flattenScales","image","removeObjectIdFromURL","basePath","scale","base_path","imageInfo","_objectSpread","download","scales","forEach","key"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/helpers/Url/Url.js"],"sourcesContent":["/**\n * Url helper.\n * @module helpers/Url\n */\n\nimport last from 'lodash/last';\nimport memoize from 'lodash/memoize';\nimport isArray from 'lodash/isArray';\nimport isObject from 'lodash/isObject';\nimport isString from 'lodash/isString';\nimport { urlRegex, telRegex, mailRegex } from './urlRegex';\nimport prependHttp from 'prepend-http';\nimport config from '@plone/volto/registry';\nimport { matchPath } from 'react-router';\n\n/**\n * Get base url.\n * @function getBaseUrl\n * @param {string} url Url to be parsed.\n * @return {string} Base url of content object.\n */\nexport const getBaseUrl = memoize((url) => {\n  const { settings } = config;\n  if (url === undefined) return;\n\n  // We allow settings.nonContentRoutes to have strings (that are supposed to match\n  // ending strings of pathnames, so we are converting them to RegEx to match also\n  const normalized_nonContentRoutes = settings.nonContentRoutes.map((item) => {\n    if (item.test) {\n      return item;\n    } else {\n      return new RegExp(item + '$');\n    }\n  });\n\n  let adjustedUrl = normalized_nonContentRoutes.reduce(\n    (acc, item) => acc.replace(item, ''),\n    url,\n  );\n\n  adjustedUrl = adjustedUrl || '/';\n  return adjustedUrl === '/' ? '' : adjustedUrl;\n});\n\n/**\n * Get parent url.\n * @function getParentUrl\n * @param {string} url Url to be parsed.\n * @return {string} Parent url of content object.\n */\nexport const getParentUrl = memoize((url) => {\n  return url.substring(0, url.lastIndexOf('/'));\n});\n\n/**\n * Get id from url.\n * @function getId\n * @param {string} url Url to be parsed.\n * @return {string} Id of content object.\n */\nexport function getId(url) {\n  return last(url.replace(/\\?.*$/, '').split('/'));\n}\n\n/**\n * Get view of an url.\n * @function getView\n * @param {string} url Url to be parsed.\n * @return {string} View of content object.\n */\nexport function getView(url) {\n  const view = last(url.replace(/\\?.*$/, '').split('/'));\n  if (\n    [\n      'add',\n      'layout',\n      'contents',\n      'edit',\n      'delete',\n      'diff',\n      'history',\n      'sharing',\n      'controlpanel',\n    ].indexOf(view) === -1\n  ) {\n    return 'view';\n  }\n  return view === 'layout' ? 'edit' : view;\n}\n\n/**\n * Flatten to app server URL - Given a URL if it starts with the API server URL\n * this method flattens it (removes) the server part\n * TODO: Update it when implementing non-root based app location (on a\n * directory other than /, eg. /myapp)\n * @method flattenToAppURL\n * @param {string} url URL of the object\n * @returns {string} Flattened URL to the app server\n */\nexport function flattenToAppURL(url) {\n  const { settings } = config;\n  return (\n    url &&\n    url\n      .replace(settings.internalApiPath, '')\n      .replace(settings.apiPath, '')\n      .replace(settings.publicURL, '')\n  );\n}\n/**\n * Given a URL it remove the querystring from the URL.\n * @method stripQuerystring\n * @param {string} url URL of the object\n * @returns {string} URL without querystring\n */\nexport function stripQuerystring(url) {\n  return url.replace(/\\?.*$/, '');\n}\n\n/**\n * Given a URL if it starts with the API server URL\n * this method removes the /api or the /Plone part.\n * @method toPublicURL\n * @param {string} url URL of the object\n * @returns {string} public URL\n */\nexport function toPublicURL(url) {\n  const { settings } = config;\n  return settings.publicURL.concat(flattenToAppURL(url));\n}\n\n/**\n * Returns true if the current view is a cms ui view\n * @method isCmsUi\n * @param {string} currentPathname pathname of the current view\n * @returns {boolean} true if the current view is a cms ui view\n */\nexport const isCmsUi = memoize((currentPathname) => {\n  const { settings } = config;\n  const fullPath = currentPathname.replace(/\\?.*$/, '');\n  // WARNING:\n  // not working properly for paths like /editors or similar\n  // because the regexp test does not take that into account\n  // https://github.com/plone/volto/issues/870\n  return settings.nonContentRoutes.reduce(\n    (acc, route) =>\n      acc ||\n      (!settings.nonContentRoutesPublic?.includes(route) &&\n        new RegExp(route).test(fullPath)),\n    false,\n  );\n});\n\n/**\n * Flatten to app server HTML - Given a text if it contains some urls that starts\n * with the API server URL this method flattens it (removes) the server part.\n * TODO: Update it when implementing non-root based app location (on a\n * directory other than /, eg. /myapp)\n * @method flattenHTMLToAppURL\n * @param {string} html Some html snippet\n * @returns {string} Same HTML with Flattened URLs to the app server\n */\nexport function flattenHTMLToAppURL(html) {\n  const { settings } = config;\n  return settings.internalApiPath\n    ? html\n        .replace(new RegExp(settings.internalApiPath, 'g'), '')\n        .replace(new RegExp(settings.apiPath, 'g'), '')\n    : html.replace(new RegExp(settings.apiPath, 'g'), '');\n}\n\n/**\n * Add the app url\n * @method addAppURL\n * @param {string} url URL of the object\n * @returns {string} New URL with app\n */\nexport function addAppURL(url) {\n  const { settings } = config;\n  return url.indexOf(settings.apiPath) === 0\n    ? url\n    : `${settings.apiPath}${url}`;\n}\n\n/**\n * Given a URL expands it to the backend URL\n * Useful when you have to actually call the backend from the\n * frontend code (eg. ICS calendar download)\n * It is seamless mode aware\n * @method expandToBackendURL\n * @param {string} url URL or path of the object\n * @returns {string} New URL with the backend URL\n */\nexport function expandToBackendURL(path) {\n  const { settings } = config;\n  const APISUFIX = settings.legacyTraverse ? '' : '/++api++';\n  let adjustedPath;\n  if (path.startsWith('http://') || path.startsWith('https://')) {\n    // flattenToAppURL first if we get a full URL\n    adjustedPath = flattenToAppURL(path);\n  } else {\n    // Next adds a / in front if not a full URL to make sure it's a valid relative path\n    adjustedPath = path[0] !== '/' ? `/${path}` : path;\n  }\n\n  let apiPath = '';\n  if (settings.internalApiPath && __SERVER__) {\n    apiPath = settings.internalApiPath;\n  } else if (settings.apiPath) {\n    apiPath = settings.apiPath;\n  }\n\n  return `${apiPath}${APISUFIX}${adjustedPath}`;\n}\n\n/**\n * Check if internal url\n * @method isInternalURL\n * @param {string} url URL of the object\n * @returns {boolean} True if internal url\n */\nexport function isInternalURL(url) {\n  const { settings } = config;\n\n  const isMatch = (config.settings.externalRoutes ?? []).find((route) => {\n    if (typeof route === 'object') {\n      return matchPath(flattenToAppURL(url), route.match);\n    }\n    return matchPath(flattenToAppURL(url), route);\n  });\n\n  const isExcluded = isMatch && Object.keys(isMatch)?.length > 0;\n\n  const internalURL =\n    url &&\n    (url.indexOf(settings.publicURL) !== -1 ||\n      (settings.internalApiPath &&\n        url.indexOf(settings.internalApiPath) !== -1) ||\n      url.indexOf(settings.apiPath) !== -1 ||\n      url.charAt(0) === '/' ||\n      url.charAt(0) === '.' ||\n      url.startsWith('#'));\n\n  if (internalURL && isExcluded) {\n    return false;\n  }\n\n  return internalURL;\n}\n\n/**\n * Check if it's a valid url\n * @method isUrl\n * @param {string} url URL of the object\n * @returns {boolean} True if is a valid url\n */\nexport function isUrl(url) {\n  return urlRegex().test(url);\n}\n\n/**\n * Get field url\n * @method getFieldURL\n * @param {object} data\n * @returns {string | any} URL string value if field is of url type or any.\n */\nexport const getFieldURL = (data) => {\n  let url = data;\n  const _isObject = data && isObject(data) && !isArray(data);\n  if (_isObject && data['@type'] === 'URL') {\n    url = data['value'] ?? data['url'] ?? data['href'] ?? data;\n  } else if (_isObject) {\n    url = data['@id'] ?? data['url'] ?? data['href'] ?? data;\n  }\n  if (isArray(data)) {\n    url = data.map((item) => getFieldURL(item));\n  }\n  if (isString(url) && isInternalURL(url)) return flattenToAppURL(url);\n  return url;\n};\n\n/**\n * Normalize URL, adds protocol (if required eg. user has not entered the protocol)\n * @method normalizeUrl\n * @param {string} url URL of the object\n * @returns {boolean} URL with the protocol\n */\nexport function normalizeUrl(url) {\n  return prependHttp(url);\n}\n\n/**\n * Removes protocol from URL (for display)\n * @method removeProtocol\n * @param {string} url URL of the object\n * @returns {string} URL without the protocol part\n */\nexport function removeProtocol(url) {\n  return url.replace('https://', '').replace('http://', '');\n}\n\nexport function isMail(text) {\n  return mailRegex().test(text);\n}\n\nexport function isTelephone(text) {\n  return telRegex().test(text);\n}\n\nexport function normaliseMail(email) {\n  if (email?.toLowerCase()?.startsWith('mailto:')) {\n    return email;\n  }\n  return `mailto:${email}`;\n}\n\nexport function normalizeTelephone(tel) {\n  if (tel?.toLowerCase()?.startsWith('tel:')) {\n    return tel;\n  }\n  return `tel:${tel}`;\n}\n\nexport function checkAndNormalizeUrl(url) {\n  let res = {\n    isMail: false,\n    isTelephone: false,\n    url: url,\n    isValid: true,\n  };\n  if (URLUtils.isMail(URLUtils.normaliseMail(url))) {\n    //Mail\n    res.isMail = true;\n    res.url = URLUtils.normaliseMail(url);\n  } else if (URLUtils.isTelephone(url)) {\n    //Phone\n    res.isTelephone = true;\n    res.url = URLUtils.normalizeTelephone(url);\n  } else {\n    //url\n    if (\n      res.url?.length >= 0 &&\n      !res.url.startsWith('/') &&\n      !res.url.startsWith('#')\n    ) {\n      res.url = URLUtils.normalizeUrl(url);\n      if (!URLUtils.isUrl(res.url)) {\n        res.isValid = false;\n      }\n    }\n    if (res.url === undefined || res.url === null) res.isValid = false;\n  }\n  return res;\n}\n\nexport const URLUtils = {\n  normalizeTelephone,\n  normaliseMail,\n  normalizeUrl,\n  isTelephone,\n  isMail,\n  isUrl,\n  checkAndNormalizeUrl,\n};\n\n/**\n * Given an image info object, it does flatten all the scales information to\n * match the ones stored in the catalog\n * 'http://localhost:3000/{path}/@@images/{scalefile}' -> '@images/{scalefile}'\n * @function flattenScales\n * @param {string} path path of the content object\n * @param {object} image image information object\n * @returns {object} New object with the flattened scale URLs\n */\nexport function flattenScales(path, image) {\n  function removeObjectIdFromURL(basePath, scale) {\n    return scale.replace(`${basePath}/`, '');\n  }\n  if (!image) return;\n\n  const basePath = image.base_path || path;\n  const imageInfo = {\n    ...image,\n    download: flattenToAppURL(removeObjectIdFromURL(basePath, image.download)),\n  };\n\n  Object.keys(imageInfo.scales).forEach((key) => {\n    imageInfo.scales[key].download = flattenToAppURL(\n      removeObjectIdFromURL(basePath, image.scales[key].download),\n    );\n  });\n\n  return imageInfo;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}