{"ast":null,"code":"import _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/**\n * Actions reducer.\n * @module reducers/actions/actions\n */\n\nimport { GET_CONTENT, LIST_ACTIONS } from '@plone/volto/constants/ActionTypes';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport { hasApiExpander } from '@plone/volto/helpers/Utils/Utils';\nconst initialState = {\n  error: null,\n  actions: {\n    object: [],\n    object_buttons: [],\n    site_actions: [],\n    user: [],\n    document_actions: [],\n    portal_tabs: []\n  },\n  loaded: false,\n  loading: false\n};\n\n/**\n * Actions reducer.\n * @function actions\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function actions(state = initialState, action = {}) {\n  let hasExpander;\n  switch (action.type) {\n    case `${LIST_ACTIONS}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: false,\n        loading: true\n      });\n    case `${GET_CONTENT}_SUCCESS`:\n      hasExpander = hasApiExpander('actions', getBaseUrl(flattenToAppURL(action.result['@id'])));\n      if (hasExpander && !action.subrequest) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          error: null,\n          actions: action.result['@components'].actions,\n          loaded: true,\n          loading: false\n        });\n      }\n      return state;\n    case `${LIST_ACTIONS}_SUCCESS`:\n      // Even if the expander is set or not, if the LIST_ACTIONS is\n      // called, we want it to store the data if the actions data is\n      // not set in the expander data (['@components']) but in the \"normal\"\n      // action result (we look for the object property returned by the endpoint)\n      // Unfortunately, this endpoint returns all the actions in a plain object\n      // with no structure :(\n      if (action.result.object) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          error: null,\n          actions: action.result,\n          loaded: true,\n          loading: false\n        });\n      }\n      return state;\n    case `${LIST_ACTIONS}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        actions: {},\n        loaded: false,\n        loading: false\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_CONTENT","LIST_ACTIONS","flattenToAppURL","getBaseUrl","hasApiExpander","initialState","error","actions","object","object_buttons","site_actions","user","document_actions","portal_tabs","loaded","loading","state","action","hasExpander","type","_objectSpread","result","subrequest"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/reducers/actions/actions.js"],"sourcesContent":["/**\n * Actions reducer.\n * @module reducers/actions/actions\n */\n\nimport { GET_CONTENT, LIST_ACTIONS } from '@plone/volto/constants/ActionTypes';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport { hasApiExpander } from '@plone/volto/helpers/Utils/Utils';\n\nconst initialState = {\n  error: null,\n  actions: {\n    object: [],\n    object_buttons: [],\n    site_actions: [],\n    user: [],\n    document_actions: [],\n    portal_tabs: [],\n  },\n  loaded: false,\n  loading: false,\n};\n\n/**\n * Actions reducer.\n * @function actions\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function actions(state = initialState, action = {}) {\n  let hasExpander;\n  switch (action.type) {\n    case `${LIST_ACTIONS}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${GET_CONTENT}_SUCCESS`:\n      hasExpander = hasApiExpander(\n        'actions',\n        getBaseUrl(flattenToAppURL(action.result['@id'])),\n      );\n      if (hasExpander && !action.subrequest) {\n        return {\n          ...state,\n          error: null,\n          actions: action.result['@components'].actions,\n          loaded: true,\n          loading: false,\n        };\n      }\n      return state;\n    case `${LIST_ACTIONS}_SUCCESS`:\n      // Even if the expander is set or not, if the LIST_ACTIONS is\n      // called, we want it to store the data if the actions data is\n      // not set in the expander data (['@components']) but in the \"normal\"\n      // action result (we look for the object property returned by the endpoint)\n      // Unfortunately, this endpoint returns all the actions in a plain object\n      // with no structure :(\n      if (action.result.object) {\n        return {\n          ...state,\n          error: null,\n          actions: action.result,\n          loaded: true,\n          loading: false,\n        };\n      }\n      return state;\n    case `${LIST_ACTIONS}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        actions: {},\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA,SAASA,WAAW,EAAEC,YAAY,QAAQ,oCAAoC;AAC9E,SAASC,eAAe,EAAEC,UAAU,QAAQ,8BAA8B;AAC1E,SAASC,cAAc,QAAQ,kCAAkC;AAEjE,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE;IACPC,MAAM,EAAE,EAAE;IACVC,cAAc,EAAE,EAAE;IAClBC,YAAY,EAAE,EAAE;IAChBC,IAAI,EAAE,EAAE;IACRC,gBAAgB,EAAE,EAAE;IACpBC,WAAW,EAAE;EACf,CAAC;EACDC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASR,OAAOA,CAACS,KAAK,GAAGX,YAAY,EAAEY,MAAM,GAAG,CAAC,CAAC,EAAE;EACjE,IAAIC,WAAW;EACf,QAAQD,MAAM,CAACE,IAAI;IACjB,KAAK,GAAGlB,YAAY,UAAU;MAC5B,OAAAmB,aAAA,CAAAA,aAAA,KACKJ,KAAK;QACRV,KAAK,EAAE,IAAI;QACXQ,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAI;IAEjB,KAAK,GAAGf,WAAW,UAAU;MAC3BkB,WAAW,GAAGd,cAAc,CAC1B,SAAS,EACTD,UAAU,CAACD,eAAe,CAACe,MAAM,CAACI,MAAM,CAAC,KAAK,CAAC,CAAC,CAClD,CAAC;MACD,IAAIH,WAAW,IAAI,CAACD,MAAM,CAACK,UAAU,EAAE;QACrC,OAAAF,aAAA,CAAAA,aAAA,KACKJ,KAAK;UACRV,KAAK,EAAE,IAAI;UACXC,OAAO,EAAEU,MAAM,CAACI,MAAM,CAAC,aAAa,CAAC,CAACd,OAAO;UAC7CO,MAAM,EAAE,IAAI;UACZC,OAAO,EAAE;QAAK;MAElB;MACA,OAAOC,KAAK;IACd,KAAK,GAAGf,YAAY,UAAU;MAC5B;MACA;MACA;MACA;MACA;MACA;MACA,IAAIgB,MAAM,CAACI,MAAM,CAACb,MAAM,EAAE;QACxB,OAAAY,aAAA,CAAAA,aAAA,KACKJ,KAAK;UACRV,KAAK,EAAE,IAAI;UACXC,OAAO,EAAEU,MAAM,CAACI,MAAM;UACtBP,MAAM,EAAE,IAAI;UACZC,OAAO,EAAE;QAAK;MAElB;MACA,OAAOC,KAAK;IACd,KAAK,GAAGf,YAAY,OAAO;MACzB,OAAAmB,aAAA,CAAAA,aAAA,KACKJ,KAAK;QACRV,KAAK,EAAEW,MAAM,CAACX,KAAK;QACnBC,OAAO,EAAE,CAAC,CAAC;QACXO,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAK;IAElB;MACE,OAAOC,KAAK;EAChB;AACF","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}