{"ast":null,"code":"import _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _extends from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/View/EventView.jsx\";\nvar __jsx = React.createElement;\n/**\n * EventView view component.\n * @module components/theme/View/EventView\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { hasBlocksData } from '@plone/volto/helpers/Blocks/Blocks';\nimport { flattenHTMLToAppURL } from '@plone/volto/helpers/Url/Url';\nimport { Grid } from 'semantic-ui-react';\nimport RenderBlocks from '@plone/volto/components/theme/View/RenderBlocks';\nimport EventDetails from '@plone/volto/components/theme/EventDetails/EventDetails';\nimport { Container as SemanticContainer } from 'semantic-ui-react';\nimport config from '@plone/volto/registry';\nconst EventTextfieldView = ({\n  content\n}) => {\n  const Image = config.getComponent({\n    name: 'Image'\n  }).component;\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, content.title && __jsx(\"h1\", {\n    className: \"documentFirstHeading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, content.title), content.description && __jsx(\"p\", {\n    className: \"documentDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, content.description), content.image && __jsx(Image, {\n    className: \"document-image ui right floated image\",\n    item: content,\n    imageField: \"image\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), content.text && __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: flattenHTMLToAppURL(content.text.data)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }));\n};\n\n/**\n * EventView view component class.\n * @function EventView\n * @params {object} content Content object.\n * @returns {string} Markup of the component.\n */\n_c = EventTextfieldView;\nconst EventView = props => {\n  const {\n    content\n  } = props;\n  const Container = config.getComponent({\n    name: 'Container'\n  }).component || SemanticContainer;\n  return __jsx(Container, {\n    id: \"page-document\",\n    className: \"view-wrapper event-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(Grid.Column, {\n    width: 7,\n    className: \"mobile hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, hasBlocksData(content) ? __jsx(RenderBlocks, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })) : __jsx(EventTextfieldView, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid.Column, {\n    width: 5,\n    className: \"mobile hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(EventDetails, {\n    content: content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), __jsx(Grid.Column, {\n    width: 12,\n    only: \"mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, hasBlocksData(content) ? __jsx(React.Fragment, null, __jsx(RenderBlocks, _extends({}, props, {\n    content: _objectSpread(_objectSpread({}, content), {}, {\n      blocks_layout: {\n        items: props.content.blocks_layout.items.slice(0, 1)\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  })), __jsx(EventDetails, {\n    content: content,\n    display_as: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }), __jsx(RenderBlocks, _extends({}, props, {\n    content: _objectSpread(_objectSpread({}, content), {}, {\n      blocks_layout: {\n        items: props.content.blocks_layout.items.slice(1)\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }))) : __jsx(EventTextfieldView, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  })))));\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_c2 = EventView;\nEventView.propTypes = {\n  content: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    text: PropTypes.shape({\n      data: PropTypes.string\n    }),\n    attendees: PropTypes.arrayOf(PropTypes.string).isRequired,\n    contact_email: PropTypes.string,\n    contact_name: PropTypes.string,\n    contact_phone: PropTypes.string,\n    end: PropTypes.string.isRequired,\n    event_url: PropTypes.string,\n    location: PropTypes.string,\n    open_end: PropTypes.bool,\n    recurrence: PropTypes.any,\n    start: PropTypes.string.isRequired,\n    subjects: PropTypes.arrayOf(PropTypes.string).isRequired,\n    whole_day: PropTypes.bool\n  }).isRequired\n};\nexport default EventView;\nvar _c, _c2;\n$RefreshReg$(_c, \"EventTextfieldView\");\n$RefreshReg$(_c2, \"EventView\");","map":{"version":3,"names":["React","PropTypes","hasBlocksData","flattenHTMLToAppURL","Grid","RenderBlocks","EventDetails","Container","SemanticContainer","config","EventTextfieldView","content","Image","getComponent","name","component","__jsx","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","className","description","image","item","imageField","alt","text","dangerouslySetInnerHTML","__html","data","_c","EventView","props","id","Column","width","_extends","only","_objectSpread","blocks_layout","items","slice","display_as","_c2","propTypes","shape","string","attendees","arrayOf","isRequired","contact_email","contact_name","contact_phone","end","event_url","location","open_end","bool","recurrence","any","start","subjects","whole_day","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/View/EventView.jsx"],"sourcesContent":["/**\n * EventView view component.\n * @module components/theme/View/EventView\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { hasBlocksData } from '@plone/volto/helpers/Blocks/Blocks';\nimport { flattenHTMLToAppURL } from '@plone/volto/helpers/Url/Url';\nimport { Grid } from 'semantic-ui-react';\nimport RenderBlocks from '@plone/volto/components/theme/View/RenderBlocks';\nimport EventDetails from '@plone/volto/components/theme/EventDetails/EventDetails';\nimport { Container as SemanticContainer } from 'semantic-ui-react';\nimport config from '@plone/volto/registry';\n\nconst EventTextfieldView = ({ content }) => {\n  const Image = config.getComponent({ name: 'Image' }).component;\n\n  return (\n    <React.Fragment>\n      {content.title && (\n        <h1 className=\"documentFirstHeading\">{content.title}</h1>\n      )}\n      {content.description && (\n        <p className=\"documentDescription\">{content.description}</p>\n      )}\n      {content.image && (\n        <Image\n          className=\"document-image ui right floated image\"\n          item={content}\n          imageField=\"image\"\n          alt=\"\"\n        />\n      )}\n      {content.text && (\n        <div\n          dangerouslySetInnerHTML={{\n            __html: flattenHTMLToAppURL(content.text.data),\n          }}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\n/**\n * EventView view component class.\n * @function EventView\n * @params {object} content Content object.\n * @returns {string} Markup of the component.\n */\nconst EventView = (props) => {\n  const { content } = props;\n  const Container =\n    config.getComponent({ name: 'Container' }).component || SemanticContainer;\n\n  return (\n    <Container id=\"page-document\" className=\"view-wrapper event-view\">\n      <Grid>\n        <Grid.Column width={7} className=\"mobile hidden\">\n          {hasBlocksData(content) ? (\n            <RenderBlocks {...props} />\n          ) : (\n            <EventTextfieldView {...props} />\n          )}\n        </Grid.Column>\n        <Grid.Column width={5} className=\"mobile hidden\">\n          <EventDetails content={content} />\n        </Grid.Column>\n        <Grid.Column width={12} only=\"mobile\">\n          {hasBlocksData(content) ? (\n            <>\n              <RenderBlocks\n                {...props}\n                content={{\n                  ...content,\n                  blocks_layout: {\n                    items: props.content.blocks_layout.items.slice(0, 1),\n                  },\n                }}\n              />\n              <EventDetails content={content} display_as=\"div\" />\n              <RenderBlocks\n                {...props}\n                content={{\n                  ...content,\n                  blocks_layout: {\n                    items: props.content.blocks_layout.items.slice(1),\n                  },\n                }}\n              />\n            </>\n          ) : (\n            <EventTextfieldView {...props} />\n          )}\n        </Grid.Column>\n      </Grid>\n    </Container>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nEventView.propTypes = {\n  content: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    text: PropTypes.shape({\n      data: PropTypes.string,\n    }),\n    attendees: PropTypes.arrayOf(PropTypes.string).isRequired,\n    contact_email: PropTypes.string,\n    contact_name: PropTypes.string,\n    contact_phone: PropTypes.string,\n    end: PropTypes.string.isRequired,\n    event_url: PropTypes.string,\n    location: PropTypes.string,\n    open_end: PropTypes.bool,\n    recurrence: PropTypes.any,\n    start: PropTypes.string.isRequired,\n    subjects: PropTypes.arrayOf(PropTypes.string).isRequired,\n    whole_day: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default EventView;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}