{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Search/components/ViewSwitcher.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Option, DropdownIndicator } from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { selectTheme, sortOnSelectStyles } from './SelectStyling';\nimport config from '@plone/volto/registry';\nconst getViewTitle = viewId => {\n  var _config$blocks$blocks, _config$blocks$blocks2;\n  return (_config$blocks$blocks = config.blocks.blocksConfig.listing.variations) === null || _config$blocks$blocks === void 0 ? void 0 : (_config$blocks$blocks2 = _config$blocks$blocks.find(v => v.id === viewId)) === null || _config$blocks$blocks2 === void 0 ? void 0 : _config$blocks$blocks2.title;\n};\nconst messages = defineMessages({\n  selectView: {\n    \"id\": \"selectView\",\n    \"defaultMessage\": \"Select view\"\n  }\n});\nfunction ViewSwitcher(props) {\n  const {\n    data,\n    intl,\n    reactSelect,\n    selectedView,\n    setSelectedView\n  } = props;\n  const Select = reactSelect.default;\n  return __jsx(Select, {\n    id: \"select-search-sort-on\",\n    name: \"select-searchblock-sort-on\",\n    className: \"search-react-select-container\",\n    classNamePrefix: \"react-select\",\n    placeholder: intl.formatMessage(messages.selectView),\n    styles: sortOnSelectStyles,\n    theme: selectTheme,\n    components: {\n      DropdownIndicator,\n      Option\n    },\n    options: [...data.availableViews.map(viewId => ({\n      value: viewId,\n      label: getViewTitle(viewId)\n    }))],\n    value: selectedView,\n    onChange: data => setSelectedView(data.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  });\n}\n_c = ViewSwitcher;\nexport default compose(injectIntl, injectLazyLibs(['reactSelect']))(ViewSwitcher);\nvar _c;\n$RefreshReg$(_c, \"ViewSwitcher\");","map":{"version":3,"names":["React","compose","defineMessages","injectIntl","Option","DropdownIndicator","injectLazyLibs","selectTheme","sortOnSelectStyles","config","getViewTitle","viewId","_config$blocks$blocks","_config$blocks$blocks2","blocks","blocksConfig","listing","variations","find","v","id","title","messages","selectView","ViewSwitcher","props","data","intl","reactSelect","selectedView","setSelectedView","Select","default","__jsx","name","className","classNamePrefix","placeholder","formatMessage","styles","theme","components","options","availableViews","map","value","label","onChange","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Search/components/ViewSwitcher.jsx"],"sourcesContent":["import React from 'react';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport {\n  Option,\n  DropdownIndicator,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nimport { selectTheme, sortOnSelectStyles } from './SelectStyling';\n\nimport config from '@plone/volto/registry';\n\nconst getViewTitle = (viewId) =>\n  config.blocks.blocksConfig.listing.variations?.find((v) => v.id === viewId)\n    ?.title;\n\nconst messages = defineMessages({\n  selectView: {\n    id: 'selectView',\n    defaultMessage: 'Select view',\n  },\n});\n\nfunction ViewSwitcher(props) {\n  const { data, intl, reactSelect, selectedView, setSelectedView } = props;\n  const Select = reactSelect.default;\n\n  return (\n    <Select\n      id=\"select-search-sort-on\"\n      name=\"select-searchblock-sort-on\"\n      className=\"search-react-select-container\"\n      classNamePrefix=\"react-select\"\n      placeholder={intl.formatMessage(messages.selectView)}\n      styles={sortOnSelectStyles}\n      theme={selectTheme}\n      components={{ DropdownIndicator, Option }}\n      options={[\n        ...data.availableViews.map((viewId) => ({\n          value: viewId,\n          label: getViewTitle(viewId),\n        })),\n      ]}\n      value={selectedView}\n      onChange={(data) => setSelectedView(data.value)}\n    />\n  );\n}\n\nexport default compose(\n  injectIntl,\n  injectLazyLibs(['reactSelect']),\n)(ViewSwitcher);\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,cAAc,EAAEC,UAAU,QAAQ,YAAY;AACvD,SACEC,MAAM,EACNC,iBAAiB,QACZ,sDAAsD;AAC7D,SAASC,cAAc,QAAQ,wCAAwC;AAEvE,SAASC,WAAW,EAAEC,kBAAkB,QAAQ,iBAAiB;AAEjE,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,MAAMC,YAAY,GAAIC,MAAM;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EAAA,QAAAD,qBAAA,GAC1BH,MAAM,CAACK,MAAM,CAACC,YAAY,CAACC,OAAO,CAACC,UAAU,cAAAL,qBAAA,wBAAAC,sBAAA,GAA7CD,qBAAA,CAA+CM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKT,MAAM,CAAC,cAAAE,sBAAA,uBAA3EA,sBAAA,CACIQ,KAAK;AAAA;AAEX,MAAMC,QAAQ,GAAGpB,cAAc,CAAC;EAC9BqB,UAAU;IAAA;IAAA;EAAA;AAIZ,CAAC,CAAC;AAEF,SAASC,YAAYA,CAACC,KAAK,EAAE;EAC3B,MAAM;IAAEC,IAAI;IAAEC,IAAI;IAAEC,WAAW;IAAEC,YAAY;IAAEC;EAAgB,CAAC,GAAGL,KAAK;EACxE,MAAMM,MAAM,GAAGH,WAAW,CAACI,OAAO;EAElC,OACEC,KAAA,CAACF,MAAM;IACLX,EAAE,EAAC,uBAAuB;IAC1Bc,IAAI,EAAC,4BAA4B;IACjCC,SAAS,EAAC,+BAA+B;IACzCC,eAAe,EAAC,cAAc;IAC9BC,WAAW,EAAEV,IAAI,CAACW,aAAa,CAAChB,QAAQ,CAACC,UAAU,CAAE;IACrDgB,MAAM,EAAE/B,kBAAmB;IAC3BgC,KAAK,EAAEjC,WAAY;IACnBkC,UAAU,EAAE;MAAEpC,iBAAiB;MAAED;IAAO,CAAE;IAC1CsC,OAAO,EAAE,CACP,GAAGhB,IAAI,CAACiB,cAAc,CAACC,GAAG,CAAEjC,MAAM,KAAM;MACtCkC,KAAK,EAAElC,MAAM;MACbmC,KAAK,EAAEpC,YAAY,CAACC,MAAM;IAC5B,CAAC,CAAC,CAAC,CACH;IACFkC,KAAK,EAAEhB,YAAa;IACpBkB,QAAQ,EAAGrB,IAAI,IAAKI,eAAe,CAACJ,IAAI,CAACmB,KAAK,CAAE;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACjD,CAAC;AAEN;AAACC,EAAA,GAxBQ9B,YAAY;AA0BrB,eAAevB,OAAO,CACpBE,UAAU,EACVG,cAAc,CAAC,CAAC,aAAa,CAAC,CAChC,CAAC,CAACkB,YAAY,CAAC;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"selectView","defaultMessage":"Select view"}]}},"sourceType":"module","externalDependencies":[]}