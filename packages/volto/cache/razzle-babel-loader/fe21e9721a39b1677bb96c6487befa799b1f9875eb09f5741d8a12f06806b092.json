{"ast":null,"code":"import _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _extends from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _defineProperty from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Widgets/QueryWidget.jsx\";\nvar __jsx = React.createElement;\n/**\n * QuerystringWidget component.\n * @module components/manage/Widgets/QuerystringWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Button, Form, Grid, Input, Label } from 'semantic-ui-react';\nimport filter from 'lodash/filter';\nimport remove from 'lodash/remove';\nimport toPairs from 'lodash/toPairs';\nimport groupBy from 'lodash/groupBy';\nimport isEmpty from 'lodash/isEmpty';\nimport map from 'lodash/map';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { getQuerystring } from '@plone/volto/actions/querystring/querystring';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport cx from 'classnames';\nimport config from '@plone/volto/registry';\nimport { Option, DropdownIndicator, selectTheme, customSelectStyles } from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nconst messages = defineMessages({\n  Criteria: {\n    \"id\": \"Criteria\",\n    \"defaultMessage\": \"Criteria\"\n  },\n  AddCriteria: {\n    \"id\": \"Add criteria\",\n    \"defaultMessage\": \"Add criteria\"\n  },\n  select: {\n    \"id\": \"querystring-widget-select\",\n    \"defaultMessage\": \"Select\\u2026\"\n  }\n});\n\n/**\n * Widget for a querystring value, to define a catalog search criteria.\n */\nexport class QuerystringWidgetComponent extends Component {\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs EditComponent\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      visual: false\n    };\n    this.onChangeValue = this.onChangeValue.bind(this);\n    this.getWidget = this.getWidget.bind(this);\n  }\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.focus) {\n      this.node.focus();\n    }\n    this.props.getQuerystring();\n  }\n\n  /**\n   * Get correct widget\n   * @method getWidget\n   * @param {Object} row Row object.\n   * @param {number} index Row index.\n   * @returns {Object} Widget.\n   */\n  getWidget(row, index, Select) {\n    const props = {\n      fluid: true,\n      value: row.v,\n      onChange: data => this.onChangeValue(index, data.target.value)\n    };\n    const values = this.props.indexes[row.i].values;\n    switch (this.props.indexes[row.i].operators[row.o].widget) {\n      case null:\n        return __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 16\n          }\n        });\n      case 'DateWidget':\n        return __jsx(Form.Field, {\n          style: {\n            flex: '1 0 auto'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 11\n          }\n        }, __jsx(Input, _extends({\n          type: \"date\"\n        }, props, {\n          value: row.v,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }\n        })));\n      case 'DateRangeWidget':\n        // 2 date inputs\n        return __jsx(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }\n        }, __jsx(Form.Field, {\n          style: {\n            flex: '1 0 auto'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }\n        }, __jsx(Input, _extends({\n          type: \"date\"\n        }, props, {\n          value: row.v[0],\n          onChange: data => this.onChangeValue(index, [data.target.value, row.v[1]]),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }\n        }))), __jsx(Form.Field, {\n          style: {\n            flex: '1 0 auto'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }\n        }, __jsx(Input, _extends({\n          type: \"date\"\n        }, props, {\n          value: row.v[1],\n          onChange: data => this.onChangeValue(index, [row.v[0], data.target.value]),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }\n        }))));\n      case 'RelativeDateWidget':\n        return __jsx(Form.Field, {\n          style: {\n            flex: '1 0 auto'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 11\n          }\n        }, __jsx(Input, _extends({\n          step: 1,\n          type: \"number\"\n        }, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }\n        })));\n      case 'MultipleSelectionWidget':\n        return __jsx(Form.Field, {\n          style: {\n            flex: '1 0 auto',\n            maxWidth: '92%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 11\n          }\n        }, __jsx(Select, _extends({}, props, {\n          className: \"react-select-container\",\n          classNamePrefix: \"react-select\",\n          options: values ? map(toPairs(values), value => ({\n            label: value[1].title,\n            value: value[0]\n          })) : [],\n          styles: customSelectStyles,\n          placeholder: this.props.intl.formatMessage(messages.select),\n          theme: selectTheme,\n          components: {\n            DropdownIndicator,\n            Option\n          },\n          onChange: data => {\n            this.onChangeValue(index, map(data, item => item.value));\n          },\n          isMulti: true,\n          value: map(row.v, value => {\n            var _values$value;\n            return {\n              label: (values === null || values === void 0 ? void 0 : (_values$value = values[value]) === null || _values$value === void 0 ? void 0 : _values$value.title) || value,\n              value\n            };\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }\n        })));\n      case 'autocomplete':\n        const AutoCompleteComponent = config.widgets.widget.autocomplete;\n        const vocabulary = {\n          '@id': this.props.indexes[row.i].vocabulary\n        };\n        return __jsx(Form.Field, {\n          style: {\n            flex: '1 0 auto',\n            maxWidth: '92%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 11\n          }\n        }, __jsx(AutoCompleteComponent, _extends({}, props, {\n          vocabulary: vocabulary,\n          wrapped: false,\n          id: `id-${index}`,\n          title: `title-${index}`,\n          onChange: (_d, data) => {\n            this.onChangeValue(index, data);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }\n        })));\n      case 'ReferenceWidget':\n      default:\n        // if (row.o === 'plone.app.querystring.operation.string.relativePath') {\n        //   props.onChange = data => this.onChangeValue(index, data.target.value);\n        // }\n        return __jsx(Form.Field, {\n          style: {\n            flex: '1 0 auto'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 11\n          }\n        }, __jsx(Input, _extends({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }\n        })));\n    }\n  }\n\n  /**\n   * Change value handler\n   * @method onChangeValue\n   * @param {Number} index Index of the row.\n   * @param {String|Array} value Value of the row.\n   * @returns {undefined}\n   */\n  onChangeValue(index, value) {\n    this.props.onChange(this.props.id, map(this.props.value, (row, i) => index === i ? _objectSpread(_objectSpread({}, row), {}, {\n      v: value\n    }) : row));\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      required,\n      description,\n      error,\n      value,\n      onChange,\n      onEdit,\n      indexes,\n      fieldSet,\n      reactSelect,\n      intl\n    } = this.props;\n    const Select = reactSelect.default;\n    return __jsx(Form.Field, {\n      inline: true,\n      required: required,\n      error: error.length > 0,\n      className: cx('query-widget', description ? 'help' : ''),\n      id: `${fieldSet || 'field'}-${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 7\n      }\n    }, __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }\n    }, __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }\n    }, __jsx(Grid.Column, {\n      width: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"simple-field-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 15\n      }\n    }, intl.formatMessage(messages.Criteria)))), __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }\n    }, __jsx(Grid.Column, {\n      width: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }\n    }, indexes && !isEmpty(indexes) && map(value, (row, index) => {\n      var _indexes$row$i, _indexes$row$i$operat, _indexes$row$i2;\n      return __jsx(Form.Group, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 19\n        }\n      }, __jsx(\"div\", {\n        className: \"main-fields-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }\n      }, __jsx(Form.Field, {\n        style: {\n          flex: '1 0 auto',\n          marginRight: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 23\n        }\n      }, __jsx(Select, {\n        id: `field-${id}`,\n        name: id,\n        disabled: onEdit !== null,\n        className: \"react-select-container\",\n        classNamePrefix: \"react-select\",\n        options: map(toPairs(groupBy(toPairs(indexes), item => item[1].group)), group => ({\n          label: group[0],\n          options: map(filter(group[1], item => item[1].enabled), field => ({\n            label: field[1].title,\n            value: field[0],\n            isDisabled: (value || []).some(v => v['i'] !== 'path' && v['i'] === field[0])\n          }))\n        })),\n        styles: customSelectStyles,\n        theme: selectTheme,\n        placeholder: intl.formatMessage(messages.select),\n        components: {\n          DropdownIndicator,\n          Option\n        },\n        value: {\n          value: row.i,\n          label: (_indexes$row$i = indexes[row.i]) === null || _indexes$row$i === void 0 ? void 0 : _indexes$row$i.title\n        },\n        onChange: data => onChange(id, map(value, (curRow, curIndex) => curIndex === index ? {\n          i: data.value,\n          o: indexes[data.value].operations[0],\n          v: ''\n        } : curRow)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }\n      })), __jsx(Form.Field, {\n        style: {\n          flex: '1 0 auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 23\n        }\n      }, __jsx(Select, {\n        id: `field-${id}`,\n        name: id,\n        disabled: onEdit !== null,\n        className: \"react-select-container\",\n        classNamePrefix: \"react-select\",\n        options: map((_indexes$row$i$operat = (_indexes$row$i2 = indexes[row.i]) === null || _indexes$row$i2 === void 0 ? void 0 : _indexes$row$i2.operations) !== null && _indexes$row$i$operat !== void 0 ? _indexes$row$i$operat : [], operation => ({\n          value: operation,\n          label: indexes[row.i].operators[operation].title\n        })),\n        styles: customSelectStyles,\n        theme: selectTheme,\n        placeholder: intl.formatMessage(messages.select),\n        components: {\n          DropdownIndicator,\n          Option\n        },\n        value: {\n          value: row.o,\n          label: indexes[row.i].operators[row.o].title\n        },\n        onChange: data => onChange(id, map(value, (curRow, curIndex) => curIndex === index ? {\n          i: row.i,\n          o: data.value,\n          v: ''\n        } : curRow)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 25\n        }\n      })), !this.props.indexes[row.i].operators[row.o].widget && __jsx(Button, {\n        onClick: event => {\n          onChange(id, remove(value, (v, i) => i !== index));\n          event.preventDefault();\n        },\n        style: {\n          background: 'none',\n          paddingRight: 0,\n          paddingLeft: 0,\n          margin: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 25\n        }\n      }, __jsx(Icon, {\n        name: clearSVG,\n        size: \"24px\",\n        className: \"close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 27\n        }\n      }))), this.getWidget(row, index, Select), this.props.indexes[row.i].operators[row.o].widget && __jsx(Button, {\n        onClick: event => {\n          onChange(id, remove(value, (v, i) => i !== index));\n          event.preventDefault();\n        },\n        style: {\n          background: 'none',\n          paddingRight: 0,\n          paddingLeft: 0,\n          margin: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 23\n        }\n      }, __jsx(Icon, {\n        name: clearSVG,\n        size: \"24px\",\n        className: \"close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 25\n        }\n      })));\n    }), __jsx(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Field, {\n      style: {\n        flex: '1 0 auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 17\n      }\n    }, __jsx(Select, {\n      id: `field-${id}`,\n      name: id,\n      disabled: onEdit !== null,\n      className: \"react-select-container\",\n      classNamePrefix: \"react-select\",\n      placeholder: intl.formatMessage(messages.AddCriteria),\n      options: map(toPairs(groupBy(toPairs(indexes), item => item[1].group)), group => ({\n        label: group[0],\n        options: map(filter(group[1], item => item[1].enabled), field => ({\n          label: field[1].title,\n          value: field[0],\n          // disable selecting indexes that are already used,\n          // except for path, which has explicit support\n          // in the backend for multipath queries\n          isDisabled: (value || []).some(v => v['i'] !== 'path' && v['i'] === field[0])\n        }))\n      })),\n      styles: customSelectStyles,\n      theme: selectTheme,\n      components: {\n        DropdownIndicator,\n        Option\n      },\n      value: null,\n      onChange: data => {\n        onChange(id, [...(value || []), {\n          i: data.value,\n          o: indexes[data.value].operations[0],\n          v: ''\n        }]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 19\n      }\n    }))), map(error, message => __jsx(Label, {\n      key: message,\n      basic: true,\n      color: \"red\",\n      pointing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 17\n      }\n    }, message)))), description && __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 13\n      }\n    }, __jsx(Grid.Column, {\n      stretched: true,\n      width: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 15\n      }\n    }, __jsx(\"p\", {\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 17\n      }\n    }, description)))));\n  }\n}\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_defineProperty(QuerystringWidgetComponent, \"propTypes\", {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.array,\n  focus: PropTypes.bool,\n  onChange: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  getQuerystring: PropTypes.func.isRequired\n});\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\n_defineProperty(QuerystringWidgetComponent, \"defaultProps\", {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: null,\n  onEdit: null,\n  onDelete: null,\n  focus: false\n});\nexport default compose(injectIntl, injectLazyLibs(['reactSelect']), connect(state => ({\n  indexes: state.querystring.indexes\n}), {\n  getQuerystring\n}))(QuerystringWidgetComponent);","map":{"version":3,"names":["React","Component","PropTypes","compose","connect","Button","Form","Grid","Input","Label","filter","remove","toPairs","groupBy","isEmpty","map","defineMessages","injectIntl","getQuerystring","Icon","injectLazyLibs","cx","config","Option","DropdownIndicator","selectTheme","customSelectStyles","clearSVG","messages","Criteria","AddCriteria","select","QuerystringWidgetComponent","constructor","props","state","visual","onChangeValue","bind","getWidget","componentDidMount","focus","node","row","index","Select","fluid","value","v","onChange","data","target","values","indexes","i","operators","o","widget","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Field","style","flex","_extends","type","Fragment","step","maxWidth","className","classNamePrefix","options","label","title","styles","placeholder","intl","formatMessage","theme","components","item","isMulti","_values$value","AutoCompleteComponent","widgets","autocomplete","vocabulary","wrapped","id","_d","_objectSpread","render","required","description","error","onEdit","fieldSet","reactSelect","default","inline","length","Row","stretched","Column","width","_indexes$row$i","_indexes$row$i$operat","_indexes$row$i2","Group","key","marginRight","name","disabled","group","enabled","field","isDisabled","some","curRow","curIndex","operations","operation","onClick","event","preventDefault","background","paddingRight","paddingLeft","margin","size","message","basic","color","pointing","_defineProperty","string","isRequired","bool","arrayOf","array","func","onDelete","querystring"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Widgets/QueryWidget.jsx"],"sourcesContent":["/**\n * QuerystringWidget component.\n * @module components/manage/Widgets/QuerystringWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Button, Form, Grid, Input, Label } from 'semantic-ui-react';\nimport filter from 'lodash/filter';\nimport remove from 'lodash/remove';\nimport toPairs from 'lodash/toPairs';\nimport groupBy from 'lodash/groupBy';\nimport isEmpty from 'lodash/isEmpty';\nimport map from 'lodash/map';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { getQuerystring } from '@plone/volto/actions/querystring/querystring';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport cx from 'classnames';\nimport config from '@plone/volto/registry';\n\nimport {\n  Option,\n  DropdownIndicator,\n  selectTheme,\n  customSelectStyles,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\n\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  Criteria: {\n    id: 'Criteria',\n    defaultMessage: 'Criteria',\n  },\n  AddCriteria: {\n    id: 'Add criteria',\n    defaultMessage: 'Add criteria',\n  },\n  select: {\n    id: 'querystring-widget-select',\n    defaultMessage: 'Select…',\n  },\n});\n\n/**\n * Widget for a querystring value, to define a catalog search criteria.\n */\nexport class QuerystringWidgetComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    value: PropTypes.array,\n    focus: PropTypes.bool,\n    onChange: PropTypes.func,\n    onEdit: PropTypes.func,\n    onDelete: PropTypes.func,\n    getQuerystring: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    error: [],\n    value: null,\n    onChange: null,\n    onEdit: null,\n    onDelete: null,\n    focus: false,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs EditComponent\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      visual: false,\n    };\n    this.onChangeValue = this.onChangeValue.bind(this);\n    this.getWidget = this.getWidget.bind(this);\n  }\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.focus) {\n      this.node.focus();\n    }\n    this.props.getQuerystring();\n  }\n\n  /**\n   * Get correct widget\n   * @method getWidget\n   * @param {Object} row Row object.\n   * @param {number} index Row index.\n   * @returns {Object} Widget.\n   */\n  getWidget(row, index, Select) {\n    const props = {\n      fluid: true,\n      value: row.v,\n      onChange: (data) => this.onChangeValue(index, data.target.value),\n    };\n    const values = this.props.indexes[row.i].values;\n\n    switch (this.props.indexes[row.i].operators[row.o].widget) {\n      case null:\n        return <span />;\n      case 'DateWidget':\n        return (\n          <Form.Field style={{ flex: '1 0 auto' }}>\n            <Input type=\"date\" {...props} value={row.v} />\n          </Form.Field>\n        );\n      case 'DateRangeWidget': // 2 date inputs\n        return (\n          <React.Fragment>\n            <Form.Field style={{ flex: '1 0 auto' }}>\n              <Input\n                type=\"date\"\n                {...props}\n                value={row.v[0]}\n                onChange={(data) =>\n                  this.onChangeValue(index, [data.target.value, row.v[1]])\n                }\n              />\n            </Form.Field>\n            <Form.Field style={{ flex: '1 0 auto' }}>\n              <Input\n                type=\"date\"\n                {...props}\n                value={row.v[1]}\n                onChange={(data) =>\n                  this.onChangeValue(index, [row.v[0], data.target.value])\n                }\n              />\n            </Form.Field>\n          </React.Fragment>\n        );\n      case 'RelativeDateWidget':\n        return (\n          <Form.Field style={{ flex: '1 0 auto' }}>\n            <Input step={1} type=\"number\" {...props} />\n          </Form.Field>\n        );\n      case 'MultipleSelectionWidget':\n        return (\n          <Form.Field style={{ flex: '1 0 auto', maxWidth: '92%' }}>\n            <Select\n              {...props}\n              className=\"react-select-container\"\n              classNamePrefix=\"react-select\"\n              options={\n                values\n                  ? map(toPairs(values), (value) => ({\n                      label: value[1].title,\n                      value: value[0],\n                    }))\n                  : []\n              }\n              styles={customSelectStyles}\n              placeholder={this.props.intl.formatMessage(messages.select)}\n              theme={selectTheme}\n              components={{ DropdownIndicator, Option }}\n              onChange={(data) => {\n                this.onChangeValue(\n                  index,\n                  map(data, (item) => item.value),\n                );\n              }}\n              isMulti={true}\n              value={map(row.v, (value) => ({\n                label: values?.[value]?.title || value,\n                value,\n              }))}\n            />\n          </Form.Field>\n        );\n      case 'autocomplete':\n        const AutoCompleteComponent = config.widgets.widget.autocomplete;\n        const vocabulary = { '@id': this.props.indexes[row.i].vocabulary };\n        return (\n          <Form.Field style={{ flex: '1 0 auto', maxWidth: '92%' }}>\n            <AutoCompleteComponent\n              {...props}\n              vocabulary={vocabulary}\n              wrapped={false}\n              id={`id-${index}`}\n              title={`title-${index}`}\n              onChange={(_d, data) => {\n                this.onChangeValue(index, data);\n              }}\n            />\n          </Form.Field>\n        );\n      case 'ReferenceWidget':\n      default:\n        // if (row.o === 'plone.app.querystring.operation.string.relativePath') {\n        //   props.onChange = data => this.onChangeValue(index, data.target.value);\n        // }\n        return (\n          <Form.Field style={{ flex: '1 0 auto' }}>\n            <Input {...props} />\n          </Form.Field>\n        );\n    }\n  }\n\n  /**\n   * Change value handler\n   * @method onChangeValue\n   * @param {Number} index Index of the row.\n   * @param {String|Array} value Value of the row.\n   * @returns {undefined}\n   */\n  onChangeValue(index, value) {\n    this.props.onChange(\n      this.props.id,\n      map(this.props.value, (row, i) =>\n        index === i\n          ? {\n              ...row,\n              v: value,\n            }\n          : row,\n      ),\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      required,\n      description,\n      error,\n      value,\n      onChange,\n      onEdit,\n      indexes,\n      fieldSet,\n      reactSelect,\n      intl,\n    } = this.props;\n\n    const Select = reactSelect.default;\n\n    return (\n      <Form.Field\n        inline\n        required={required}\n        error={error.length > 0}\n        className={cx('query-widget', description ? 'help' : '')}\n        id={`${fieldSet || 'field'}-${id}`}\n      >\n        <Grid>\n          <Grid.Row stretched>\n            <Grid.Column width=\"12\">\n              <div className=\"simple-field-name\">\n                {intl.formatMessage(messages.Criteria)}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row stretched>\n            <Grid.Column width=\"12\">\n              {indexes &&\n                !isEmpty(indexes) &&\n                map(value, (row, index) => (\n                  <Form.Group key={index}>\n                    <div className=\"main-fields-wrapper\">\n                      <Form.Field\n                        style={{ flex: '1 0 auto', marginRight: '10px' }}\n                      >\n                        <Select\n                          id={`field-${id}`}\n                          name={id}\n                          disabled={onEdit !== null}\n                          className=\"react-select-container\"\n                          classNamePrefix=\"react-select\"\n                          options={map(\n                            toPairs(\n                              groupBy(\n                                toPairs(indexes),\n                                (item) => item[1].group,\n                              ),\n                            ),\n                            (group) => ({\n                              label: group[0],\n                              options: map(\n                                filter(group[1], (item) => item[1].enabled),\n                                (field) => ({\n                                  label: field[1].title,\n                                  value: field[0],\n                                  isDisabled: (value || []).some(\n                                    (v) =>\n                                      v['i'] !== 'path' && v['i'] === field[0],\n                                  ),\n                                }),\n                              ),\n                            }),\n                          )}\n                          styles={customSelectStyles}\n                          theme={selectTheme}\n                          placeholder={intl.formatMessage(messages.select)}\n                          components={{ DropdownIndicator, Option }}\n                          value={{\n                            value: row.i,\n                            label: indexes[row.i]?.title,\n                          }}\n                          onChange={(data) =>\n                            onChange(\n                              id,\n                              map(value, (curRow, curIndex) =>\n                                curIndex === index\n                                  ? {\n                                      i: data.value,\n                                      o: indexes[data.value].operations[0],\n                                      v: '',\n                                    }\n                                  : curRow,\n                              ),\n                            )\n                          }\n                        />\n                      </Form.Field>\n                      <Form.Field style={{ flex: '1 0 auto' }}>\n                        <Select\n                          id={`field-${id}`}\n                          name={id}\n                          disabled={onEdit !== null}\n                          className=\"react-select-container\"\n                          classNamePrefix=\"react-select\"\n                          options={map(\n                            indexes[row.i]?.operations ?? [],\n                            (operation) => ({\n                              value: operation,\n                              label: indexes[row.i].operators[operation].title,\n                            }),\n                          )}\n                          styles={customSelectStyles}\n                          theme={selectTheme}\n                          placeholder={intl.formatMessage(messages.select)}\n                          components={{ DropdownIndicator, Option }}\n                          value={{\n                            value: row.o,\n                            label: indexes[row.i].operators[row.o].title,\n                          }}\n                          onChange={(data) =>\n                            onChange(\n                              id,\n                              map(value, (curRow, curIndex) =>\n                                curIndex === index\n                                  ? {\n                                      i: row.i,\n                                      o: data.value,\n                                      v: '',\n                                    }\n                                  : curRow,\n                              ),\n                            )\n                          }\n                        />\n                      </Form.Field>\n                      {!this.props.indexes[row.i].operators[row.o].widget && (\n                        <Button\n                          onClick={(event) => {\n                            onChange(\n                              id,\n                              remove(value, (v, i) => i !== index),\n                            );\n                            event.preventDefault();\n                          }}\n                          style={{\n                            background: 'none',\n                            paddingRight: 0,\n                            paddingLeft: 0,\n                            margin: 0,\n                          }}\n                        >\n                          <Icon name={clearSVG} size=\"24px\" className=\"close\" />\n                        </Button>\n                      )}\n                    </div>\n                    {this.getWidget(row, index, Select)}\n                    {this.props.indexes[row.i].operators[row.o].widget && (\n                      <Button\n                        onClick={(event) => {\n                          onChange(\n                            id,\n                            remove(value, (v, i) => i !== index),\n                          );\n                          event.preventDefault();\n                        }}\n                        style={{\n                          background: 'none',\n                          paddingRight: 0,\n                          paddingLeft: 0,\n                          margin: 0,\n                        }}\n                      >\n                        <Icon name={clearSVG} size=\"24px\" className=\"close\" />\n                      </Button>\n                    )}\n                  </Form.Group>\n                ))}\n              <Form.Group>\n                <Form.Field style={{ flex: '1 0 auto' }}>\n                  <Select\n                    id={`field-${id}`}\n                    name={id}\n                    disabled={onEdit !== null}\n                    className=\"react-select-container\"\n                    classNamePrefix=\"react-select\"\n                    placeholder={intl.formatMessage(messages.AddCriteria)}\n                    options={map(\n                      toPairs(\n                        groupBy(toPairs(indexes), (item) => item[1].group),\n                      ),\n                      (group) => ({\n                        label: group[0],\n                        options: map(\n                          filter(group[1], (item) => item[1].enabled),\n                          (field) => ({\n                            label: field[1].title,\n                            value: field[0],\n                            // disable selecting indexes that are already used,\n                            // except for path, which has explicit support\n                            // in the backend for multipath queries\n                            isDisabled: (value || []).some(\n                              (v) => v['i'] !== 'path' && v['i'] === field[0],\n                            ),\n                          }),\n                        ),\n                      }),\n                    )}\n                    styles={customSelectStyles}\n                    theme={selectTheme}\n                    components={{ DropdownIndicator, Option }}\n                    value={null}\n                    onChange={(data) => {\n                      onChange(id, [\n                        ...(value || []),\n                        {\n                          i: data.value,\n                          o: indexes[data.value].operations[0],\n                          v: '',\n                        },\n                      ]);\n                    }}\n                  />\n                </Form.Field>\n              </Form.Group>\n              {map(error, (message) => (\n                <Label key={message} basic color=\"red\" pointing>\n                  {message}\n                </Label>\n              ))}\n            </Grid.Column>\n          </Grid.Row>\n          {description && (\n            <Grid.Row stretched>\n              <Grid.Column stretched width=\"12\">\n                <p className=\"help\">{description}</p>\n              </Grid.Column>\n            </Grid.Row>\n          )}\n        </Grid>\n      </Form.Field>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  injectLazyLibs(['reactSelect']),\n  connect(\n    (state) => ({\n      indexes: state.querystring.indexes,\n    }),\n    { getQuerystring },\n  ),\n)(QuerystringWidgetComponent);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Criteria","defaultMessage":"Criteria"},{"id":"Add criteria","defaultMessage":"Add criteria"},{"id":"querystring-widget-select","defaultMessage":"Select…"}]}},"sourceType":"module","externalDependencies":[]}