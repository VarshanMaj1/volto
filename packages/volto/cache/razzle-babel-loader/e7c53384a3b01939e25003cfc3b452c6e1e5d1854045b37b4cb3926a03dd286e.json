{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/Comments/Comments.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { useEffect, useState, useMemo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\nimport { createPortal } from 'react-dom';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { compose } from 'redux';\nimport { Button, Comment, Container, Icon } from 'semantic-ui-react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { addComment, deleteComment, listComments, listMoreComments } from '@plone/volto/actions/comments/comments';\nimport Avatar from '@plone/volto/components/theme/Avatar/Avatar';\nimport { Form } from '@plone/volto/components/manage/Form';\nimport { CommentEditModal } from '@plone/volto/components/theme/Comments';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport { getColor } from '@plone/volto/helpers/Utils/Utils';\nimport { usePrevious } from '@plone/volto/helpers/Utils/usePrevious';\nconst messages = defineMessages({\n  comment: {\n    \"id\": \"Comment\",\n    \"defaultMessage\": \"Comment\"\n  },\n  comments: {\n    \"id\": \"Comments\",\n    \"defaultMessage\": \"Comments\"\n  },\n  commentDescription: {\n    \"id\": \"You can add a comment by filling out the form below. Plain text formatting.\",\n    \"defaultMessage\": \"You can add a comment by filling out the form below. Plain text formatting.\"\n  },\n  default: {\n    \"id\": \"Default\",\n    \"defaultMessage\": \"Default\"\n  },\n  delete: {\n    \"id\": \"Delete\",\n    \"defaultMessage\": \"Delete\"\n  },\n  edit: {\n    \"id\": \"Edit\",\n    \"defaultMessage\": \"Edit\"\n  },\n  reply: {\n    \"id\": \"Reply\",\n    \"defaultMessage\": \"Reply\"\n  },\n  hideReplies: {\n    \"id\": \"Hide Replies\",\n    \"defaultMessage\": \"Hide Replies\"\n  },\n  showReplies: {\n    \"id\": \"Show Replies\",\n    \"defaultMessage\": \"Show Replies\"\n  },\n  loadMoreComments: {\n    \"id\": \"Load more\",\n    \"defaultMessage\": \"Load more...\"\n  }\n});\nconst makeFormSchema = intl => ({\n  fieldsets: [{\n    fields: ['comment'],\n    id: 'default',\n    title: intl.formatMessage(messages.default)\n  }],\n  properties: {\n    comment: {\n      title: intl.formatMessage(messages.comment),\n      type: 'string',\n      widget: 'textarea'\n    }\n  },\n  required: ['comment1']\n});\nconst useComments = () => {\n  const items = useSelector(state => state.comments.items, shallowEqual);\n  const next = useSelector(state => state.comments.next, shallowEqual);\n  const items_total = useSelector(state => state.comments.items_total, shallowEqual);\n  const permissions = useSelector(state => state.comments.permissions || {}, shallowEqual);\n  const addRequest = useSelector(state => state.comments.add, shallowEqual);\n  const deleteRequest = useSelector(state => state.comments.delete, shallowEqual);\n  return {\n    items,\n    next,\n    items_total,\n    permissions,\n    addRequest,\n    deleteRequest\n  };\n};\nconst Comments = props => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const {\n    pathname\n  } = props;\n  const {\n    0: showEdit,\n    1: setshowEdit\n  } = useState(false);\n  const {\n    0: editId,\n    1: seteditId\n  } = useState(null);\n  const {\n    0: editText,\n    1: seteditText\n  } = useState(null);\n  const {\n    0: replyTo,\n    1: setreplyTo\n  } = useState(null);\n  const {\n    0: collapsedComments,\n    1: setcollapsedComments\n  } = useState({});\n  const {\n    items,\n    next,\n    items_total,\n    permissions,\n    addRequest,\n    deleteRequest\n  } = useComments();\n  const prevpathname = usePrevious(pathname);\n  const prevaddRequestLoading = usePrevious(addRequest.loading);\n  const prevdeleteRequestLoading = usePrevious(deleteRequest.loading);\n  useEffect(() => {\n    if (pathname !== prevpathname || prevaddRequestLoading && addRequest.loaded || prevdeleteRequestLoading && deleteRequest.loaded) {\n      dispatch(listComments(getBaseUrl(pathname)));\n    }\n  }, [dispatch, pathname, prevpathname, prevaddRequestLoading, addRequest.loaded, prevdeleteRequestLoading, deleteRequest.loaded]);\n  const onSubmit = formData => {\n    dispatch(addComment(getBaseUrl(pathname), formData.comment, replyTo));\n    setreplyTo(null);\n  };\n  const setReplyTo = commentId => {\n    setreplyTo(commentId);\n  };\n  const loadMoreComments = () => {\n    dispatch(listMoreComments(flattenToAppURL(next)));\n  };\n  const onDelete = value => {\n    dispatch(deleteComment(value));\n  };\n  const prevcollapsedComments = usePrevious(collapsedComments);\n  const hideReply = commentId => {\n    const hasComment = prevcollapsedComments[commentId];\n    setcollapsedComments(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      [commentId]: !hasComment\n    }));\n  };\n  const onEdit = useCallback(value => {\n    setshowEdit(true);\n    seteditText(value.text);\n    seteditId(value.id);\n  }, []);\n  const onEditOk = () => {\n    setshowEdit(false);\n    seteditId(null);\n    seteditText(null);\n    dispatch(listComments(getBaseUrl(pathname)));\n  };\n  const onEditCancel = useCallback(() => {\n    setshowEdit(false);\n    seteditId(null);\n    seteditText(null);\n    setreplyTo(null);\n  }, []);\n  const addRepliesAsChildrenToComments = items => {\n    let initialValue = {};\n    const allCommentsWithCildren = items.reduce((accumulator, item) => {\n      return _objectSpread({\n        [item.comment_id]: {\n          comment: item,\n          children: []\n        }\n      }, accumulator);\n    }, initialValue);\n    items.forEach(comment => {\n      if (comment.in_reply_to) {\n        allCommentsWithCildren[comment.in_reply_to].children.push(comment);\n      }\n    });\n    return allCommentsWithCildren;\n  };\n  const moment = props.moment.default;\n  const allCommentsWithCildren = useMemo(() => addRepliesAsChildrenToComments(items), [items]);\n  // all comments that are not a reply will be shown in the first iteration\n  const allPrimaryComments = items.filter(comment => !comment.in_reply_to);\n\n  // recursively makes comments with their replies nested\n  // each iteration will show replies to the specific comment using allCommentsWithCildren\n  const commentElement = comment => __jsx(Comment, {\n    key: comment.comment_id,\n    id: comment.comment_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  }, __jsx(Avatar, {\n    src: flattenToAppURL(comment.author_image),\n    title: comment.author_name || 'Anonymous',\n    color: getColor(comment.author_username),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }), __jsx(Comment.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }, __jsx(Comment.Author, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, comment.author_name), __jsx(Comment.Metadata, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, ' ', __jsx(\"span\", {\n    title: moment(comment.creation_date).format('LLLL'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, moment(comment.creation_date).fromNow()))), __jsx(Comment.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, ' ', comment.text['mime-type'] === 'text/html' ? __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: comment.text.data\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }) : comment.text.data), __jsx(Comment.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, comment.can_reply && __jsx(Comment.Action, {\n    as: \"a\",\n    \"aria-label\": intl.formatMessage(messages.reply),\n    onClick: () => setReplyTo(comment.comment_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Reply\",\n    defaultMessage: \"Reply\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  })), comment.is_editable && __jsx(Comment.Action, {\n    onClick: () => onEdit({\n      id: flattenToAppURL(comment['@id']),\n      text: comment.text.data\n    }),\n    \"aria-label\": intl.formatMessage(messages.edit),\n    value: {\n      id: flattenToAppURL(comment['@id']),\n      text: comment.text.data\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Edit\",\n    defaultMessage: \"Edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  })), comment.is_deletable && __jsx(Comment.Action, {\n    \"aria-label\": intl.formatMessage(messages.delete),\n    onClick: () => onDelete(flattenToAppURL(comment['@id'])),\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    name: \"delete\",\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }), __jsx(FormattedMessage, {\n    id: \"Delete\",\n    defaultMessage: \"Delete\",\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  })), __jsx(Comment.Action, {\n    as: \"a\",\n    onClick: () => hideReply(comment.comment_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }, allCommentsWithCildren[comment.comment_id].children.length > 0 ? collapsedComments[comment.comment_id] ? __jsx(React.Fragment, null, __jsx(Icon, {\n    name: \"eye\",\n    color: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 19\n    }\n  }), __jsx(FormattedMessage, {\n    id: \"Show Replies\",\n    defaultMessage: \"Show Replies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 19\n    }\n  })) : __jsx(React.Fragment, null, __jsx(Icon, {\n    name: \"minus\",\n    color: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 19\n    }\n  }), __jsx(FormattedMessage, {\n    id: \"Hide Replies\",\n    defaultMessage: \"Hide Replies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 19\n    }\n  })) : null)), __jsx(\"div\", {\n    id: `reply-place-${comment.comment_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }\n  })), allCommentsWithCildren[comment.comment_id].children.length > 0 ? allCommentsWithCildren[comment.comment_id].children.map((child, index) => __jsx(Comment.Group, {\n    collapsed: collapsedComments[comment.comment_id],\n    key: `group-${index}-${comment.comment_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 15\n    }\n  }, commentElement(child))) : null);\n  if (!permissions.view_comments) return '';\n  return __jsx(Container, {\n    className: \"comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 5\n    }\n  }, __jsx(CommentEditModal, {\n    open: showEdit,\n    onCancel: onEditCancel,\n    onOk: onEditOk,\n    id: editId,\n    text: editText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }\n  }), permissions.can_reply && __jsx(\"div\", {\n    id: \"comment-add-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    onSubmit: onSubmit,\n    onCancel: onEditCancel,\n    submitLabel: intl.formatMessage(messages.comment),\n    resetAfterSubmit: true,\n    schema: makeFormSchema(intl),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  })), __jsx(Comment.Group, {\n    threaded: true,\n    id: 'discussion',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }\n  }, allPrimaryComments.map(item => commentElement(item))), items_total > items.length && __jsx(Button, {\n    fluid: true,\n    basic: true,\n    color: \"blue\",\n    onClick: loadMoreComments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Load more\",\n    defaultMessage: \"Load more...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 11\n    }\n  })), replyTo && document && /*#__PURE__*/createPortal(__jsx(Form, {\n    onSubmit: onSubmit,\n    onCancel: onEditCancel,\n    submitLabel: intl.formatMessage(messages.comment),\n    resetAfterSubmit: true,\n    schema: makeFormSchema(intl),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 11\n    }\n  }), document.getElementById(`reply-place-${replyTo}`)));\n};\nComments.propTypes = {\n  pathname: PropTypes.string.isRequired\n};\nexport default compose(injectLazyLibs(['moment']))(Comments);","map":{"version":3,"names":["useEffect","useState","useMemo","useCallback","PropTypes","defineMessages","FormattedMessage","useIntl","createPortal","useDispatch","useSelector","shallowEqual","compose","Button","Comment","Container","Icon","injectLazyLibs","addComment","deleteComment","listComments","listMoreComments","Avatar","Form","CommentEditModal","flattenToAppURL","getBaseUrl","getColor","usePrevious","messages","comment","comments","commentDescription","default","delete","edit","reply","hideReplies","showReplies","loadMoreComments","makeFormSchema","intl","fieldsets","fields","id","title","formatMessage","properties","type","widget","required","useComments","items","state","next","items_total","permissions","addRequest","add","deleteRequest","Comments","props","dispatch","pathname","showEdit","setshowEdit","editId","seteditId","editText","seteditText","replyTo","setreplyTo","collapsedComments","setcollapsedComments","prevpathname","prevaddRequestLoading","loading","prevdeleteRequestLoading","loaded","onSubmit","formData","setReplyTo","commentId","onDelete","value","prevcollapsedComments","hideReply","hasComment","prevState","_objectSpread","onEdit","text","onEditOk","onEditCancel","addRepliesAsChildrenToComments","initialValue","allCommentsWithCildren","reduce","accumulator","item","comment_id","children","forEach","in_reply_to","push","moment","allPrimaryComments","filter","commentElement","__jsx","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","author_image","author_name","color","author_username","Content","Author","Metadata","creation_date","format","fromNow","Text","dangerouslySetInnerHTML","__html","data","Actions","can_reply","Action","as","onClick","defaultMessage","is_editable","is_deletable","name","length","React","Fragment","map","child","index","Group","collapsed","view_comments","className","open","onCancel","onOk","submitLabel","resetAfterSubmit","schema","threaded","fluid","basic","document","getElementById","propTypes","string","isRequired"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/Comments/Comments.jsx"],"sourcesContent":["import { useEffect, useState, useMemo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\nimport { createPortal } from 'react-dom';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { compose } from 'redux';\nimport { Button, Comment, Container, Icon } from 'semantic-ui-react';\n\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport {\n  addComment,\n  deleteComment,\n  listComments,\n  listMoreComments,\n} from '@plone/volto/actions/comments/comments';\nimport Avatar from '@plone/volto/components/theme/Avatar/Avatar';\nimport { Form } from '@plone/volto/components/manage/Form';\nimport { CommentEditModal } from '@plone/volto/components/theme/Comments';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport { getColor } from '@plone/volto/helpers/Utils/Utils';\nimport { usePrevious } from '@plone/volto/helpers/Utils/usePrevious';\n\nconst messages = defineMessages({\n  comment: {\n    id: 'Comment',\n    defaultMessage: 'Comment',\n  },\n  comments: {\n    id: 'Comments',\n    defaultMessage: 'Comments',\n  },\n  commentDescription: {\n    id: 'You can add a comment by filling out the form below. Plain text formatting.',\n    defaultMessage:\n      'You can add a comment by filling out the form below. Plain text formatting.',\n  },\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  delete: {\n    id: 'Delete',\n    defaultMessage: 'Delete',\n  },\n  edit: {\n    id: 'Edit',\n    defaultMessage: 'Edit',\n  },\n  reply: {\n    id: 'Reply',\n    defaultMessage: 'Reply',\n  },\n  hideReplies: {\n    id: 'Hide Replies',\n    defaultMessage: 'Hide Replies',\n  },\n  showReplies: {\n    id: 'Show Replies',\n    defaultMessage: 'Show Replies',\n  },\n  loadMoreComments: {\n    id: 'Load more',\n    defaultMessage: 'Load more...',\n  },\n});\n\nconst makeFormSchema = (intl) => ({\n  fieldsets: [\n    {\n      fields: ['comment'],\n      id: 'default',\n      title: intl.formatMessage(messages.default),\n    },\n  ],\n  properties: {\n    comment: {\n      title: intl.formatMessage(messages.comment),\n      type: 'string',\n      widget: 'textarea',\n    },\n  },\n  required: ['comment1'],\n});\n\nconst useComments = () => {\n  const items = useSelector((state) => state.comments.items, shallowEqual);\n  const next = useSelector((state) => state.comments.next, shallowEqual);\n  const items_total = useSelector(\n    (state) => state.comments.items_total,\n    shallowEqual,\n  );\n  const permissions = useSelector(\n    (state) => state.comments.permissions || {},\n    shallowEqual,\n  );\n  const addRequest = useSelector((state) => state.comments.add, shallowEqual);\n  const deleteRequest = useSelector(\n    (state) => state.comments.delete,\n    shallowEqual,\n  );\n\n  return { items, next, items_total, permissions, addRequest, deleteRequest };\n};\n\nconst Comments = (props) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const { pathname } = props;\n  const [showEdit, setshowEdit] = useState(false);\n  const [editId, seteditId] = useState(null);\n  const [editText, seteditText] = useState(null);\n  const [replyTo, setreplyTo] = useState(null);\n  const [collapsedComments, setcollapsedComments] = useState({});\n  const { items, next, items_total, permissions, addRequest, deleteRequest } =\n    useComments();\n\n  const prevpathname = usePrevious(pathname);\n\n  const prevaddRequestLoading = usePrevious(addRequest.loading);\n  const prevdeleteRequestLoading = usePrevious(deleteRequest.loading);\n\n  useEffect(() => {\n    if (\n      pathname !== prevpathname ||\n      (prevaddRequestLoading && addRequest.loaded) ||\n      (prevdeleteRequestLoading && deleteRequest.loaded)\n    ) {\n      dispatch(listComments(getBaseUrl(pathname)));\n    }\n  }, [\n    dispatch,\n    pathname,\n    prevpathname,\n    prevaddRequestLoading,\n    addRequest.loaded,\n    prevdeleteRequestLoading,\n    deleteRequest.loaded,\n  ]);\n\n  const onSubmit = (formData) => {\n    dispatch(addComment(getBaseUrl(pathname), formData.comment, replyTo));\n    setreplyTo(null);\n  };\n\n  const setReplyTo = (commentId) => {\n    setreplyTo(commentId);\n  };\n\n  const loadMoreComments = () => {\n    dispatch(listMoreComments(flattenToAppURL(next)));\n  };\n\n  const onDelete = (value) => {\n    dispatch(deleteComment(value));\n  };\n  const prevcollapsedComments = usePrevious(collapsedComments);\n\n  const hideReply = (commentId) => {\n    const hasComment = prevcollapsedComments[commentId];\n    setcollapsedComments((prevState) => ({\n      ...prevState,\n      [commentId]: !hasComment,\n    }));\n  };\n\n  const onEdit = useCallback((value) => {\n    setshowEdit(true);\n    seteditText(value.text);\n    seteditId(value.id);\n  }, []);\n\n  const onEditOk = () => {\n    setshowEdit(false);\n    seteditId(null);\n    seteditText(null);\n    dispatch(listComments(getBaseUrl(pathname)));\n  };\n\n  const onEditCancel = useCallback(() => {\n    setshowEdit(false);\n    seteditId(null);\n    seteditText(null);\n    setreplyTo(null);\n  }, []);\n\n  const addRepliesAsChildrenToComments = (items) => {\n    let initialValue = {};\n    const allCommentsWithCildren = items.reduce((accumulator, item) => {\n      return {\n        [item.comment_id]: { comment: item, children: [] },\n        ...accumulator,\n      };\n    }, initialValue);\n\n    items.forEach((comment) => {\n      if (comment.in_reply_to) {\n        allCommentsWithCildren[comment.in_reply_to].children.push(comment);\n      }\n    });\n    return allCommentsWithCildren;\n  };\n\n  const moment = props.moment.default;\n\n  const allCommentsWithCildren = useMemo(\n    () => addRepliesAsChildrenToComments(items),\n    [items],\n  );\n  // all comments that are not a reply will be shown in the first iteration\n  const allPrimaryComments = items.filter((comment) => !comment.in_reply_to);\n\n  // recursively makes comments with their replies nested\n  // each iteration will show replies to the specific comment using allCommentsWithCildren\n  const commentElement = (comment) => (\n    <Comment key={comment.comment_id} id={comment.comment_id}>\n      <Avatar\n        src={flattenToAppURL(comment.author_image)}\n        title={comment.author_name || 'Anonymous'}\n        color={getColor(comment.author_username)}\n      />\n      <Comment.Content>\n        <Comment.Author>{comment.author_name}</Comment.Author>\n        <Comment.Metadata>\n          <span>\n            {' '}\n            <span title={moment(comment.creation_date).format('LLLL')}>\n              {moment(comment.creation_date).fromNow()}\n            </span>\n          </span>\n        </Comment.Metadata>\n        <Comment.Text>\n          {' '}\n          {comment.text['mime-type'] === 'text/html' ? (\n            <div\n              dangerouslySetInnerHTML={{\n                __html: comment.text.data,\n              }}\n            />\n          ) : (\n            comment.text.data\n          )}\n        </Comment.Text>\n        <Comment.Actions>\n          {comment.can_reply && (\n            <Comment.Action\n              as=\"a\"\n              aria-label={intl.formatMessage(messages.reply)}\n              onClick={() => setReplyTo(comment.comment_id)}\n            >\n              <FormattedMessage id=\"Reply\" defaultMessage=\"Reply\" />\n            </Comment.Action>\n          )}\n          {comment.is_editable && (\n            <Comment.Action\n              onClick={() =>\n                onEdit({\n                  id: flattenToAppURL(comment['@id']),\n                  text: comment.text.data,\n                })\n              }\n              aria-label={intl.formatMessage(messages.edit)}\n              value={{\n                id: flattenToAppURL(comment['@id']),\n                text: comment.text.data,\n              }}\n            >\n              <FormattedMessage id=\"Edit\" defaultMessage=\"Edit\" />\n            </Comment.Action>\n          )}\n          {comment.is_deletable && (\n            <Comment.Action\n              aria-label={intl.formatMessage(messages.delete)}\n              onClick={() => onDelete(flattenToAppURL(comment['@id']))}\n              color=\"red\"\n            >\n              <Icon name=\"delete\" color=\"red\" />\n              <FormattedMessage\n                id=\"Delete\"\n                defaultMessage=\"Delete\"\n                color=\"red\"\n              />\n            </Comment.Action>\n          )}\n          <Comment.Action as=\"a\" onClick={() => hideReply(comment.comment_id)}>\n            {allCommentsWithCildren[comment.comment_id].children.length > 0 ? (\n              collapsedComments[comment.comment_id] ? (\n                <>\n                  <Icon name=\"eye\" color=\"blue\" />\n                  <FormattedMessage\n                    id=\"Show Replies\"\n                    defaultMessage=\"Show Replies\"\n                  />\n                </>\n              ) : (\n                <>\n                  <Icon name=\"minus\" color=\"blue\" />\n                  <FormattedMessage\n                    id=\"Hide Replies\"\n                    defaultMessage=\"Hide Replies\"\n                  />\n                </>\n              )\n            ) : null}\n          </Comment.Action>\n        </Comment.Actions>\n        <div id={`reply-place-${comment.comment_id}`}></div>\n      </Comment.Content>\n\n      {allCommentsWithCildren[comment.comment_id].children.length > 0\n        ? allCommentsWithCildren[comment.comment_id].children.map(\n            (child, index) => (\n              <Comment.Group\n                collapsed={collapsedComments[comment.comment_id]}\n                key={`group-${index}-${comment.comment_id}`}\n              >\n                {commentElement(child)}\n              </Comment.Group>\n            ),\n          )\n        : null}\n    </Comment>\n  );\n\n  if (!permissions.view_comments) return '';\n\n  return (\n    <Container className=\"comments\">\n      <CommentEditModal\n        open={showEdit}\n        onCancel={onEditCancel}\n        onOk={onEditOk}\n        id={editId}\n        text={editText}\n      />\n      {permissions.can_reply && (\n        <div id=\"comment-add-id\">\n          <Form\n            onSubmit={onSubmit}\n            onCancel={onEditCancel}\n            submitLabel={intl.formatMessage(messages.comment)}\n            resetAfterSubmit\n            schema={makeFormSchema(intl)}\n          />\n        </div>\n      )}\n      {/* all comments  */}\n      <Comment.Group threaded id={'discussion'}>\n        {allPrimaryComments.map((item) => commentElement(item))}\n      </Comment.Group>\n\n      {/* load more button */}\n      {items_total > items.length && (\n        <Button fluid basic color=\"blue\" onClick={loadMoreComments}>\n          <FormattedMessage id=\"Load more\" defaultMessage=\"Load more...\" />\n        </Button>\n      )}\n\n      {replyTo &&\n        document &&\n        createPortal(\n          <Form\n            onSubmit={onSubmit}\n            onCancel={onEditCancel}\n            submitLabel={intl.formatMessage(messages.comment)}\n            resetAfterSubmit\n            schema={makeFormSchema(intl)}\n          />,\n          document.getElementById(`reply-place-${replyTo}`),\n        )}\n    </Container>\n  );\n};\n\nComments.propTypes = {\n  pathname: PropTypes.string.isRequired,\n};\n\nexport default compose(injectLazyLibs(['moment']))(Comments);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Comment","defaultMessage":"Comment"},{"id":"Comments","defaultMessage":"Comments"},{"id":"You can add a comment by filling out the form below. Plain text formatting.","defaultMessage":"You can add a comment by filling out the form below. Plain text formatting."},{"id":"Default","defaultMessage":"Default"},{"id":"Delete","defaultMessage":"Delete"},{"id":"Edit","defaultMessage":"Edit"},{"id":"Reply","defaultMessage":"Reply"},{"id":"Hide Replies","defaultMessage":"Hide Replies"},{"id":"Show Replies","defaultMessage":"Show Replies"},{"id":"Load more","defaultMessage":"Load more..."}]}},"sourceType":"module","externalDependencies":[]}