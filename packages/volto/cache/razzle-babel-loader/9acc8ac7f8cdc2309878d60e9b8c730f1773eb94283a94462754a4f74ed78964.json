{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/Logo/Logo.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n/**\n * Logo component.\n * @module components/theme/Logo/Logo\n */\nimport { defineMessages, useIntl } from 'react-intl';\nimport { useEffect } from 'react';\nimport { Image } from 'semantic-ui-react';\nimport LogoImage from '@plone/volto/components/theme/Logo/Logo.svg';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getNavroot } from '@plone/volto/actions/navroot/navroot';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport { hasApiExpander } from '@plone/volto/helpers/Utils/Utils';\n\n/**\n * Logo component class.\n * @function Logo\n * @param {Object} intl Intl object\n * @returns {string} Markup of the component.\n */\nconst Logo = () => {\n  var _navroot$navroot;\n  const pathname = useLocation().pathname;\n  const site = useSelector(state => state.site.data);\n  const navroot = useSelector(state => state.navroot.data);\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const messages = defineMessages({\n    home: {\n      \"id\": \"Home\",\n      \"defaultMessage\": \"Home\"\n    },\n    logoOf: {\n      \"id\": \"Logo of\",\n      \"defaultMessage\": \"Logo of\"\n    }\n  });\n  useEffect(() => {\n    if (pathname && !hasApiExpander('navroot', getBaseUrl(pathname))) {\n      dispatch(getNavroot(getBaseUrl(pathname)));\n    }\n  }, [dispatch, pathname]);\n  const navRootPath = flattenToAppURL(navroot === null || navroot === void 0 ? void 0 : (_navroot$navroot = navroot.navroot) === null || _navroot$navroot === void 0 ? void 0 : _navroot$navroot['@id']) || '/';\n  return __jsx(Link, {\n    to: navRootPath,\n    \"aria-label\": intl.formatMessage(messages.home),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(Image, {\n    src: site['plone.site_logo'] ? flattenToAppURL(site['plone.site_logo']) : LogoImage,\n    alt: intl.formatMessage(messages.logoOf) + ' ' + site['plone.site_title'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Logo;","map":{"version":3,"names":["defineMessages","useIntl","useEffect","Image","LogoImage","useSelector","useDispatch","Link","useLocation","getNavroot","flattenToAppURL","getBaseUrl","hasApiExpander","Logo","_navroot$navroot","pathname","site","state","data","navroot","dispatch","intl","messages","home","logoOf","navRootPath","__jsx","to","formatMessage","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","alt"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/Logo/Logo.jsx"],"sourcesContent":["/**\n * Logo component.\n * @module components/theme/Logo/Logo\n */\nimport { defineMessages, useIntl } from 'react-intl';\nimport { useEffect } from 'react';\nimport { Image } from 'semantic-ui-react';\nimport LogoImage from '@plone/volto/components/theme/Logo/Logo.svg';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getNavroot } from '@plone/volto/actions/navroot/navroot';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport { hasApiExpander } from '@plone/volto/helpers/Utils/Utils';\n\n/**\n * Logo component class.\n * @function Logo\n * @param {Object} intl Intl object\n * @returns {string} Markup of the component.\n */\nconst Logo = () => {\n  const pathname = useLocation().pathname;\n  const site = useSelector((state) => state.site.data);\n  const navroot = useSelector((state) => state.navroot.data);\n  const dispatch = useDispatch();\n  const intl = useIntl();\n\n  const messages = defineMessages({\n    home: {\n      id: 'Home',\n      defaultMessage: 'Home',\n    },\n    logoOf: {\n      id: 'Logo of',\n      defaultMessage: 'Logo of',\n    },\n  });\n\n  useEffect(() => {\n    if (pathname && !hasApiExpander('navroot', getBaseUrl(pathname))) {\n      dispatch(getNavroot(getBaseUrl(pathname)));\n    }\n  }, [dispatch, pathname]);\n\n  const navRootPath = flattenToAppURL(navroot?.navroot?.['@id']) || '/';\n\n  return (\n    <Link to={navRootPath} aria-label={intl.formatMessage(messages.home)}>\n      <Image\n        src={\n          site['plone.site_logo']\n            ? flattenToAppURL(site['plone.site_logo'])\n            : LogoImage\n        }\n        alt={\n          intl.formatMessage(messages.logoOf) + ' ' + site['plone.site_title']\n        }\n      />\n    </Link>\n  );\n};\n\nexport default Logo;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,SAASA,cAAc,EAAEC,OAAO,QAAQ,YAAY;AACpD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,KAAK,QAAQ,mBAAmB;AACzC,OAAOC,SAAS,MAAM,6CAA6C;AACnE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,SAASC,UAAU,QAAQ,sCAAsC;AACjE,SAASC,eAAe,EAAEC,UAAU,QAAQ,8BAA8B;AAC1E,SAASC,cAAc,QAAQ,kCAAkC;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAA,IAAAC,gBAAA;EACjB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC,CAACO,QAAQ;EACvC,MAAMC,IAAI,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACD,IAAI,CAACE,IAAI,CAAC;EACpD,MAAMC,OAAO,GAAGd,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACE,OAAO,CAACD,IAAI,CAAC;EAC1D,MAAME,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAMe,IAAI,GAAGpB,OAAO,CAAC,CAAC;EAEtB,MAAMqB,QAAQ,GAAGtB,cAAc,CAAC;IAC9BuB,IAAI;MAAA;MAAA;IAAA,CAGH;IACDC,MAAM;MAAA;MAAA;IAAA;EAIR,CAAC,CAAC;EAEFtB,SAAS,CAAC,MAAM;IACd,IAAIa,QAAQ,IAAI,CAACH,cAAc,CAAC,SAAS,EAAED,UAAU,CAACI,QAAQ,CAAC,CAAC,EAAE;MAChEK,QAAQ,CAACX,UAAU,CAACE,UAAU,CAACI,QAAQ,CAAC,CAAC,CAAC;IAC5C;EACF,CAAC,EAAE,CAACK,QAAQ,EAAEL,QAAQ,CAAC,CAAC;EAExB,MAAMU,WAAW,GAAGf,eAAe,CAACS,OAAO,aAAPA,OAAO,wBAAAL,gBAAA,GAAPK,OAAO,CAAEA,OAAO,cAAAL,gBAAA,uBAAhBA,gBAAA,CAAmB,KAAK,CAAC,CAAC,IAAI,GAAG;EAErE,OACEY,KAAA,CAACnB,IAAI;IAACoB,EAAE,EAAEF,WAAY;IAAC,cAAYJ,IAAI,CAACO,aAAa,CAACN,QAAQ,CAACC,IAAI,CAAE;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACnER,KAAA,CAACvB,KAAK;IACJgC,GAAG,EACDnB,IAAI,CAAC,iBAAiB,CAAC,GACnBN,eAAe,CAACM,IAAI,CAAC,iBAAiB,CAAC,CAAC,GACxCZ,SACL;IACDgC,GAAG,EACDf,IAAI,CAACO,aAAa,CAACN,QAAQ,CAACE,MAAM,CAAC,GAAG,GAAG,GAAGR,IAAI,CAAC,kBAAkB,CACpE;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACF,CACG,CAAC;AAEX,CAAC;AAED,eAAerB,IAAI","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Home","defaultMessage":"Home"},{"id":"Logo of","defaultMessage":"Logo of"}]}},"sourceType":"module","externalDependencies":[]}