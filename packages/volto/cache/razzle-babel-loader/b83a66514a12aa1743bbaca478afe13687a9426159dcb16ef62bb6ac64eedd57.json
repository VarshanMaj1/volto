{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Multilingual/TranslationObject.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport React, { useEffect, useState } from 'react';\nimport map from 'lodash/map';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Form as UiForm, Menu, Segment } from 'semantic-ui-react';\nimport { Provider } from 'react-intl-redux';\nimport { Form, Field } from '@plone/volto/components/manage/Form';\nimport config from '@plone/volto/registry';\nimport configureStore from '@plone/volto/store';\nimport Api from '@plone/volto/helpers/Api/Api';\nimport { flattenToAppURL } from '@plone/volto/helpers/Url/Url';\nimport langmap from '@plone/volto/helpers/LanguageMap/LanguageMap';\nimport { toGettextLang, toReactIntlLang } from '@plone/volto/helpers/Utils/Utils';\nimport { createBrowserHistory } from 'history';\nconst messages = defineMessages({\n  document: {\n    \"id\": \"Document\",\n    \"defaultMessage\": \"Document\"\n  }\n});\nconst TranslationObject = ({\n  translationObject,\n  schema,\n  pathname,\n  visual,\n  isFormSelected,\n  onSelectForm\n}) => {\n  const intl = useIntl();\n  const {\n    0: locales,\n    1: setLocales\n  } = useState({});\n  const {\n    0: loadingLocale,\n    1: setLoadingLocale\n  } = useState(false);\n  const {\n    0: activeMenu,\n    1: setActiveMenu\n  } = useState('language');\n  const handleMenuClick = (e, {\n    name\n  }) => {\n    setActiveMenu(name);\n  };\n  useEffect(() => {\n    if (!loadingLocale && Object.keys(locales).length < config.settings.supportedLanguages.length) {\n      setLoadingLocale(true);\n      let lang = config.settings.supportedLanguages[Object.keys(locales).length];\n      const langFileName = toGettextLang(lang);\n      import(/* @vite-ignore */'@root/../locales/' + langFileName + '.json').then(locale => {\n        setLocales(_objectSpread(_objectSpread({}, locales), {}, {\n          [toReactIntlLang(lang)]: locale.default\n        }));\n        setLoadingLocale(false);\n      });\n    }\n  }, [loadingLocale, locales]);\n  const api = new Api();\n  const history = createBrowserHistory();\n  const store = configureStore(_objectSpread(_objectSpread({}, window.__data), {}, {\n    intl: {\n      defaultLocale: config.settings.defaultLanguage,\n      locale: translationObject.language.token,\n      messages: locales[translationObject.language.token]\n    }\n  }), history, api);\n  const lang = translationObject.language.token;\n  return translationObject && Object.keys(locales).length > 0 ? __jsx(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, __jsx(React.Fragment, null, __jsx(Menu, {\n    pointing: true,\n    secondary: true,\n    attached: true,\n    tabular: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, __jsx(Menu.Item, {\n    name: \"language\",\n    active: activeMenu === 'language',\n    onClick: handleMenuClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, langmap[lang].nativeName), visual && __jsx(Menu.Item, {\n    name: \"properties\",\n    active: activeMenu === 'properties',\n    onClick: handleMenuClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, intl.formatMessage(messages.document))), activeMenu === 'language' && __jsx(Form, {\n    key: \"translation-object-form\",\n    schema: schema,\n    formData: translationObject,\n    type: translationObject['@type'],\n    onSubmit: () => {\n      /*do nothing*/\n    },\n    hideActions: true,\n    pathname: flattenToAppURL(translationObject['@id']),\n    visual: visual,\n    title: langmap[lang].nativeName,\n    loading: false,\n    isFormSelected: isFormSelected,\n    onSelectForm: onSelectForm,\n    editable: false,\n    onChange: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), activeMenu === 'properties' && __jsx(UiForm, {\n    method: \"post\",\n    onSubmit: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, __jsx(\"fieldset\", {\n    className: \"invisible\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, schema && map(schema.fieldsets, item => [__jsx(Segment, {\n    secondary: true,\n    attached: true,\n    key: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }, item.title), __jsx(Segment, {\n    attached: true,\n    key: `fieldset-contents-${item.title}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }, map(item.fields, (field, index) => __jsx(Field, _extends({}, schema.properties[field], {\n    id: field,\n    formData: translationObject,\n    focus: false,\n    value: translationObject[field],\n    required: schema.required.indexOf(field) !== -1,\n    key: field,\n    onChange: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 23\n    }\n  }))))]))))) : null;\n};\nexport default TranslationObject;","map":{"version":3,"names":["React","useEffect","useState","map","defineMessages","useIntl","Form","UiForm","Menu","Segment","Provider","Field","config","configureStore","Api","flattenToAppURL","langmap","toGettextLang","toReactIntlLang","createBrowserHistory","messages","document","TranslationObject","translationObject","schema","pathname","visual","isFormSelected","onSelectForm","intl","locales","setLocales","loadingLocale","setLoadingLocale","activeMenu","setActiveMenu","handleMenuClick","e","name","Object","keys","length","settings","supportedLanguages","lang","langFileName","then","locale","_objectSpread","default","api","history","store","window","__data","defaultLocale","defaultLanguage","language","token","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","pointing","secondary","attached","tabular","Item","active","onClick","nativeName","formatMessage","key","formData","type","onSubmit","hideActions","title","loading","editable","onChange","method","className","fieldsets","item","fields","field","index","_extends","properties","id","focus","value","required","indexOf"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Multilingual/TranslationObject.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport map from 'lodash/map';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Form as UiForm, Menu, Segment } from 'semantic-ui-react';\nimport { Provider } from 'react-intl-redux';\nimport { Form, Field } from '@plone/volto/components/manage/Form';\nimport config from '@plone/volto/registry';\nimport configureStore from '@plone/volto/store';\nimport Api from '@plone/volto/helpers/Api/Api';\nimport { flattenToAppURL } from '@plone/volto/helpers/Url/Url';\nimport langmap from '@plone/volto/helpers/LanguageMap/LanguageMap';\nimport {\n  toGettextLang,\n  toReactIntlLang,\n} from '@plone/volto/helpers/Utils/Utils';\nimport { createBrowserHistory } from 'history';\n\nconst messages = defineMessages({\n  document: {\n    id: 'Document',\n    defaultMessage: 'Document',\n  },\n});\n\nconst TranslationObject = ({\n  translationObject,\n  schema,\n  pathname,\n  visual,\n  isFormSelected,\n  onSelectForm,\n}) => {\n  const intl = useIntl();\n\n  const [locales, setLocales] = useState({});\n  const [loadingLocale, setLoadingLocale] = useState(false);\n  const [activeMenu, setActiveMenu] = useState('language');\n  const handleMenuClick = (e, { name }) => {\n    setActiveMenu(name);\n  };\n\n  useEffect(() => {\n    if (\n      !loadingLocale &&\n      Object.keys(locales).length < config.settings.supportedLanguages.length\n    ) {\n      setLoadingLocale(true);\n      let lang =\n        config.settings.supportedLanguages[Object.keys(locales).length];\n      const langFileName = toGettextLang(lang);\n      import(\n        /* @vite-ignore */ '@root/../locales/' + langFileName + '.json'\n      ).then((locale) => {\n        setLocales({ ...locales, [toReactIntlLang(lang)]: locale.default });\n        setLoadingLocale(false);\n      });\n    }\n  }, [loadingLocale, locales]);\n\n  const api = new Api();\n  const history = createBrowserHistory();\n  const store = configureStore(\n    {\n      ...window.__data,\n      intl: {\n        defaultLocale: config.settings.defaultLanguage,\n        locale: translationObject.language.token,\n        messages: locales[translationObject.language.token],\n      },\n    },\n    history,\n    api,\n  );\n\n  const lang = translationObject.language.token;\n\n  return translationObject && Object.keys(locales).length > 0 ? (\n    <Provider store={store}>\n      <>\n        <Menu pointing secondary attached tabular>\n          <Menu.Item\n            name=\"language\"\n            active={activeMenu === 'language'}\n            onClick={handleMenuClick}\n          >\n            {langmap[lang].nativeName}\n          </Menu.Item>\n          {visual && (\n            <Menu.Item\n              name=\"properties\"\n              active={activeMenu === 'properties'}\n              onClick={handleMenuClick}\n            >\n              {intl.formatMessage(messages.document)}\n            </Menu.Item>\n          )}\n        </Menu>\n        {activeMenu === 'language' && (\n          <Form\n            key=\"translation-object-form\"\n            schema={schema}\n            formData={translationObject}\n            type={translationObject['@type']}\n            onSubmit={() => {\n              /*do nothing*/\n            }}\n            hideActions\n            pathname={flattenToAppURL(translationObject['@id'])}\n            visual={visual}\n            title={langmap[lang].nativeName}\n            loading={false}\n            isFormSelected={isFormSelected}\n            onSelectForm={onSelectForm}\n            editable={false}\n            onChange={() => {}}\n          />\n        )}\n        {activeMenu === 'properties' && (\n          <UiForm method=\"post\" onSubmit={() => {}}>\n            <fieldset className=\"invisible\">\n              {schema &&\n                map(schema.fieldsets, (item) => [\n                  <Segment secondary attached key={item.title}>\n                    {item.title}\n                  </Segment>,\n                  <Segment attached key={`fieldset-contents-${item.title}`}>\n                    {map(item.fields, (field, index) => (\n                      <Field\n                        {...schema.properties[field]}\n                        id={field}\n                        formData={translationObject}\n                        focus={false}\n                        value={translationObject[field]}\n                        required={schema.required.indexOf(field) !== -1}\n                        key={field}\n                        onChange={() => {}}\n                      />\n                    ))}\n                  </Segment>,\n                ])}\n            </fieldset>\n          </UiForm>\n        )}\n      </>\n    </Provider>\n  ) : null;\n};\n\nexport default TranslationObject;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Document","defaultMessage":"Document"}]}},"sourceType":"module","externalDependencies":[]}