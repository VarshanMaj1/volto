{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Container/Data.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useIntl } from 'react-intl';\nimport { BlockDataForm } from '@plone/volto/components/manage/Form';\nconst ContainerData = props => {\n  const {\n    block,\n    blocksConfig,\n    blocksErrors,\n    data,\n    onChangeBlock,\n    navRoot,\n    contentType\n  } = props;\n  const intl = useIntl();\n  const schema = blocksConfig[data['@type']].blockSchema({\n    intl\n  });\n  const dataAdapter = blocksConfig[data['@type']].dataAdapter;\n  return __jsx(BlockDataForm, {\n    schema: schema,\n    title: schema.title,\n    onChangeField: (id, value) => {\n      dataAdapter({\n        block,\n        data,\n        id,\n        onChangeBlock,\n        value\n      });\n    },\n    formData: data,\n    block: block,\n    onChangeBlock: onChangeBlock,\n    blocksConfig: blocksConfig,\n    navRoot: navRoot,\n    contentType: contentType,\n    errors: blocksErrors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  });\n};\nexport default ContainerData;","map":{"version":3,"names":["useIntl","BlockDataForm","ContainerData","props","block","blocksConfig","blocksErrors","data","onChangeBlock","navRoot","contentType","intl","schema","blockSchema","dataAdapter","__jsx","title","onChangeField","id","value","formData","errors","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Container/Data.jsx"],"sourcesContent":["import { useIntl } from 'react-intl';\nimport { BlockDataForm } from '@plone/volto/components/manage/Form';\n\nconst ContainerData = (props) => {\n  const {\n    block,\n    blocksConfig,\n    blocksErrors,\n    data,\n    onChangeBlock,\n    navRoot,\n    contentType,\n  } = props;\n  const intl = useIntl();\n\n  const schema = blocksConfig[data['@type']].blockSchema({ intl });\n  const dataAdapter = blocksConfig[data['@type']].dataAdapter;\n\n  return (\n    <BlockDataForm\n      schema={schema}\n      title={schema.title}\n      onChangeField={(id, value) => {\n        dataAdapter({\n          block,\n          data,\n          id,\n          onChangeBlock,\n          value,\n        });\n      }}\n      formData={data}\n      block={block}\n      onChangeBlock={onChangeBlock}\n      blocksConfig={blocksConfig}\n      navRoot={navRoot}\n      contentType={contentType}\n      errors={blocksErrors}\n    />\n  );\n};\n\nexport default ContainerData;\n"],"mappings":";;;AAAA,SAASA,OAAO,QAAQ,YAAY;AACpC,SAASC,aAAa,QAAQ,qCAAqC;AAEnE,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC/B,MAAM;IACJC,KAAK;IACLC,YAAY;IACZC,YAAY;IACZC,IAAI;IACJC,aAAa;IACbC,OAAO;IACPC;EACF,CAAC,GAAGP,KAAK;EACT,MAAMQ,IAAI,GAAGX,OAAO,CAAC,CAAC;EAEtB,MAAMY,MAAM,GAAGP,YAAY,CAACE,IAAI,CAAC,OAAO,CAAC,CAAC,CAACM,WAAW,CAAC;IAAEF;EAAK,CAAC,CAAC;EAChE,MAAMG,WAAW,GAAGT,YAAY,CAACE,IAAI,CAAC,OAAO,CAAC,CAAC,CAACO,WAAW;EAE3D,OACEC,KAAA,CAACd,aAAa;IACZW,MAAM,EAAEA,MAAO;IACfI,KAAK,EAAEJ,MAAM,CAACI,KAAM;IACpBC,aAAa,EAAEA,CAACC,EAAE,EAAEC,KAAK,KAAK;MAC5BL,WAAW,CAAC;QACVV,KAAK;QACLG,IAAI;QACJW,EAAE;QACFV,aAAa;QACbW;MACF,CAAC,CAAC;IACJ,CAAE;IACFC,QAAQ,EAAEb,IAAK;IACfH,KAAK,EAAEA,KAAM;IACbI,aAAa,EAAEA,aAAc;IAC7BH,YAAY,EAAEA,YAAa;IAC3BI,OAAO,EAAEA,OAAQ;IACjBC,WAAW,EAAEA,WAAY;IACzBW,MAAM,EAAEf,YAAa;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACtB,CAAC;AAEN,CAAC;AAED,eAAezB,aAAa","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}