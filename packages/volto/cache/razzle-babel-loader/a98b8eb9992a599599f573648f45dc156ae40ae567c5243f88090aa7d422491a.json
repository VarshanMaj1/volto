{"ast":null,"code":"import _extends from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectWithoutProperties from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"condition\", \"to\", \"item\"];\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/ConditionalLink/ConditionalLink.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport UniversalLink from '@plone/volto/components/manage/UniversalLink/UniversalLink';\nimport PropTypes from 'prop-types';\nconst ConditionalLink = _ref => {\n  let {\n      condition,\n      to,\n      item\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  if (condition) {\n    return __jsx(UniversalLink, _extends({\n      href: to,\n      item: item\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    }), props.children);\n  } else {\n    return __jsx(React.Fragment, null, props.children);\n  }\n};\n_c = ConditionalLink;\nConditionalLink.propTypes = {\n  condition: PropTypes.bool,\n  to: PropTypes.string,\n  item: PropTypes.shape({\n    '@id': PropTypes.string,\n    remoteUrl: PropTypes.string //of plone @type 'Link'\n  }),\n  children: PropTypes.node\n};\nexport default ConditionalLink;\nvar _c;\n$RefreshReg$(_c, \"ConditionalLink\");","map":{"version":3,"names":["React","UniversalLink","PropTypes","ConditionalLink","_ref","condition","to","item","props","_objectWithoutProperties","_excluded","__jsx","_extends","href","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","children","Fragment","_c","propTypes","bool","string","shape","remoteUrl","node","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/ConditionalLink/ConditionalLink.jsx"],"sourcesContent":["import React from 'react';\nimport UniversalLink from '@plone/volto/components/manage/UniversalLink/UniversalLink';\nimport PropTypes from 'prop-types';\n\nconst ConditionalLink = ({ condition, to, item, ...props }) => {\n  if (condition) {\n    return (\n      <UniversalLink href={to} item={item} {...props}>\n        {props.children}\n      </UniversalLink>\n    );\n  } else {\n    return <>{props.children}</>;\n  }\n};\n\nConditionalLink.propTypes = {\n  condition: PropTypes.bool,\n  to: PropTypes.string,\n  item: PropTypes.shape({\n    '@id': PropTypes.string,\n    remoteUrl: PropTypes.string, //of plone @type 'Link'\n  }),\n  children: PropTypes.node,\n};\n\nexport default ConditionalLink;\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,4DAA4D;AACtF,OAAOC,SAAS,MAAM,YAAY;AAElC,MAAMC,eAAe,GAAGC,IAAA,IAAuC;EAAA,IAAtC;MAAEC,SAAS;MAAEC,EAAE;MAAEC;IAAe,CAAC,GAAAH,IAAA;IAAPI,KAAK,GAAAC,wBAAA,CAAAL,IAAA,EAAAM,SAAA;EACtD,IAAIL,SAAS,EAAE;IACb,OACEM,KAAA,CAACV,aAAa,EAAAW,QAAA;MAACC,IAAI,EAAEP,EAAG;MAACC,IAAI,EAAEA;IAAK,GAAKC,KAAK;MAAAM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,IAC3CX,KAAK,CAACY,QACM,CAAC;EAEpB,CAAC,MAAM;IACL,OAAOT,KAAA,CAAAX,KAAA,CAAAqB,QAAA,QAAGb,KAAK,CAACY,QAAW,CAAC;EAC9B;AACF,CAAC;AAACE,EAAA,GAVInB,eAAe;AAYrBA,eAAe,CAACoB,SAAS,GAAG;EAC1BlB,SAAS,EAAEH,SAAS,CAACsB,IAAI;EACzBlB,EAAE,EAAEJ,SAAS,CAACuB,MAAM;EACpBlB,IAAI,EAAEL,SAAS,CAACwB,KAAK,CAAC;IACpB,KAAK,EAAExB,SAAS,CAACuB,MAAM;IACvBE,SAAS,EAAEzB,SAAS,CAACuB,MAAM,CAAE;EAC/B,CAAC,CAAC;EACFL,QAAQ,EAAElB,SAAS,CAAC0B;AACtB,CAAC;AAED,eAAezB,eAAe;AAAC,IAAAmB,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}