{"ast":null,"code":"import _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _extends from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectWithoutProperties from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"children\"];\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Workflow/Workflow.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport uniqBy from 'lodash/uniqBy';\nimport { toast } from 'react-toastify';\nimport { defineMessages, useIntl } from 'react-intl';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport { FormFieldWrapper } from '@plone/volto/components/manage/Widgets';\nimport { flattenToAppURL } from '@plone/volto/helpers/Url/Url';\nimport { getWorkflowOptions, getCurrentStateMapping } from '@plone/volto/helpers/Workflows/Workflows';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { getContent } from '@plone/volto/actions/content/content';\nimport { getWorkflow, transitionWorkflow } from '@plone/volto/actions/workflow/workflow';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\nconst messages = defineMessages({\n  messageUpdated: {\n    \"id\": \"Workflow updated.\",\n    \"defaultMessage\": \"Workflow updated.\"\n  },\n  messageNoWorkflow: {\n    \"id\": \"No workflow\",\n    \"defaultMessage\": \"No workflow\"\n  },\n  state: {\n    \"id\": \"State\",\n    \"defaultMessage\": \"State\"\n  }\n});\nconst SingleValue = injectLazyLibs('reactSelect')(_ref => {\n  let {\n      children\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  const stateDecorator = {\n    marginRight: '10px',\n    display: 'inline-block',\n    backgroundColor: props.selectProps.value.color || null,\n    content: ' ',\n    height: '10px',\n    width: '10px',\n    borderRadius: '50%'\n  };\n  const {\n    SingleValue\n  } = props.reactSelect.components;\n  return __jsx(SingleValue, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }), __jsx(\"span\", {\n    style: stateDecorator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), children);\n});\nconst Option = injectLazyLibs('reactSelect')(props => {\n  const stateDecorator = {\n    marginRight: '10px',\n    display: 'inline-block',\n    backgroundColor: props.selectProps.value.value === props.data.value ? props.selectProps.value.color : null,\n    content: ' ',\n    height: '10px',\n    width: '10px',\n    borderRadius: '50%',\n    border: props.selectProps.value.value !== props.data.value ? `1px solid ${props.data.color}` : null\n  };\n  const {\n    Option\n  } = props['reactSelect'].components;\n  return __jsx(Option, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }), __jsx(\"span\", {\n    style: stateDecorator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginRight: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, props.label), props.isFocused && !props.isSelected && __jsx(Icon, {\n    name: checkSVG,\n    size: \"18px\",\n    color: \"#b8c6c8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), props.isSelected && __jsx(Icon, {\n    name: checkSVG,\n    size: \"18px\",\n    color: \"#007bc1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 28\n    }\n  }));\n});\nconst DropdownIndicator = injectLazyLibs('reactSelect')(props => {\n  const {\n    DropdownIndicator\n  } = props.reactSelect.components;\n  return __jsx(DropdownIndicator, _extends({}, props, {\n    \"data-testid\": \"workflow-select-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }), props.selectProps.menuIsOpen ? __jsx(Icon, {\n    name: upSVG,\n    size: \"24px\",\n    color: \"#007bc1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }) : __jsx(Icon, {\n    name: downSVG,\n    size: \"24px\",\n    color: \"#007bc1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }));\n});\nconst selectTheme = theme => _objectSpread(_objectSpread({}, theme), {}, {\n  borderRadius: 0,\n  colors: _objectSpread(_objectSpread({}, theme.colors), {}, {\n    primary25: 'hotpink',\n    primary: '#b8c6c8'\n  })\n});\nconst customSelectStyles = {\n  control: (styles, state) => _objectSpread(_objectSpread({}, styles), {}, {\n    border: 'none',\n    borderBottom: '2px solid #b8c6c8',\n    boxShadow: 'none',\n    borderBottomStyle: state.menuIsOpen ? 'dotted' : 'solid'\n  }),\n  menu: (styles, state) => _objectSpread(_objectSpread({}, styles), {}, {\n    top: null,\n    marginTop: 0,\n    boxShadow: 'none',\n    borderBottom: '2px solid #b8c6c8'\n  }),\n  indicatorSeparator: styles => _objectSpread(_objectSpread({}, styles), {}, {\n    width: null\n  }),\n  valueContainer: styles => _objectSpread(_objectSpread({}, styles), {}, {\n    padding: 0\n  }),\n  option: (styles, state) => _objectSpread(_objectSpread({}, styles), {}, {\n    backgroundColor: null,\n    minHeight: '50px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '12px 12px',\n    color: state.isSelected ? '#007bc1' : state.isFocused ? '#4a4a4a' : 'inherit',\n    ':active': {\n      backgroundColor: null\n    },\n    span: {\n      flex: '0 0 auto'\n    },\n    svg: {\n      flex: '0 0 auto'\n    }\n  })\n};\nfunction useWorkflow() {\n  _s();\n  const history = useSelector(state => state.workflow.history, shallowEqual);\n  const transitions = useSelector(state => state.workflow.transitions, shallowEqual);\n  const loaded = useSelector(state => state.workflow.transition.loaded);\n  const currentStateValue = useSelector(state => getCurrentStateMapping(state.workflow.currentState), shallowEqual);\n  return {\n    loaded,\n    history,\n    transitions,\n    currentStateValue\n  };\n}\n_s(useWorkflow, \"4MUnCsMqn/HP51+T1bV6z0qj/5s=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n});\nconst Workflow = props => {\n  _s2();\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const {\n    loaded,\n    transitions,\n    currentStateValue\n  } = useWorkflow();\n  const content = useSelector(state => {\n    var _state$content;\n    return (_state$content = state.content) === null || _state$content === void 0 ? void 0 : _state$content.data;\n  }, shallowEqual);\n  const {\n    pathname\n  } = props;\n  useEffect(() => {\n    dispatch(getWorkflow(pathname));\n    dispatch(getContent(pathname));\n  }, [dispatch, pathname, loaded]);\n  const transition = selectedOption => {\n    dispatch(transitionWorkflow(flattenToAppURL(selectedOption.url)));\n    toast.success(__jsx(Toast, {\n      success: true,\n      title: intl.formatMessage(messages.messageUpdated),\n      content: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }\n    }));\n  };\n  const {\n    Placeholder\n  } = props.reactSelect.components;\n  const Select = props.reactSelect.default;\n  return __jsx(FormFieldWrapper, _extends({\n    id: \"state-select\",\n    title: intl.formatMessage(messages.state),\n    intl: intl\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 5\n    }\n  }), __jsx(Select, {\n    name: \"state-select\",\n    className: \"react-select-container\",\n    classNamePrefix: \"react-select\",\n    isDisabled: !content.review_state || transitions.length === 0,\n    options: uniqBy(transitions.map(transition => getWorkflowOptions(transition)), 'label').concat(currentStateValue),\n    styles: customSelectStyles,\n    theme: selectTheme,\n    components: {\n      DropdownIndicator,\n      Placeholder,\n      Option,\n      SingleValue\n    },\n    onChange: transition,\n    value: content.review_state ? currentStateValue : {\n      label: intl.formatMessage(messages.messageNoWorkflow),\n      value: 'noworkflow'\n    },\n    isSearchable: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }));\n};\n_s2(Workflow, \"r4l+KzJuXhCowJtDBtfNbhDb8fY=\", false, function () {\n  return [useIntl, useDispatch, useWorkflow, useSelector];\n});\n_c = Workflow;\nWorkflow.propTypes = {\n  pathname: PropTypes.string.isRequired\n};\nexport default compose(injectLazyLibs(['reactSelect']))(Workflow);\nvar _c;\n$RefreshReg$(_c, \"Workflow\");","map":{"version":3,"names":["useEffect","PropTypes","compose","useDispatch","useSelector","shallowEqual","uniqBy","toast","defineMessages","useIntl","Icon","Toast","FormFieldWrapper","flattenToAppURL","getWorkflowOptions","getCurrentStateMapping","injectLazyLibs","getContent","getWorkflow","transitionWorkflow","downSVG","upSVG","checkSVG","messages","messageUpdated","messageNoWorkflow","state","SingleValue","_ref","children","props","_objectWithoutProperties","_excluded","stateDecorator","marginRight","display","backgroundColor","selectProps","value","color","content","height","width","borderRadius","reactSelect","components","__jsx","_extends","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","Option","data","border","label","isFocused","isSelected","name","size","DropdownIndicator","menuIsOpen","selectTheme","theme","_objectSpread","colors","primary25","primary","customSelectStyles","control","styles","borderBottom","boxShadow","borderBottomStyle","menu","top","marginTop","indicatorSeparator","valueContainer","padding","option","minHeight","justifyContent","alignItems","span","flex","svg","useWorkflow","_s","history","workflow","transitions","loaded","transition","currentStateValue","currentState","Workflow","_s2","intl","dispatch","_state$content","pathname","selectedOption","url","success","title","formatMessage","Placeholder","Select","default","id","className","classNamePrefix","isDisabled","review_state","length","options","map","concat","onChange","isSearchable","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Workflow/Workflow.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport uniqBy from 'lodash/uniqBy';\nimport { toast } from 'react-toastify';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport { FormFieldWrapper } from '@plone/volto/components/manage/Widgets';\nimport { flattenToAppURL } from '@plone/volto/helpers/Url/Url';\nimport {\n  getWorkflowOptions,\n  getCurrentStateMapping,\n} from '@plone/volto/helpers/Workflows/Workflows';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nimport { getContent } from '@plone/volto/actions/content/content';\nimport {\n  getWorkflow,\n  transitionWorkflow,\n} from '@plone/volto/actions/workflow/workflow';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\n\nconst messages = defineMessages({\n  messageUpdated: {\n    id: 'Workflow updated.',\n    defaultMessage: 'Workflow updated.',\n  },\n  messageNoWorkflow: {\n    id: 'No workflow',\n    defaultMessage: 'No workflow',\n  },\n  state: {\n    id: 'State',\n    defaultMessage: 'State',\n  },\n});\n\nconst SingleValue = injectLazyLibs('reactSelect')(({ children, ...props }) => {\n  const stateDecorator = {\n    marginRight: '10px',\n    display: 'inline-block',\n    backgroundColor: props.selectProps.value.color || null,\n    content: ' ',\n    height: '10px',\n    width: '10px',\n    borderRadius: '50%',\n  };\n  const { SingleValue } = props.reactSelect.components;\n  return (\n    <SingleValue {...props}>\n      <span style={stateDecorator} />\n      {children}\n    </SingleValue>\n  );\n});\n\nconst Option = injectLazyLibs('reactSelect')((props) => {\n  const stateDecorator = {\n    marginRight: '10px',\n    display: 'inline-block',\n    backgroundColor:\n      props.selectProps.value.value === props.data.value\n        ? props.selectProps.value.color\n        : null,\n    content: ' ',\n    height: '10px',\n    width: '10px',\n    borderRadius: '50%',\n    border:\n      props.selectProps.value.value !== props.data.value\n        ? `1px solid ${props.data.color}`\n        : null,\n  };\n\n  const { Option } = props['reactSelect'].components;\n  return (\n    <Option {...props}>\n      <span style={stateDecorator} />\n      <div style={{ marginRight: 'auto' }}>{props.label}</div>\n      {props.isFocused && !props.isSelected && (\n        <Icon name={checkSVG} size=\"18px\" color=\"#b8c6c8\" />\n      )}\n      {props.isSelected && <Icon name={checkSVG} size=\"18px\" color=\"#007bc1\" />}\n    </Option>\n  );\n});\n\nconst DropdownIndicator = injectLazyLibs('reactSelect')((props) => {\n  const { DropdownIndicator } = props.reactSelect.components;\n  return (\n    <DropdownIndicator {...props} data-testid=\"workflow-select-dropdown\">\n      {props.selectProps.menuIsOpen ? (\n        <Icon name={upSVG} size=\"24px\" color=\"#007bc1\" />\n      ) : (\n        <Icon name={downSVG} size=\"24px\" color=\"#007bc1\" />\n      )}\n    </DropdownIndicator>\n  );\n});\n\nconst selectTheme = (theme) => ({\n  ...theme,\n  borderRadius: 0,\n  colors: {\n    ...theme.colors,\n    primary25: 'hotpink',\n    primary: '#b8c6c8',\n  },\n});\n\nconst customSelectStyles = {\n  control: (styles, state) => ({\n    ...styles,\n    border: 'none',\n    borderBottom: '2px solid #b8c6c8',\n    boxShadow: 'none',\n    borderBottomStyle: state.menuIsOpen ? 'dotted' : 'solid',\n  }),\n  menu: (styles, state) => ({\n    ...styles,\n    top: null,\n    marginTop: 0,\n    boxShadow: 'none',\n    borderBottom: '2px solid #b8c6c8',\n  }),\n  indicatorSeparator: (styles) => ({\n    ...styles,\n    width: null,\n  }),\n  valueContainer: (styles) => ({\n    ...styles,\n    padding: 0,\n  }),\n  option: (styles, state) => ({\n    ...styles,\n    backgroundColor: null,\n    minHeight: '50px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '12px 12px',\n    color: state.isSelected\n      ? '#007bc1'\n      : state.isFocused\n        ? '#4a4a4a'\n        : 'inherit',\n    ':active': {\n      backgroundColor: null,\n    },\n    span: {\n      flex: '0 0 auto',\n    },\n    svg: {\n      flex: '0 0 auto',\n    },\n  }),\n};\n\nfunction useWorkflow() {\n  const history = useSelector((state) => state.workflow.history, shallowEqual);\n  const transitions = useSelector(\n    (state) => state.workflow.transitions,\n    shallowEqual,\n  );\n  const loaded = useSelector((state) => state.workflow.transition.loaded);\n  const currentStateValue = useSelector(\n    (state) => getCurrentStateMapping(state.workflow.currentState),\n    shallowEqual,\n  );\n\n  return { loaded, history, transitions, currentStateValue };\n}\n\nconst Workflow = (props) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const { loaded, transitions, currentStateValue } = useWorkflow();\n  const content = useSelector((state) => state.content?.data, shallowEqual);\n  const { pathname } = props;\n\n  useEffect(() => {\n    dispatch(getWorkflow(pathname));\n    dispatch(getContent(pathname));\n  }, [dispatch, pathname, loaded]);\n\n  const transition = (selectedOption) => {\n    dispatch(transitionWorkflow(flattenToAppURL(selectedOption.url)));\n    toast.success(\n      <Toast\n        success\n        title={intl.formatMessage(messages.messageUpdated)}\n        content=\"\"\n      />,\n    );\n  };\n\n  const { Placeholder } = props.reactSelect.components;\n  const Select = props.reactSelect.default;\n\n  return (\n    <FormFieldWrapper\n      id=\"state-select\"\n      title={intl.formatMessage(messages.state)}\n      intl={intl}\n      {...props}\n    >\n      <Select\n        name=\"state-select\"\n        className=\"react-select-container\"\n        classNamePrefix=\"react-select\"\n        isDisabled={!content.review_state || transitions.length === 0}\n        options={uniqBy(\n          transitions.map((transition) => getWorkflowOptions(transition)),\n          'label',\n        ).concat(currentStateValue)}\n        styles={customSelectStyles}\n        theme={selectTheme}\n        components={{\n          DropdownIndicator,\n          Placeholder,\n          Option,\n          SingleValue,\n        }}\n        onChange={transition}\n        value={\n          content.review_state\n            ? currentStateValue\n            : {\n                label: intl.formatMessage(messages.messageNoWorkflow),\n                value: 'noworkflow',\n              }\n        }\n        isSearchable={false}\n      />\n    </FormFieldWrapper>\n  );\n};\n\nWorkflow.propTypes = {\n  pathname: PropTypes.string.isRequired,\n};\n\nexport default compose(injectLazyLibs(['reactSelect']))(Workflow);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Workflow updated.","defaultMessage":"Workflow updated."},{"id":"No workflow","defaultMessage":"No workflow"},{"id":"State","defaultMessage":"State"}]}},"sourceType":"module","externalDependencies":[]}