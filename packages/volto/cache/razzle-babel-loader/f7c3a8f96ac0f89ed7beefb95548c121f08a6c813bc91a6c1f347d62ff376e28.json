{"ast":null,"code":"/* eslint no-console: 0 */\nimport dns from 'dns';\nimport http from 'http';\nimport app from './server';\nimport debug from 'debug';\nexport default function server() {\n  // If DNS returns both ipv4 and ipv6 addresses, prefer ipv4\n  dns.setDefaultResultOrder('ipv4first');\n  const server = http.createServer(app);\n  // const host = process.env.HOST || 'localhost';\n  const port = process.env.PORT || 3000;\n  const bind_address = process.env.RAZZLE_BIND_ADDRESS || '0.0.0.0';\n  let currentApp = app;\n  server.listen(port, bind_address, () => {\n    console.log(`API server (API_PATH) is set to: ${app.apiPath}`);\n    if (app.devProxyToApiPath) console.log(`Proxying API requests from ${app.publicURL}/++api++ to ${app.devProxyToApiPath}${app.proxyRewriteTarget || ''}`);\n    console.log(`üé≠ Volto started at ${bind_address}:${port} üöÄ`);\n    if (!process.env.RAZZLE_PUBLIC_URL) debug('config')(`Current public URL: ${app.publicURL}`);\n  }).on('error', e => {\n    console.error(e.message);\n    throw e;\n  });\n  return () => {\n    console.log('‚úÖ  Server-side HMR Enabled!');\n    module.hot.accept('./server', () => {\n      console.log('üîÅ  HMR Reloading `./server`...');\n      server.removeListener('request', currentApp);\n      const newApp = require('./server').default; // eslint-disable-line global-require\n      server.on('request', newApp);\n      currentApp = newApp;\n    });\n  };\n}","map":{"version":3,"names":["dns","http","app","debug","server","setDefaultResultOrder","createServer","port","process","env","PORT","bind_address","RAZZLE_BIND_ADDRESS","currentApp","listen","console","log","apiPath","devProxyToApiPath","publicURL","proxyRewriteTarget","RAZZLE_PUBLIC_URL","on","e","error","message","module","hot","accept","removeListener","newApp","require","default"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/start-server.js"],"sourcesContent":["/* eslint no-console: 0 */\nimport dns from 'dns';\nimport http from 'http';\n\nimport app from './server';\nimport debug from 'debug';\n\nexport default function server() {\n  // If DNS returns both ipv4 and ipv6 addresses, prefer ipv4\n  dns.setDefaultResultOrder('ipv4first');\n\n  const server = http.createServer(app);\n  // const host = process.env.HOST || 'localhost';\n  const port = process.env.PORT || 3000;\n  const bind_address = process.env.RAZZLE_BIND_ADDRESS || '0.0.0.0';\n\n  let currentApp = app;\n\n  server\n    .listen(port, bind_address, () => {\n      console.log(`API server (API_PATH) is set to: ${app.apiPath}`);\n\n      if (app.devProxyToApiPath)\n        console.log(\n          `Proxying API requests from ${app.publicURL}/++api++ to ${\n            app.devProxyToApiPath\n          }${app.proxyRewriteTarget || ''}`,\n        );\n      console.log(`üé≠ Volto started at ${bind_address}:${port} üöÄ`);\n\n      if (!process.env.RAZZLE_PUBLIC_URL)\n        debug('config')(`Current public URL: ${app.publicURL}`);\n    })\n    .on('error', (e) => {\n      console.error(e.message);\n      throw e;\n    });\n\n  return () => {\n    console.log('‚úÖ  Server-side HMR Enabled!');\n\n    module.hot.accept('./server', () => {\n      console.log('üîÅ  HMR Reloading `./server`...');\n      server.removeListener('request', currentApp);\n      const newApp = require('./server').default; // eslint-disable-line global-require\n      server.on('request', newApp);\n      currentApp = newApp;\n    });\n  };\n}\n"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AAEvB,OAAOC,GAAG,MAAM,UAAU;AAC1B,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAe,SAASC,MAAMA,CAAA,EAAG;EAC/B;EACAJ,GAAG,CAACK,qBAAqB,CAAC,WAAW,CAAC;EAEtC,MAAMD,MAAM,GAAGH,IAAI,CAACK,YAAY,CAACJ,GAAG,CAAC;EACrC;EACA,MAAMK,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI;EACrC,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAG,CAACG,mBAAmB,IAAI,SAAS;EAEjE,IAAIC,UAAU,GAAGX,GAAG;EAEpBE,MAAM,CACHU,MAAM,CAACP,IAAI,EAAEI,YAAY,EAAE,MAAM;IAChCI,OAAO,CAACC,GAAG,CAAC,oCAAoCd,GAAG,CAACe,OAAO,EAAE,CAAC;IAE9D,IAAIf,GAAG,CAACgB,iBAAiB,EACvBH,OAAO,CAACC,GAAG,CACT,8BAA8Bd,GAAG,CAACiB,SAAS,eACzCjB,GAAG,CAACgB,iBAAiB,GACpBhB,GAAG,CAACkB,kBAAkB,IAAI,EAAE,EACjC,CAAC;IACHL,OAAO,CAACC,GAAG,CAAC,uBAAuBL,YAAY,IAAIJ,IAAI,KAAK,CAAC;IAE7D,IAAI,CAACC,OAAO,CAACC,GAAG,CAACY,iBAAiB,EAChClB,KAAK,CAAC,QAAQ,CAAC,CAAC,uBAAuBD,GAAG,CAACiB,SAAS,EAAE,CAAC;EAC3D,CAAC,CAAC,CACDG,EAAE,CAAC,OAAO,EAAGC,CAAC,IAAK;IAClBR,OAAO,CAACS,KAAK,CAACD,CAAC,CAACE,OAAO,CAAC;IACxB,MAAMF,CAAC;EACT,CAAC,CAAC;EAEJ,OAAO,MAAM;IACXR,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAE1CU,MAAM,CAACC,GAAG,CAACC,MAAM,CAAC,UAAU,EAAE,MAAM;MAClCb,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAC9CZ,MAAM,CAACyB,cAAc,CAAC,SAAS,EAAEhB,UAAU,CAAC;MAC5C,MAAMiB,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC,CAACC,OAAO,CAAC,CAAC;MAC5C5B,MAAM,CAACkB,EAAE,CAAC,SAAS,EAAEQ,MAAM,CAAC;MAC5BjB,UAAU,GAAGiB,MAAM;IACrB,CAAC,CAAC;EACJ,CAAC;AACH","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}