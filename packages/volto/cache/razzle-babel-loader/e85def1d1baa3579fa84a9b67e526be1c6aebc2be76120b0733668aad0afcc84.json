{"ast":null,"code":"import _extends from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Widgets/CheckboxWidget.jsx\";\nvar __jsx = React.createElement;\n/**\n * CheckboxWidget component.\n * @module components/manage/Widgets/CheckboxWidget\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'semantic-ui-react';\nimport { injectIntl } from 'react-intl';\nimport FormFieldWrapper from '@plone/volto/components/manage/Widgets/FormFieldWrapper';\n\n/**\n * CheckboxWidget component class.\n * @function CheckboxWidget\n * @returns {string} Markup of the component.\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Active\",\n *  type: 'boolean',\n * }\n * ```\n */\nconst CheckboxWidget = props => {\n  const {\n    id,\n    title,\n    value,\n    onChange,\n    isDisabled\n  } = props;\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    columns: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(Checkbox, {\n    name: `field-${id}`,\n    checked: value || false,\n    disabled: isDisabled,\n    onChange: (event, {\n      checked\n    }) => {\n      onChange(id, checked);\n    },\n    label: __jsx(\"label\", {\n      htmlFor: `field-${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 18\n      }\n    }, title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })));\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_c = CheckboxWidget;\nCheckboxWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.bool,\n  onChange: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  wrapped: PropTypes.bool\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nCheckboxWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: null,\n  onEdit: null,\n  onDelete: null\n};\nexport default _c2 = injectIntl(CheckboxWidget);\nvar _c, _c2;\n$RefreshReg$(_c, \"CheckboxWidget\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","PropTypes","Checkbox","injectIntl","FormFieldWrapper","CheckboxWidget","props","id","title","value","onChange","isDisabled","__jsx","_extends","columns","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","name","checked","disabled","event","label","htmlFor","_c","propTypes","string","isRequired","oneOfType","object","description","required","bool","error","arrayOf","func","onEdit","onDelete","wrapped","defaultProps","_c2","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Widgets/CheckboxWidget.jsx"],"sourcesContent":["/**\n * CheckboxWidget component.\n * @module components/manage/Widgets/CheckboxWidget\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'semantic-ui-react';\n\nimport { injectIntl } from 'react-intl';\nimport FormFieldWrapper from '@plone/volto/components/manage/Widgets/FormFieldWrapper';\n\n/**\n * CheckboxWidget component class.\n * @function CheckboxWidget\n * @returns {string} Markup of the component.\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Active\",\n *  type: 'boolean',\n * }\n * ```\n */\nconst CheckboxWidget = (props) => {\n  const { id, title, value, onChange, isDisabled } = props;\n\n  return (\n    <FormFieldWrapper {...props} columns={1}>\n      <div className=\"wrapper\">\n        <Checkbox\n          name={`field-${id}`}\n          checked={value || false}\n          disabled={isDisabled}\n          onChange={(event, { checked }) => {\n            onChange(id, checked);\n          }}\n          label={<label htmlFor={`field-${id}`}>{title}</label>}\n        />\n      </div>\n    </FormFieldWrapper>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nCheckboxWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.bool,\n  onChange: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  wrapped: PropTypes.bool,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nCheckboxWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: null,\n  onEdit: null,\n  onDelete: null,\n};\n\nexport default injectIntl(CheckboxWidget);\n"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,QAAQ,QAAQ,mBAAmB;AAE5C,SAASC,UAAU,QAAQ,YAAY;AACvC,OAAOC,gBAAgB,MAAM,yDAAyD;;AAEtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAChC,MAAM;IAAEC,EAAE;IAAEC,KAAK;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAW,CAAC,GAAGL,KAAK;EAExD,OACEM,KAAA,CAACR,gBAAgB,EAAAS,QAAA,KAAKP,KAAK;IAAEQ,OAAO,EAAE,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,IACtCR,KAAA;IAAKS,SAAS,EAAC,SAAS;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtBR,KAAA,CAACV,QAAQ;IACPoB,IAAI,EAAE,SAASf,EAAE,EAAG;IACpBgB,OAAO,EAAEd,KAAK,IAAI,KAAM;IACxBe,QAAQ,EAAEb,UAAW;IACrBD,QAAQ,EAAEA,CAACe,KAAK,EAAE;MAAEF;IAAQ,CAAC,KAAK;MAChCb,QAAQ,CAACH,EAAE,EAAEgB,OAAO,CAAC;IACvB,CAAE;IACFG,KAAK,EAAEd,KAAA;MAAOe,OAAO,EAAE,SAASpB,EAAE,EAAG;MAAAQ,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEZ,KAAa,CAAE;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACvD,CACE,CACW,CAAC;AAEvB,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJAQ,EAAA,GApBMvB,cAAc;AAyBpBA,cAAc,CAACwB,SAAS,GAAG;EACzBtB,EAAE,EAAEN,SAAS,CAAC6B,MAAM,CAACC,UAAU;EAC/BvB,KAAK,EAAEP,SAAS,CAAC+B,SAAS,CAAC,CAAC/B,SAAS,CAAC6B,MAAM,EAAE7B,SAAS,CAACgC,MAAM,CAAC,CAAC,CAACF,UAAU;EAC3EG,WAAW,EAAEjC,SAAS,CAAC+B,SAAS,CAAC,CAAC/B,SAAS,CAAC6B,MAAM,EAAE7B,SAAS,CAACgC,MAAM,CAAC,CAAC;EACtEE,QAAQ,EAAElC,SAAS,CAACmC,IAAI;EACxBC,KAAK,EAAEpC,SAAS,CAACqC,OAAO,CAACrC,SAAS,CAAC6B,MAAM,CAAC;EAC1CrB,KAAK,EAAER,SAAS,CAACmC,IAAI;EACrB1B,QAAQ,EAAET,SAAS,CAACsC,IAAI;EACxBC,MAAM,EAAEvC,SAAS,CAACsC,IAAI;EACtBE,QAAQ,EAAExC,SAAS,CAACsC,IAAI;EACxBG,OAAO,EAAEzC,SAAS,CAACmC;AACrB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA/B,cAAc,CAACsC,YAAY,GAAG;EAC5BT,WAAW,EAAE,IAAI;EACjBC,QAAQ,EAAE,KAAK;EACfE,KAAK,EAAE,EAAE;EACT5B,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,IAAI;EACd8B,MAAM,EAAE,IAAI;EACZC,QAAQ,EAAE;AACZ,CAAC;AAED,eAAAG,GAAA,GAAezC,UAAU,CAACE,cAAc,CAAC;AAAC,IAAAuB,EAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}