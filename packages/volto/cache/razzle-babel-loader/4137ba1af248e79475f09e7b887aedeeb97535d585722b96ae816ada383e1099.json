{"ast":null,"code":"import _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _extends from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/View/DefaultView.jsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\n/**\n * Document view component.\n * @module components/theme/View/DefaultView\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container as SemanticContainer, Segment, Grid, Label } from 'semantic-ui-react';\nimport config from '@plone/volto/registry';\nimport { getSchema } from '@plone/volto/actions/schema/schema';\nimport { getWidget } from '@plone/volto/helpers/Widget/utils';\nimport RenderBlocks from '@plone/volto/components/theme/View/RenderBlocks';\nimport { hasBlocksData } from '@plone/volto/helpers/Blocks/Blocks';\nimport { getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport { useDispatch, useSelector } from 'react-redux';\nimport isEqual from 'lodash/isEqual';\n\n/**\n * Component to display the default view.\n * @function DefaultView\n * @param {Object} content Content object.\n * @returns {string} Markup of the component.\n */\nconst DefaultView = props => {\n  _s();\n  const {\n    content,\n    location\n  } = props;\n  const path = getBaseUrl((location === null || location === void 0 ? void 0 : location.pathname) || '');\n  const dispatch = useDispatch();\n  const {\n    views\n  } = config.widgets;\n  const contentSchema = useSelector(state => {\n    var _state$schema;\n    return (_state$schema = state.schema) === null || _state$schema === void 0 ? void 0 : _state$schema.schema;\n  });\n  const fieldsetsToExclude = ['categorization', 'dates', 'ownership', 'settings'];\n  const fieldsets = contentSchema === null || contentSchema === void 0 ? void 0 : contentSchema.fieldsets.filter(fs => !fieldsetsToExclude.includes(fs.id));\n\n  // TL;DR: There is a flash of the non block-based view because of the reset\n  // of the content on route change. Subscribing to the content change at this\n  // level has nasty implications, so we can't watch the Redux state for loaded\n  // content flag here (because it forces an additional component update)\n  // Instead, we can watch if the content is \"empty\", but this has a drawback\n  // since the locking mechanism inserts a `lock` key before the content is there.\n  // So \"empty\" means `content` is present, but only with a `lock` key, thus the next\n  // ugly condition comes to life\n  const contentLoaded = content && !isEqual(Object.keys(content), ['lock']);\n  React.useEffect(() => {\n    (content === null || content === void 0 ? void 0 : content['@type']) && !hasBlocksData(content) && dispatch(getSchema(content['@type'], location.pathname));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const Container = config.getComponent({\n    name: 'Container'\n  }).component || SemanticContainer;\n\n  // If the content is not yet loaded, then do not show anything\n  return contentLoaded ? hasBlocksData(content) ? __jsx(Container, {\n    id: \"page-document\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(RenderBlocks, _extends({}, props, {\n    path: path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }))) : __jsx(Container, {\n    id: \"page-document\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, fieldsets === null || fieldsets === void 0 ? void 0 : fieldsets.map(fs => {\n    var _fs$fields;\n    return __jsx(\"div\", {\n      className: \"fieldset\",\n      key: fs.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, fs.id !== 'default' && __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 39\n      }\n    }, fs.title), (_fs$fields = fs.fields) === null || _fs$fields === void 0 ? void 0 : _fs$fields.map((f, key) => {\n      let field = _objectSpread(_objectSpread({}, contentSchema === null || contentSchema === void 0 ? void 0 : contentSchema.properties[f]), {}, {\n        id: f,\n        widget: getWidget(f, contentSchema === null || contentSchema === void 0 ? void 0 : contentSchema.properties[f])\n      });\n      let Widget = views === null || views === void 0 ? void 0 : views.getWidget(field);\n      return f !== 'title' ? __jsx(Grid, {\n        celled: \"internally\",\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }\n      }, __jsx(Grid.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, __jsx(Label, {\n        title: field.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 23\n        }\n      }, field.title, \":\")), __jsx(Grid.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, __jsx(Segment, {\n        basic: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 23\n        }\n      }, __jsx(Widget, {\n        value: content[f],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }\n      })))) : __jsx(Widget, {\n        key: key,\n        value: content[f],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }\n      });\n    }));\n  })) : null;\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_s(DefaultView, \"PL4ukMbfh7hQ+1dfLZKGY/rBAnQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = DefaultView;\nDefaultView.propTypes = {\n  /**\n   * Content of the object\n   */\n  content: PropTypes.shape({\n    /**\n     * Title of the object\n     */\n    title: PropTypes.string,\n    /**\n     * Description of the object\n     */\n    description: PropTypes.string,\n    /**\n     * Text of the object\n     */\n    text: PropTypes.shape({\n      /**\n       * Data of the text of the object\n       */\n      data: PropTypes.string\n    })\n  }).isRequired\n};\nexport default DefaultView;\nvar _c;\n$RefreshReg$(_c, \"DefaultView\");","map":{"version":3,"names":["React","PropTypes","Container","SemanticContainer","Segment","Grid","Label","config","getSchema","getWidget","RenderBlocks","hasBlocksData","getBaseUrl","useDispatch","useSelector","isEqual","DefaultView","props","_s","content","location","path","pathname","dispatch","views","widgets","contentSchema","state","_state$schema","schema","fieldsetsToExclude","fieldsets","filter","fs","includes","id","contentLoaded","Object","keys","useEffect","getComponent","name","component","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_extends","map","_fs$fields","className","key","title","fields","f","field","_objectSpread","properties","widget","Widget","celled","Row","basic","value","_c","propTypes","shape","string","description","text","data","isRequired","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/View/DefaultView.jsx"],"sourcesContent":["/**\n * Document view component.\n * @module components/theme/View/DefaultView\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Container as SemanticContainer,\n  Segment,\n  Grid,\n  Label,\n} from 'semantic-ui-react';\nimport config from '@plone/volto/registry';\nimport { getSchema } from '@plone/volto/actions/schema/schema';\nimport { getWidget } from '@plone/volto/helpers/Widget/utils';\nimport RenderBlocks from '@plone/volto/components/theme/View/RenderBlocks';\n\nimport { hasBlocksData } from '@plone/volto/helpers/Blocks/Blocks';\nimport { getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport isEqual from 'lodash/isEqual';\n\n/**\n * Component to display the default view.\n * @function DefaultView\n * @param {Object} content Content object.\n * @returns {string} Markup of the component.\n */\nconst DefaultView = (props) => {\n  const { content, location } = props;\n  const path = getBaseUrl(location?.pathname || '');\n  const dispatch = useDispatch();\n  const { views } = config.widgets;\n  const contentSchema = useSelector((state) => state.schema?.schema);\n  const fieldsetsToExclude = [\n    'categorization',\n    'dates',\n    'ownership',\n    'settings',\n  ];\n  const fieldsets = contentSchema?.fieldsets.filter(\n    (fs) => !fieldsetsToExclude.includes(fs.id),\n  );\n\n  // TL;DR: There is a flash of the non block-based view because of the reset\n  // of the content on route change. Subscribing to the content change at this\n  // level has nasty implications, so we can't watch the Redux state for loaded\n  // content flag here (because it forces an additional component update)\n  // Instead, we can watch if the content is \"empty\", but this has a drawback\n  // since the locking mechanism inserts a `lock` key before the content is there.\n  // So \"empty\" means `content` is present, but only with a `lock` key, thus the next\n  // ugly condition comes to life\n  const contentLoaded = content && !isEqual(Object.keys(content), ['lock']);\n\n  React.useEffect(() => {\n    content?.['@type'] &&\n      !hasBlocksData(content) &&\n      dispatch(getSchema(content['@type'], location.pathname));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const Container =\n    config.getComponent({ name: 'Container' }).component || SemanticContainer;\n\n  // If the content is not yet loaded, then do not show anything\n  return contentLoaded ? (\n    hasBlocksData(content) ? (\n      <Container id=\"page-document\">\n        <RenderBlocks {...props} path={path} />\n      </Container>\n    ) : (\n      <Container id=\"page-document\">\n        {fieldsets?.map((fs) => {\n          return (\n            <div className=\"fieldset\" key={fs.id}>\n              {fs.id !== 'default' && <h2>{fs.title}</h2>}\n              {fs.fields?.map((f, key) => {\n                let field = {\n                  ...contentSchema?.properties[f],\n                  id: f,\n                  widget: getWidget(f, contentSchema?.properties[f]),\n                };\n                let Widget = views?.getWidget(field);\n                return f !== 'title' ? (\n                  <Grid celled=\"internally\" key={key}>\n                    <Grid.Row>\n                      <Label title={field.id}>{field.title}:</Label>\n                    </Grid.Row>\n                    <Grid.Row>\n                      <Segment basic>\n                        <Widget value={content[f]} />\n                      </Segment>\n                    </Grid.Row>\n                  </Grid>\n                ) : (\n                  <Widget key={key} value={content[f]} />\n                );\n              })}\n            </div>\n          );\n        })}\n      </Container>\n    )\n  ) : null;\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nDefaultView.propTypes = {\n  /**\n   * Content of the object\n   */\n  content: PropTypes.shape({\n    /**\n     * Title of the object\n     */\n    title: PropTypes.string,\n    /**\n     * Description of the object\n     */\n    description: PropTypes.string,\n    /**\n     * Text of the object\n     */\n    text: PropTypes.shape({\n      /**\n       * Data of the text of the object\n       */\n      data: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default DefaultView;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}