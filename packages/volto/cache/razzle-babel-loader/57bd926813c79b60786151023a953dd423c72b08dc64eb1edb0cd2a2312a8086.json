{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/View/LinkView.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { isInternalURL, flattenToAppURL } from '@plone/volto/helpers/Url/Url';\nimport { Container as SemanticContainer } from 'semantic-ui-react';\nimport UniversalLink from '@plone/volto/components/manage/UniversalLink/UniversalLink';\nimport { Redirect } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport config from '@plone/volto/registry';\nconst LinkView = ({\n  token,\n  content\n}) => {\n  _s();\n  const history = useHistory();\n  useEffect(() => {\n    if (!token) {\n      const {\n        remoteUrl\n      } = content;\n      if (isInternalURL(remoteUrl)) {\n        history.replace(flattenToAppURL(remoteUrl));\n      } else if (!__SERVER__) {\n        window.location.href = flattenToAppURL(remoteUrl);\n      }\n    }\n  }, [content, history, token]);\n  if (__SERVER__ && !token && content.remoteUrl) {\n    return __jsx(Redirect, {\n      to: content.remoteUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }\n    });\n  }\n  const {\n    title,\n    description,\n    remoteUrl\n  } = content;\n  const {\n    openExternalLinkInNewTab\n  } = config.settings;\n  const Container = config.getComponent({\n    name: 'Container'\n  }).component || SemanticContainer;\n  return __jsx(Container, {\n    id: \"page-document\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"documentFirstHeading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, title), content.description && __jsx(\"p\", {\n    className: \"documentDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, description), remoteUrl && __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"The link address is:\",\n    defaultMessage: \"The link address is:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), ' ', __jsx(UniversalLink, {\n    href: remoteUrl,\n    openLinkInNewTab: openExternalLinkInNewTab && !isInternalURL(remoteUrl),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, flattenToAppURL(remoteUrl))));\n};\n_s(LinkView, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n_c = LinkView;\nLinkView.propTypes = {\n  content: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    remoteUrl: PropTypes.string\n  }),\n  token: PropTypes.string\n};\nLinkView.defaultProps = {\n  content: null,\n  token: null\n};\nexport default LinkView;\nvar _c;\n$RefreshReg$(_c, \"LinkView\");","map":{"version":3,"names":["useEffect","PropTypes","useHistory","isInternalURL","flattenToAppURL","Container","SemanticContainer","UniversalLink","Redirect","FormattedMessage","config","LinkView","token","content","_s","history","remoteUrl","replace","__SERVER__","window","location","href","__jsx","to","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","description","openExternalLinkInNewTab","settings","getComponent","name","component","id","className","defaultMessage","openLinkInNewTab","_c","propTypes","shape","string","defaultProps","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/View/LinkView.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { isInternalURL, flattenToAppURL } from '@plone/volto/helpers/Url/Url';\nimport { Container as SemanticContainer } from 'semantic-ui-react';\nimport UniversalLink from '@plone/volto/components/manage/UniversalLink/UniversalLink';\nimport { Redirect } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport config from '@plone/volto/registry';\n\nconst LinkView = ({ token, content }) => {\n  const history = useHistory();\n  useEffect(() => {\n    if (!token) {\n      const { remoteUrl } = content;\n      if (isInternalURL(remoteUrl)) {\n        history.replace(flattenToAppURL(remoteUrl));\n      } else if (!__SERVER__) {\n        window.location.href = flattenToAppURL(remoteUrl);\n      }\n    }\n  }, [content, history, token]);\n  if (__SERVER__ && !token && content.remoteUrl) {\n    return <Redirect to={content.remoteUrl} />;\n  }\n  const { title, description, remoteUrl } = content;\n  const { openExternalLinkInNewTab } = config.settings;\n  const Container =\n    config.getComponent({ name: 'Container' }).component || SemanticContainer;\n\n  return (\n    <Container id=\"page-document\">\n      <h1 className=\"documentFirstHeading\">{title}</h1>\n      {content.description && (\n        <p className=\"documentDescription\">{description}</p>\n      )}\n      {remoteUrl && (\n        <p>\n          <FormattedMessage\n            id=\"The link address is:\"\n            defaultMessage=\"The link address is:\"\n          />{' '}\n          <UniversalLink\n            href={remoteUrl}\n            openLinkInNewTab={\n              openExternalLinkInNewTab && !isInternalURL(remoteUrl)\n            }\n          >\n            {flattenToAppURL(remoteUrl)}\n          </UniversalLink>\n        </p>\n      )}\n    </Container>\n  );\n};\n\nLinkView.propTypes = {\n  content: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    remoteUrl: PropTypes.string,\n  }),\n  token: PropTypes.string,\n};\n\nLinkView.defaultProps = {\n  content: null,\n  token: null,\n};\n\nexport default LinkView;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"The link address is:","defaultMessage":"The link address is:"}]}},"sourceType":"module","externalDependencies":[]}