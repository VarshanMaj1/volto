{"ast":null,"code":"import _extends from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Description/Edit.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Editor, Node, Transforms, Range, createEditor } from 'slate';\nimport { ReactEditor, Editable, Slate, withReact } from 'slate-react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, useIntl } from 'react-intl';\nimport config from '@plone/volto/registry';\nimport { P } from '@plone/volto-slate/constants';\nimport cx from 'classnames';\nconst messages = defineMessages({\n  description: {\n    \"id\": \"Add a description\\u2026\",\n    \"defaultMessage\": \"Add a description\\u2026\"\n  }\n});\nfunction usePrevious(value) {\n  _s();\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n_s(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\nexport const DescriptionBlockEdit = props => {\n  _s2();\n  const {\n    block,\n    blockNode,\n    data,\n    detached,\n    editable,\n    index,\n    metadata,\n    onAddBlock,\n    onChangeField,\n    onDeleteBlock,\n    onFocusNextBlock,\n    onFocusPreviousBlock,\n    onSelectBlock,\n    properties,\n    selected\n  } = props;\n  const {\n    0: editor\n  } = useState(withReact(createEditor()));\n  const {\n    0: initialValue\n  } = useState([{\n    type: P,\n    children: [{\n      text: (metadata === null || metadata === void 0 ? void 0 : metadata['description']) || (properties === null || properties === void 0 ? void 0 : properties['description']) || ''\n    }]\n  }]);\n  const intl = useIntl();\n  const prevSelected = usePrevious(selected);\n  const text = useMemo(() => (metadata === null || metadata === void 0 ? void 0 : metadata['description']) || (properties === null || properties === void 0 ? void 0 : properties['description']) || '', [metadata, properties]);\n  const placeholder = useMemo(() => data.placeholder || intl.formatMessage(messages['description']), [data.placeholder, intl]);\n  const disableNewBlocks = useMemo(() => detached, [detached]);\n  useEffect(() => {\n    if (!prevSelected && selected) {\n      if (editor.selection && Range.isCollapsed(editor.selection)) {\n        // keep selection\n        ReactEditor.focus(editor);\n      } else {\n        // nothing is selected, move focus to end\n        ReactEditor.focus(editor);\n        Transforms.select(editor, Editor.end(editor, []));\n      }\n    }\n  }, [prevSelected, selected, editor]);\n  useEffect(() => {\n    // undo/redo handlerr\n    const oldText = Node.string(editor);\n    if (oldText !== text) {\n      Transforms.insertText(editor, text, {\n        at: [0, 0]\n      });\n    }\n  }, [editor, text]);\n  const handleChange = useCallback(() => {\n    const newText = Node.string(editor);\n    if (newText !== text) {\n      onChangeField('description', newText);\n    }\n  }, [editor, onChangeField, text]);\n  const handleKeyDown = useCallback(ev => {\n    if (ev.key === 'Backspace' && Node.string(editor).length === 0) {\n      ev.preventDefault();\n      onDeleteBlock(block, true);\n    } else if (ev.key === 'Return' || ev.key === 'Enter') {\n      ev.preventDefault();\n      if (!disableNewBlocks) {\n        onSelectBlock(onAddBlock(config.settings.defaultBlockType, index + 1));\n      }\n    } else if (ev.key === 'ArrowUp') {\n      ev.preventDefault();\n      onFocusPreviousBlock(block, blockNode.current);\n    } else if (ev.key === 'ArrowDown') {\n      ev.preventDefault();\n      onFocusNextBlock(block, blockNode.current);\n    }\n  }, [index, blockNode, editor, onDeleteBlock, disableNewBlocks, onSelectBlock, onAddBlock, onFocusPreviousBlock, onFocusNextBlock, block]);\n  const handleFocus = useCallback(() => {\n    onSelectBlock(block);\n  }, [block, onSelectBlock]);\n  const renderElement = useCallback(({\n    attributes,\n    children\n  }) => {\n    return __jsx(\"div\", _extends({}, attributes, {\n      className: \"documentDescription\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }\n    }), children);\n  }, []);\n  if (typeof window.__SERVER__ !== 'undefined') {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 12\n      }\n    });\n  }\n  return __jsx(Slate, {\n    editor: editor,\n    onChange: handleChange,\n    initialValue: initialValue,\n    className: cx('block description', {\n      selected: selected\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, __jsx(Editable, {\n    readOnly: !editable,\n    onKeyDown: handleKeyDown,\n    placeholder: placeholder,\n    renderElement: renderElement,\n    onFocus: handleFocus,\n    \"aria-multiline\": \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }));\n};\n_s2(DescriptionBlockEdit, \"czv3CFVn4LwOYkuHsPtPx99Hndc=\", false, function () {\n  return [useIntl, usePrevious];\n});\n_c = DescriptionBlockEdit;\nDescriptionBlockEdit.propTypes = {\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n  selected: PropTypes.bool.isRequired,\n  block: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  onChangeField: PropTypes.func.isRequired,\n  onSelectBlock: PropTypes.func.isRequired,\n  onDeleteBlock: PropTypes.func.isRequired,\n  onAddBlock: PropTypes.func.isRequired,\n  onFocusPreviousBlock: PropTypes.func.isRequired,\n  onFocusNextBlock: PropTypes.func.isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  editable: PropTypes.bool,\n  detached: PropTypes.bool,\n  blockNode: PropTypes.any\n};\nDescriptionBlockEdit.defaultProps = {\n  detached: false,\n  editable: true\n};\nexport default DescriptionBlockEdit;\nvar _c;\n$RefreshReg$(_c, \"DescriptionBlockEdit\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useRef","useState","Editor","Node","Transforms","Range","createEditor","ReactEditor","Editable","Slate","withReact","PropTypes","defineMessages","useIntl","config","P","cx","messages","description","usePrevious","value","_s","ref","current","DescriptionBlockEdit","props","_s2","block","blockNode","data","detached","editable","index","metadata","onAddBlock","onChangeField","onDeleteBlock","onFocusNextBlock","onFocusPreviousBlock","onSelectBlock","properties","selected","editor","initialValue","type","children","text","intl","prevSelected","placeholder","formatMessage","disableNewBlocks","selection","isCollapsed","focus","select","end","oldText","string","insertText","at","handleChange","newText","handleKeyDown","ev","key","length","preventDefault","settings","defaultBlockType","handleFocus","renderElement","attributes","__jsx","_extends","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","window","__SERVER__","onChange","readOnly","onKeyDown","onFocus","_c","propTypes","objectOf","any","isRequired","bool","number","func","defaultProps","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Description/Edit.jsx"],"sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { Editor, Node, Transforms, Range, createEditor } from 'slate';\nimport { ReactEditor, Editable, Slate, withReact } from 'slate-react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, useIntl } from 'react-intl';\nimport config from '@plone/volto/registry';\nimport { P } from '@plone/volto-slate/constants';\nimport cx from 'classnames';\n\nconst messages = defineMessages({\n  description: {\n    id: 'Add a description…',\n    defaultMessage: 'Add a description…',\n  },\n});\n\nfunction usePrevious(value) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n\nexport const DescriptionBlockEdit = (props) => {\n  const {\n    block,\n    blockNode,\n    data,\n    detached,\n    editable,\n    index,\n    metadata,\n    onAddBlock,\n    onChangeField,\n    onDeleteBlock,\n    onFocusNextBlock,\n    onFocusPreviousBlock,\n    onSelectBlock,\n    properties,\n    selected,\n  } = props;\n\n  const [editor] = useState(withReact(createEditor()));\n  const [initialValue] = useState([\n    {\n      type: P,\n      children: [\n        {\n          text: metadata?.['description'] || properties?.['description'] || '',\n        },\n      ],\n    },\n  ]);\n\n  const intl = useIntl();\n\n  const prevSelected = usePrevious(selected);\n\n  const text = useMemo(\n    () => metadata?.['description'] || properties?.['description'] || '',\n    [metadata, properties],\n  );\n\n  const placeholder = useMemo(\n    () => data.placeholder || intl.formatMessage(messages['description']),\n    [data.placeholder, intl],\n  );\n  const disableNewBlocks = useMemo(() => detached, [detached]);\n\n  useEffect(() => {\n    if (!prevSelected && selected) {\n      if (editor.selection && Range.isCollapsed(editor.selection)) {\n        // keep selection\n        ReactEditor.focus(editor);\n      } else {\n        // nothing is selected, move focus to end\n        ReactEditor.focus(editor);\n        Transforms.select(editor, Editor.end(editor, []));\n      }\n    }\n  }, [prevSelected, selected, editor]);\n\n  useEffect(() => {\n    // undo/redo handlerr\n    const oldText = Node.string(editor);\n    if (oldText !== text) {\n      Transforms.insertText(editor, text, {\n        at: [0, 0],\n      });\n    }\n  }, [editor, text]);\n\n  const handleChange = useCallback(() => {\n    const newText = Node.string(editor);\n    if (newText !== text) {\n      onChangeField('description', newText);\n    }\n  }, [editor, onChangeField, text]);\n\n  const handleKeyDown = useCallback(\n    (ev) => {\n      if (ev.key === 'Backspace' && Node.string(editor).length === 0) {\n        ev.preventDefault();\n        onDeleteBlock(block, true);\n      } else if (ev.key === 'Return' || ev.key === 'Enter') {\n        ev.preventDefault();\n        if (!disableNewBlocks) {\n          onSelectBlock(\n            onAddBlock(config.settings.defaultBlockType, index + 1),\n          );\n        }\n      } else if (ev.key === 'ArrowUp') {\n        ev.preventDefault();\n        onFocusPreviousBlock(block, blockNode.current);\n      } else if (ev.key === 'ArrowDown') {\n        ev.preventDefault();\n        onFocusNextBlock(block, blockNode.current);\n      }\n    },\n    [\n      index,\n      blockNode,\n      editor,\n      onDeleteBlock,\n      disableNewBlocks,\n      onSelectBlock,\n      onAddBlock,\n      onFocusPreviousBlock,\n      onFocusNextBlock,\n      block,\n    ],\n  );\n\n  const handleFocus = useCallback(() => {\n    onSelectBlock(block);\n  }, [block, onSelectBlock]);\n\n  const renderElement = useCallback(({ attributes, children }) => {\n    return (\n      <div {...attributes} className=\"documentDescription\">\n        {children}\n      </div>\n    );\n  }, []);\n\n  if (typeof window.__SERVER__ !== 'undefined') {\n    return <div />;\n  }\n\n  return (\n    <Slate\n      editor={editor}\n      onChange={handleChange}\n      initialValue={initialValue}\n      className={cx('block description', {\n        selected: selected,\n      })}\n    >\n      <Editable\n        readOnly={!editable}\n        onKeyDown={handleKeyDown}\n        placeholder={placeholder}\n        renderElement={renderElement}\n        onFocus={handleFocus}\n        aria-multiline=\"false\"\n      ></Editable>\n    </Slate>\n  );\n};\n\nDescriptionBlockEdit.propTypes = {\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n  selected: PropTypes.bool.isRequired,\n  block: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  onChangeField: PropTypes.func.isRequired,\n  onSelectBlock: PropTypes.func.isRequired,\n  onDeleteBlock: PropTypes.func.isRequired,\n  onAddBlock: PropTypes.func.isRequired,\n  onFocusPreviousBlock: PropTypes.func.isRequired,\n  onFocusNextBlock: PropTypes.func.isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  editable: PropTypes.bool,\n  detached: PropTypes.bool,\n  blockNode: PropTypes.any,\n};\n\nDescriptionBlockEdit.defaultProps = {\n  detached: false,\n  editable: true,\n};\n\nexport default DescriptionBlockEdit;\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IACVC,WAAW,EACXC,SAAS,EACTC,OAAO,EACPC,MAAM,EACNC,QAAQ,QACH,OAAO;AACd,SAASC,MAAM,EAAEC,IAAI,EAAEC,UAAU,EAAEC,KAAK,EAAEC,YAAY,QAAQ,OAAO;AACrE,SAASC,WAAW,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,SAAS,QAAQ,aAAa;AACrE,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,cAAc,EAAEC,OAAO,QAAQ,YAAY;AACpD,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAASC,CAAC,QAAQ,8BAA8B;AAChD,OAAOC,EAAE,MAAM,YAAY;AAE3B,MAAMC,QAAQ,GAAGL,cAAc,CAAC;EAC9BM,WAAW;IAAA;IAAA;EAAA;AAIb,CAAC,CAAC;AAEF,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC1B,MAAMC,GAAG,GAAGtB,MAAM,CAAC,CAAC;EAEpBF,SAAS,CAAC,MAAM;IACdwB,GAAG,CAACC,OAAO,GAAGH,KAAK;EACrB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,OAAOE,GAAG,CAACC,OAAO;AACpB;AAACF,EAAA,CARQF,WAAW;AAUpB,OAAO,MAAMK,oBAAoB,GAAIC,KAAK,IAAK;EAAAC,GAAA;EAC7C,MAAM;IACJC,KAAK;IACLC,SAAS;IACTC,IAAI;IACJC,QAAQ;IACRC,QAAQ;IACRC,KAAK;IACLC,QAAQ;IACRC,UAAU;IACVC,aAAa;IACbC,aAAa;IACbC,gBAAgB;IAChBC,oBAAoB;IACpBC,aAAa;IACbC,UAAU;IACVC;EACF,CAAC,GAAGhB,KAAK;EAET,MAAM;IAAA,GAACiB;EAAM,IAAIzC,QAAQ,CAACS,SAAS,CAACJ,YAAY,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM;IAAA,GAACqC;EAAY,IAAI1C,QAAQ,CAAC,CAC9B;IACE2C,IAAI,EAAE7B,CAAC;IACP8B,QAAQ,EAAE,CACR;MACEC,IAAI,EAAE,CAAAb,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAG,aAAa,CAAC,MAAIO,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAG,aAAa,CAAC,KAAI;IACpE,CAAC;EAEL,CAAC,CACF,CAAC;EAEF,MAAMO,IAAI,GAAGlC,OAAO,CAAC,CAAC;EAEtB,MAAMmC,YAAY,GAAG7B,WAAW,CAACsB,QAAQ,CAAC;EAE1C,MAAMK,IAAI,GAAG/C,OAAO,CAClB,MAAM,CAAAkC,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAG,aAAa,CAAC,MAAIO,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAG,aAAa,CAAC,KAAI,EAAE,EACpE,CAACP,QAAQ,EAAEO,UAAU,CACvB,CAAC;EAED,MAAMS,WAAW,GAAGlD,OAAO,CACzB,MAAM8B,IAAI,CAACoB,WAAW,IAAIF,IAAI,CAACG,aAAa,CAACjC,QAAQ,CAAC,aAAa,CAAC,CAAC,EACrE,CAACY,IAAI,CAACoB,WAAW,EAAEF,IAAI,CACzB,CAAC;EACD,MAAMI,gBAAgB,GAAGpD,OAAO,CAAC,MAAM+B,QAAQ,EAAE,CAACA,QAAQ,CAAC,CAAC;EAE5DhC,SAAS,CAAC,MAAM;IACd,IAAI,CAACkD,YAAY,IAAIP,QAAQ,EAAE;MAC7B,IAAIC,MAAM,CAACU,SAAS,IAAI/C,KAAK,CAACgD,WAAW,CAACX,MAAM,CAACU,SAAS,CAAC,EAAE;QAC3D;QACA7C,WAAW,CAAC+C,KAAK,CAACZ,MAAM,CAAC;MAC3B,CAAC,MAAM;QACL;QACAnC,WAAW,CAAC+C,KAAK,CAACZ,MAAM,CAAC;QACzBtC,UAAU,CAACmD,MAAM,CAACb,MAAM,EAAExC,MAAM,CAACsD,GAAG,CAACd,MAAM,EAAE,EAAE,CAAC,CAAC;MACnD;IACF;EACF,CAAC,EAAE,CAACM,YAAY,EAAEP,QAAQ,EAAEC,MAAM,CAAC,CAAC;EAEpC5C,SAAS,CAAC,MAAM;IACd;IACA,MAAM2D,OAAO,GAAGtD,IAAI,CAACuD,MAAM,CAAChB,MAAM,CAAC;IACnC,IAAIe,OAAO,KAAKX,IAAI,EAAE;MACpB1C,UAAU,CAACuD,UAAU,CAACjB,MAAM,EAAEI,IAAI,EAAE;QAClCc,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC;MACX,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAAClB,MAAM,EAAEI,IAAI,CAAC,CAAC;EAElB,MAAMe,YAAY,GAAGhE,WAAW,CAAC,MAAM;IACrC,MAAMiE,OAAO,GAAG3D,IAAI,CAACuD,MAAM,CAAChB,MAAM,CAAC;IACnC,IAAIoB,OAAO,KAAKhB,IAAI,EAAE;MACpBX,aAAa,CAAC,aAAa,EAAE2B,OAAO,CAAC;IACvC;EACF,CAAC,EAAE,CAACpB,MAAM,EAAEP,aAAa,EAAEW,IAAI,CAAC,CAAC;EAEjC,MAAMiB,aAAa,GAAGlE,WAAW,CAC9BmE,EAAE,IAAK;IACN,IAAIA,EAAE,CAACC,GAAG,KAAK,WAAW,IAAI9D,IAAI,CAACuD,MAAM,CAAChB,MAAM,CAAC,CAACwB,MAAM,KAAK,CAAC,EAAE;MAC9DF,EAAE,CAACG,cAAc,CAAC,CAAC;MACnB/B,aAAa,CAACT,KAAK,EAAE,IAAI,CAAC;IAC5B,CAAC,MAAM,IAAIqC,EAAE,CAACC,GAAG,KAAK,QAAQ,IAAID,EAAE,CAACC,GAAG,KAAK,OAAO,EAAE;MACpDD,EAAE,CAACG,cAAc,CAAC,CAAC;MACnB,IAAI,CAAChB,gBAAgB,EAAE;QACrBZ,aAAa,CACXL,UAAU,CAACpB,MAAM,CAACsD,QAAQ,CAACC,gBAAgB,EAAErC,KAAK,GAAG,CAAC,CACxD,CAAC;MACH;IACF,CAAC,MAAM,IAAIgC,EAAE,CAACC,GAAG,KAAK,SAAS,EAAE;MAC/BD,EAAE,CAACG,cAAc,CAAC,CAAC;MACnB7B,oBAAoB,CAACX,KAAK,EAAEC,SAAS,CAACL,OAAO,CAAC;IAChD,CAAC,MAAM,IAAIyC,EAAE,CAACC,GAAG,KAAK,WAAW,EAAE;MACjCD,EAAE,CAACG,cAAc,CAAC,CAAC;MACnB9B,gBAAgB,CAACV,KAAK,EAAEC,SAAS,CAACL,OAAO,CAAC;IAC5C;EACF,CAAC,EACD,CACES,KAAK,EACLJ,SAAS,EACTc,MAAM,EACNN,aAAa,EACbe,gBAAgB,EAChBZ,aAAa,EACbL,UAAU,EACVI,oBAAoB,EACpBD,gBAAgB,EAChBV,KAAK,CAET,CAAC;EAED,MAAM2C,WAAW,GAAGzE,WAAW,CAAC,MAAM;IACpC0C,aAAa,CAACZ,KAAK,CAAC;EACtB,CAAC,EAAE,CAACA,KAAK,EAAEY,aAAa,CAAC,CAAC;EAE1B,MAAMgC,aAAa,GAAG1E,WAAW,CAAC,CAAC;IAAE2E,UAAU;IAAE3B;EAAS,CAAC,KAAK;IAC9D,OACE4B,KAAA,QAAAC,QAAA,KAASF,UAAU;MAAEG,SAAS,EAAC,qBAAqB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,IACjDpC,QACE,CAAC;EAEV,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,OAAOqC,MAAM,CAACC,UAAU,KAAK,WAAW,EAAE;IAC5C,OAAOV,KAAA;MAAAG,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAM,CAAC;EAChB;EAEA,OACER,KAAA,CAAChE,KAAK;IACJiC,MAAM,EAAEA,MAAO;IACf0C,QAAQ,EAAEvB,YAAa;IACvBlB,YAAY,EAAEA,YAAa;IAC3BgC,SAAS,EAAE3D,EAAE,CAAC,mBAAmB,EAAE;MACjCyB,QAAQ,EAAEA;IACZ,CAAC,CAAE;IAAAmC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEHR,KAAA,CAACjE,QAAQ;IACP6E,QAAQ,EAAE,CAACtD,QAAS;IACpBuD,SAAS,EAAEvB,aAAc;IACzBd,WAAW,EAAEA,WAAY;IACzBsB,aAAa,EAAEA,aAAc;IAC7BgB,OAAO,EAAEjB,WAAY;IACrB,kBAAe,OAAO;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACb,CACN,CAAC;AAEZ,CAAC;AAACvD,GAAA,CAjJWF,oBAAoB;EAAA,QA+BlBX,OAAO,EAECM,WAAW;AAAA;AAAAqE,EAAA,GAjCrBhE,oBAAoB;AAmJjCA,oBAAoB,CAACiE,SAAS,GAAG;EAC/BjD,UAAU,EAAE7B,SAAS,CAAC+E,QAAQ,CAAC/E,SAAS,CAACgF,GAAG,CAAC,CAACC,UAAU;EACxDnD,QAAQ,EAAE9B,SAAS,CAACkF,IAAI,CAACD,UAAU;EACnCjE,KAAK,EAAEhB,SAAS,CAAC+C,MAAM,CAACkC,UAAU;EAClC5D,KAAK,EAAErB,SAAS,CAACmF,MAAM,CAACF,UAAU;EAClCzD,aAAa,EAAExB,SAAS,CAACoF,IAAI,CAACH,UAAU;EACxCrD,aAAa,EAAE5B,SAAS,CAACoF,IAAI,CAACH,UAAU;EACxCxD,aAAa,EAAEzB,SAAS,CAACoF,IAAI,CAACH,UAAU;EACxC1D,UAAU,EAAEvB,SAAS,CAACoF,IAAI,CAACH,UAAU;EACrCtD,oBAAoB,EAAE3B,SAAS,CAACoF,IAAI,CAACH,UAAU;EAC/CvD,gBAAgB,EAAE1B,SAAS,CAACoF,IAAI,CAACH,UAAU;EAC3C/D,IAAI,EAAElB,SAAS,CAAC+E,QAAQ,CAAC/E,SAAS,CAACgF,GAAG,CAAC,CAACC,UAAU;EAClD7D,QAAQ,EAAEpB,SAAS,CAACkF,IAAI;EACxB/D,QAAQ,EAAEnB,SAAS,CAACkF,IAAI;EACxBjE,SAAS,EAAEjB,SAAS,CAACgF;AACvB,CAAC;AAEDnE,oBAAoB,CAACwE,YAAY,GAAG;EAClClE,QAAQ,EAAE,KAAK;EACfC,QAAQ,EAAE;AACZ,CAAC;AAED,eAAeP,oBAAoB;AAAC,IAAAgE,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Add a description…","defaultMessage":"Add a description…"}]}},"sourceType":"module","externalDependencies":[]}