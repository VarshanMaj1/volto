{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n// @ts-nocheck\nimport { v4 as uuid } from 'uuid';\nimport { getBlocksFieldname, getBlocksLayoutFieldname, hasBlocksData } from '@plone/volto/helpers/Blocks/Blocks';\nimport config from '@plone/registry';\nexport function cloneBlocks(blocksData) {\n  if (hasBlocksData(blocksData)) {\n    const blocksFieldname = getBlocksFieldname(blocksData);\n    const blocksLayoutFieldname = getBlocksLayoutFieldname(blocksData);\n    const cloneWithIds = Object.keys(blocksData.blocks).map(key => {\n      const block = blocksData.blocks[key];\n      const blockConfig = config.blocks.blocksConfig[blocksData['@type']];\n      return blockConfig !== null && blockConfig !== void 0 && blockConfig.cloneData ? blockConfig.cloneData(block) : [uuid(), cloneBlocks(block)];\n    }).filter(info => !!info); // some blocks may refuse to be copied\n\n    const newBlockData = _objectSpread(_objectSpread({}, blocksData), {}, {\n      [blocksFieldname]: _objectSpread({}, Object.assign({}, ...cloneWithIds.map(([id, data]) => ({\n        [id]: data\n      })))),\n      [blocksLayoutFieldname]: _objectSpread(_objectSpread({}, blocksData[blocksLayoutFieldname]), {}, {\n        items: [...cloneWithIds.map(([id]) => id)]\n      })\n    });\n    return newBlockData;\n  }\n  return blocksData;\n}","map":{"version":3,"names":["v4","uuid","getBlocksFieldname","getBlocksLayoutFieldname","hasBlocksData","config","cloneBlocks","blocksData","blocksFieldname","blocksLayoutFieldname","cloneWithIds","Object","keys","blocks","map","key","block","blockConfig","blocksConfig","cloneData","filter","info","newBlockData","_objectSpread","assign","id","data","items"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/helpers/Blocks/cloneBlocks.ts"],"sourcesContent":["// @ts-nocheck\nimport { v4 as uuid } from 'uuid';\nimport {\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n  hasBlocksData,\n} from '@plone/volto/helpers/Blocks/Blocks';\nimport config from '@plone/registry';\n\nexport function cloneBlocks(blocksData) {\n  if (hasBlocksData(blocksData)) {\n    const blocksFieldname = getBlocksFieldname(blocksData);\n    const blocksLayoutFieldname = getBlocksLayoutFieldname(blocksData);\n\n    const cloneWithIds = Object.keys(blocksData.blocks)\n      .map((key) => {\n        const block = blocksData.blocks[key];\n        const blockConfig = config.blocks.blocksConfig[blocksData['@type']];\n        return blockConfig?.cloneData\n          ? blockConfig.cloneData(block)\n          : [uuid(), cloneBlocks(block)];\n      })\n      .filter((info) => !!info); // some blocks may refuse to be copied\n\n    const newBlockData = {\n      ...blocksData,\n      [blocksFieldname]: {\n        ...Object.assign(\n          {},\n          ...cloneWithIds.map(([id, data]) => ({ [id]: data })),\n        ),\n      },\n      [blocksLayoutFieldname]: {\n        ...blocksData[blocksLayoutFieldname],\n        items: [...cloneWithIds.map(([id]) => id)],\n      },\n    };\n\n    return newBlockData;\n  }\n\n  return blocksData;\n}\n"],"mappings":";;;;;AAAA;AACA,SAASA,EAAE,IAAIC,IAAI,QAAQ,MAAM;AACjC,SACEC,kBAAkB,EAClBC,wBAAwB,EACxBC,aAAa,QACR,oCAAoC;AAC3C,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,OAAO,SAASC,WAAWA,CAACC,UAAU,EAAE;EACtC,IAAIH,aAAa,CAACG,UAAU,CAAC,EAAE;IAC7B,MAAMC,eAAe,GAAGN,kBAAkB,CAACK,UAAU,CAAC;IACtD,MAAME,qBAAqB,GAAGN,wBAAwB,CAACI,UAAU,CAAC;IAElE,MAAMG,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACL,UAAU,CAACM,MAAM,CAAC,CAChDC,GAAG,CAAEC,GAAG,IAAK;MACZ,MAAMC,KAAK,GAAGT,UAAU,CAACM,MAAM,CAACE,GAAG,CAAC;MACpC,MAAME,WAAW,GAAGZ,MAAM,CAACQ,MAAM,CAACK,YAAY,CAACX,UAAU,CAAC,OAAO,CAAC,CAAC;MACnE,OAAOU,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEE,SAAS,GACzBF,WAAW,CAACE,SAAS,CAACH,KAAK,CAAC,GAC5B,CAACf,IAAI,CAAC,CAAC,EAAEK,WAAW,CAACU,KAAK,CAAC,CAAC;IAClC,CAAC,CAAC,CACDI,MAAM,CAAEC,IAAI,IAAK,CAAC,CAACA,IAAI,CAAC,CAAC,CAAC;;IAE7B,MAAMC,YAAY,GAAAC,aAAA,CAAAA,aAAA,KACbhB,UAAU;MACb,CAACC,eAAe,GAAAe,aAAA,KACXZ,MAAM,CAACa,MAAM,CACd,CAAC,CAAC,EACF,GAAGd,YAAY,CAACI,GAAG,CAAC,CAAC,CAACW,EAAE,EAAEC,IAAI,CAAC,MAAM;QAAE,CAACD,EAAE,GAAGC;MAAK,CAAC,CAAC,CACtD,CAAC,CACF;MACD,CAACjB,qBAAqB,GAAAc,aAAA,CAAAA,aAAA,KACjBhB,UAAU,CAACE,qBAAqB,CAAC;QACpCkB,KAAK,EAAE,CAAC,GAAGjB,YAAY,CAACI,GAAG,CAAC,CAAC,CAACW,EAAE,CAAC,KAAKA,EAAE,CAAC;MAAC;IAC3C,EACF;IAED,OAAOH,YAAY;EACrB;EAEA,OAAOf,UAAU;AACnB","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}