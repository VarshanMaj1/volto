{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/View/View.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * View container.\n * @module components/theme/View/View\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { createPortal } from 'react-dom';\nimport { injectIntl } from 'react-intl';\nimport qs from 'query-string';\nimport ContentMetadataTags from '@plone/volto/components/theme/ContentMetadataTags/ContentMetadataTags';\nimport Comments from '@plone/volto/components/theme/Comments/Comments';\nimport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nimport { listActions } from '@plone/volto/actions/actions/actions';\nimport { getContent } from '@plone/volto/actions/content/content';\nimport BodyClass from '@plone/volto/helpers/BodyClass/BodyClass';\nimport { getBaseUrl, flattenToAppURL } from '@plone/volto/helpers/Url/Url';\nimport { getLayoutFieldname } from '@plone/volto/helpers/Content/Content';\nimport { hasApiExpander } from '@plone/volto/helpers/Utils/Utils';\nimport { AlternateHrefLangs } from '@plone/volto/components/theme/AlternateHrefLangs/AlternateHrefLangs';\nimport config from '@plone/volto/registry';\nimport SlotRenderer from '../SlotRenderer/SlotRenderer';\n\n/**\n * View container class.\n * @class View\n * @extends Component\n */\nclass View extends Component {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"state\", {\n      hasObjectButtons: null,\n      isClient: false\n    });\n    /**\n     * Default fallback view\n     * @method getViewDefault\n     * @returns {string} Markup for component.\n     */\n    _defineProperty(this, \"getViewDefault\", () => config.views.defaultView);\n    /**\n     * Get view by content type\n     * @method getViewByType\n     * @returns {string} Markup for component.\n     */\n    _defineProperty(this, \"getViewByType\", () => config.views.contentTypesViews[this.props.content['@type']] || null);\n    /**\n     * Get view by content layout property\n     * @method getViewByLayout\n     * @returns {string} Markup for component.\n     */\n    _defineProperty(this, \"getViewByLayout\", () => config.views.layoutViews[this.props.content[getLayoutFieldname(this.props.content)]] || null);\n    /**\n     * Cleans the component displayName (specially for connected components)\n     * which have the Connect(componentDisplayName)\n     * @method cleanViewName\n     * @param  {string} dirtyDisplayName The displayName\n     * @returns {string} Clean displayName (no Connect(...)).\n     */\n    _defineProperty(this, \"cleanViewName\", dirtyDisplayName => dirtyDisplayName.replace('Connect(', '').replace('injectIntl(', '').replace(')', '').replace('connect(', '').toLowerCase());\n  }\n  componentDidMount() {\n    // Do not trigger the actions action if the expander is present\n    if (!hasApiExpander('actions', getBaseUrl(this.props.pathname))) {\n      this.props.listActions(getBaseUrl(this.props.pathname));\n    }\n    this.props.getContent(getBaseUrl(this.props.pathname), this.props.versionId);\n    this.setState({\n      isClient: true\n    });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      // Do not trigger the actions action if the expander is present\n      if (!hasApiExpander('actions', getBaseUrl(nextProps.pathname))) {\n        this.props.listActions(getBaseUrl(nextProps.pathname));\n      }\n      this.props.getContent(getBaseUrl(nextProps.pathname), this.props.versionId);\n    }\n    if (nextProps.actions.object_buttons) {\n      const objectButtons = nextProps.actions.object_buttons;\n      this.setState({\n        hasObjectButtons: !!objectButtons.length\n      });\n    }\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    var _this$props$error;\n    const {\n      views\n    } = config;\n    if ([301, 302].includes((_this$props$error = this.props.error) === null || _this$props$error === void 0 ? void 0 : _this$props$error.code)) {\n      const redirect = flattenToAppURL(this.props.error.url).split('?')[0].replace('/++api++', '');\n      return __jsx(Redirect, {\n        to: `${redirect}${this.props.location.search}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 14\n        }\n      });\n    } else if (this.props.error && !this.props.connectionRefused) {\n      let FoundView;\n      if (this.props.error.status === undefined) {\n        // For some reason, while development and if CORS is in place and the\n        // requested resource is 404, it returns undefined as status, then the\n        // next statement will fail\n        FoundView = views.errorViews.corsError;\n      } else {\n        FoundView = views.errorViews[this.props.error.status.toString()];\n      }\n      if (!FoundView) {\n        FoundView = views.errorViews['404']; // default to 404\n      }\n      return __jsx(\"div\", {\n        id: \"view\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }\n      }, __jsx(FoundView, _extends({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }\n      })));\n    }\n    if (!this.props.content) {\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 14\n        }\n      });\n    }\n    const RenderedView = this.getViewByLayout() || this.getViewByType() || this.getViewDefault();\n    return __jsx(\"div\", {\n      id: \"view\",\n      tabIndex: \"-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 7\n      }\n    }, __jsx(ContentMetadataTags, {\n      content: this.props.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }\n    }), __jsx(AlternateHrefLangs, {\n      content: this.props.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }\n    }), __jsx(BodyClass, {\n      className: RenderedView.displayName ? `view-${this.cleanViewName(RenderedView.displayName)}` : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }\n    }), __jsx(SlotRenderer, {\n      name: \"aboveContent\",\n      content: this.props.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }\n    }), __jsx(RenderedView, {\n      key: this.props.content['@id'],\n      content: this.props.content,\n      location: this.props.location,\n      token: this.props.token,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }\n    }), __jsx(SlotRenderer, {\n      name: \"belowContent\",\n      content: this.props.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }\n    }), this.props.content.allow_discussion && __jsx(Comments, {\n      pathname: this.props.pathname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }\n    }), this.state.isClient && /*#__PURE__*/createPortal(__jsx(Toolbar, {\n      pathname: this.props.pathname,\n      inner: __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 60\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }\n    }), document.getElementById('toolbar')));\n  }\n}\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_defineProperty(View, \"propTypes\", {\n  actions: PropTypes.shape({\n    object: PropTypes.arrayOf(PropTypes.object),\n    object_buttons: PropTypes.arrayOf(PropTypes.object),\n    user: PropTypes.arrayOf(PropTypes.object)\n  }),\n  listActions: PropTypes.func.isRequired,\n  /**\n   * Action to get the content\n   */\n  getContent: PropTypes.func.isRequired,\n  /**\n   * Pathname of the object\n   */\n  pathname: PropTypes.string.isRequired,\n  location: PropTypes.shape({\n    search: PropTypes.string,\n    pathname: PropTypes.string\n  }).isRequired,\n  /**\n   * Version id of the object\n   */\n  versionId: PropTypes.string,\n  /**\n   * Content of the object\n   */\n  content: PropTypes.shape({\n    /**\n     * Layout of the object\n     */\n    layout: PropTypes.string,\n    /**\n     * Allow discussion of the object\n     */\n    allow_discussion: PropTypes.bool,\n    /**\n     * Title of the object\n     */\n    title: PropTypes.string,\n    /**\n     * Description of the object\n     */\n    description: PropTypes.string,\n    /**\n     * Type of the object\n     */\n    '@type': PropTypes.string,\n    /**\n     * Subjects of the object\n     */\n    subjects: PropTypes.arrayOf(PropTypes.string),\n    is_folderish: PropTypes.bool\n  }),\n  error: PropTypes.shape({\n    /**\n     * Error type\n     */\n    status: PropTypes.number\n  })\n});\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\n_defineProperty(View, \"defaultProps\", {\n  actions: null,\n  content: null,\n  versionId: null,\n  error: null\n});\nexport default compose(injectIntl, connect((state, props) => ({\n  actions: state.actions.actions,\n  token: state.userSession.token,\n  content: state.content.data,\n  error: state.content.get.error,\n  apiError: state.apierror.error,\n  connectionRefused: state.apierror.connectionRefused,\n  pathname: props.location.pathname,\n  versionId: qs.parse(props.location.search) && qs.parse(props.location.search).version\n}), {\n  listActions,\n  getContent\n}))(View);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Redirect","createPortal","injectIntl","qs","ContentMetadataTags","Comments","Toolbar","listActions","getContent","BodyClass","getBaseUrl","flattenToAppURL","getLayoutFieldname","hasApiExpander","AlternateHrefLangs","config","SlotRenderer","View","constructor","args","_defineProperty","hasObjectButtons","isClient","views","defaultView","contentTypesViews","props","content","layoutViews","dirtyDisplayName","replace","toLowerCase","componentDidMount","pathname","versionId","setState","UNSAFE_componentWillReceiveProps","nextProps","actions","object_buttons","objectButtons","length","render","_this$props$error","includes","error","code","redirect","url","split","__jsx","to","location","search","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","connectionRefused","FoundView","status","undefined","errorViews","corsError","toString","id","_extends","RenderedView","getViewByLayout","getViewByType","getViewDefault","tabIndex","className","displayName","cleanViewName","name","key","token","history","allow_discussion","state","inner","document","getElementById","shape","object","arrayOf","user","func","isRequired","string","layout","bool","title","description","subjects","is_folderish","number","userSession","data","get","apiError","apierror","parse","version"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/View/View.jsx"],"sourcesContent":["/**\n * View container.\n * @module components/theme/View/View\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { createPortal } from 'react-dom';\nimport { injectIntl } from 'react-intl';\nimport qs from 'query-string';\n\nimport ContentMetadataTags from '@plone/volto/components/theme/ContentMetadataTags/ContentMetadataTags';\nimport Comments from '@plone/volto/components/theme/Comments/Comments';\nimport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nimport { listActions } from '@plone/volto/actions/actions/actions';\nimport { getContent } from '@plone/volto/actions/content/content';\nimport BodyClass from '@plone/volto/helpers/BodyClass/BodyClass';\nimport { getBaseUrl, flattenToAppURL } from '@plone/volto/helpers/Url/Url';\nimport { getLayoutFieldname } from '@plone/volto/helpers/Content/Content';\nimport { hasApiExpander } from '@plone/volto/helpers/Utils/Utils';\nimport { AlternateHrefLangs } from '@plone/volto/components/theme/AlternateHrefLangs/AlternateHrefLangs';\n\nimport config from '@plone/volto/registry';\nimport SlotRenderer from '../SlotRenderer/SlotRenderer';\n\n/**\n * View container class.\n * @class View\n * @extends Component\n */\nclass View extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    actions: PropTypes.shape({\n      object: PropTypes.arrayOf(PropTypes.object),\n      object_buttons: PropTypes.arrayOf(PropTypes.object),\n      user: PropTypes.arrayOf(PropTypes.object),\n    }),\n    listActions: PropTypes.func.isRequired,\n    /**\n     * Action to get the content\n     */\n    getContent: PropTypes.func.isRequired,\n    /**\n     * Pathname of the object\n     */\n    pathname: PropTypes.string.isRequired,\n    location: PropTypes.shape({\n      search: PropTypes.string,\n      pathname: PropTypes.string,\n    }).isRequired,\n    /**\n     * Version id of the object\n     */\n    versionId: PropTypes.string,\n    /**\n     * Content of the object\n     */\n    content: PropTypes.shape({\n      /**\n       * Layout of the object\n       */\n      layout: PropTypes.string,\n      /**\n       * Allow discussion of the object\n       */\n      allow_discussion: PropTypes.bool,\n      /**\n       * Title of the object\n       */\n      title: PropTypes.string,\n      /**\n       * Description of the object\n       */\n      description: PropTypes.string,\n      /**\n       * Type of the object\n       */\n      '@type': PropTypes.string,\n      /**\n       * Subjects of the object\n       */\n      subjects: PropTypes.arrayOf(PropTypes.string),\n      is_folderish: PropTypes.bool,\n    }),\n    error: PropTypes.shape({\n      /**\n       * Error type\n       */\n      status: PropTypes.number,\n    }),\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    actions: null,\n    content: null,\n    versionId: null,\n    error: null,\n  };\n\n  state = {\n    hasObjectButtons: null,\n    isClient: false,\n  };\n\n  componentDidMount() {\n    // Do not trigger the actions action if the expander is present\n    if (!hasApiExpander('actions', getBaseUrl(this.props.pathname))) {\n      this.props.listActions(getBaseUrl(this.props.pathname));\n    }\n\n    this.props.getContent(\n      getBaseUrl(this.props.pathname),\n      this.props.versionId,\n    );\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      // Do not trigger the actions action if the expander is present\n      if (!hasApiExpander('actions', getBaseUrl(nextProps.pathname))) {\n        this.props.listActions(getBaseUrl(nextProps.pathname));\n      }\n\n      this.props.getContent(\n        getBaseUrl(nextProps.pathname),\n        this.props.versionId,\n      );\n    }\n\n    if (nextProps.actions.object_buttons) {\n      const objectButtons = nextProps.actions.object_buttons;\n      this.setState({\n        hasObjectButtons: !!objectButtons.length,\n      });\n    }\n  }\n\n  /**\n   * Default fallback view\n   * @method getViewDefault\n   * @returns {string} Markup for component.\n   */\n  getViewDefault = () => config.views.defaultView;\n\n  /**\n   * Get view by content type\n   * @method getViewByType\n   * @returns {string} Markup for component.\n   */\n  getViewByType = () =>\n    config.views.contentTypesViews[this.props.content['@type']] || null;\n\n  /**\n   * Get view by content layout property\n   * @method getViewByLayout\n   * @returns {string} Markup for component.\n   */\n  getViewByLayout = () =>\n    config.views.layoutViews[\n      this.props.content[getLayoutFieldname(this.props.content)]\n    ] || null;\n\n  /**\n   * Cleans the component displayName (specially for connected components)\n   * which have the Connect(componentDisplayName)\n   * @method cleanViewName\n   * @param  {string} dirtyDisplayName The displayName\n   * @returns {string} Clean displayName (no Connect(...)).\n   */\n  cleanViewName = (dirtyDisplayName) =>\n    dirtyDisplayName\n      .replace('Connect(', '')\n      .replace('injectIntl(', '')\n      .replace(')', '')\n      .replace('connect(', '')\n      .toLowerCase();\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { views } = config;\n    if ([301, 302].includes(this.props.error?.code)) {\n      const redirect = flattenToAppURL(this.props.error.url)\n        .split('?')[0]\n        .replace('/++api++', '');\n      return <Redirect to={`${redirect}${this.props.location.search}`} />;\n    } else if (this.props.error && !this.props.connectionRefused) {\n      let FoundView;\n      if (this.props.error.status === undefined) {\n        // For some reason, while development and if CORS is in place and the\n        // requested resource is 404, it returns undefined as status, then the\n        // next statement will fail\n        FoundView = views.errorViews.corsError;\n      } else {\n        FoundView = views.errorViews[this.props.error.status.toString()];\n      }\n      if (!FoundView) {\n        FoundView = views.errorViews['404']; // default to 404\n      }\n      return (\n        <div id=\"view\">\n          <FoundView {...this.props} />\n        </div>\n      );\n    }\n    if (!this.props.content) {\n      return <span />;\n    }\n    const RenderedView =\n      this.getViewByLayout() || this.getViewByType() || this.getViewDefault();\n\n    return (\n      <div id=\"view\" tabIndex=\"-1\">\n        <ContentMetadataTags content={this.props.content} />\n        <AlternateHrefLangs content={this.props.content} />\n        {/* Body class if displayName in component is set */}\n        <BodyClass\n          className={\n            RenderedView.displayName\n              ? `view-${this.cleanViewName(RenderedView.displayName)}`\n              : null\n          }\n        />\n        <SlotRenderer name=\"aboveContent\" content={this.props.content} />\n        <RenderedView\n          key={this.props.content['@id']}\n          content={this.props.content}\n          location={this.props.location}\n          token={this.props.token}\n          history={this.props.history}\n        />\n        <SlotRenderer name=\"belowContent\" content={this.props.content} />\n        {this.props.content.allow_discussion && (\n          <Comments pathname={this.props.pathname} />\n        )}\n        {this.state.isClient &&\n          createPortal(\n            <Toolbar pathname={this.props.pathname} inner={<span />} />,\n            document.getElementById('toolbar'),\n          )}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      actions: state.actions.actions,\n      token: state.userSession.token,\n      content: state.content.data,\n      error: state.content.get.error,\n      apiError: state.apierror.error,\n      connectionRefused: state.apierror.connectionRefused,\n      pathname: props.location.pathname,\n      versionId:\n        qs.parse(props.location.search) &&\n        qs.parse(props.location.search).version,\n    }),\n    {\n      listActions,\n      getContent,\n    },\n  ),\n)(View);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}