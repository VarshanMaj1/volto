{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Controlpanels/Rules/AddRule.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * Add content rule component.\n * @module components/manage/Controlpanels/Rules/AddRule\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getBaseUrl, getParentUrl } from '@plone/volto/helpers/Url/Url';\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport { createPortal } from 'react-dom';\nimport { Button, Checkbox, Container, Form, Grid, Segment } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport { Field } from '@plone/volto/components/manage/Form';\nimport { toast } from 'react-toastify';\nimport { getContentRulesEvents, addNewRule } from '@plone/volto/actions/rules/rules';\nimport backSVG from '@plone/volto/icons/back.svg';\nconst messages = defineMessages({\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  addRule: {\n    \"id\": \"Add Content Rule\",\n    \"defaultMessage\": \"Add Content Rule\"\n  },\n  success: {\n    \"id\": \"Success\",\n    \"defaultMessage\": \"Success\"\n  },\n  add: {\n    \"id\": \"Rule added\",\n    \"defaultMessage\": \"Rule added\"\n  }\n});\n\n/**\n * AddRule class.\n * @class AddRule\n * @extends Component\n */\nclass AddRule extends Component {\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Rules\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClient: false,\n      title: '',\n      description: '',\n      event: '',\n      cascading: false,\n      stop: false,\n      enabled: false,\n      invalidForm: true,\n      invalidTitle: false,\n      invalidEvent: false\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.setState({\n      isClient: true\n    });\n    this.props.getContentRulesEvents(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidUpdate\n   * @returns {undefined}\n   */\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.title !== this.state.title || prevState.event !== this.state.event) {\n      if (this.state.title && this.state.event) {\n        this.setState({\n          invalidForm: false,\n          invalidTitle: false,\n          invalidEvent: false\n        });\n      } else {\n        if (!this.state.title) {\n          this.setState({\n            invalidForm: true,\n            invalidTitle: true\n          });\n        }\n        if (!this.state.event) {\n          this.setState({\n            invalidForm: true,\n            invalidEvent: true\n          });\n        }\n      }\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.rules.add.loading && nextProps.rules.add.loaded) {\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.add),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }));\n      this.props.history.push(getParentUrl(this.props.pathname));\n    }\n  }\n\n  /**\n   * Back/Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getParentUrl(this.props.pathname));\n  }\n\n  /**\n   * Add rule handler\n   * @method handleAdd\n   * @returns {undefined}\n   */\n  handleAdd() {\n    const {\n      title,\n      description,\n      event,\n      cascading,\n      stop,\n      enabled,\n      invalidForm\n    } = this.state;\n    const data = {\n      title,\n      description,\n      event,\n      cascading,\n      enabled,\n      stop\n    };\n    if (!invalidForm) {\n      this.props.addNewRule(getBaseUrl(this.props.pathname), data);\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    var _this$props$events, _this$props$events2, _this$props$events3;\n    const {\n      title,\n      description,\n      event,\n      cascading,\n      stop,\n      enabled\n    } = this.state;\n    const triggeringEvents = (_this$props$events = this.props.events) !== null && _this$props$events !== void 0 && _this$props$events.items && ((_this$props$events2 = this.props.events) === null || _this$props$events2 === void 0 ? void 0 : _this$props$events2.items.length) > 0 ? (_this$props$events3 = this.props.events) === null || _this$props$events3 === void 0 ? void 0 : _this$props$events3.items.map(event => [event.token, event.title]) : '';\n    return __jsx(\"div\", {\n      id: \"page-rule-add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.addRule),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }), __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }, __jsx(\"article\", {\n      id: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }, __jsx(Segment.Group, {\n      raised: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, __jsx(Segment, {\n      className: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Add Rule\",\n      defaultMessage: \"Add Rule\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      className: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Use the form below to define the new content rule\",\n      defaultMessage: \"Use the form below to define the new content rule\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }\n    }, __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 19\n      }\n    }, __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }, __jsx(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 23\n      }\n    }, __jsx(Field, {\n      className: 'title-field',\n      title: 'Title',\n      description: \"Please set a descriptive title for the rule.\",\n      value: title,\n      required: true,\n      onChange: (e, t) => this.setState({\n        title: t\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }))), __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }\n    }, __jsx(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 23\n      }\n    }, __jsx(Field, {\n      title: 'Description',\n      description: \"Enter a short description of the rule and its purpose.\",\n      value: description,\n      onChange: (e, d) => this.setState({\n        description: d\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }\n    }))), __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }\n    }, __jsx(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 23\n      }\n    }, __jsx(Field, {\n      required: true,\n      title: 'Triggering event',\n      description: \"The rule will execute when the following event occurs.\",\n      choices: triggeringEvents,\n      value: event,\n      onChange: (e, v) => this.setState({\n        event: v\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 25\n      }\n    })))))), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }, __jsx(Checkbox, {\n      onChange: (e, {\n        checked\n      }) => this.setState({\n        enabled: checked\n      }),\n      label: 'Enabled',\n      checked: enabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 19\n      }\n    }), __jsx(\"p\", {\n      style: {\n        color: '#878f93',\n        paddingTop: '0.7rem',\n        paddingBottom: '0.7rem',\n        fontSize: '0.9rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Whether or not the rule is currently enabled\",\n      defaultMessage: \"Whether or not the rule is currently enabled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }\n    })))), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }\n    }, __jsx(Checkbox, {\n      onChange: (e, {\n        checked\n      }) => this.setState({\n        stop: checked\n      }),\n      label: 'Stop Executing rules',\n      checked: stop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 19\n      }\n    }), __jsx(\"p\", {\n      style: {\n        color: '#878f93',\n        paddingTop: '0.7rem',\n        paddingBottom: '0.7rem',\n        fontSize: '0.9rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Whether or not execution of further rules should stop after this rule is executed\",\n      defaultMessage: \"Whether or not execution of further rules should stop after this rule is executed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }\n    })))), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }\n    }, __jsx(Checkbox, {\n      onChange: (e, {\n        checked\n      }) => this.setState({\n        cascading: checked\n      }),\n      label: 'Cascading rule',\n      checked: cascading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 19\n      }\n    }), __jsx(\"p\", {\n      style: {\n        color: '#878f93',\n        paddingTop: '0.7rem',\n        paddingBottom: '0.7rem',\n        fontSize: '0.9rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops\",\n      defaultMessage: \"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 21\n      }\n    })))), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      onClick: () => this.handleAdd(),\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Save\",\n      defaultMessage: \"Save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 19\n      }\n    })), __jsx(Button, {\n      onClick: () => this.onCancel(),\n      secondary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Cancel\",\n      defaultMessage: \"Cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 19\n      }\n    }))), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 15\n      }\n    }, this.state.invalidTitle && __jsx(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Title field error. Value not provided or already existing.\",\n      defaultMessage: \"Title field error. Value not provided or already existing.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 21\n      }\n    })), this.state.invalidEvent && __jsx(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Triggering event field error. Please select a value\",\n      defaultMessage: \"Triggering event field error. Please select a value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 21\n      }\n    })))))), this.state.isClient && /*#__PURE__*/createPortal(__jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(Link, {\n        className: \"item\",\n        to: \"#\",\n        onClick: () => this.onCancel(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 17\n        }\n      }, __jsx(Icon, {\n        name: backSVG,\n        className: \"contents circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 13\n      }\n    }), document.getElementById('toolbar')));\n  }\n}\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_defineProperty(AddRule, \"propTypes\", {\n  getContentRulesEvents: PropTypes.func.isRequired,\n  addNewRule: PropTypes.func.isRequired\n});\nexport default compose(injectIntl, connect((state, props) => ({\n  rules: state.controlpanelrules,\n  events: state.contentrulesevents,\n  pathname: props.location.pathname\n}), {\n  getContentRulesEvents,\n  addNewRule\n}))(AddRule);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Link","getBaseUrl","getParentUrl","Helmet","createPortal","Button","Checkbox","Container","Form","Grid","Segment","FormattedMessage","defineMessages","injectIntl","Icon","Toolbar","Toast","Field","toast","getContentRulesEvents","addNewRule","backSVG","messages","back","addRule","success","add","AddRule","constructor","props","state","isClient","title","description","event","cascading","stop","enabled","invalidForm","invalidTitle","invalidEvent","componentDidMount","setState","pathname","componentDidUpdate","prevProps","prevState","UNSAFE_componentWillReceiveProps","nextProps","rules","loading","loaded","__jsx","intl","formatMessage","content","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","history","push","onCancel","handleAdd","data","render","_this$props$events","_this$props$events2","_this$props$events3","triggeringEvents","events","items","length","map","token","id","Group","raised","className","defaultMessage","Row","stretched","Column","value","required","onChange","e","t","d","choices","v","style","display","flexDirection","checked","label","color","paddingTop","paddingBottom","fontSize","onClick","primary","secondary","hideDefaultViewButtons","inner","to","name","size","document","getElementById","_defineProperty","func","isRequired","controlpanelrules","contentrulesevents","location"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Controlpanels/Rules/AddRule.jsx"],"sourcesContent":["/**\n * Add content rule component.\n * @module components/manage/Controlpanels/Rules/AddRule\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getBaseUrl, getParentUrl } from '@plone/volto/helpers/Url/Url';\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport { createPortal } from 'react-dom';\nimport {\n  Button,\n  Checkbox,\n  Container,\n  Form,\n  Grid,\n  Segment,\n} from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toolbar from '@plone/volto/components/manage/Toolbar/Toolbar';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport { Field } from '@plone/volto/components/manage/Form';\nimport { toast } from 'react-toastify';\n\nimport {\n  getContentRulesEvents,\n  addNewRule,\n} from '@plone/volto/actions/rules/rules';\n\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  addRule: {\n    id: 'Add Content Rule',\n    defaultMessage: 'Add Content Rule',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  add: {\n    id: 'Rule added',\n    defaultMessage: 'Rule added',\n  },\n});\n\n/**\n * AddRule class.\n * @class AddRule\n * @extends Component\n */\nclass AddRule extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getContentRulesEvents: PropTypes.func.isRequired,\n    addNewRule: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Rules\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClient: false,\n      title: '',\n      description: '',\n      event: '',\n      cascading: false,\n      stop: false,\n      enabled: false,\n      invalidForm: true,\n      invalidTitle: false,\n      invalidEvent: false,\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.setState({ isClient: true });\n    this.props.getContentRulesEvents(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidUpdate\n   * @returns {undefined}\n   */\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.title !== this.state.title ||\n      prevState.event !== this.state.event\n    ) {\n      if (this.state.title && this.state.event) {\n        this.setState({\n          invalidForm: false,\n          invalidTitle: false,\n          invalidEvent: false,\n        });\n      } else {\n        if (!this.state.title) {\n          this.setState({ invalidForm: true, invalidTitle: true });\n        }\n        if (!this.state.event) {\n          this.setState({ invalidForm: true, invalidEvent: true });\n        }\n      }\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.rules.add.loading && nextProps.rules.add.loaded) {\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.add)}\n        />,\n      );\n      this.props.history.push(getParentUrl(this.props.pathname));\n    }\n  }\n\n  /**\n   * Back/Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getParentUrl(this.props.pathname));\n  }\n\n  /**\n   * Add rule handler\n   * @method handleAdd\n   * @returns {undefined}\n   */\n  handleAdd() {\n    const { title, description, event, cascading, stop, enabled, invalidForm } =\n      this.state;\n    const data = { title, description, event, cascading, enabled, stop };\n    if (!invalidForm) {\n      this.props.addNewRule(getBaseUrl(this.props.pathname), data);\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { title, description, event, cascading, stop, enabled } = this.state;\n    const triggeringEvents =\n      this.props.events?.items && this.props.events?.items.length > 0\n        ? this.props.events?.items.map((event) => [event.token, event.title])\n        : '';\n\n    return (\n      <div id=\"page-rule-add\">\n        <Helmet title={this.props.intl.formatMessage(messages.addRule)} />\n        <Container>\n          <article id=\"content\">\n            <Segment.Group raised>\n              <Segment className=\"primary\">\n                <FormattedMessage id=\"Add Rule\" defaultMessage=\"Add Rule\" />\n              </Segment>\n              <Segment className=\"secondary\">\n                <FormattedMessage\n                  id=\"Use the form below to define the new content rule\"\n                  defaultMessage=\"Use the form below to define the new content rule\"\n                />\n              </Segment>\n              <Segment>\n                <Form>\n                  <Grid>\n                    <Grid.Row stretched>\n                      <Grid.Column>\n                        <Field\n                          className={'title-field'}\n                          title={'Title'}\n                          description=\"Please set a descriptive title for the rule.\"\n                          value={title}\n                          required\n                          onChange={(e, t) => this.setState({ title: t })}\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row stretched>\n                      <Grid.Column>\n                        <Field\n                          title={'Description'}\n                          description=\"Enter a short description of the rule and its purpose.\"\n                          value={description}\n                          onChange={(e, d) => this.setState({ description: d })}\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row stretched>\n                      <Grid.Column>\n                        <Field\n                          required\n                          title={'Triggering event'}\n                          description=\"The rule will execute when the following event occurs.\"\n                          choices={triggeringEvents}\n                          value={event}\n                          onChange={(e, v) => this.setState({ event: v })}\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                </Form>\n              </Segment>\n              <Segment>\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\n                  <Checkbox\n                    onChange={(e, { checked }) =>\n                      this.setState({ enabled: checked })\n                    }\n                    label={'Enabled'}\n                    checked={enabled}\n                  />\n                  <p\n                    style={{\n                      color: '#878f93',\n                      paddingTop: '0.7rem',\n                      paddingBottom: '0.7rem',\n                      fontSize: '0.9rem',\n                    }}\n                  >\n                    <FormattedMessage\n                      id=\"Whether or not the rule is currently enabled\"\n                      defaultMessage=\"Whether or not the rule is currently enabled\"\n                    />\n                  </p>\n                </div>\n              </Segment>\n              <Segment>\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\n                  <Checkbox\n                    onChange={(e, { checked }) =>\n                      this.setState({ stop: checked })\n                    }\n                    label={'Stop Executing rules'}\n                    checked={stop}\n                  />\n                  <p\n                    style={{\n                      color: '#878f93',\n                      paddingTop: '0.7rem',\n                      paddingBottom: '0.7rem',\n                      fontSize: '0.9rem',\n                    }}\n                  >\n                    <FormattedMessage\n                      id=\"Whether or not execution of further rules should stop after this rule is executed\"\n                      defaultMessage=\"Whether or not execution of further rules should stop after this rule is executed\"\n                    />\n                  </p>\n                </div>\n              </Segment>\n              <Segment>\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\n                  <Checkbox\n                    onChange={(e, { checked }) =>\n                      this.setState({ cascading: checked })\n                    }\n                    label={'Cascading rule'}\n                    checked={cascading}\n                  />\n                  <p\n                    style={{\n                      color: '#878f93',\n                      paddingTop: '0.7rem',\n                      paddingBottom: '0.7rem',\n                      fontSize: '0.9rem',\n                    }}\n                  >\n                    <FormattedMessage\n                      id=\"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops\"\n                      defaultMessage=\"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops\"\n                    />\n                  </p>\n                </div>\n              </Segment>\n              <Segment>\n                <Button onClick={() => this.handleAdd()} primary>\n                  <FormattedMessage id=\"Save\" defaultMessage=\"Save\" />\n                </Button>\n                <Button onClick={() => this.onCancel()} secondary>\n                  <FormattedMessage id=\"Cancel\" defaultMessage=\"Cancel\" />\n                </Button>\n              </Segment>\n              <Segment>\n                {this.state.invalidTitle && (\n                  <p style={{ color: 'red' }}>\n                    <FormattedMessage\n                      id=\"Title field error. Value not provided or already existing.\"\n                      defaultMessage=\"Title field error. Value not provided or already existing.\"\n                    />\n                  </p>\n                )}\n                {this.state.invalidEvent && (\n                  <p style={{ color: 'red' }}>\n                    <FormattedMessage\n                      id=\"Triggering event field error. Please select a value\"\n                      defaultMessage=\"Triggering event field error. Please select a value\"\n                    />\n                  </p>\n                )}\n              </Segment>\n            </Segment.Group>\n          </article>\n        </Container>\n        {this.state.isClient &&\n          createPortal(\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link className=\"item\" to=\"#\" onClick={() => this.onCancel()}>\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />,\n            document.getElementById('toolbar'),\n          )}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      rules: state.controlpanelrules,\n      events: state.contentrulesevents,\n      pathname: props.location.pathname,\n    }),\n    { getContentRulesEvents, addNewRule },\n  ),\n)(AddRule);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Back","defaultMessage":"Back"},{"id":"Add Content Rule","defaultMessage":"Add Content Rule"},{"id":"Success","defaultMessage":"Success"},{"id":"Rule added","defaultMessage":"Rule added"},{"id":"Add Rule","defaultMessage":"Add Rule"},{"id":"Use the form below to define the new content rule","defaultMessage":"Use the form below to define the new content rule"},{"id":"Whether or not the rule is currently enabled","defaultMessage":"Whether or not the rule is currently enabled"},{"id":"Whether or not execution of further rules should stop after this rule is executed","defaultMessage":"Whether or not execution of further rules should stop after this rule is executed"},{"id":"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops","defaultMessage":"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops"},{"id":"Save","defaultMessage":"Save"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Title field error. Value not provided or already existing.","defaultMessage":"Title field error. Value not provided or already existing."},{"id":"Triggering event field error. Please select a value","defaultMessage":"Triggering event field error. Please select a value"}]}},"sourceType":"module","externalDependencies":[]}