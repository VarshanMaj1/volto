{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/Login/Login.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { Container, Button, Form, Input, Segment, Grid } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, useIntl } from 'react-intl';\nimport qs from 'query-string';\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport { usePrevious } from '@plone/volto/helpers/Utils/usePrevious';\nimport config from '@plone/volto/registry';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { login, logout, resetLoginRequest } from '@plone/volto/actions/userSession/userSession';\nimport { purgeMessages } from '@plone/volto/actions/messages/messages';\nimport { toast } from 'react-toastify';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nconst messages = defineMessages({\n  login: {\n    \"id\": \"Log in\",\n    \"defaultMessage\": \"Log in\"\n  },\n  loginName: {\n    \"id\": \"Login Name\",\n    \"defaultMessage\": \"Login Name\"\n  },\n  Login: {\n    \"id\": \"Login\",\n    \"defaultMessage\": \"Login\"\n  },\n  password: {\n    \"id\": \"Password\",\n    \"defaultMessage\": \"Password\"\n  },\n  cancel: {\n    \"id\": \"Cancel\",\n    \"defaultMessage\": \"Cancel\"\n  },\n  error: {\n    \"id\": \"Error\",\n    \"defaultMessage\": \"Error\"\n  },\n  loginFailed: {\n    \"id\": \"Login Failed\",\n    \"defaultMessage\": \"Login Failed\"\n  },\n  loginFailedContent: {\n    \"id\": \"Both email address and password are case sensitive, check that caps lock is not enabled.\",\n    \"defaultMessage\": \"Both email address and password are case sensitive, check that caps lock is not enabled.\"\n  },\n  register: {\n    \"id\": \"Register\",\n    \"defaultMessage\": \"Register\"\n  },\n  forgotPassword: {\n    \"id\": \"box_forgot_password_option\",\n    \"defaultMessage\": \"Forgot your password?\"\n  }\n});\nconst Login = props => {\n  _s();\n  var _props$location$searc, _props$location, _location$state2;\n  const intl = useIntl();\n  const history = useHistory();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.userSession.token, shallowEqual);\n  const error = useSelector(state => state.userSession.login.error);\n  const loading = useSelector(state => state.userSession.login.loading);\n  const returnUrl = qs.parse((_props$location$searc = (_props$location = props.location) === null || _props$location === void 0 ? void 0 : _props$location.search) !== null && _props$location$searc !== void 0 ? _props$location$searc : location.search).return_url || location.pathname.replace(/\\/[^/]*\\/?$/, '') || '/';\n  const previousToken = usePrevious(token);\n  useEffect(() => {\n    var _location$state;\n    if (location !== null && location !== void 0 && (_location$state = location.state) !== null && _location$state !== void 0 && _location$state.isLogout) {\n      // Execute a true Logout action\n      // This is needed to cover the use case of being logged in in\n      // another backend (eg. in development), having a token for\n      // localhost and try to use it, the login route has to know that\n      // it's the same as it comes from a logout\n      // See also Unauthorized.jsx\n      dispatch(logout());\n      dispatch(purgeMessages());\n      // Reset the location state\n      history.push(`${location.pathname}${location.search}`);\n    } else if (token && token !== previousToken) {\n      // We just did a true login action\n      history.push(returnUrl || '/');\n      if (toast.isActive('loggedOut')) {\n        toast.dismiss('loggedOut');\n      }\n      if (toast.isActive('loginFailed')) {\n        toast.dismiss('loginFailed');\n      }\n    }\n    if (error) {\n      if (toast.isActive('loggedOut')) {\n        toast.dismiss('loggedOut');\n      }\n      if (!toast.isActive('loginFailed')) {\n        toast.error(__jsx(Toast, {\n          error: true,\n          title: intl.formatMessage(messages.loginFailed),\n          content: intl.formatMessage(messages.loginFailedContent),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }\n        }), {\n          autoClose: false,\n          toastId: 'loginFailed'\n        });\n      }\n    }\n    return () => {\n      if (toast.isActive('loginFailed')) {\n        toast.dismiss('loginFailed');\n        dispatch(resetLoginRequest());\n      }\n    };\n  }, [dispatch, token, error, intl, history, returnUrl, location.search, location.pathname, location === null || location === void 0 ? void 0 : (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.isLogout, previousToken]);\n  const onLogin = event => {\n    dispatch(login(document.getElementsByName('login')[0].value, document.getElementsByName('password')[0].value));\n    event.preventDefault();\n  };\n  return __jsx(\"div\", {\n    id: \"page-login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, __jsx(Helmet, {\n    title: intl.formatMessage(messages.Login),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), __jsx(Container, {\n    text: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    method: \"post\",\n    onSubmit: onLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, __jsx(Segment.Group, {\n    raised: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, __jsx(Segment, {\n    className: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Log In\",\n    defaultMessage: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  })), __jsx(Segment, {\n    secondary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Sign in to start session\",\n    defaultMessage: \"Sign in to start session\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  })), __jsx(Segment, {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Field, {\n    inline: true,\n    className: \"help\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, __jsx(Grid.Row, {\n    stretched: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }, __jsx(Grid.Column, {\n    width: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 23\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Login Name\",\n    defaultMessage: \"Login Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 27\n    }\n  })))), __jsx(Grid.Column, {\n    width: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, __jsx(Input, {\n    id: \"login\",\n    name: \"login\",\n    placeholder: intl.formatMessage(messages.loginName),\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 23\n    }\n  }))))), __jsx(Form.Field, {\n    inline: true,\n    className: \"help\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, __jsx(Grid.Row, {\n    stretched: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 19\n    }\n  }, __jsx(Grid.Column, {\n    stretched: true,\n    width: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 23\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Password\",\n    defaultMessage: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 27\n    }\n  })))), __jsx(Grid.Column, {\n    stretched: true,\n    width: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, __jsx(Input, {\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    name: \"password\",\n    placeholder: intl.formatMessage(messages.password),\n    tabIndex: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 23\n    }\n  }))))), __jsx(Form.Field, {\n    inline: true,\n    className: \"help\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, __jsx(Grid.Row, {\n    stretched: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 19\n    }\n  }, config.settings.showSelfRegistration && __jsx(Grid.Column, {\n    stretched: true,\n    width: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 23\n    }\n  }, __jsx(\"p\", {\n    className: \"help\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 25\n    }\n  }, __jsx(Link, {\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 27\n    }\n  }, intl.formatMessage(messages.register)))), __jsx(Grid.Column, {\n    stretched: true,\n    width: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    className: \"help\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 23\n    }\n  }, __jsx(Link, {\n    to: \"/passwordreset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 25\n    }\n  }, intl.formatMessage(messages.forgotPassword)))))))), __jsx(Segment, {\n    className: \"actions\",\n    clearing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    basic: true,\n    primary: true,\n    icon: true,\n    floated: \"right\",\n    type: \"submit\",\n    id: \"login-form-submit\",\n    \"aria-label\": intl.formatMessage(messages.login),\n    title: intl.formatMessage(messages.login),\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    className: \"circled\",\n    name: aheadSVG,\n    size: \"30px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  })), __jsx(Button, {\n    basic: true,\n    secondary: true,\n    icon: true,\n    floated: \"right\",\n    id: \"login-form-cancel\",\n    as: Link,\n    to: \"/\",\n    \"aria-label\": intl.formatMessage(messages.cancel),\n    title: intl.formatMessage(messages.cancel),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    className: \"circled\",\n    name: clearSVG,\n    size: \"30px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }\n  })))))));\n};\n_s(Login, \"XS/m/4JQTWHJvKqrvOf3hWInIwI=\", false, function () {\n  return [useIntl, useHistory, useLocation, useDispatch, useSelector, useSelector, useSelector, usePrevious];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","shallowEqual","Link","useHistory","useLocation","Container","Button","Form","Input","Segment","Grid","FormattedMessage","defineMessages","useIntl","qs","Helmet","usePrevious","config","Icon","login","logout","resetLoginRequest","purgeMessages","toast","Toast","aheadSVG","clearSVG","messages","loginName","Login","password","cancel","error","loginFailed","loginFailedContent","register","forgotPassword","props","_s","_props$location$searc","_props$location","_location$state2","intl","history","location","dispatch","token","state","userSession","loading","returnUrl","parse","search","return_url","pathname","replace","previousToken","_location$state","isLogout","push","isActive","dismiss","__jsx","title","formatMessage","content","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","autoClose","toastId","onLogin","event","document","getElementsByName","value","preventDefault","id","text","method","onSubmit","Group","raised","className","defaultMessage","secondary","Field","inline","Row","stretched","Column","width","htmlFor","name","placeholder","autoFocus","type","autoComplete","tabIndex","settings","showSelfRegistration","to","clearing","basic","primary","icon","floated","size","as","_c","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/Login/Login.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport {\n  Container,\n  Button,\n  Form,\n  Input,\n  Segment,\n  Grid,\n} from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, useIntl } from 'react-intl';\nimport qs from 'query-string';\n\nimport Helmet from '@plone/volto/helpers/Helmet/Helmet';\nimport { usePrevious } from '@plone/volto/helpers/Utils/usePrevious';\nimport config from '@plone/volto/registry';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport {\n  login,\n  logout,\n  resetLoginRequest,\n} from '@plone/volto/actions/userSession/userSession';\nimport { purgeMessages } from '@plone/volto/actions/messages/messages';\nimport { toast } from 'react-toastify';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  login: {\n    id: 'Log in',\n    defaultMessage: 'Log in',\n  },\n  loginName: {\n    id: 'Login Name',\n    defaultMessage: 'Login Name',\n  },\n  Login: {\n    id: 'Login',\n    defaultMessage: 'Login',\n  },\n  password: {\n    id: 'Password',\n    defaultMessage: 'Password',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  loginFailed: {\n    id: 'Login Failed',\n    defaultMessage: 'Login Failed',\n  },\n  loginFailedContent: {\n    id: 'Both email address and password are case sensitive, check that caps lock is not enabled.',\n    defaultMessage:\n      'Both email address and password are case sensitive, check that caps lock is not enabled.',\n  },\n  register: {\n    id: 'Register',\n    defaultMessage: 'Register',\n  },\n  forgotPassword: {\n    id: 'box_forgot_password_option',\n    defaultMessage: 'Forgot your password?',\n  },\n});\n\nconst Login = (props) => {\n  const intl = useIntl();\n  const history = useHistory();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.userSession.token, shallowEqual);\n  const error = useSelector((state) => state.userSession.login.error);\n  const loading = useSelector((state) => state.userSession.login.loading);\n  const returnUrl =\n    qs.parse(props.location?.search ?? location.search).return_url ||\n    location.pathname.replace(/\\/[^/]*\\/?$/, '') ||\n    '/';\n  const previousToken = usePrevious(token);\n\n  useEffect(() => {\n    if (location?.state?.isLogout) {\n      // Execute a true Logout action\n      // This is needed to cover the use case of being logged in in\n      // another backend (eg. in development), having a token for\n      // localhost and try to use it, the login route has to know that\n      // it's the same as it comes from a logout\n      // See also Unauthorized.jsx\n      dispatch(logout());\n      dispatch(purgeMessages());\n      // Reset the location state\n      history.push(`${location.pathname}${location.search}`);\n    } else if (token && token !== previousToken) {\n      // We just did a true login action\n      history.push(returnUrl || '/');\n      if (toast.isActive('loggedOut')) {\n        toast.dismiss('loggedOut');\n      }\n      if (toast.isActive('loginFailed')) {\n        toast.dismiss('loginFailed');\n      }\n    }\n    if (error) {\n      if (toast.isActive('loggedOut')) {\n        toast.dismiss('loggedOut');\n      }\n      if (!toast.isActive('loginFailed')) {\n        toast.error(\n          <Toast\n            error\n            title={intl.formatMessage(messages.loginFailed)}\n            content={intl.formatMessage(messages.loginFailedContent)}\n          />,\n          { autoClose: false, toastId: 'loginFailed' },\n        );\n      }\n    }\n    return () => {\n      if (toast.isActive('loginFailed')) {\n        toast.dismiss('loginFailed');\n        dispatch(resetLoginRequest());\n      }\n    };\n  }, [\n    dispatch,\n    token,\n    error,\n    intl,\n    history,\n    returnUrl,\n    location.search,\n    location.pathname,\n    location?.state?.isLogout,\n    previousToken,\n  ]);\n\n  const onLogin = (event) => {\n    dispatch(\n      login(\n        document.getElementsByName('login')[0].value,\n        document.getElementsByName('password')[0].value,\n      ),\n    );\n    event.preventDefault();\n  };\n\n  return (\n    <div id=\"page-login\">\n      <Helmet title={intl.formatMessage(messages.Login)} />\n      <Container text>\n        <Form method=\"post\" onSubmit={onLogin}>\n          <Segment.Group raised>\n            <Segment className=\"primary\">\n              <FormattedMessage id=\"Log In\" defaultMessage=\"Login\" />\n            </Segment>\n            <Segment secondary>\n              <FormattedMessage\n                id=\"Sign in to start session\"\n                defaultMessage=\"Sign in to start session\"\n              />\n            </Segment>\n            <Segment className=\"form\">\n              <Form.Field inline className=\"help\">\n                <Grid>\n                  <Grid.Row stretched>\n                    <Grid.Column width=\"4\">\n                      <div className=\"wrapper\">\n                        <label htmlFor=\"login\">\n                          <FormattedMessage\n                            id=\"Login Name\"\n                            defaultMessage=\"Login Name\"\n                          />\n                        </label>\n                      </div>\n                    </Grid.Column>\n                    <Grid.Column width=\"8\">\n                      {/* eslint-disable jsx-a11y/no-autofocus */}\n                      <Input\n                        id=\"login\"\n                        name=\"login\"\n                        placeholder={intl.formatMessage(messages.loginName)}\n                        autoFocus\n                      />\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n              </Form.Field>\n              <Form.Field inline className=\"help\">\n                <Grid>\n                  <Grid.Row stretched>\n                    <Grid.Column stretched width=\"4\">\n                      <div className=\"wrapper\">\n                        <label htmlFor=\"password\">\n                          <FormattedMessage\n                            id=\"Password\"\n                            defaultMessage=\"Password\"\n                          />\n                        </label>\n                      </div>\n                    </Grid.Column>\n                    <Grid.Column stretched width=\"8\">\n                      <Input\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        name=\"password\"\n                        placeholder={intl.formatMessage(messages.password)}\n                        tabIndex={0}\n                      />\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n              </Form.Field>\n              <Form.Field inline className=\"help\">\n                <Grid>\n                  <Grid.Row stretched>\n                    {config.settings.showSelfRegistration && (\n                      <Grid.Column stretched width=\"12\">\n                        <p className=\"help\">\n                          <Link to=\"/register\">\n                            {intl.formatMessage(messages.register)}\n                          </Link>\n                        </p>\n                      </Grid.Column>\n                    )}\n                    <Grid.Column stretched width=\"12\">\n                      <p className=\"help\">\n                        <Link to=\"/passwordreset\">\n                          {intl.formatMessage(messages.forgotPassword)}\n                        </Link>\n                      </p>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n              </Form.Field>\n            </Segment>\n            <Segment className=\"actions\" clearing>\n              <Button\n                basic\n                primary\n                icon\n                floated=\"right\"\n                type=\"submit\"\n                id=\"login-form-submit\"\n                aria-label={intl.formatMessage(messages.login)}\n                title={intl.formatMessage(messages.login)}\n                loading={loading}\n              >\n                <Icon className=\"circled\" name={aheadSVG} size=\"30px\" />\n              </Button>\n\n              <Button\n                basic\n                secondary\n                icon\n                floated=\"right\"\n                id=\"login-form-cancel\"\n                as={Link}\n                to=\"/\"\n                aria-label={intl.formatMessage(messages.cancel)}\n                title={intl.formatMessage(messages.cancel)}\n              >\n                <Icon className=\"circled\" name={clearSVG} size=\"30px\" />\n              </Button>\n            </Segment>\n          </Segment.Group>\n        </Form>\n      </Container>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Log in","defaultMessage":"Log in"},{"id":"Login Name","defaultMessage":"Login Name"},{"id":"Login","defaultMessage":"Login"},{"id":"Password","defaultMessage":"Password"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Error","defaultMessage":"Error"},{"id":"Login Failed","defaultMessage":"Login Failed"},{"id":"Both email address and password are case sensitive, check that caps lock is not enabled.","defaultMessage":"Both email address and password are case sensitive, check that caps lock is not enabled."},{"id":"Register","defaultMessage":"Register"},{"id":"box_forgot_password_option","defaultMessage":"Forgot your password?"},{"id":"Log In","defaultMessage":"Login"},{"id":"Sign in to start session","defaultMessage":"Sign in to start session"}]}},"sourceType":"module","externalDependencies":[]}