{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/HTML/Edit.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * Edit html block.\n * @module components/manage/Blocks/HTML/Edit\n */\n\nimport { compose } from 'redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Popup } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport loadable from '@loadable/component';\nimport isEqual from 'lodash/isEqual';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport showSVG from '@plone/volto/icons/show.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport codeSVG from '@plone/volto/icons/code.svg';\nimport indentSVG from '@plone/volto/icons/indent.svg';\nconst Editor = loadable({\n  resolved: {},\n  chunkName() {\n    return \"react-simple-code-editor\";\n  },\n  isReady(props) {\n    const key = this.resolve(props);\n    if (this.resolved[key] !== true) {\n      return false;\n    }\n    if (typeof __webpack_modules__ !== 'undefined') {\n      return !!__webpack_modules__[key];\n    }\n    return false;\n  },\n  importAsync: () => import(/* webpackChunkName: \"react-simple-code-editor\" */'react-simple-code-editor'),\n  requireAsync(props) {\n    const key = this.resolve(props);\n    this.resolved[key] = false;\n    return this.importAsync(props).then(resolved => {\n      this.resolved[key] = true;\n      return resolved;\n    });\n  },\n  requireSync(props) {\n    const id = this.resolve(props);\n    if (typeof __webpack_require__ !== 'undefined') {\n      return __webpack_require__(id);\n    }\n    return eval('module.require')(id);\n  },\n  resolve() {\n    if (require.resolveWeak) {\n      return require.resolveWeak(\"react-simple-code-editor\");\n    }\n    return eval('require.resolve')(\"react-simple-code-editor\");\n  }\n});\nconst messages = defineMessages({\n  source: {\n    \"id\": \"Source\",\n    \"defaultMessage\": \"Source\"\n  },\n  preview: {\n    \"id\": \"Preview\",\n    \"defaultMessage\": \"Preview\"\n  },\n  placeholder: {\n    \"id\": \"<p>Add some HTML here</p>\",\n    \"defaultMessage\": \"<p>Add some HTML here</p>\"\n  },\n  prettier: {\n    \"id\": \"Prettify your code\",\n    \"defaultMessage\": \"Prettify your code\"\n  },\n  clear: {\n    \"id\": \"Clear\",\n    \"defaultMessage\": \"Clear\"\n  },\n  code: {\n    \"id\": \"Code\",\n    \"defaultMessage\": \"Code\"\n  }\n});\n\n/**\n * Edit html block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   */\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"codeEditorRef\", /*#__PURE__*/React.createRef());\n    _defineProperty(this, \"savedSelection\", {});\n    /**\n     * Prettify handler\n     * @method onPrettify\n     * @returns {undefined}\n     */\n    _defineProperty(this, \"onPrettify\", async () => {\n      try {\n        const code = (await this.props.prettierStandalone.format(this.getValue(), {\n          parser: 'html',\n          plugins: [this.props.prettierParserHtml]\n        })).trim();\n        this.onChangeCode(code);\n      } catch (ex) {\n        // error while parsing the user-typed HTML\n        // TODO: show a toast notification or something similar to the user\n      }\n    });\n    _defineProperty(this, \"getSelection\", editor => {\n      if (!editor || !editor._input) {\n        return {};\n      }\n      const o = {};\n      if (editor._input.selectionStart) {\n        o.selectionStart = editor._input.selectionStart;\n      }\n      if (editor._input.selectionEnd) {\n        o.selectionEnd = editor._input.selectionEnd;\n      }\n      return o;\n    });\n    _defineProperty(this, \"restoreSelectionAndFocus\", editor => {\n      var _this$savedSelection, _this$savedSelection2;\n      // Don't restore selection when the block is not selected.\n      if (this.props.selected && editor._input && typeof ((_this$savedSelection = this.savedSelection) === null || _this$savedSelection === void 0 ? void 0 : _this$savedSelection.selectionStart) === 'number' && typeof ((_this$savedSelection2 = this.savedSelection) === null || _this$savedSelection2 === void 0 ? void 0 : _this$savedSelection2.selectionEnd) === 'number') {\n        var _this$savedSelection3, _this$savedSelection4;\n        editor._input.selectionStart = (_this$savedSelection3 = this.savedSelection) === null || _this$savedSelection3 === void 0 ? void 0 : _this$savedSelection3.selectionStart;\n        editor._input.selectionEnd = (_this$savedSelection4 = this.savedSelection) === null || _this$savedSelection4 === void 0 ? void 0 : _this$savedSelection4.selectionEnd;\n        editor._input.focus();\n      }\n    });\n    this.state = {\n      isPreview: false\n    };\n    this.onChangeCode = this.onChangeCode.bind(this);\n    this.onPreview = this.onPreview.bind(this);\n    this.onCodeEditor = this.onCodeEditor.bind(this);\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // The selection is saved in the snapshot.\n    this.savedSelection = snapshot;\n    this.restoreSelectionAndFocus(this.codeEditorRef.current);\n  }\n\n  /**\n   * @param {*} nextProps\n   * @param {*} nextState\n   * @returns {boolean}\n   * @memberof Edit\n   */\n  shouldComponentUpdate(nextProps) {\n    // Always rerender when the DOM node is not created for the Editor (the\n    // first call to shouldComponentUpdate).\n    if (!this._input) {\n      return true;\n    }\n\n    // Rerender the entire component when the Editor in it changes its selection\n    // because this way we get a call to getSnapshotBeforeUpdate where we can\n    // save the selection.\n    return this.props.selected || !isEqual(this.props.data, nextProps.data) || this._input.selectionStart !== this.savedSelection.selectionStart || this._input.selectionEnd !== this.savedSelection.selectionEnd;\n  }\n\n  /**\n   * Change html handler\n   * @method onChangeCode\n   * @param {string} code New value html\n   * @returns {undefined}\n   */\n  onChangeCode(code) {\n    this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n      html: code\n    }));\n  }\n  getValue() {\n    return this.props.data.html || '';\n  }\n\n  /**\n   * Preview mode handler\n   * @method onPreview\n   * @returns {undefined}\n   */\n  async onPreview() {\n    try {\n      const code = (await this.props.prettierStandalone.format(this.getValue(), {\n        parser: 'html',\n        plugins: [this.props.prettierParserHtml]\n      })).trim();\n      this.setState({\n        isPreview: !this.state.isPreview\n      }, () => this.onChangeCode(code));\n    } catch (ex) {\n      // error while parsing the user-typed HTML\n      // TODO: show a toast notification or something similar to the user\n    }\n  }\n  /**\n   * Code Editor mode handler\n   * @method onPreview\n   * @returns {undefined}\n   */\n  onCodeEditor() {\n    this.setState({\n      isPreview: !this.state.isPreview\n    });\n  }\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    return this.getSelection(this.codeEditorRef.current);\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    var _this$props$prismCore, _this$props$prismCore2, _this$props$prismCore3;\n    const placeholder = this.props.data.placeholder || this.props.intl.formatMessage(messages.placeholder);\n    const value = this.getValue();\n    return __jsx(React.Fragment, null, this.props.selected && value && __jsx(\"div\", {\n      className: \"toolbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }\n    }, __jsx(Popup, {\n      trigger: __jsx(Button, {\n        icon: true,\n        basic: true,\n        \"aria-label\": this.props.intl.formatMessage(messages.source),\n        active: !this.state.isPreview,\n        onClick: this.onCodeEditor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 17\n        }\n      }, __jsx(Icon, {\n        name: codeSVG,\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 19\n        }\n      })),\n      position: \"top center\",\n      content: this.props.intl.formatMessage(messages.code),\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }), __jsx(Popup, {\n      trigger: __jsx(Button, {\n        icon: true,\n        basic: true,\n        \"aria-label\": this.props.intl.formatMessage(messages.preview),\n        active: this.state.isPreview,\n        onClick: this.onPreview,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }\n      }, __jsx(Icon, {\n        name: showSVG,\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 19\n        }\n      })),\n      position: \"top center\",\n      content: this.props.intl.formatMessage(messages.preview),\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }\n    }), __jsx(Popup, {\n      trigger: __jsx(Button, {\n        icon: true,\n        basic: true,\n        \"aria-label\": this.props.intl.formatMessage(messages.prettier),\n        onClick: this.onPrettify,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 17\n        }\n      }, __jsx(Icon, {\n        name: indentSVG,\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 19\n        }\n      })),\n      position: \"top center\",\n      content: this.props.intl.formatMessage(messages.prettier),\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      className: \"separator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }\n    }), __jsx(Popup, {\n      trigger: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }\n      }, __jsx(Button, {\n        icon: true,\n        basic: true,\n        onClick: () => this.onChangeCode(''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 19\n        }\n      }, __jsx(Icon, {\n        name: clearSVG,\n        size: \"24px\",\n        color: \"#e40166\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }\n      }))),\n      position: \"top center\",\n      content: this.props.intl.formatMessage(messages.clear),\n      size: \"mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 13\n      }\n    })), this.state.isPreview ? __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: value\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }\n    }) : __jsx(Editor, {\n      value: this.getValue(),\n      readOnly: !this.props.editable,\n      placeholder: placeholder,\n      onValueChange: code => this.onChangeCode(code),\n      highlight: (_this$props$prismCore = this.props.prismCore) !== null && _this$props$prismCore !== void 0 && _this$props$prismCore.highlight && (_this$props$prismCore2 = this.props.prismCore) !== null && _this$props$prismCore2 !== void 0 && (_this$props$prismCore3 = _this$props$prismCore2.languages) !== null && _this$props$prismCore3 !== void 0 && _this$props$prismCore3.html ? code => this.props.prismCore.highlight(code, this.props.prismCore.languages.html, 'html') : () => {},\n      padding: 8,\n      className: \"html-editor\",\n      ref: node => {\n        if (node) {\n          this.codeEditorRef.current = node;\n        }\n      },\n      ignoreTabKey: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }\n    }));\n  }\n}\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_defineProperty(Edit, \"propTypes\", {\n  selected: PropTypes.bool.isRequired,\n  block: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  onSelectBlock: PropTypes.func.isRequired,\n  onDeleteBlock: PropTypes.func.isRequired,\n  handleKeyDown: PropTypes.func.isRequired,\n  editable: PropTypes.bool\n});\n/**\n * Default properties\n * @property {Object} defaultProps Default properties.\n * @static\n */\n_defineProperty(Edit, \"defaultProps\", {\n  editable: true\n});\nconst withPrismMarkup = WrappedComponent => props => {\n  const [loaded, setLoaded] = React.useState();\n  const promise = React.useRef(null);\n  const cancelled = React.useRef(false);\n  React.useEffect(() => {\n    promise.current = import('prismjs/components/prism-markup');\n    promise.current.then(() => {\n      if (!cancelled.current) {\n        setLoaded(true);\n      }\n    });\n    return () => {\n      cancelled.current = true;\n    };\n  }, []);\n  return loaded ? __jsx(WrappedComponent, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 19\n    }\n  })) : null;\n};\nexport default compose(injectLazyLibs(['prettierStandalone', 'prettierParserHtml', 'prismCore']), withPrismMarkup, injectIntl)(Edit);","map":{"version":3,"names":["compose","React","Component","PropTypes","Button","Popup","defineMessages","injectIntl","loadable","isEqual","Icon","injectLazyLibs","showSVG","clearSVG","codeSVG","indentSVG","Editor","resolved","chunkName","isReady","props","key","resolve","__webpack_modules__","importAsync","requireAsync","then","requireSync","id","__webpack_require__","eval","require","resolveWeak","messages","source","preview","placeholder","prettier","clear","code","Edit","constructor","_defineProperty","createRef","prettierStandalone","format","getValue","parser","plugins","prettierParserHtml","trim","onChangeCode","ex","editor","_input","o","selectionStart","selectionEnd","_this$savedSelection","_this$savedSelection2","selected","savedSelection","_this$savedSelection3","_this$savedSelection4","focus","state","isPreview","bind","onPreview","onCodeEditor","componentDidUpdate","prevProps","prevState","snapshot","restoreSelectionAndFocus","codeEditorRef","current","shouldComponentUpdate","nextProps","data","onChangeBlock","block","_objectSpread","html","setState","getSnapshotBeforeUpdate","getSelection","render","_this$props$prismCore","_this$props$prismCore2","_this$props$prismCore3","intl","formatMessage","value","__jsx","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","trigger","icon","basic","active","onClick","name","size","position","content","onPrettify","Group","color","dangerouslySetInnerHTML","__html","readOnly","editable","onValueChange","highlight","prismCore","languages","padding","ref","node","ignoreTabKey","bool","isRequired","string","index","number","objectOf","any","func","onSelectBlock","onDeleteBlock","handleKeyDown","withPrismMarkup","WrappedComponent","loaded","setLoaded","useState","promise","useRef","cancelled","useEffect","_extends"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/HTML/Edit.jsx"],"sourcesContent":["/**\n * Edit html block.\n * @module components/manage/Blocks/HTML/Edit\n */\n\nimport { compose } from 'redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Popup } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport loadable from '@loadable/component';\nimport isEqual from 'lodash/isEqual';\n\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport showSVG from '@plone/volto/icons/show.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport codeSVG from '@plone/volto/icons/code.svg';\nimport indentSVG from '@plone/volto/icons/indent.svg';\n\nconst Editor = loadable(() => import('react-simple-code-editor'));\n\nconst messages = defineMessages({\n  source: {\n    id: 'Source',\n    defaultMessage: 'Source',\n  },\n  preview: {\n    id: 'Preview',\n    defaultMessage: 'Preview',\n  },\n  placeholder: {\n    id: '<p>Add some HTML here</p>',\n    defaultMessage: '<p>Add some HTML here</p>',\n  },\n  prettier: {\n    id: 'Prettify your code',\n    defaultMessage: 'Prettify your code',\n  },\n  clear: {\n    id: 'Clear',\n    defaultMessage: 'Clear',\n  },\n  code: {\n    id: 'Code',\n    defaultMessage: 'Code',\n  },\n});\n\n/**\n * Edit html block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    selected: PropTypes.bool.isRequired,\n    block: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n    data: PropTypes.objectOf(PropTypes.any).isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    onSelectBlock: PropTypes.func.isRequired,\n    onDeleteBlock: PropTypes.func.isRequired,\n    handleKeyDown: PropTypes.func.isRequired,\n    editable: PropTypes.bool,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    editable: true,\n  };\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPreview: false,\n    };\n    this.onChangeCode = this.onChangeCode.bind(this);\n    this.onPreview = this.onPreview.bind(this);\n    this.onCodeEditor = this.onCodeEditor.bind(this);\n  }\n\n  codeEditorRef = React.createRef();\n  savedSelection = {};\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // The selection is saved in the snapshot.\n    this.savedSelection = snapshot;\n\n    this.restoreSelectionAndFocus(this.codeEditorRef.current);\n  }\n\n  /**\n   * @param {*} nextProps\n   * @param {*} nextState\n   * @returns {boolean}\n   * @memberof Edit\n   */\n  shouldComponentUpdate(nextProps) {\n    // Always rerender when the DOM node is not created for the Editor (the\n    // first call to shouldComponentUpdate).\n    if (!this._input) {\n      return true;\n    }\n\n    // Rerender the entire component when the Editor in it changes its selection\n    // because this way we get a call to getSnapshotBeforeUpdate where we can\n    // save the selection.\n    return (\n      this.props.selected ||\n      !isEqual(this.props.data, nextProps.data) ||\n      this._input.selectionStart !== this.savedSelection.selectionStart ||\n      this._input.selectionEnd !== this.savedSelection.selectionEnd\n    );\n  }\n\n  /**\n   * Change html handler\n   * @method onChangeCode\n   * @param {string} code New value html\n   * @returns {undefined}\n   */\n  onChangeCode(code) {\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      html: code,\n    });\n  }\n\n  getValue() {\n    return this.props.data.html || '';\n  }\n\n  /**\n   * Preview mode handler\n   * @method onPreview\n   * @returns {undefined}\n   */\n  async onPreview() {\n    try {\n      const code = (\n        await this.props.prettierStandalone.format(this.getValue(), {\n          parser: 'html',\n          plugins: [this.props.prettierParserHtml],\n        })\n      ).trim();\n      this.setState(\n        {\n          isPreview: !this.state.isPreview,\n        },\n        () => this.onChangeCode(code),\n      );\n    } catch (ex) {\n      // error while parsing the user-typed HTML\n      // TODO: show a toast notification or something similar to the user\n    }\n  }\n\n  /**\n   * Prettify handler\n   * @method onPrettify\n   * @returns {undefined}\n   */\n  onPrettify = async () => {\n    try {\n      const code = (\n        await this.props.prettierStandalone.format(this.getValue(), {\n          parser: 'html',\n          plugins: [this.props.prettierParserHtml],\n        })\n      ).trim();\n      this.onChangeCode(code);\n    } catch (ex) {\n      // error while parsing the user-typed HTML\n      // TODO: show a toast notification or something similar to the user\n    }\n  };\n\n  /**\n   * Code Editor mode handler\n   * @method onPreview\n   * @returns {undefined}\n   */\n  onCodeEditor() {\n    this.setState({ isPreview: !this.state.isPreview });\n  }\n\n  getSelection = (editor) => {\n    if (!editor || !editor._input) {\n      return {};\n    }\n\n    const o = {};\n    if (editor._input.selectionStart) {\n      o.selectionStart = editor._input.selectionStart;\n    }\n    if (editor._input.selectionEnd) {\n      o.selectionEnd = editor._input.selectionEnd;\n    }\n    return o;\n  };\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    return this.getSelection(this.codeEditorRef.current);\n  }\n\n  restoreSelectionAndFocus = (editor) => {\n    // Don't restore selection when the block is not selected.\n    if (\n      this.props.selected &&\n      editor._input &&\n      typeof this.savedSelection?.selectionStart === 'number' &&\n      typeof this.savedSelection?.selectionEnd === 'number'\n    ) {\n      editor._input.selectionStart = this.savedSelection?.selectionStart;\n      editor._input.selectionEnd = this.savedSelection?.selectionEnd;\n      editor._input.focus();\n    }\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const placeholder =\n      this.props.data.placeholder ||\n      this.props.intl.formatMessage(messages.placeholder);\n    const value = this.getValue();\n    return (\n      <>\n        {this.props.selected && value && (\n          <div className=\"toolbar\">\n            <Popup\n              trigger={\n                <Button\n                  icon\n                  basic\n                  aria-label={this.props.intl.formatMessage(messages.source)}\n                  active={!this.state.isPreview}\n                  onClick={this.onCodeEditor}\n                >\n                  <Icon name={codeSVG} size=\"24px\" />\n                </Button>\n              }\n              position=\"top center\"\n              content={this.props.intl.formatMessage(messages.code)}\n              size=\"mini\"\n            />\n            <Popup\n              trigger={\n                <Button\n                  icon\n                  basic\n                  aria-label={this.props.intl.formatMessage(messages.preview)}\n                  active={this.state.isPreview}\n                  onClick={this.onPreview}\n                >\n                  <Icon name={showSVG} size=\"24px\" />\n                </Button>\n              }\n              position=\"top center\"\n              content={this.props.intl.formatMessage(messages.preview)}\n              size=\"mini\"\n            />\n            <Popup\n              trigger={\n                <Button\n                  icon\n                  basic\n                  aria-label={this.props.intl.formatMessage(messages.prettier)}\n                  onClick={this.onPrettify}\n                >\n                  <Icon name={indentSVG} size=\"24px\" />\n                </Button>\n              }\n              position=\"top center\"\n              content={this.props.intl.formatMessage(messages.prettier)}\n              size=\"mini\"\n            />\n            <div className=\"separator\" />\n            <Popup\n              trigger={\n                <Button.Group>\n                  <Button icon basic onClick={() => this.onChangeCode('')}>\n                    <Icon name={clearSVG} size=\"24px\" color=\"#e40166\" />\n                  </Button>\n                </Button.Group>\n              }\n              position=\"top center\"\n              content={this.props.intl.formatMessage(messages.clear)}\n              size=\"mini\"\n            />\n          </div>\n        )}\n        {this.state.isPreview ? (\n          <div dangerouslySetInnerHTML={{ __html: value }} />\n        ) : (\n          <Editor\n            value={this.getValue()}\n            readOnly={!this.props.editable}\n            placeholder={placeholder}\n            onValueChange={(code) => this.onChangeCode(code)}\n            highlight={\n              this.props.prismCore?.highlight &&\n              this.props.prismCore?.languages?.html\n                ? (code) =>\n                    this.props.prismCore.highlight(\n                      code,\n                      this.props.prismCore.languages.html,\n                      'html',\n                    )\n                : () => {}\n            }\n            padding={8}\n            className=\"html-editor\"\n            ref={(node) => {\n              if (node) {\n                this.codeEditorRef.current = node;\n              }\n            }}\n            ignoreTabKey={true}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nconst withPrismMarkup = (WrappedComponent) => (props) => {\n  const [loaded, setLoaded] = React.useState();\n  const promise = React.useRef(null);\n  const cancelled = React.useRef(false);\n\n  React.useEffect(() => {\n    promise.current = import('prismjs/components/prism-markup');\n    promise.current.then(() => {\n      if (!cancelled.current) {\n        setLoaded(true);\n      }\n    });\n    return () => {\n      cancelled.current = true;\n    };\n  }, []);\n\n  return loaded ? <WrappedComponent {...props} /> : null;\n};\n\nexport default compose(\n  injectLazyLibs(['prettierStandalone', 'prettierParserHtml', 'prismCore']),\n  withPrismMarkup,\n  injectIntl,\n)(Edit);\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,QAAQ,OAAO;AAC/B,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,MAAM,EAAEC,KAAK,QAAQ,mBAAmB;AACjD,SAASC,cAAc,EAAEC,UAAU,QAAQ,YAAY;AACvD,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,OAAO,MAAM,gBAAgB;AAEpC,OAAOC,IAAI,MAAM,yCAAyC;AAC1D,SAASC,cAAc,QAAQ,wCAAwC;AACvE,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,SAAS,MAAM,+BAA+B;AAErD,MAAMC,MAAM,GAAGR,QAAQ;EAAAS,QAAA;EAAAC,UAAA;IAAA;EAAA;EAAAC,QAAAC,KAAA;IAAA,MAAAC,GAAA,QAAAC,OAAA,CAAAF,KAAA;IAAA,SAAAH,QAAA,CAAAI,GAAA;MAAA;IAAA;IAAA,WAAAE,mBAAA;MAAA,SAAAA,mBAAA,CAAAF,GAAA;IAAA;IAAA;EAAA;EAAAG,WAAA,EAACA,CAAA,KAAM,MAAM,mDAAC,0BAA0B,CAAC;EAAAC,aAAAL,KAAA;IAAA,MAAAC,GAAA,QAAAC,OAAA,CAAAF,KAAA;IAAA,KAAAH,QAAA,CAAAI,GAAA;IAAA,YAAAG,WAAA,CAAAJ,KAAA,EAAAM,IAAA,CAAAT,QAAA;MAAA,KAAAA,QAAA,CAAAI,GAAA;MAAA,OAAAJ,QAAA;IAAA;EAAA;EAAAU,YAAAP,KAAA;IAAA,MAAAQ,EAAA,QAAAN,OAAA,CAAAF,KAAA;IAAA,WAAAS,mBAAA;MAAA,OAAAA,mBAAA,CAAAD,EAAA;IAAA;IAAA,OAAAE,IAAA,mBAAAF,EAAA;EAAA;EAAAN,QAAA;IAAA,IAAAS,OAAA,CAAAC,WAAA;MAAA,OAAAD,OAAA,CAAAC,WAAA;IAAA;IAAA,OAAAF,IAAA;EAAA;AAAA,EAAC;AAEjE,MAAMG,QAAQ,GAAG3B,cAAc,CAAC;EAC9B4B,MAAM;IAAA;IAAA;EAAA,CAGL;EACDC,OAAO;IAAA;IAAA;EAAA,CAGN;EACDC,WAAW;IAAA;IAAA;EAAA,CAGV;EACDC,QAAQ;IAAA;IAAA;EAAA,CAGP;EACDC,KAAK;IAAA;IAAA;EAAA,CAGJ;EACDC,IAAI;IAAA;IAAA;EAAA;AAIN,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,MAAMC,IAAI,SAAStC,SAAS,CAAC;EA0B3B;AACF;AACA;AACA;AACA;EACEuC,WAAWA,CAACrB,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAACsB,eAAA,qCASCzC,KAAK,CAAC0C,SAAS,CAAC,CAAC;IAAAD,eAAA,yBAChB,CAAC,CAAC;IA2EnB;AACF;AACA;AACA;AACA;IAJEA,eAAA,qBAKa,YAAY;MACvB,IAAI;QACF,MAAMH,IAAI,GAAG,CACX,MAAM,IAAI,CAACnB,KAAK,CAACwB,kBAAkB,CAACC,MAAM,CAAC,IAAI,CAACC,QAAQ,CAAC,CAAC,EAAE;UAC1DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE,CAAC,IAAI,CAAC5B,KAAK,CAAC6B,kBAAkB;QACzC,CAAC,CAAC,EACFC,IAAI,CAAC,CAAC;QACR,IAAI,CAACC,YAAY,CAACZ,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOa,EAAE,EAAE;QACX;QACA;MAAA;IAEJ,CAAC;IAAAV,eAAA,uBAWeW,MAAM,IAAK;MACzB,IAAI,CAACA,MAAM,IAAI,CAACA,MAAM,CAACC,MAAM,EAAE;QAC7B,OAAO,CAAC,CAAC;MACX;MAEA,MAAMC,CAAC,GAAG,CAAC,CAAC;MACZ,IAAIF,MAAM,CAACC,MAAM,CAACE,cAAc,EAAE;QAChCD,CAAC,CAACC,cAAc,GAAGH,MAAM,CAACC,MAAM,CAACE,cAAc;MACjD;MACA,IAAIH,MAAM,CAACC,MAAM,CAACG,YAAY,EAAE;QAC9BF,CAAC,CAACE,YAAY,GAAGJ,MAAM,CAACC,MAAM,CAACG,YAAY;MAC7C;MACA,OAAOF,CAAC;IACV,CAAC;IAAAb,eAAA,mCAM2BW,MAAM,IAAK;MAAA,IAAAK,oBAAA,EAAAC,qBAAA;MACrC;MACA,IACE,IAAI,CAACvC,KAAK,CAACwC,QAAQ,IACnBP,MAAM,CAACC,MAAM,IACb,SAAAI,oBAAA,GAAO,IAAI,CAACG,cAAc,cAAAH,oBAAA,uBAAnBA,oBAAA,CAAqBF,cAAc,MAAK,QAAQ,IACvD,SAAAG,qBAAA,GAAO,IAAI,CAACE,cAAc,cAAAF,qBAAA,uBAAnBA,qBAAA,CAAqBF,YAAY,MAAK,QAAQ,EACrD;QAAA,IAAAK,qBAAA,EAAAC,qBAAA;QACAV,MAAM,CAACC,MAAM,CAACE,cAAc,IAAAM,qBAAA,GAAG,IAAI,CAACD,cAAc,cAAAC,qBAAA,uBAAnBA,qBAAA,CAAqBN,cAAc;QAClEH,MAAM,CAACC,MAAM,CAACG,YAAY,IAAAM,qBAAA,GAAG,IAAI,CAACF,cAAc,cAAAE,qBAAA,uBAAnBA,qBAAA,CAAqBN,YAAY;QAC9DJ,MAAM,CAACC,MAAM,CAACU,KAAK,CAAC,CAAC;MACvB;IACF,CAAC;IAhJC,IAAI,CAACC,KAAK,GAAG;MACXC,SAAS,EAAE;IACb,CAAC;IACD,IAAI,CAACf,YAAY,GAAG,IAAI,CAACA,YAAY,CAACgB,IAAI,CAAC,IAAI,CAAC;IAChD,IAAI,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS,CAACD,IAAI,CAAC,IAAI,CAAC;IAC1C,IAAI,CAACE,YAAY,GAAG,IAAI,CAACA,YAAY,CAACF,IAAI,CAAC,IAAI,CAAC;EAClD;EAKAG,kBAAkBA,CAACC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,EAAE;IACjD;IACA,IAAI,CAACZ,cAAc,GAAGY,QAAQ;IAE9B,IAAI,CAACC,wBAAwB,CAAC,IAAI,CAACC,aAAa,CAACC,OAAO,CAAC;EAC3D;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,qBAAqBA,CAACC,SAAS,EAAE;IAC/B;IACA;IACA,IAAI,CAAC,IAAI,CAACxB,MAAM,EAAE;MAChB,OAAO,IAAI;IACb;;IAEA;IACA;IACA;IACA,OACE,IAAI,CAAClC,KAAK,CAACwC,QAAQ,IACnB,CAACnD,OAAO,CAAC,IAAI,CAACW,KAAK,CAAC2D,IAAI,EAAED,SAAS,CAACC,IAAI,CAAC,IACzC,IAAI,CAACzB,MAAM,CAACE,cAAc,KAAK,IAAI,CAACK,cAAc,CAACL,cAAc,IACjE,IAAI,CAACF,MAAM,CAACG,YAAY,KAAK,IAAI,CAACI,cAAc,CAACJ,YAAY;EAEjE;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEN,YAAYA,CAACZ,IAAI,EAAE;IACjB,IAAI,CAACnB,KAAK,CAAC4D,aAAa,CAAC,IAAI,CAAC5D,KAAK,CAAC6D,KAAK,EAAAC,aAAA,CAAAA,aAAA,KACpC,IAAI,CAAC9D,KAAK,CAAC2D,IAAI;MAClBI,IAAI,EAAE5C;IAAI,EACX,CAAC;EACJ;EAEAO,QAAQA,CAAA,EAAG;IACT,OAAO,IAAI,CAAC1B,KAAK,CAAC2D,IAAI,CAACI,IAAI,IAAI,EAAE;EACnC;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAMf,SAASA,CAAA,EAAG;IAChB,IAAI;MACF,MAAM7B,IAAI,GAAG,CACX,MAAM,IAAI,CAACnB,KAAK,CAACwB,kBAAkB,CAACC,MAAM,CAAC,IAAI,CAACC,QAAQ,CAAC,CAAC,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE,CAAC,IAAI,CAAC5B,KAAK,CAAC6B,kBAAkB;MACzC,CAAC,CAAC,EACFC,IAAI,CAAC,CAAC;MACR,IAAI,CAACkC,QAAQ,CACX;QACElB,SAAS,EAAE,CAAC,IAAI,CAACD,KAAK,CAACC;MACzB,CAAC,EACD,MAAM,IAAI,CAACf,YAAY,CAACZ,IAAI,CAC9B,CAAC;IACH,CAAC,CAAC,OAAOa,EAAE,EAAE;MACX;MACA;IAAA;EAEJ;EAsBA;AACF;AACA;AACA;AACA;EACEiB,YAAYA,CAAA,EAAG;IACb,IAAI,CAACe,QAAQ,CAAC;MAAElB,SAAS,EAAE,CAAC,IAAI,CAACD,KAAK,CAACC;IAAU,CAAC,CAAC;EACrD;EAiBAmB,uBAAuBA,CAACd,SAAS,EAAEC,SAAS,EAAE;IAC5C,OAAO,IAAI,CAACc,YAAY,CAAC,IAAI,CAACX,aAAa,CAACC,OAAO,CAAC;EACtD;EAgBA;AACF;AACA;AACA;AACA;EACEW,MAAMA,CAAA,EAAG;IAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;IACP,MAAMtD,WAAW,GACf,IAAI,CAAChB,KAAK,CAAC2D,IAAI,CAAC3C,WAAW,IAC3B,IAAI,CAAChB,KAAK,CAACuE,IAAI,CAACC,aAAa,CAAC3D,QAAQ,CAACG,WAAW,CAAC;IACrD,MAAMyD,KAAK,GAAG,IAAI,CAAC/C,QAAQ,CAAC,CAAC;IAC7B,OACEgD,KAAA,CAAA7F,KAAA,CAAA8F,QAAA,QACG,IAAI,CAAC3E,KAAK,CAACwC,QAAQ,IAAIiC,KAAK,IAC3BC,KAAA;MAAKE,SAAS,EAAC,SAAS;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACtBR,KAAA,CAACzF,KAAK;MACJkG,OAAO,EACLT,KAAA,CAAC1F,MAAM;QACLoG,IAAI;QACJC,KAAK;QACL,cAAY,IAAI,CAACrF,KAAK,CAACuE,IAAI,CAACC,aAAa,CAAC3D,QAAQ,CAACC,MAAM,CAAE;QAC3DwE,MAAM,EAAE,CAAC,IAAI,CAACzC,KAAK,CAACC,SAAU;QAC9ByC,OAAO,EAAE,IAAI,CAACtC,YAAa;QAAA4B,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAE3BR,KAAA,CAACpF,IAAI;QAACkG,IAAI,EAAE9F,OAAQ;QAAC+F,IAAI,EAAC,MAAM;QAAAZ,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAC5B,CACT;MACDQ,QAAQ,EAAC,YAAY;MACrBC,OAAO,EAAE,IAAI,CAAC3F,KAAK,CAACuE,IAAI,CAACC,aAAa,CAAC3D,QAAQ,CAACM,IAAI,CAAE;MACtDsE,IAAI,EAAC,MAAM;MAAAZ,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACZ,CAAC,EACFR,KAAA,CAACzF,KAAK;MACJkG,OAAO,EACLT,KAAA,CAAC1F,MAAM;QACLoG,IAAI;QACJC,KAAK;QACL,cAAY,IAAI,CAACrF,KAAK,CAACuE,IAAI,CAACC,aAAa,CAAC3D,QAAQ,CAACE,OAAO,CAAE;QAC5DuE,MAAM,EAAE,IAAI,CAACzC,KAAK,CAACC,SAAU;QAC7ByC,OAAO,EAAE,IAAI,CAACvC,SAAU;QAAA6B,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAExBR,KAAA,CAACpF,IAAI;QAACkG,IAAI,EAAEhG,OAAQ;QAACiG,IAAI,EAAC,MAAM;QAAAZ,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAC5B,CACT;MACDQ,QAAQ,EAAC,YAAY;MACrBC,OAAO,EAAE,IAAI,CAAC3F,KAAK,CAACuE,IAAI,CAACC,aAAa,CAAC3D,QAAQ,CAACE,OAAO,CAAE;MACzD0E,IAAI,EAAC,MAAM;MAAAZ,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACZ,CAAC,EACFR,KAAA,CAACzF,KAAK;MACJkG,OAAO,EACLT,KAAA,CAAC1F,MAAM;QACLoG,IAAI;QACJC,KAAK;QACL,cAAY,IAAI,CAACrF,KAAK,CAACuE,IAAI,CAACC,aAAa,CAAC3D,QAAQ,CAACI,QAAQ,CAAE;QAC7DsE,OAAO,EAAE,IAAI,CAACK,UAAW;QAAAf,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAEzBR,KAAA,CAACpF,IAAI;QAACkG,IAAI,EAAE7F,SAAU;QAAC8F,IAAI,EAAC,MAAM;QAAAZ,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAC9B,CACT;MACDQ,QAAQ,EAAC,YAAY;MACrBC,OAAO,EAAE,IAAI,CAAC3F,KAAK,CAACuE,IAAI,CAACC,aAAa,CAAC3D,QAAQ,CAACI,QAAQ,CAAE;MAC1DwE,IAAI,EAAC,MAAM;MAAAZ,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACZ,CAAC,EACFR,KAAA;MAAKE,SAAS,EAAC,WAAW;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,EAC7BR,KAAA,CAACzF,KAAK;MACJkG,OAAO,EACLT,KAAA,CAAC1F,MAAM,CAAC6G,KAAK;QAAAhB,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GACXR,KAAA,CAAC1F,MAAM;QAACoG,IAAI;QAACC,KAAK;QAACE,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACxD,YAAY,CAAC,EAAE,CAAE;QAAA8C,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GACtDR,KAAA,CAACpF,IAAI;QAACkG,IAAI,EAAE/F,QAAS;QAACgG,IAAI,EAAC,MAAM;QAACK,KAAK,EAAC,SAAS;QAAAjB,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAC7C,CACI,CACf;MACDQ,QAAQ,EAAC,YAAY;MACrBC,OAAO,EAAE,IAAI,CAAC3F,KAAK,CAACuE,IAAI,CAACC,aAAa,CAAC3D,QAAQ,CAACK,KAAK,CAAE;MACvDuE,IAAI,EAAC,MAAM;MAAAZ,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACZ,CACE,CACN,EACA,IAAI,CAACrC,KAAK,CAACC,SAAS,GACnB4B,KAAA;MAAKqB,uBAAuB,EAAE;QAAEC,MAAM,EAAEvB;MAAM,CAAE;MAAAI,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,GAEnDR,KAAA,CAAC9E,MAAM;MACL6E,KAAK,EAAE,IAAI,CAAC/C,QAAQ,CAAC,CAAE;MACvBuE,QAAQ,EAAE,CAAC,IAAI,CAACjG,KAAK,CAACkG,QAAS;MAC/BlF,WAAW,EAAEA,WAAY;MACzBmF,aAAa,EAAGhF,IAAI,IAAK,IAAI,CAACY,YAAY,CAACZ,IAAI,CAAE;MACjDiF,SAAS,EACP,CAAAhC,qBAAA,OAAI,CAACpE,KAAK,CAACqG,SAAS,cAAAjC,qBAAA,eAApBA,qBAAA,CAAsBgC,SAAS,KAAA/B,sBAAA,GAC/B,IAAI,CAACrE,KAAK,CAACqG,SAAS,cAAAhC,sBAAA,gBAAAC,sBAAA,GAApBD,sBAAA,CAAsBiC,SAAS,cAAAhC,sBAAA,eAA/BA,sBAAA,CAAiCP,IAAI,GAChC5C,IAAI,IACH,IAAI,CAACnB,KAAK,CAACqG,SAAS,CAACD,SAAS,CAC5BjF,IAAI,EACJ,IAAI,CAACnB,KAAK,CAACqG,SAAS,CAACC,SAAS,CAACvC,IAAI,EACnC,MACF,CAAC,GACH,MAAM,CAAC,CACZ;MACDwC,OAAO,EAAE,CAAE;MACX3B,SAAS,EAAC,aAAa;MACvB4B,GAAG,EAAGC,IAAI,IAAK;QACb,IAAIA,IAAI,EAAE;UACR,IAAI,CAAClD,aAAa,CAACC,OAAO,GAAGiD,IAAI;QACnC;MACF,CAAE;MACFC,YAAY,EAAE,IAAK;MAAA7B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACpB,CAEH,CAAC;EAEP;AACF;AA9RE;AACF;AACA;AACA;AACA;AAJE5D,eAAA,CADIF,IAAI,eAMW;EACjBoB,QAAQ,EAAEzD,SAAS,CAAC4H,IAAI,CAACC,UAAU;EACnC/C,KAAK,EAAE9E,SAAS,CAAC8H,MAAM,CAACD,UAAU;EAClCE,KAAK,EAAE/H,SAAS,CAACgI,MAAM,CAACH,UAAU;EAClCjD,IAAI,EAAE5E,SAAS,CAACiI,QAAQ,CAACjI,SAAS,CAACkI,GAAG,CAAC,CAACL,UAAU;EAClDhD,aAAa,EAAE7E,SAAS,CAACmI,IAAI,CAACN,UAAU;EACxCO,aAAa,EAAEpI,SAAS,CAACmI,IAAI,CAACN,UAAU;EACxCQ,aAAa,EAAErI,SAAS,CAACmI,IAAI,CAACN,UAAU;EACxCS,aAAa,EAAEtI,SAAS,CAACmI,IAAI,CAACN,UAAU;EACxCV,QAAQ,EAAEnH,SAAS,CAAC4H;AACtB,CAAC;AAED;AACF;AACA;AACA;AACA;AAJErF,eAAA,CAlBIF,IAAI,kBAuBc;EACpB8E,QAAQ,EAAE;AACZ,CAAC;AAwQH,MAAMoB,eAAe,GAAIC,gBAAgB,IAAMvH,KAAK,IAAK;EACvD,MAAM,CAACwH,MAAM,EAAEC,SAAS,CAAC,GAAG5I,KAAK,CAAC6I,QAAQ,CAAC,CAAC;EAC5C,MAAMC,OAAO,GAAG9I,KAAK,CAAC+I,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMC,SAAS,GAAGhJ,KAAK,CAAC+I,MAAM,CAAC,KAAK,CAAC;EAErC/I,KAAK,CAACiJ,SAAS,CAAC,MAAM;IACpBH,OAAO,CAACnE,OAAO,GAAG,MAAM,CAAC,iCAAiC,CAAC;IAC3DmE,OAAO,CAACnE,OAAO,CAAClD,IAAI,CAAC,MAAM;MACzB,IAAI,CAACuH,SAAS,CAACrE,OAAO,EAAE;QACtBiE,SAAS,CAAC,IAAI,CAAC;MACjB;IACF,CAAC,CAAC;IACF,OAAO,MAAM;MACXI,SAAS,CAACrE,OAAO,GAAG,IAAI;IAC1B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOgE,MAAM,GAAG9C,KAAA,CAAC6C,gBAAgB,EAAAQ,QAAA,KAAK/H,KAAK;IAAA6E,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,CAAC,GAAG,IAAI;AACxD,CAAC;AAED,eAAetG,OAAO,CACpBW,cAAc,CAAC,CAAC,oBAAoB,EAAE,oBAAoB,EAAE,WAAW,CAAC,CAAC,EACzE+H,eAAe,EACfnI,UACF,CAAC,CAACiC,IAAI,CAAC","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Source","defaultMessage":"Source"},{"id":"Preview","defaultMessage":"Preview"},{"id":"<p>Add some HTML here</p>","defaultMessage":"<p>Add some HTML here</p>"},{"id":"Prettify your code","defaultMessage":"Prettify your code"},{"id":"Clear","defaultMessage":"Clear"},{"id":"Code","defaultMessage":"Code"}]}},"sourceType":"module","externalDependencies":[]}