{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/RouteAnnouncer/RouteAnnouncer.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nfunction RouteAnnouncer() {\n  _s();\n  const {\n    0: pageTitle,\n    1: setPageTitle\n  } = useState('');\n  useEffect(() => {\n    function updatePage(title) {\n      setPageTitle(title);\n      document.activeElement.blur();\n    }\n    function handlePop(event) {\n      const pageTitle = event.target.document.title;\n      updatePage(pageTitle);\n    }\n    const observer = new MutationObserver(mutationList => {\n      for (const mutation of mutationList) {\n        if (mutation.type === 'childList') {\n          for (const node of mutation.addedNodes) {\n            if (node.nodeType === Node.TEXT_NODE && node.textContent) {\n              updatePage(node.textContent);\n            }\n          }\n        }\n      }\n    });\n    observer.observe(document.querySelector('title'), {\n      characterData: true,\n      attributes: true,\n      childList: true,\n      subtree: true\n    });\n    window.addEventListener('popstate', handlePop);\n    return () => {\n      observer.disconnect();\n      window.removeEventListener('popstate', handlePop);\n    };\n  }, []);\n  return __jsx(\"p\", {\n    id: \"route-announcer\",\n    role: \"alert\"\n    // Off-screen element with 'best' browser support\n    ,\n    style: {\n      border: 0,\n      clip: 'rect(1px 1px 1px 1px)',\n      // IE-style CSS for compatibility\n      height: '1px',\n      margin: '-1px',\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      width: '1px',\n      whiteSpace: 'nowrap',\n      wordWrap: 'normal'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, pageTitle);\n}\n_s(RouteAnnouncer, \"x+NWlMYfnct47wOZDYrF+vq8wNw=\");\n_c = RouteAnnouncer;\nexport default RouteAnnouncer;\nvar _c;\n$RefreshReg$(_c, \"RouteAnnouncer\");","map":{"version":3,"names":["useEffect","useState","RouteAnnouncer","_s","pageTitle","setPageTitle","updatePage","title","document","activeElement","blur","handlePop","event","target","observer","MutationObserver","mutationList","mutation","type","node","addedNodes","nodeType","Node","TEXT_NODE","textContent","observe","querySelector","characterData","attributes","childList","subtree","window","addEventListener","disconnect","removeEventListener","__jsx","id","role","style","border","clip","height","margin","overflow","padding","position","width","whiteSpace","wordWrap","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/RouteAnnouncer/RouteAnnouncer.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nfunction RouteAnnouncer() {\n  const [pageTitle, setPageTitle] = useState('');\n\n  useEffect(() => {\n    function updatePage(title) {\n      setPageTitle(title);\n      document.activeElement.blur();\n    }\n    function handlePop(event) {\n      const pageTitle = event.target.document.title;\n      updatePage(pageTitle);\n    }\n\n    const observer = new MutationObserver((mutationList) => {\n      for (const mutation of mutationList) {\n        if (mutation.type === 'childList') {\n          for (const node of mutation.addedNodes) {\n            if (node.nodeType === Node.TEXT_NODE && node.textContent) {\n              updatePage(node.textContent);\n            }\n          }\n        }\n      }\n    });\n    observer.observe(document.querySelector('title'), {\n      characterData: true,\n      attributes: true,\n      childList: true,\n      subtree: true,\n    });\n    window.addEventListener('popstate', handlePop);\n\n    return () => {\n      observer.disconnect();\n      window.removeEventListener('popstate', handlePop);\n    };\n  }, []);\n\n  return (\n    <p\n      id=\"route-announcer\"\n      role=\"alert\"\n      // Off-screen element with 'best' browser support\n      style={{\n        border: 0,\n        clip: 'rect(1px 1px 1px 1px)', // IE-style CSS for compatibility\n        height: '1px',\n        margin: '-1px',\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        width: '1px',\n        whiteSpace: 'nowrap',\n        wordWrap: 'normal',\n      }}\n    >\n      {pageTitle}\n    </p>\n  );\n}\n\nexport default RouteAnnouncer;\n"],"mappings":";;;;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM;IAAA,GAACC,SAAS;IAAA,GAAEC;EAAY,IAAIJ,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,SAASM,UAAUA,CAACC,KAAK,EAAE;MACzBF,YAAY,CAACE,KAAK,CAAC;MACnBC,QAAQ,CAACC,aAAa,CAACC,IAAI,CAAC,CAAC;IAC/B;IACA,SAASC,SAASA,CAACC,KAAK,EAAE;MACxB,MAAMR,SAAS,GAAGQ,KAAK,CAACC,MAAM,CAACL,QAAQ,CAACD,KAAK;MAC7CD,UAAU,CAACF,SAAS,CAAC;IACvB;IAEA,MAAMU,QAAQ,GAAG,IAAIC,gBAAgB,CAAEC,YAAY,IAAK;MACtD,KAAK,MAAMC,QAAQ,IAAID,YAAY,EAAE;QACnC,IAAIC,QAAQ,CAACC,IAAI,KAAK,WAAW,EAAE;UACjC,KAAK,MAAMC,IAAI,IAAIF,QAAQ,CAACG,UAAU,EAAE;YACtC,IAAID,IAAI,CAACE,QAAQ,KAAKC,IAAI,CAACC,SAAS,IAAIJ,IAAI,CAACK,WAAW,EAAE;cACxDlB,UAAU,CAACa,IAAI,CAACK,WAAW,CAAC;YAC9B;UACF;QACF;MACF;IACF,CAAC,CAAC;IACFV,QAAQ,CAACW,OAAO,CAACjB,QAAQ,CAACkB,aAAa,CAAC,OAAO,CAAC,EAAE;MAChDC,aAAa,EAAE,IAAI;MACnBC,UAAU,EAAE,IAAI;MAChBC,SAAS,EAAE,IAAI;MACfC,OAAO,EAAE;IACX,CAAC,CAAC;IACFC,MAAM,CAACC,gBAAgB,CAAC,UAAU,EAAErB,SAAS,CAAC;IAE9C,OAAO,MAAM;MACXG,QAAQ,CAACmB,UAAU,CAAC,CAAC;MACrBF,MAAM,CAACG,mBAAmB,CAAC,UAAU,EAAEvB,SAAS,CAAC;IACnD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OACEwB,KAAA;IACEC,EAAE,EAAC,iBAAiB;IACpBC,IAAI,EAAC;IACL;IAAA;IACAC,KAAK,EAAE;MACLC,MAAM,EAAE,CAAC;MACTC,IAAI,EAAE,uBAAuB;MAAE;MAC/BC,MAAM,EAAE,KAAK;MACbC,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAE,QAAQ;MAClBC,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,UAAU;MACpBC,KAAK,EAAE,KAAK;MACZC,UAAU,EAAE,QAAQ;MACpBC,QAAQ,EAAE;IACZ,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEDlD,SACA,CAAC;AAER;AAACD,EAAA,CA3DQD,cAAc;AAAAqD,EAAA,GAAdrD,cAAc;AA6DvB,eAAeA,cAAc;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}