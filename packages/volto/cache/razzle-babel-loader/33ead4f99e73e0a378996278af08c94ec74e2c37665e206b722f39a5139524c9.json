{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/SearchWidget/SearchWidget.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Input } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getNavroot } from '@plone/volto/actions/navroot/navroot';\nimport { hasApiExpander } from '@plone/volto/helpers/Utils/Utils';\nimport { getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport zoomSVG from '@plone/volto/icons/zoom.svg';\nconst messages = defineMessages({\n  search: {\n    \"id\": \"Search\",\n    \"defaultMessage\": \"Search\"\n  },\n  searchSite: {\n    \"id\": \"Search Site\",\n    \"defaultMessage\": \"Search Site\"\n  }\n});\nconst SearchWidget = props => {\n  _s();\n  var _navroot$navroot;\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const history = useHistory();\n  const onChangeText = (event, {\n    value\n  }) => {\n    setText(value);\n  };\n  const pathname = props.pathname;\n  const onSubmit = event => {\n    const path = (pathname === null || pathname === void 0 ? void 0 : pathname.length) > 0 ? `&path=${encodeURIComponent(pathname)}` : '';\n    history.push(`./search?SearchableText=${encodeURIComponent(text)}${path}`);\n    // reset input value\n    setText('');\n    event.preventDefault();\n  };\n  const navroot = useSelector(state => {\n    var _state$navroot;\n    return (_state$navroot = state.navroot) === null || _state$navroot === void 0 ? void 0 : _state$navroot.data;\n  });\n  useEffect(() => {\n    if (!hasApiExpander('navroot', getBaseUrl(pathname))) {\n      dispatch(getNavroot(getBaseUrl(pathname)));\n    }\n  }, [dispatch, pathname]);\n  return __jsx(Form, {\n    action: `${navroot === null || navroot === void 0 ? void 0 : (_navroot$navroot = navroot.navroot) === null || _navroot$navroot === void 0 ? void 0 : _navroot$navroot['@id']}/search`,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Field, {\n    className: \"searchbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    \"aria-label\": intl.formatMessage(messages.search),\n    onChange: onChangeText,\n    name: \"SearchableText\",\n    value: text,\n    transparent: true,\n    autoComplete: \"off\",\n    placeholder: intl.formatMessage(messages.searchSite),\n    title: intl.formatMessage(messages.search),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    \"aria-label\": intl.formatMessage(messages.search),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: zoomSVG,\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }))));\n};\n_s(SearchWidget, \"xxW5Ix8nUyXGV5OLuqKdTa853zA=\", false, function () {\n  return [useIntl, useDispatch, useHistory, useSelector];\n});\n_c = SearchWidget;\nexport default SearchWidget;\nvar _c;\n$RefreshReg$(_c, \"SearchWidget\");","map":{"version":3,"names":["useState","useEffect","useHistory","Form","Input","defineMessages","useIntl","useDispatch","useSelector","getNavroot","hasApiExpander","getBaseUrl","Icon","zoomSVG","messages","search","searchSite","SearchWidget","props","_s","_navroot$navroot","intl","dispatch","text","setText","history","onChangeText","event","value","pathname","onSubmit","path","length","encodeURIComponent","push","preventDefault","navroot","state","_state$navroot","data","__jsx","action","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Field","className","formatMessage","onChange","name","transparent","autoComplete","placeholder","title","size","_c","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/SearchWidget/SearchWidget.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Input } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getNavroot } from '@plone/volto/actions/navroot/navroot';\nimport { hasApiExpander } from '@plone/volto/helpers/Utils/Utils';\nimport { getBaseUrl } from '@plone/volto/helpers/Url/Url';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport zoomSVG from '@plone/volto/icons/zoom.svg';\n\nconst messages = defineMessages({\n  search: {\n    id: 'Search',\n    defaultMessage: 'Search',\n  },\n  searchSite: {\n    id: 'Search Site',\n    defaultMessage: 'Search Site',\n  },\n});\n\nconst SearchWidget = (props) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n\n  const [text, setText] = useState('');\n  const history = useHistory();\n  const onChangeText = (event, { value }) => {\n    setText(value);\n  };\n  const pathname = props.pathname;\n  const onSubmit = (event) => {\n    const path =\n      pathname?.length > 0 ? `&path=${encodeURIComponent(pathname)}` : '';\n\n    history.push(`./search?SearchableText=${encodeURIComponent(text)}${path}`);\n    // reset input value\n    setText('');\n    event.preventDefault();\n  };\n\n  const navroot = useSelector((state) => state.navroot?.data);\n  useEffect(() => {\n    if (!hasApiExpander('navroot', getBaseUrl(pathname))) {\n      dispatch(getNavroot(getBaseUrl(pathname)));\n    }\n  }, [dispatch, pathname]);\n\n  return (\n    <Form action={`${navroot?.navroot?.['@id']}/search`} onSubmit={onSubmit}>\n      <Form.Field className=\"searchbox\">\n        <Input\n          aria-label={intl.formatMessage(messages.search)}\n          onChange={onChangeText}\n          name=\"SearchableText\"\n          value={text}\n          transparent\n          autoComplete=\"off\"\n          placeholder={intl.formatMessage(messages.searchSite)}\n          title={intl.formatMessage(messages.search)}\n        />\n        <button aria-label={intl.formatMessage(messages.search)}>\n          <Icon name={zoomSVG} size=\"18px\" />\n        </button>\n      </Form.Field>\n    </Form>\n  );\n};\n\nexport default SearchWidget;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Search","defaultMessage":"Search"},{"id":"Search Site","defaultMessage":"Search Site"}]}},"sourceType":"module","externalDependencies":[]}