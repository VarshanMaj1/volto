{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/AnchorPlugin/useLinkEditor.jsx\";\nvar __jsx = React.createElement;\n/***\n * A hook that makes it easy to use the AddLinkForm link editing component.\n *\n * To use it, in your component, do something like:\n *\n * const linkEditor = useLinkEditor();\n *\n * return (<>\n * <button ref={linkEditor.anchorNode} onClick={() => linkEditor.show()}>btn</button>\n * {linkEditor.anchorNode && <linkEditor.LinkEditor value={value} id={id} onChange={onChange} />}\n * </>);\n *\n */\n\nimport React from 'react';\nimport PositionedToolbar from '@plone/volto-slate/editor/ui/PositionedToolbar';\nimport AddLinkForm from '@plone/volto/components/manage/AnchorPlugin/components/LinkButton/AddLinkForm';\nfunction getPositionStyle(position) {\n  return position || {\n    style: {\n      opacity: 1,\n      top: -5,\n      left: 55\n    }\n  };\n}\nconst useLinkEditor = () => {\n  const [showLinkEditor, setShowLinkEditor] = React.useState(false);\n  const show = React.useCallback(() => setShowLinkEditor(true), []);\n  const anchorNode = React.useRef();\n  const LinkEditor = React.useCallback(props => {\n    const {\n      id,\n      value,\n      onChange,\n      placeholder,\n      objectBrowserPickerType,\n      position\n    } = props;\n    return showLinkEditor && anchorNode.current ? __jsx(PositionedToolbar, {\n      className: \"add-link\",\n      toggleButton: anchorNode.current,\n      position: getPositionStyle(position),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, __jsx(AddLinkForm, {\n      placeholder: placeholder,\n      data: {\n        url: value || ''\n      },\n      theme: {},\n      objectBrowserPickerType: objectBrowserPickerType,\n      onChangeValue: url => {\n        setShowLinkEditor(false);\n        onChange(id, url);\n      },\n      onClear: () => {},\n      onOverrideContent: c => {\n        setShowLinkEditor(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    })) : null;\n  }, [showLinkEditor]);\n  return {\n    anchorNode,\n    show,\n    LinkEditor\n  };\n};\nexport default useLinkEditor;","map":{"version":3,"names":["React","PositionedToolbar","AddLinkForm","getPositionStyle","position","style","opacity","top","left","useLinkEditor","showLinkEditor","setShowLinkEditor","useState","show","useCallback","anchorNode","useRef","LinkEditor","props","id","value","onChange","placeholder","objectBrowserPickerType","current","__jsx","className","toggleButton","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","data","url","theme","onChangeValue","onClear","onOverrideContent","c"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/AnchorPlugin/useLinkEditor.jsx"],"sourcesContent":["/***\n * A hook that makes it easy to use the AddLinkForm link editing component.\n *\n * To use it, in your component, do something like:\n *\n * const linkEditor = useLinkEditor();\n *\n * return (<>\n * <button ref={linkEditor.anchorNode} onClick={() => linkEditor.show()}>btn</button>\n * {linkEditor.anchorNode && <linkEditor.LinkEditor value={value} id={id} onChange={onChange} />}\n * </>);\n *\n */\n\nimport React from 'react';\nimport PositionedToolbar from '@plone/volto-slate/editor/ui/PositionedToolbar';\nimport AddLinkForm from '@plone/volto/components/manage/AnchorPlugin/components/LinkButton/AddLinkForm';\n\nfunction getPositionStyle(position) {\n  return (\n    position || {\n      style: {\n        opacity: 1,\n        top: -5,\n        left: 55,\n      },\n    }\n  );\n}\n\nconst useLinkEditor = () => {\n  const [showLinkEditor, setShowLinkEditor] = React.useState(false);\n  const show = React.useCallback(() => setShowLinkEditor(true), []);\n  const anchorNode = React.useRef();\n\n  const LinkEditor = React.useCallback(\n    (props) => {\n      const {\n        id,\n        value,\n        onChange,\n        placeholder,\n        objectBrowserPickerType,\n        position,\n      } = props;\n      return showLinkEditor && anchorNode.current ? (\n        <PositionedToolbar\n          className=\"add-link\"\n          toggleButton={anchorNode.current}\n          position={getPositionStyle(position)}\n        >\n          <AddLinkForm\n            placeholder={placeholder}\n            data={{ url: value || '' }}\n            theme={{}}\n            objectBrowserPickerType={objectBrowserPickerType}\n            onChangeValue={(url) => {\n              setShowLinkEditor(false);\n              onChange(id, url);\n            }}\n            onClear={() => {}}\n            onOverrideContent={(c) => {\n              setShowLinkEditor(false);\n            }}\n          />\n        </PositionedToolbar>\n      ) : null;\n    },\n    [showLinkEditor],\n  );\n\n  return {\n    anchorNode,\n    show,\n    LinkEditor,\n  };\n};\n\nexport default useLinkEditor;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,iBAAiB,MAAM,gDAAgD;AAC9E,OAAOC,WAAW,MAAM,+EAA+E;AAEvG,SAASC,gBAAgBA,CAACC,QAAQ,EAAE;EAClC,OACEA,QAAQ,IAAI;IACVC,KAAK,EAAE;MACLC,OAAO,EAAE,CAAC;MACVC,GAAG,EAAE,CAAC,CAAC;MACPC,IAAI,EAAE;IACR;EACF,CAAC;AAEL;AAEA,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAMC,IAAI,GAAGb,KAAK,CAACc,WAAW,CAAC,MAAMH,iBAAiB,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;EACjE,MAAMI,UAAU,GAAGf,KAAK,CAACgB,MAAM,CAAC,CAAC;EAEjC,MAAMC,UAAU,GAAGjB,KAAK,CAACc,WAAW,CACjCI,KAAK,IAAK;IACT,MAAM;MACJC,EAAE;MACFC,KAAK;MACLC,QAAQ;MACRC,WAAW;MACXC,uBAAuB;MACvBnB;IACF,CAAC,GAAGc,KAAK;IACT,OAAOR,cAAc,IAAIK,UAAU,CAACS,OAAO,GACzCC,KAAA,CAACxB,iBAAiB;MAChByB,SAAS,EAAC,UAAU;MACpBC,YAAY,EAAEZ,UAAU,CAACS,OAAQ;MACjCpB,QAAQ,EAAED,gBAAgB,CAACC,QAAQ,CAAE;MAAAwB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAErCR,KAAA,CAACvB,WAAW;MACVoB,WAAW,EAAEA,WAAY;MACzBY,IAAI,EAAE;QAAEC,GAAG,EAAEf,KAAK,IAAI;MAAG,CAAE;MAC3BgB,KAAK,EAAE,CAAC,CAAE;MACVb,uBAAuB,EAAEA,uBAAwB;MACjDc,aAAa,EAAGF,GAAG,IAAK;QACtBxB,iBAAiB,CAAC,KAAK,CAAC;QACxBU,QAAQ,CAACF,EAAE,EAAEgB,GAAG,CAAC;MACnB,CAAE;MACFG,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAE;MAClBC,iBAAiB,EAAGC,CAAC,IAAK;QACxB7B,iBAAiB,CAAC,KAAK,CAAC;MAC1B,CAAE;MAAAiB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACH,CACgB,CAAC,GAClB,IAAI;EACV,CAAC,EACD,CAACvB,cAAc,CACjB,CAAC;EAED,OAAO;IACLK,UAAU;IACVF,IAAI;IACJI;EACF,CAAC;AACH,CAAC;AAED,eAAeR,aAAa","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}