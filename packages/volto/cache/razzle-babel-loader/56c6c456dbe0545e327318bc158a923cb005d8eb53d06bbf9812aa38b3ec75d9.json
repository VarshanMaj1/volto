{"ast":null,"code":"import _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/**\n * Relations reducer.\n * @module reducers/relations/relations\n */\n\nimport { CREATE_RELATIONS, DELETE_RELATIONS, LIST_RELATIONS, STATS_RELATIONS, REBUILD_RELATIONS } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  relations: {\n    error: null,\n    loaded: false,\n    loading: false,\n    data: null\n  },\n  stats: {\n    error: null,\n    loaded: false,\n    loading: false,\n    data: null\n  },\n  create: {\n    error: null,\n    loaded: false,\n    loading: false\n  },\n  delete: {\n    error: null,\n    loaded: false,\n    loading: false\n  },\n  rebuild: {\n    error: null,\n    loaded: false,\n    loading: false\n  },\n  subrequests: {}\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Relations reducer.\n * @function relations\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function relations(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${LIST_RELATIONS}_PENDING`:\n      return action.subrequest ? _objectSpread(_objectSpread({}, state), {}, {\n        subrequests: _objectSpread(_objectSpread({}, state.subrequests), {}, {\n          [action.subrequest]: {\n            data: null,\n            loaded: false,\n            loading: true,\n            error: null\n          }\n        })\n      }) : _objectSpread(_objectSpread({}, state), {}, {\n        relations: {\n          data: null,\n          loading: true,\n          loaded: false,\n          error: null\n        }\n      });\n    case `${LIST_RELATIONS}_SUCCESS`:\n      return action.subrequest ? _objectSpread(_objectSpread({}, state), {}, {\n        subrequests: _objectSpread(_objectSpread({}, state.subrequests), {}, {\n          [action.subrequest]: {\n            data: action.result.relations,\n            loading: false,\n            loaded: true,\n            error: null\n          }\n        })\n      }) : _objectSpread(_objectSpread({}, state), {}, {\n        relations: {\n          data: action.result.relations,\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n    case `${LIST_RELATIONS}_FAIL`:\n      return action.subrequest ? _objectSpread(_objectSpread({}, state), {}, {\n        subrequests: _objectSpread(_objectSpread({}, state.subrequests), {}, {\n          [action.subrequest]: {\n            data: null,\n            loading: false,\n            loaded: false,\n            error: action.error\n          }\n        })\n      }) : _objectSpread(_objectSpread({}, state), {}, {\n        relations: {\n          data: null,\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n    case `${STATS_RELATIONS}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n          data: null\n        }\n      });\n    case `${STATS_RELATIONS}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n          data: action.result\n        }\n      });\n    case `${STATS_RELATIONS}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n          data: null\n        }\n      });\n    case `${CREATE_RELATIONS}_PENDING`:\n    case `${DELETE_RELATIONS}_PENDING`:\n    case `${REBUILD_RELATIONS}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null\n        }\n      });\n    case `${CREATE_RELATIONS}_SUCCESS`:\n    case `${DELETE_RELATIONS}_SUCCESS`:\n    case `${REBUILD_RELATIONS}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n    case `${CREATE_RELATIONS}_FAIL`:\n    case `${DELETE_RELATIONS}_FAIL`:\n    case `${REBUILD_RELATIONS}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["CREATE_RELATIONS","DELETE_RELATIONS","LIST_RELATIONS","STATS_RELATIONS","REBUILD_RELATIONS","initialState","relations","error","loaded","loading","data","stats","create","delete","rebuild","subrequests","getRequestKey","actionType","split","toLowerCase","state","action","type","subrequest","_objectSpread","result"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/reducers/relations/relations.js"],"sourcesContent":["/**\n * Relations reducer.\n * @module reducers/relations/relations\n */\n\nimport {\n  CREATE_RELATIONS,\n  DELETE_RELATIONS,\n  LIST_RELATIONS,\n  STATS_RELATIONS,\n  REBUILD_RELATIONS,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  relations: {\n    error: null,\n    loaded: false,\n    loading: false,\n    data: null,\n  },\n  stats: {\n    error: null,\n    loaded: false,\n    loading: false,\n    data: null,\n  },\n  create: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  delete: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  rebuild: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  subrequests: {},\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Relations reducer.\n * @function relations\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function relations(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${LIST_RELATIONS}_PENDING`:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                data: null,\n                loaded: false,\n                loading: true,\n                error: null,\n              },\n            },\n          }\n        : {\n            ...state,\n            relations: {\n              data: null,\n              loading: true,\n              loaded: false,\n              error: null,\n            },\n          };\n    case `${LIST_RELATIONS}_SUCCESS`:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                data: action.result.relations,\n                loading: false,\n                loaded: true,\n                error: null,\n              },\n            },\n          }\n        : {\n            ...state,\n            relations: {\n              data: action.result.relations,\n              loading: false,\n              loaded: true,\n              error: null,\n            },\n          };\n    case `${LIST_RELATIONS}_FAIL`:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                data: null,\n                loading: false,\n                loaded: false,\n                error: action.error,\n              },\n            },\n          }\n        : {\n            ...state,\n            relations: {\n              data: null,\n              loading: false,\n              loaded: false,\n              error: action.error,\n            },\n          };\n\n    case `${STATS_RELATIONS}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n          data: null,\n        },\n      };\n    case `${STATS_RELATIONS}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n          data: action.result,\n        },\n      };\n    case `${STATS_RELATIONS}_FAIL`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n          data: null,\n        },\n      };\n\n    case `${CREATE_RELATIONS}_PENDING`:\n    case `${DELETE_RELATIONS}_PENDING`:\n    case `${REBUILD_RELATIONS}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${CREATE_RELATIONS}_SUCCESS`:\n    case `${DELETE_RELATIONS}_SUCCESS`:\n    case `${REBUILD_RELATIONS}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${CREATE_RELATIONS}_FAIL`:\n    case `${DELETE_RELATIONS}_FAIL`:\n    case `${REBUILD_RELATIONS}_FAIL`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}