{"ast":null,"code":"import _extends from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Widgets/ImageWidget.jsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from 'react';\nimport { Button, Dimmer, Loader, Message } from 'semantic-ui-react';\nimport { useIntl, defineMessages } from 'react-intl';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport loadable from '@loadable/component';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport useLinkEditor from '@plone/volto/components/manage/AnchorPlugin/useLinkEditor';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\nimport { flattenToAppURL, getBaseUrl, isInternalURL } from '@plone/volto/helpers/Url/Url';\nimport { validateFileUploadSize } from '@plone/volto/helpers/FormValidation/FormValidation';\nimport { usePrevious } from '@plone/volto/helpers/Utils/usePrevious';\nimport { createContent } from '@plone/volto/actions/content/content';\nimport { readAsDataURL } from 'promise-file-reader';\nimport FormFieldWrapper from '@plone/volto/components/manage/Widgets/FormFieldWrapper';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport imageBlockSVG from '@plone/volto/components/manage/Blocks/Image/block-image.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\nimport linkSVG from '@plone/volto/icons/link.svg';\nimport uploadSVG from '@plone/volto/icons/upload.svg';\nconst Dropzone = loadable({\n  resolved: {},\n  chunkName() {\n    return \"react-dropzone\";\n  },\n  isReady(props) {\n    const key = this.resolve(props);\n    if (this.resolved[key] !== true) {\n      return false;\n    }\n    if (typeof __webpack_modules__ !== 'undefined') {\n      return !!__webpack_modules__[key];\n    }\n    return false;\n  },\n  importAsync: () => import(/* webpackChunkName: \"react-dropzone\" */'react-dropzone'),\n  requireAsync(props) {\n    const key = this.resolve(props);\n    this.resolved[key] = false;\n    return this.importAsync(props).then(resolved => {\n      this.resolved[key] = true;\n      return resolved;\n    });\n  },\n  requireSync(props) {\n    const id = this.resolve(props);\n    if (typeof __webpack_require__ !== 'undefined') {\n      return __webpack_require__(id);\n    }\n    return eval('module.require')(id);\n  },\n  resolve() {\n    if (require.resolveWeak) {\n      return require.resolveWeak(\"react-dropzone\");\n    }\n    return eval('require.resolve')(\"react-dropzone\");\n  }\n});\n_c = Dropzone;\nexport const ImageToolbar = ({\n  className,\n  data,\n  id,\n  onChange,\n  selected\n}) => __jsx(\"div\", {\n  className: \"image-upload-widget-toolbar\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }\n}, __jsx(Button.Group, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }\n}, __jsx(Button, {\n  icon: true,\n  basic: true,\n  onClick: () => onChange(id, null),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }\n}, __jsx(Icon, {\n  className: \"circled\",\n  name: clearSVG,\n  size: \"24px\",\n  color: \"#e40166\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }\n}))));\n_c2 = ImageToolbar;\nconst messages = defineMessages({\n  addImage: {\n    \"id\": \"Browse the site, drop an image, or type a URL\",\n    \"defaultMessage\": \"Browse the site, drop an image, or use a URL\"\n  },\n  pickAnImage: {\n    \"id\": \"pickAnImage\",\n    \"defaultMessage\": \"Pick an existing image\"\n  },\n  uploadAnImage: {\n    \"id\": \"uploadAnImage\",\n    \"defaultMessage\": \"Upload an image from your computer\"\n  },\n  linkAnImage: {\n    \"id\": \"linkAnImage\",\n    \"defaultMessage\": \"Enter a URL to an image\"\n  },\n  uploadingImage: {\n    \"id\": \"Uploading image\",\n    \"defaultMessage\": \"Uploading image\"\n  }\n});\nconst UnconnectedImageInput = props => {\n  _s();\n  var _value$, _props$request;\n  const {\n    id,\n    onChange,\n    onFocus,\n    openObjectBrowser,\n    value,\n    imageSize = 'teaser',\n    selected = true,\n    hideLinkPicker = false,\n    hideObjectBrowserPicker = false,\n    restrictFileUpload = false,\n    objectBrowserPickerType = 'image',\n    description,\n    placeholderLinkInput = '',\n    onSelectItem\n  } = props;\n  const imageValue = (value === null || value === void 0 ? void 0 : (_value$ = value[0]) === null || _value$ === void 0 ? void 0 : _value$['@id']) || value;\n  const intl = useIntl();\n  const linkEditor = useLinkEditor();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const contextUrl = location.pathname;\n  const [uploading, setUploading] = React.useState(false);\n  const [dragging, setDragging] = React.useState(false);\n  const imageUploadInputRef = useRef(null);\n  const requestId = `image-upload-${id}`;\n  const loaded = props.request.loaded;\n  const {\n    content\n  } = props;\n  const imageId = content === null || content === void 0 ? void 0 : content['@id'];\n  const image = content === null || content === void 0 ? void 0 : content.image;\n  let loading = false;\n  useEffect(() => {\n    if (uploading && loading && loaded) {\n      setUploading(false);\n      onChange(id, imageId, {\n        image_field: 'image',\n        image_scales: {\n          image: [image]\n        }\n      });\n    }\n  }, [loading, loaded, uploading, imageId, image, id, onChange]); // Explicitly list all dependencies\n\n  loading = usePrevious((_props$request = props.request) === null || _props$request === void 0 ? void 0 : _props$request.loading);\n  const handleUpload = React.useCallback(eventOrFile => {\n    if (restrictFileUpload === true) return;\n    eventOrFile.target && eventOrFile.stopPropagation();\n    setUploading(true);\n    const file = eventOrFile.target ? eventOrFile.target.files[0] : eventOrFile[0];\n    if (!validateFileUploadSize(file, intl.formatMessage)) return;\n    readAsDataURL(file).then(fileData => {\n      const fields = fileData.match(/^data:(.*);(.*),(.*)$/);\n      dispatch(createContent(getBaseUrl(contextUrl), {\n        '@type': 'Image',\n        title: file.name,\n        image: {\n          data: fields[3],\n          encoding: fields[2],\n          'content-type': fields[1],\n          filename: file.name\n        }\n      }, props.block || requestId));\n    });\n  }, [restrictFileUpload, intl.formatMessage, dispatch, props, contextUrl, requestId]);\n  const onDragEnter = React.useCallback(() => {\n    if (restrictFileUpload === false) setDragging(true);\n  }, [restrictFileUpload]);\n  const onDragLeave = React.useCallback(() => setDragging(false), []);\n  return imageValue ? __jsx(\"div\", {\n    className: \"image-upload-widget-image\",\n    onClick: onFocus,\n    onKeyDown: onFocus,\n    role: \"toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, selected && __jsx(ImageToolbar, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 20\n    }\n  })), __jsx(\"img\", {\n    className: props.className,\n    src: isInternalURL(imageValue) ? `${flattenToAppURL(imageValue)}/@@images/image/${imageSize}` : imageValue,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  })) : __jsx(\"div\", {\n    className: \"image-upload-widget\",\n    onClick: onFocus,\n    onKeyDown: onFocus,\n    role: \"toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }\n  }, __jsx(Dropzone, {\n    noClick: true,\n    onDrop: handleUpload,\n    onDragEnter: onDragEnter,\n    onDragLeave: onDragLeave,\n    className: \"dropzone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, ({\n    getRootProps,\n    getInputProps\n  }) => __jsx(\"div\", _extends({}, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }), __jsx(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, dragging && __jsx(Dimmer, {\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 28\n    }\n  }), uploading && __jsx(Dimmer, {\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, __jsx(Loader, {\n    indeterminate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }\n  }, intl.formatMessage(messages.uploadingImage))), __jsx(\"img\", {\n    src: imageBlockSVG,\n    alt: \"\",\n    className: \"placeholder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, description || intl.formatMessage(messages.addImage)), __jsx(\"div\", {\n    className: \"toolbar-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"toolbar-inner\",\n    ref: linkEditor.anchorNode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, hideObjectBrowserPicker === false && __jsx(Button.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    \"aria-label\": intl.formatMessage(messages.pickAnImage),\n    icon: true,\n    basic: true,\n    onClick: e => {\n      onFocus && onFocus();\n      e.preventDefault();\n      openObjectBrowser({\n        mode: objectBrowserPickerType,\n        onSelectItem: onSelectItem ? onSelectItem : (url, {\n          title,\n          image_field,\n          image_scales\n        }) => {\n          onChange(props.id, flattenToAppURL(url), {\n            title,\n            image_field,\n            image_scales\n          });\n        },\n        currentPath: contextUrl\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 23\n    }\n  }, __jsx(Icon, {\n    name: navTreeSVG,\n    size: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 25\n    }\n  }))), restrictFileUpload === false && __jsx(Button.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    \"aria-label\": intl.formatMessage(messages.uploadAnImage),\n    icon: true,\n    basic: true,\n    compact: true,\n    onClick: () => {\n      imageUploadInputRef.current.click();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 23\n    }\n  }, __jsx(Icon, {\n    name: uploadSVG,\n    size: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  })), __jsx(\"input\", _extends({}, getInputProps({\n    type: 'file',\n    ref: imageUploadInputRef,\n    onChange: handleUpload,\n    style: {\n      display: 'none'\n    }\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 23\n    }\n  }))), hideLinkPicker === false && __jsx(Button.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    icon: true,\n    basic: true,\n    \"aria-label\": intl.formatMessage(messages.linkAnImage),\n    onClick: e => {\n      !props.selected && onFocus && onFocus();\n      linkEditor.show();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 23\n    }\n  }, __jsx(Icon, {\n    name: linkSVG,\n    circled: true,\n    size: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 25\n    }\n  })))), linkEditor.anchorNode && __jsx(linkEditor.LinkEditor, {\n    value: imageValue,\n    placeholder: placeholderLinkInput || intl.formatMessage(messages.linkAnImage),\n    objectBrowserPickerType: objectBrowserPickerType,\n    onChange: (_, e) => onChange(props.id, isInternalURL(e) ? flattenToAppURL(e) : e, {}),\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 19\n    }\n  }))))));\n};\n_s(UnconnectedImageInput, \"M7/8NqSCbkHSOMATOSPPRe0RB/s=\", false, function () {\n  return [useIntl, useLinkEditor, useLocation, useDispatch, usePrevious];\n});\n_c3 = UnconnectedImageInput;\nexport const ImageInput = compose(connect((state, ownProps) => {\n  var _state$content$subreq;\n  const requestId = `image-upload-${ownProps.id}`;\n  return {\n    request: state.content.subrequests[ownProps.block || requestId] || {},\n    content: (_state$content$subreq = state.content.subrequests[ownProps.block || requestId]) === null || _state$content$subreq === void 0 ? void 0 : _state$content$subreq.data\n  };\n}, {\n  createContent\n}))(withObjectBrowser(UnconnectedImageInput));\n_c4 = ImageInput;\nconst ImageUploadWidget = props => {\n  const {\n    fieldSet,\n    id,\n    title\n  } = props;\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    columns: 1,\n    className: \"block image-upload-widget\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    id: `fieldset-${fieldSet}-field-label-${id}`,\n    htmlFor: `field-${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }\n  }, title)), __jsx(ImageInput, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }\n  })));\n};\n_c5 = ImageUploadWidget;\nexport default ImageUploadWidget;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Dropzone\");\n$RefreshReg$(_c2, \"ImageToolbar\");\n$RefreshReg$(_c3, \"UnconnectedImageInput\");\n$RefreshReg$(_c4, \"ImageInput\");\n$RefreshReg$(_c5, \"ImageUploadWidget\");","map":{"version":3,"names":["React","useEffect","useRef","Button","Dimmer","Loader","Message","useIntl","defineMessages","useDispatch","useLocation","loadable","connect","compose","useLinkEditor","withObjectBrowser","flattenToAppURL","getBaseUrl","isInternalURL","validateFileUploadSize","usePrevious","createContent","readAsDataURL","FormFieldWrapper","Icon","imageBlockSVG","clearSVG","navTreeSVG","linkSVG","uploadSVG","Dropzone","resolved","chunkName","isReady","props","key","resolve","__webpack_modules__","importAsync","requireAsync","then","requireSync","id","__webpack_require__","eval","require","resolveWeak","_c","ImageToolbar","className","data","onChange","selected","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Group","icon","basic","onClick","name","size","color","_c2","messages","addImage","pickAnImage","uploadAnImage","linkAnImage","uploadingImage","UnconnectedImageInput","_s","_value$","_props$request","onFocus","openObjectBrowser","value","imageSize","hideLinkPicker","hideObjectBrowserPicker","restrictFileUpload","objectBrowserPickerType","description","placeholderLinkInput","onSelectItem","imageValue","intl","linkEditor","location","dispatch","contextUrl","pathname","uploading","setUploading","useState","dragging","setDragging","imageUploadInputRef","requestId","loaded","request","content","imageId","image","loading","image_field","image_scales","handleUpload","useCallback","eventOrFile","target","stopPropagation","file","files","formatMessage","fileData","fields","match","title","encoding","filename","block","onDragEnter","onDragLeave","onKeyDown","role","_extends","src","alt","noClick","onDrop","getRootProps","getInputProps","active","indeterminate","ref","anchorNode","e","preventDefault","mode","url","currentPath","compact","current","click","type","style","display","show","circled","LinkEditor","placeholder","_","_c3","ImageInput","state","ownProps","_state$content$subreq","subrequests","_c4","ImageUploadWidget","fieldSet","columns","htmlFor","_c5","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Widgets/ImageWidget.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Button, Dimmer, Loader, Message } from 'semantic-ui-react';\nimport { useIntl, defineMessages } from 'react-intl';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport loadable from '@loadable/component';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport useLinkEditor from '@plone/volto/components/manage/AnchorPlugin/useLinkEditor';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\n\nimport {\n  flattenToAppURL,\n  getBaseUrl,\n  isInternalURL,\n} from '@plone/volto/helpers/Url/Url';\nimport { validateFileUploadSize } from '@plone/volto/helpers/FormValidation/FormValidation';\nimport { usePrevious } from '@plone/volto/helpers/Utils/usePrevious';\nimport { createContent } from '@plone/volto/actions/content/content';\nimport { readAsDataURL } from 'promise-file-reader';\nimport FormFieldWrapper from '@plone/volto/components/manage/Widgets/FormFieldWrapper';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\n\nimport imageBlockSVG from '@plone/volto/components/manage/Blocks/Image/block-image.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\nimport linkSVG from '@plone/volto/icons/link.svg';\nimport uploadSVG from '@plone/volto/icons/upload.svg';\n\nconst Dropzone = loadable(() => import('react-dropzone'));\n\nexport const ImageToolbar = ({ className, data, id, onChange, selected }) => (\n  <div className=\"image-upload-widget-toolbar\">\n    <Button.Group>\n      <Button icon basic onClick={() => onChange(id, null)}>\n        <Icon className=\"circled\" name={clearSVG} size=\"24px\" color=\"#e40166\" />\n      </Button>\n    </Button.Group>\n  </div>\n);\n\nconst messages = defineMessages({\n  addImage: {\n    id: 'Browse the site, drop an image, or type a URL',\n    defaultMessage: 'Browse the site, drop an image, or use a URL',\n  },\n  pickAnImage: {\n    id: 'pickAnImage',\n    defaultMessage: 'Pick an existing image',\n  },\n  uploadAnImage: {\n    id: 'uploadAnImage',\n    defaultMessage: 'Upload an image from your computer',\n  },\n  linkAnImage: {\n    id: 'linkAnImage',\n    defaultMessage: 'Enter a URL to an image',\n  },\n  uploadingImage: {\n    id: 'Uploading image',\n    defaultMessage: 'Uploading image',\n  },\n});\n\nconst UnconnectedImageInput = (props) => {\n  const {\n    id,\n    onChange,\n    onFocus,\n    openObjectBrowser,\n    value,\n    imageSize = 'teaser',\n    selected = true,\n    hideLinkPicker = false,\n    hideObjectBrowserPicker = false,\n    restrictFileUpload = false,\n    objectBrowserPickerType = 'image',\n    description,\n    placeholderLinkInput = '',\n    onSelectItem,\n  } = props;\n  const imageValue = value?.[0]?.['@id'] || value;\n\n  const intl = useIntl();\n  const linkEditor = useLinkEditor();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const contextUrl = location.pathname;\n\n  const [uploading, setUploading] = React.useState(false);\n  const [dragging, setDragging] = React.useState(false);\n\n  const imageUploadInputRef = useRef(null);\n\n  const requestId = `image-upload-${id}`;\n\n  const loaded = props.request.loaded;\n  const { content } = props;\n  const imageId = content?.['@id'];\n  const image = content?.image;\n  let loading = false;\n\n  useEffect(() => {\n    if (uploading && loading && loaded) {\n      setUploading(false);\n      onChange(id, imageId, {\n        image_field: 'image',\n        image_scales: { image: [image] },\n      });\n    }\n  }, [loading, loaded, uploading, imageId, image, id, onChange]); // Explicitly list all dependencies\n\n  loading = usePrevious(props.request?.loading);\n\n  const handleUpload = React.useCallback(\n    (eventOrFile) => {\n      if (restrictFileUpload === true) return;\n      eventOrFile.target && eventOrFile.stopPropagation();\n\n      setUploading(true);\n      const file = eventOrFile.target\n        ? eventOrFile.target.files[0]\n        : eventOrFile[0];\n      if (!validateFileUploadSize(file, intl.formatMessage)) return;\n      readAsDataURL(file).then((fileData) => {\n        const fields = fileData.match(/^data:(.*);(.*),(.*)$/);\n        dispatch(\n          createContent(\n            getBaseUrl(contextUrl),\n            {\n              '@type': 'Image',\n              title: file.name,\n              image: {\n                data: fields[3],\n                encoding: fields[2],\n                'content-type': fields[1],\n                filename: file.name,\n              },\n            },\n            props.block || requestId,\n          ),\n        );\n      });\n    },\n    [\n      restrictFileUpload,\n      intl.formatMessage,\n      dispatch,\n      props,\n      contextUrl,\n      requestId,\n    ],\n  );\n\n  const onDragEnter = React.useCallback(() => {\n    if (restrictFileUpload === false) setDragging(true);\n  }, [restrictFileUpload]);\n  const onDragLeave = React.useCallback(() => setDragging(false), []);\n\n  return imageValue ? (\n    <div\n      className=\"image-upload-widget-image\"\n      onClick={onFocus}\n      onKeyDown={onFocus}\n      role=\"toolbar\"\n    >\n      {selected && <ImageToolbar {...props} />}\n      <img\n        className={props.className}\n        src={\n          isInternalURL(imageValue)\n            ? `${flattenToAppURL(imageValue)}/@@images/image/${imageSize}`\n            : imageValue\n        }\n        alt=\"\"\n      />\n    </div>\n  ) : (\n    <div\n      className=\"image-upload-widget\"\n      onClick={onFocus}\n      onKeyDown={onFocus}\n      role=\"toolbar\"\n    >\n      <Dropzone\n        noClick\n        onDrop={handleUpload}\n        onDragEnter={onDragEnter}\n        onDragLeave={onDragLeave}\n        className=\"dropzone\"\n      >\n        {({ getRootProps, getInputProps }) => (\n          <div {...getRootProps()}>\n            <Message>\n              {dragging && <Dimmer active></Dimmer>}\n              {uploading && (\n                <Dimmer active>\n                  <Loader indeterminate>\n                    {intl.formatMessage(messages.uploadingImage)}\n                  </Loader>\n                </Dimmer>\n              )}\n              <img src={imageBlockSVG} alt=\"\" className=\"placeholder\" />\n              <p>{description || intl.formatMessage(messages.addImage)}</p>\n              <div className=\"toolbar-wrapper\">\n                <div className=\"toolbar-inner\" ref={linkEditor.anchorNode}>\n                  {hideObjectBrowserPicker === false && (\n                    <Button.Group>\n                      <Button\n                        aria-label={intl.formatMessage(messages.pickAnImage)}\n                        icon\n                        basic\n                        onClick={(e) => {\n                          onFocus && onFocus();\n                          e.preventDefault();\n                          openObjectBrowser({\n                            mode: objectBrowserPickerType,\n                            onSelectItem: onSelectItem\n                              ? onSelectItem\n                              : (url, { title, image_field, image_scales }) => {\n                                  onChange(props.id, flattenToAppURL(url), {\n                                    title,\n                                    image_field,\n                                    image_scales,\n                                  });\n                                },\n                            currentPath: contextUrl,\n                          });\n                        }}\n                      >\n                        <Icon name={navTreeSVG} size=\"24px\" />\n                      </Button>\n                    </Button.Group>\n                  )}\n                  {restrictFileUpload === false && (\n                    <Button.Group>\n                      <Button\n                        aria-label={intl.formatMessage(messages.uploadAnImage)}\n                        icon\n                        basic\n                        compact\n                        onClick={() => {\n                          imageUploadInputRef.current.click();\n                        }}\n                      >\n                        <Icon name={uploadSVG} size=\"24px\" />\n                      </Button>\n                      <input\n                        {...getInputProps({\n                          type: 'file',\n                          ref: imageUploadInputRef,\n                          onChange: handleUpload,\n                          style: { display: 'none' },\n                        })}\n                      />\n                    </Button.Group>\n                  )}\n\n                  {hideLinkPicker === false && (\n                    <Button.Group>\n                      <Button\n                        icon\n                        basic\n                        aria-label={intl.formatMessage(messages.linkAnImage)}\n                        onClick={(e) => {\n                          !props.selected && onFocus && onFocus();\n                          linkEditor.show();\n                        }}\n                      >\n                        <Icon name={linkSVG} circled size=\"24px\" />\n                      </Button>\n                    </Button.Group>\n                  )}\n                </div>\n                {linkEditor.anchorNode && (\n                  <linkEditor.LinkEditor\n                    value={imageValue}\n                    placeholder={\n                      placeholderLinkInput ||\n                      intl.formatMessage(messages.linkAnImage)\n                    }\n                    objectBrowserPickerType={objectBrowserPickerType}\n                    onChange={(_, e) =>\n                      onChange(\n                        props.id,\n                        isInternalURL(e) ? flattenToAppURL(e) : e,\n                        {},\n                      )\n                    }\n                    id={id}\n                  />\n                )}\n              </div>\n            </Message>\n          </div>\n        )}\n      </Dropzone>\n    </div>\n  );\n};\n\nexport const ImageInput = compose(\n  connect(\n    (state, ownProps) => {\n      const requestId = `image-upload-${ownProps.id}`;\n      return {\n        request: state.content.subrequests[ownProps.block || requestId] || {},\n        content: state.content.subrequests[ownProps.block || requestId]?.data,\n      };\n    },\n    { createContent },\n  ),\n)(withObjectBrowser(UnconnectedImageInput));\n\nconst ImageUploadWidget = (props) => {\n  const { fieldSet, id, title } = props;\n  return (\n    <FormFieldWrapper\n      {...props}\n      columns={1}\n      className=\"block image-upload-widget\"\n    >\n      <div className=\"wrapper\">\n        <label\n          id={`fieldset-${fieldSet}-field-label-${id}`}\n          htmlFor={`field-${id}`}\n        >\n          {title}\n        </label>\n      </div>\n      <ImageInput {...props} />\n    </FormFieldWrapper>\n  );\n};\n\nexport default ImageUploadWidget;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Browse the site, drop an image, or type a URL","defaultMessage":"Browse the site, drop an image, or use a URL"},{"id":"pickAnImage","defaultMessage":"Pick an existing image"},{"id":"uploadAnImage","defaultMessage":"Upload an image from your computer"},{"id":"linkAnImage","defaultMessage":"Enter a URL to an image"},{"id":"Uploading image","defaultMessage":"Uploading image"}]}},"sourceType":"module","externalDependencies":[]}