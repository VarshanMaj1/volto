{"ast":null,"code":"import _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/**\n * Upgrade reducer.\n * @module reducers/upgrade/upgrade\n */\nimport { GET_UPGRADE, POST_UPGRADE } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  get: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  post: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  upgradeinformation: null,\n  upgradereport: null\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Controlpanels reducer.\n * @function controlpanels\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function controlpanels(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_UPGRADE}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        controlpanel: null,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null\n        }\n      });\n    case `${POST_UPGRADE}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null\n        }\n      });\n    case `${GET_UPGRADE}_SUCCESS`:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          [getRequestKey(action.type)]: {\n            loading: false,\n            loaded: true,\n            error: null\n          },\n          upgradeinformation: action.result\n        });\n      }\n    case `${GET_UPGRADE}_FAIL`:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          [getRequestKey(action.type)]: {\n            loading: false,\n            loaded: true,\n            error: action.error\n          }\n        });\n      }\n    case `${POST_UPGRADE}_SUCCESS`:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          [getRequestKey(action.type)]: {\n            loading: false,\n            loaded: true,\n            error: null\n          },\n          upgradereport: action.result\n        });\n      }\n    case `${POST_UPGRADE}_FAIL`:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          [getRequestKey(action.type)]: {\n            loading: false,\n            loaded: true,\n            error: action.error\n          }\n        });\n      }\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_UPGRADE","POST_UPGRADE","initialState","get","loaded","loading","error","post","upgradeinformation","upgradereport","getRequestKey","actionType","split","toLowerCase","controlpanels","state","action","type","_objectSpread","controlpanel","result"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/reducers/upgrade/upgrade.js"],"sourcesContent":["/**\n * Upgrade reducer.\n * @module reducers/upgrade/upgrade\n */\nimport { GET_UPGRADE, POST_UPGRADE } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  get: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  post: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  upgradeinformation: null,\n  upgradereport: null,\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Controlpanels reducer.\n * @function controlpanels\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function controlpanels(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_UPGRADE}_PENDING`:\n      return {\n        ...state,\n        controlpanel: null,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${POST_UPGRADE}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${GET_UPGRADE}_SUCCESS`: {\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n        upgradeinformation: action.result,\n      };\n    }\n    case `${GET_UPGRADE}_FAIL`: {\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: action.error,\n        },\n      };\n    }\n    case `${POST_UPGRADE}_SUCCESS`: {\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n        upgradereport: action.result,\n      };\n    }\n    case `${POST_UPGRADE}_FAIL`: {\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: action.error,\n        },\n      };\n    }\n    default:\n      return state;\n  }\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA,SAASA,WAAW,EAAEC,YAAY,QAAQ,oCAAoC;AAE9E,MAAMC,YAAY,GAAG;EACnBC,GAAG,EAAE;IACHC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,IAAI,EAAE;IACJH,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDE,kBAAkB,EAAE,IAAI;EACxBC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CAACC,UAAU,EAAE;EACjC,OAAOA,UAAU,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,aAAaA,CAACC,KAAK,GAAGb,YAAY,EAAEc,MAAM,GAAG,CAAC,CAAC,EAAE;EACvE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,GAAGjB,WAAW,UAAU;MAC3B,OAAAkB,aAAA,CAAAA,aAAA,KACKH,KAAK;QACRI,YAAY,EAAE,IAAI;QAClB,CAACT,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,GAAG;UAC5BZ,OAAO,EAAE,IAAI;UACbD,MAAM,EAAE,KAAK;UACbE,KAAK,EAAE;QACT;MAAC;IAEL,KAAK,GAAGL,YAAY,UAAU;MAC5B,OAAAiB,aAAA,CAAAA,aAAA,KACKH,KAAK;QACR,CAACL,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,GAAG;UAC5BZ,OAAO,EAAE,IAAI;UACbD,MAAM,EAAE,KAAK;UACbE,KAAK,EAAE;QACT;MAAC;IAEL,KAAK,GAAGN,WAAW,UAAU;MAAE;QAC7B,OAAAkB,aAAA,CAAAA,aAAA,KACKH,KAAK;UACR,CAACL,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,GAAG;YAC5BZ,OAAO,EAAE,KAAK;YACdD,MAAM,EAAE,IAAI;YACZE,KAAK,EAAE;UACT,CAAC;UACDE,kBAAkB,EAAEQ,MAAM,CAACI;QAAM;MAErC;IACA,KAAK,GAAGpB,WAAW,OAAO;MAAE;QAC1B,OAAAkB,aAAA,CAAAA,aAAA,KACKH,KAAK;UACR,CAACL,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,GAAG;YAC5BZ,OAAO,EAAE,KAAK;YACdD,MAAM,EAAE,IAAI;YACZE,KAAK,EAAEU,MAAM,CAACV;UAChB;QAAC;MAEL;IACA,KAAK,GAAGL,YAAY,UAAU;MAAE;QAC9B,OAAAiB,aAAA,CAAAA,aAAA,KACKH,KAAK;UACR,CAACL,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,GAAG;YAC5BZ,OAAO,EAAE,KAAK;YACdD,MAAM,EAAE,IAAI;YACZE,KAAK,EAAE;UACT,CAAC;UACDG,aAAa,EAAEO,MAAM,CAACI;QAAM;MAEhC;IACA,KAAK,GAAGnB,YAAY,OAAO;MAAE;QAC3B,OAAAiB,aAAA,CAAAA,aAAA,KACKH,KAAK;UACR,CAACL,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,GAAG;YAC5BZ,OAAO,EAAE,KAAK;YACdD,MAAM,EAAE,IAAI;YACZE,KAAK,EAAEU,MAAM,CAACV;UAChB;QAAC;MAEL;IACA;MACE,OAAOS,KAAK;EAChB;AACF","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}