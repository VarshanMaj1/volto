{"ast":null,"code":"import _extends from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto-slate/src/widgets/HtmlSlateWidget.jsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\n/**\n * HtmlSlateWidget, a slate widget variant that saves its data as HTML\n */\n\nimport React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport configureStore from 'redux-mock-store';\nimport { MemoryRouter } from 'react-router-dom';\nimport { Provider, useSelector } from 'react-redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { FormFieldWrapper } from '@plone/volto/components/manage/Widgets';\nimport SlateEditor from '@plone/volto-slate/editor/SlateEditor';\nimport { serializeNodes } from '@plone/volto-slate/editor/render';\nimport { handleKeyDetached } from '@plone/volto-slate/blocks/Text/keyboard';\nimport { makeEditor } from '@plone/volto-slate/utils/editor';\nimport deserialize from '@plone/volto-slate/editor/deserialize';\nimport { createEmptyParagraph, normalizeExternalData } from '@plone/volto-slate/utils';\nimport config from '@plone/volto/registry';\nimport { ErrorBoundary } from './ErrorBoundary';\nimport './style.css';\nconst messages = defineMessages({\n  error: {\n    \"id\": \"An error has occurred while editing \\\"{name}\\\" field. We have been notified and we are looking into it. Please save your work and retry. If the issue persists please contact the site administrator.\",\n    \"defaultMessage\": \"An error has occurred while editing \\\"{name}\\\" field. We have been notified and we are looking into it. Please save your work and retry. If the issue persists please contact the site administrator.\"\n  }\n});\nconst HtmlSlateWidget = props => {\n  _s();\n  const {\n    id,\n    onChange,\n    value,\n    focus,\n    className,\n    block,\n    placeholder,\n    properties,\n    intl\n  } = props;\n  const {\n    slateWidgetExtensions\n  } = config.settings.slate;\n  const [selected, setSelected] = React.useState(focus);\n  const editor = React.useMemo(() => makeEditor(), []);\n  const token = useSelector(state => state.userSession.token);\n  const toHtml = React.useCallback(value => {\n    const mockStore = configureStore();\n    const html = ReactDOMServer.renderToStaticMarkup(__jsx(Provider, {\n      store: mockStore({\n        userSession: {\n          token\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, __jsx(MemoryRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, serializeNodes(value || []))));\n    // console.log('toHtml value', JSON.stringify(value));\n    // console.log('toHtml html', html);\n\n    return {\n      'content-type': value ? value['content-type'] : 'text/html',\n      encoding: value ? value.encoding : 'utf8',\n      data: html\n    };\n  }, [token]);\n  const fromHtml = React.useCallback(value => {\n    const html = (value === null || value === void 0 ? void 0 : value.data) || '';\n    const parsed = new DOMParser().parseFromString(html, 'text/html');\n    const body = parsed.getElementsByTagName('google-sheets-html-origin').length > 0 ? parsed.querySelector('google-sheets-html-origin > table') : parsed.body;\n    let data = deserialize(editor, body, {\n      collapseWhitespace: false\n    });\n    data = normalizeExternalData(editor, data);\n\n    // editor.children = data;\n    // Editor.normalize(editor);\n    // TODO: need to add {text: \"\"} placeholders between elements\n    const res = data.length ? data : [createEmptyParagraph()];\n    // console.log('from html', { html: value?.data, res });\n    return res;\n  }, [editor]);\n  const valueFromHtml = React.useMemo(() => {\n    return fromHtml(value);\n  }, [value, fromHtml]);\n  const handleChange = React.useCallback(newValue => {\n    onChange(id, toHtml(newValue));\n  }, [onChange, toHtml, id]);\n  const handleClick = React.useCallback(() => {\n    setSelected(true);\n  }, []);\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    draggable: false,\n    className: \"slate_wysiwyg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: \"slate_wysiwyg_box\",\n    role: \"textbox\",\n    tabIndex: \"-1\",\n    style: {\n      boxSizing: 'initial'\n    },\n    onClick: handleClick,\n    onKeyDown: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, __jsx(ErrorBoundary, {\n    name: intl.formatMessage(messages.error, {\n      name: id\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, __jsx(SlateEditor, {\n    className: className,\n    id: id,\n    name: id,\n    value: valueFromHtml,\n    onChange: handleChange,\n    block: block,\n    selected: selected,\n    properties: properties,\n    extensions: slateWidgetExtensions,\n    onKeyDown: handleKeyDetached,\n    placeholder: placeholder,\n    editableProps: {\n      'aria-multiline': 'true'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }))));\n};\n_s(HtmlSlateWidget, \"5QVgoyGmX8qPxdfyLQhITSgJC04=\", false, function () {\n  return [useSelector];\n});\n_c = HtmlSlateWidget;\nexport default _c2 = injectIntl(HtmlSlateWidget);\nvar _c, _c2;\n$RefreshReg$(_c, \"HtmlSlateWidget\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","ReactDOMServer","configureStore","MemoryRouter","Provider","useSelector","defineMessages","injectIntl","FormFieldWrapper","SlateEditor","serializeNodes","handleKeyDetached","makeEditor","deserialize","createEmptyParagraph","normalizeExternalData","config","ErrorBoundary","messages","error","HtmlSlateWidget","props","_s","id","onChange","value","focus","className","block","placeholder","properties","intl","slateWidgetExtensions","settings","slate","selected","setSelected","useState","editor","useMemo","token","state","userSession","toHtml","useCallback","mockStore","html","renderToStaticMarkup","__jsx","store","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","encoding","data","fromHtml","parsed","DOMParser","parseFromString","body","getElementsByTagName","length","querySelector","collapseWhitespace","res","valueFromHtml","handleChange","newValue","handleClick","_extends","draggable","role","tabIndex","style","boxSizing","onClick","onKeyDown","name","formatMessage","extensions","editableProps","_c","_c2","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto-slate/src/widgets/HtmlSlateWidget.jsx"],"sourcesContent":["/**\n * HtmlSlateWidget, a slate widget variant that saves its data as HTML\n */\n\nimport React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport configureStore from 'redux-mock-store';\nimport { MemoryRouter } from 'react-router-dom';\nimport { Provider, useSelector } from 'react-redux';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { FormFieldWrapper } from '@plone/volto/components/manage/Widgets';\nimport SlateEditor from '@plone/volto-slate/editor/SlateEditor';\nimport { serializeNodes } from '@plone/volto-slate/editor/render';\nimport { handleKeyDetached } from '@plone/volto-slate/blocks/Text/keyboard';\nimport { makeEditor } from '@plone/volto-slate/utils/editor';\nimport deserialize from '@plone/volto-slate/editor/deserialize';\n\nimport {\n  createEmptyParagraph,\n  normalizeExternalData,\n} from '@plone/volto-slate/utils';\nimport config from '@plone/volto/registry';\n\nimport { ErrorBoundary } from './ErrorBoundary';\n\nimport './style.css';\n\nconst messages = defineMessages({\n  error: {\n    id: 'An error has occurred while editing \"{name}\" field. We have been notified and we are looking into it. Please save your work and retry. If the issue persists please contact the site administrator.',\n    defaultMessage:\n      'An error has occurred while editing \"{name}\" field. We have been notified and we are looking into it. Please save your work and retry. If the issue persists please contact the site administrator.',\n  },\n});\n\nconst HtmlSlateWidget = (props) => {\n  const {\n    id,\n    onChange,\n    value,\n    focus,\n    className,\n    block,\n    placeholder,\n    properties,\n    intl,\n  } = props;\n\n  const { slateWidgetExtensions } = config.settings.slate;\n\n  const [selected, setSelected] = React.useState(focus);\n\n  const editor = React.useMemo(() => makeEditor(), []);\n\n  const token = useSelector((state) => state.userSession.token);\n\n  const toHtml = React.useCallback(\n    (value) => {\n      const mockStore = configureStore();\n      const html = ReactDOMServer.renderToStaticMarkup(\n        <Provider store={mockStore({ userSession: { token } })}>\n          <MemoryRouter>{serializeNodes(value || [])}</MemoryRouter>\n        </Provider>,\n      );\n      // console.log('toHtml value', JSON.stringify(value));\n      // console.log('toHtml html', html);\n\n      return {\n        'content-type': value ? value['content-type'] : 'text/html',\n        encoding: value ? value.encoding : 'utf8',\n        data: html,\n      };\n    },\n    [token],\n  );\n\n  const fromHtml = React.useCallback(\n    (value) => {\n      const html = value?.data || '';\n\n      const parsed = new DOMParser().parseFromString(html, 'text/html');\n      const body =\n        parsed.getElementsByTagName('google-sheets-html-origin').length > 0\n          ? parsed.querySelector('google-sheets-html-origin > table')\n          : parsed.body;\n      let data = deserialize(editor, body, { collapseWhitespace: false });\n      data = normalizeExternalData(editor, data);\n\n      // editor.children = data;\n      // Editor.normalize(editor);\n      // TODO: need to add {text: \"\"} placeholders between elements\n      const res = data.length ? data : [createEmptyParagraph()];\n      // console.log('from html', { html: value?.data, res });\n      return res;\n    },\n    [editor],\n  );\n\n  const valueFromHtml = React.useMemo(() => {\n    return fromHtml(value);\n  }, [value, fromHtml]);\n\n  const handleChange = React.useCallback(\n    (newValue) => {\n      onChange(id, toHtml(newValue));\n    },\n    [onChange, toHtml, id],\n  );\n\n  const handleClick = React.useCallback(() => {\n    setSelected(true);\n  }, []);\n\n  return (\n    <FormFieldWrapper {...props} draggable={false} className=\"slate_wysiwyg\">\n      <div\n        className=\"slate_wysiwyg_box\"\n        role=\"textbox\"\n        tabIndex=\"-1\"\n        style={{ boxSizing: 'initial' }}\n        onClick={handleClick}\n        onKeyDown={() => {}}\n      >\n        <ErrorBoundary name={intl.formatMessage(messages.error, { name: id })}>\n          <SlateEditor\n            className={className}\n            id={id}\n            name={id}\n            value={valueFromHtml}\n            onChange={handleChange}\n            block={block}\n            selected={selected}\n            properties={properties}\n            extensions={slateWidgetExtensions}\n            onKeyDown={handleKeyDetached}\n            placeholder={placeholder}\n            editableProps={{ 'aria-multiline': 'true' }}\n          />\n        </ErrorBoundary>\n      </div>\n    </FormFieldWrapper>\n  );\n};\n\nexport default injectIntl(HtmlSlateWidget);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"An error has occurred while editing \"{name}\" field. We have been notified and we are looking into it. Please save your work and retry. If the issue persists please contact the site administrator.","defaultMessage":"An error has occurred while editing \"{name}\" field. We have been notified and we are looking into it. Please save your work and retry. If the issue persists please contact the site administrator."}]}},"sourceType":"module","externalDependencies":[]}