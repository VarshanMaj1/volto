{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Contents/ContentsDeleteModal.jsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport map from 'lodash/map';\nimport find from 'lodash/find';\nimport { defineMessages, useIntl, FormattedMessage } from 'react-intl';\nimport { linkIntegrityCheck } from '@plone/volto/actions/content/content';\nimport { flattenToAppURL } from '@plone/volto/helpers/Url/Url';\nimport { Confirm, Dimmer, Loader, Table } from 'semantic-ui-react';\nconst messages = defineMessages({\n  deleteConfirmSingleItem: {\n    \"id\": \"Delete this item?\",\n    \"defaultMessage\": \"Delete this item?\"\n  },\n  deleteConfirmMultipleItems: {\n    \"id\": \"Delete selected items?\",\n    \"defaultMessage\": \"Delete selected items?\"\n  },\n  navigate_to_this_item: {\n    \"id\": \"Navigate to this item\",\n    \"defaultMessage\": \"Navigate to this item\"\n  },\n  loading: {\n    \"id\": \"link-integrity: loading references\",\n    \"defaultMessage\": \"Checking references...\"\n  },\n  delete: {\n    \"id\": \"link-integrity: Delete\",\n    \"defaultMessage\": \"Delete\"\n  },\n  delete_and_broken_links: {\n    \"id\": \"link-integrity: Delete item and break links\",\n    \"defaultMessage\": \"Delete item and break links\"\n  },\n  cancel: {\n    \"id\": \"Cancel\",\n    \"defaultMessage\": \"Cancel\"\n  }\n});\nconst ContentsDeleteModal = props => {\n  _s();\n  const {\n    itemsToDelete = [],\n    open,\n    onCancel,\n    onOk,\n    items\n  } = props;\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const linkintegrityInfo = useSelector(state => {\n    var _state$linkIntegrity;\n    return (_state$linkIntegrity = state.linkIntegrity) === null || _state$linkIntegrity === void 0 ? void 0 : _state$linkIntegrity.result;\n  });\n  const loading = useSelector(state => {\n    var _state$linkIntegrity2;\n    return (_state$linkIntegrity2 = state.linkIntegrity) === null || _state$linkIntegrity2 === void 0 ? void 0 : _state$linkIntegrity2.loading;\n  });\n  const {\n    0: brokenReferences,\n    1: setBrokenReferences\n  } = useState(0);\n  const {\n    0: containedItemsToDelete,\n    1: setContainedItemsToDelete\n  } = useState([]);\n  const {\n    0: breaches,\n    1: setBreaches\n  } = useState([]);\n  const {\n    0: linksAndReferencesViewLink,\n    1: setLinkAndReferencesViewLink\n  } = useState(null);\n  useEffect(() => {\n    const getFieldById = (id, field) => {\n      const item = find(items, {\n        '@id': id\n      });\n      return item ? item[field] : '';\n    };\n    if (itemsToDelete.length > 0 && open) {\n      dispatch(linkIntegrityCheck(map(itemsToDelete, item => getFieldById(item, 'UID'))));\n    }\n  }, [itemsToDelete, items, open, dispatch]);\n  useEffect(() => {\n    if (linkintegrityInfo) {\n      const containedItems = linkintegrityInfo.map(result => {\n        var _result$items_total;\n        return (_result$items_total = result.items_total) !== null && _result$items_total !== void 0 ? _result$items_total : 0;\n      }).reduce((acc, value) => acc + value, 0);\n      const breaches = linkintegrityInfo.flatMap(result => result.breaches.map(source => ({\n        source: source,\n        target: result\n      })));\n      const source_by_uid = breaches.reduce((acc, value) => acc.set(value.source.uid, value.source), new Map());\n      const by_source = breaches.reduce((acc, value) => {\n        if (acc.get(value.source.uid) === undefined) {\n          acc.set(value.source.uid, new Set());\n        }\n        acc.get(value.source.uid).add(value.target);\n        return acc;\n      }, new Map());\n      setContainedItemsToDelete(containedItems);\n      setBrokenReferences(by_source.size);\n      setLinkAndReferencesViewLink(linkintegrityInfo.length ? linkintegrityInfo[0]['@id'] + '/links-to-item' : null);\n      setBreaches(Array.from(by_source, entry => ({\n        source: source_by_uid.get(entry[0]),\n        targets: Array.from(entry[1])\n      })));\n    } else {\n      setContainedItemsToDelete([]);\n      setBrokenReferences(0);\n      setLinkAndReferencesViewLink(null);\n      setBreaches([]);\n    }\n  }, [linkintegrityInfo]);\n  return open && __jsx(Confirm, {\n    open: open,\n    confirmButton: brokenReferences === 0 ? intl.formatMessage(messages.delete) : intl.formatMessage(messages.delete_and_broken_links),\n    cancelButton: intl.formatMessage(messages.cancel),\n    header: itemsToDelete.length === 1 ? intl.formatMessage(messages.deleteConfirmSingleItem) : intl.formatMessage(messages.deleteConfirmMultipleItems),\n    content: __jsx(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, __jsx(Dimmer, {\n      active: loading,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, __jsx(Loader, {\n      indeterminate: true,\n      size: \"massive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, intl.formatMessage(messages.loading))), itemsToDelete.length > 1 ? containedItemsToDelete > 0 ? __jsx(React.Fragment, null, __jsx(FormattedMessage, {\n      id: \"Some items are also a folder. By deleting them you will delete {containedItemsToDelete} {variation} inside the folders.\",\n      defaultMessage: \"Some items are also a folder. By deleting them you will delete {containedItemsToDelete} {variation} inside the folders.\",\n      values: {\n        containedItemsToDelete: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }\n        }, containedItemsToDelete),\n        variation: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }\n        }, containedItemsToDelete === 1 ? __jsx(FormattedMessage, {\n          id: \"item\",\n          defaultMessage: \"item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }\n        }) : __jsx(FormattedMessage, {\n          id: \"items\",\n          defaultMessage: \"items\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }), brokenReferences > 0 && __jsx(React.Fragment, null, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 23\n      }\n    }), __jsx(FormattedMessage, {\n      id: \"Some items are referenced by other contents. By deleting them {brokenReferences} {variation} will be broken.\",\n      defaultMessage: \"Some items are referenced by other contents. By deleting them {brokenReferences} {variation} will be broken.\",\n      values: {\n        brokenReferences: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 45\n          }\n        }, brokenReferences),\n        variation: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }\n        }, brokenReferences === 1 ? __jsx(FormattedMessage, {\n          id: \"reference\",\n          defaultMessage: \"reference\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 33\n          }\n        }) : __jsx(FormattedMessage, {\n          id: \"references\",\n          defaultMessage: \"references\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 33\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 23\n      }\n    }))) : __jsx(React.Fragment, null, brokenReferences > 0 && __jsx(React.Fragment, null, __jsx(FormattedMessage, {\n      id: \"Some items are referenced by other contents. By deleting them {brokenReferences} {variation} will be broken.\",\n      defaultMessage: \"Some items are referenced by other contents. By deleting them {brokenReferences} {variation} will be broken.\",\n      values: {\n        brokenReferences: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 45\n          }\n        }, brokenReferences),\n        variation: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }\n        }, brokenReferences === 1 ? __jsx(FormattedMessage, {\n          id: \"reference\",\n          defaultMessage: \"reference\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 33\n          }\n        }) : __jsx(FormattedMessage, {\n          id: \"references\",\n          defaultMessage: \"references\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 33\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 23\n      }\n    }))) : containedItemsToDelete > 0 ? __jsx(React.Fragment, null, __jsx(FormattedMessage, {\n      id: \"This item is also a folder. By deleting it you will delete {containedItemsToDelete} {variation} inside the folder.\",\n      defaultMessage: \"This item is also a folder. By deleting it you will delete {containedItemsToDelete} {variation} inside the folder.\",\n      values: {\n        containedItemsToDelete: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 23\n          }\n        }, containedItemsToDelete),\n        variation: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 23\n          }\n        }, containedItemsToDelete === 1 ? __jsx(FormattedMessage, {\n          id: \"item\",\n          defaultMessage: \"item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 27\n          }\n        }) : __jsx(FormattedMessage, {\n          id: \"items\",\n          defaultMessage: \"items\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 27\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }), brokenReferences > 0 && __jsx(React.Fragment, null, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }\n    }), __jsx(FormattedMessage, {\n      id: \"Deleting this item breaks {brokenReferences} {variation}.\",\n      defaultMessage: \"Deleting this item breaks {brokenReferences} {variation}.\",\n      values: {\n        brokenReferences: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 43\n          }\n        }, brokenReferences),\n        variation: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 27\n          }\n        }, brokenReferences === 1 ? __jsx(FormattedMessage, {\n          id: \"reference\",\n          defaultMessage: \"reference\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 31\n          }\n        }) : __jsx(FormattedMessage, {\n          id: \"references\",\n          defaultMessage: \"references\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 31\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    }), __jsx(BrokenLinksList, {\n      intl: intl,\n      breaches: breaches,\n      linksAndReferencesViewLink: linksAndReferencesViewLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }\n    }))) : brokenReferences > 0 ? __jsx(React.Fragment, null, __jsx(FormattedMessage, {\n      id: \"Deleting this item breaks {brokenReferences} {variation}.\",\n      defaultMessage: \"Deleting this item breaks {brokenReferences} {variation}.\",\n      values: {\n        brokenReferences: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 39\n          }\n        }, brokenReferences),\n        variation: __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 23\n          }\n        }, brokenReferences === 1 ? __jsx(FormattedMessage, {\n          id: \"reference\",\n          defaultMessage: \"reference\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 27\n          }\n        }) : __jsx(FormattedMessage, {\n          id: \"references\",\n          defaultMessage: \"references\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 27\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }\n    }), __jsx(BrokenLinksList, {\n      intl: intl,\n      breaches: breaches,\n      linksAndReferencesViewLink: linksAndReferencesViewLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }\n    })) : null),\n    onCancel: onCancel,\n    onConfirm: onOk,\n    size: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  });\n};\n_s(ContentsDeleteModal, \"hT16N53zfshvyVVjQCCGomxYJks=\", false, function () {\n  return [useIntl, useDispatch, useSelector, useSelector];\n});\n_c = ContentsDeleteModal;\nconst BrokenLinksList = ({\n  intl,\n  breaches,\n  linksAndReferencesViewLink\n}) => {\n  return __jsx(\"div\", {\n    className: \"broken-links-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 5\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"These items will have broken links\",\n    defaultMessage: \"These items will have broken links\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }\n  }), \":\", __jsx(Table, {\n    compact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }\n  }, __jsx(Table.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }\n  }, breaches.map(breach => __jsx(Table.Row, {\n    key: breach.source['@id'],\n    verticalAlign: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  }, __jsx(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 15\n    }\n  }, __jsx(Link, {\n    to: flattenToAppURL(breach.source['@id']),\n    title: intl.formatMessage(messages.navigate_to_this_item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 17\n    }\n  }, breach.source.title)), __jsx(Table.Cell, {\n    style: {\n      minWidth: '140px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"refers to\",\n    defaultMessage: \"refers to\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 17\n    }\n  }), \":\"), __jsx(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 15\n    }\n  }, __jsx(\"ul\", {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 17\n    }\n  }, breach.targets.map(target => __jsx(\"li\", {\n    key: target['@id'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 21\n    }\n  }, __jsx(Link, {\n    to: flattenToAppURL(target['@id']),\n    title: intl.formatMessage(messages.navigate_to_this_item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 23\n    }\n  }, target.title))))))))), linksAndReferencesViewLink && __jsx(Link, {\n    to: flattenToAppURL(linksAndReferencesViewLink),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"View links and references to this item\",\n    defaultMessage: \"View links and references to this item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 11\n    }\n  })));\n};\n_c2 = BrokenLinksList;\nContentsDeleteModal.propTypes = {\n  itemsToDelete: PropTypes.arrayOf(PropTypes.shape({\n    UID: PropTypes.string\n  })).isRequired,\n  open: PropTypes.bool.isRequired,\n  onOk: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n};\nexport default ContentsDeleteModal;\nvar _c, _c2;\n$RefreshReg$(_c, \"ContentsDeleteModal\");\n$RefreshReg$(_c2, \"BrokenLinksList\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","useDispatch","useSelector","Link","map","find","defineMessages","useIntl","FormattedMessage","linkIntegrityCheck","flattenToAppURL","Confirm","Dimmer","Loader","Table","messages","deleteConfirmSingleItem","deleteConfirmMultipleItems","navigate_to_this_item","loading","delete","delete_and_broken_links","cancel","ContentsDeleteModal","props","_s","itemsToDelete","open","onCancel","onOk","items","intl","dispatch","linkintegrityInfo","state","_state$linkIntegrity","linkIntegrity","result","_state$linkIntegrity2","brokenReferences","setBrokenReferences","containedItemsToDelete","setContainedItemsToDelete","breaches","setBreaches","linksAndReferencesViewLink","setLinkAndReferencesViewLink","getFieldById","id","field","item","length","containedItems","_result$items_total","items_total","reduce","acc","value","flatMap","source","target","source_by_uid","set","uid","Map","by_source","get","undefined","Set","add","size","Array","from","entry","targets","__jsx","confirmButton","formatMessage","cancelButton","header","content","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","active","inverted","indeterminate","Fragment","defaultMessage","values","variation","BrokenLinksList","onConfirm","_c","compact","Body","breach","Row","key","verticalAlign","Cell","to","title","style","minWidth","margin","_c2","propTypes","arrayOf","shape","UID","string","isRequired","bool","func","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Contents/ContentsDeleteModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport map from 'lodash/map';\nimport find from 'lodash/find';\nimport { defineMessages, useIntl, FormattedMessage } from 'react-intl';\nimport { linkIntegrityCheck } from '@plone/volto/actions/content/content';\nimport { flattenToAppURL } from '@plone/volto/helpers/Url/Url';\n\nimport { Confirm, Dimmer, Loader, Table } from 'semantic-ui-react';\n\nconst messages = defineMessages({\n  deleteConfirmSingleItem: {\n    id: 'Delete this item?',\n    defaultMessage: 'Delete this item?',\n  },\n  deleteConfirmMultipleItems: {\n    id: 'Delete selected items?',\n    defaultMessage: 'Delete selected items?',\n  },\n  navigate_to_this_item: {\n    id: 'Navigate to this item',\n    defaultMessage: 'Navigate to this item',\n  },\n  loading: {\n    id: 'link-integrity: loading references',\n    defaultMessage: 'Checking references...',\n  },\n  delete: {\n    id: 'link-integrity: Delete',\n    defaultMessage: 'Delete',\n  },\n  delete_and_broken_links: {\n    id: 'link-integrity: Delete item and break links',\n    defaultMessage: 'Delete item and break links',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n});\n\nconst ContentsDeleteModal = (props) => {\n  const { itemsToDelete = [], open, onCancel, onOk, items } = props;\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const linkintegrityInfo = useSelector((state) => state.linkIntegrity?.result);\n  const loading = useSelector((state) => state.linkIntegrity?.loading);\n\n  const [brokenReferences, setBrokenReferences] = useState(0);\n  const [containedItemsToDelete, setContainedItemsToDelete] = useState([]);\n  const [breaches, setBreaches] = useState([]);\n\n  const [linksAndReferencesViewLink, setLinkAndReferencesViewLink] =\n    useState(null);\n\n  useEffect(() => {\n    const getFieldById = (id, field) => {\n      const item = find(items, { '@id': id });\n      return item ? item[field] : '';\n    };\n\n    if (itemsToDelete.length > 0 && open) {\n      dispatch(\n        linkIntegrityCheck(\n          map(itemsToDelete, (item) => getFieldById(item, 'UID')),\n        ),\n      );\n    }\n  }, [itemsToDelete, items, open, dispatch]);\n\n  useEffect(() => {\n    if (linkintegrityInfo) {\n      const containedItems = linkintegrityInfo\n        .map((result) => result.items_total ?? 0)\n        .reduce((acc, value) => acc + value, 0);\n      const breaches = linkintegrityInfo.flatMap((result) =>\n        result.breaches.map((source) => ({\n          source: source,\n          target: result,\n        })),\n      );\n      const source_by_uid = breaches.reduce(\n        (acc, value) => acc.set(value.source.uid, value.source),\n        new Map(),\n      );\n      const by_source = breaches.reduce((acc, value) => {\n        if (acc.get(value.source.uid) === undefined) {\n          acc.set(value.source.uid, new Set());\n        }\n        acc.get(value.source.uid).add(value.target);\n        return acc;\n      }, new Map());\n\n      setContainedItemsToDelete(containedItems);\n      setBrokenReferences(by_source.size);\n      setLinkAndReferencesViewLink(\n        linkintegrityInfo.length\n          ? linkintegrityInfo[0]['@id'] + '/links-to-item'\n          : null,\n      );\n      setBreaches(\n        Array.from(by_source, (entry) => ({\n          source: source_by_uid.get(entry[0]),\n          targets: Array.from(entry[1]),\n        })),\n      );\n    } else {\n      setContainedItemsToDelete([]);\n      setBrokenReferences(0);\n      setLinkAndReferencesViewLink(null);\n      setBreaches([]);\n    }\n  }, [linkintegrityInfo]);\n\n  return (\n    open && (\n      <Confirm\n        open={open}\n        confirmButton={\n          brokenReferences === 0\n            ? intl.formatMessage(messages.delete)\n            : intl.formatMessage(messages.delete_and_broken_links)\n        }\n        cancelButton={intl.formatMessage(messages.cancel)}\n        header={\n          itemsToDelete.length === 1\n            ? intl.formatMessage(messages.deleteConfirmSingleItem)\n            : intl.formatMessage(messages.deleteConfirmMultipleItems)\n        }\n        content={\n          <div className=\"content\">\n            <Dimmer active={loading} inverted>\n              <Loader indeterminate size=\"massive\">\n                {intl.formatMessage(messages.loading)}\n              </Loader>\n            </Dimmer>\n\n            {itemsToDelete.length > 1 ? (\n              containedItemsToDelete > 0 ? (\n                <>\n                  <FormattedMessage\n                    id=\"Some items are also a folder. By deleting them you will delete {containedItemsToDelete} {variation} inside the folders.\"\n                    defaultMessage=\"Some items are also a folder. By deleting them you will delete {containedItemsToDelete} {variation} inside the folders.\"\n                    values={{\n                      containedItemsToDelete: (\n                        <span>{containedItemsToDelete}</span>\n                      ),\n                      variation: (\n                        <span>\n                          {containedItemsToDelete === 1 ? (\n                            <FormattedMessage id=\"item\" defaultMessage=\"item\" />\n                          ) : (\n                            <FormattedMessage\n                              id=\"items\"\n                              defaultMessage=\"items\"\n                            />\n                          )}\n                        </span>\n                      ),\n                    }}\n                  />\n                  {brokenReferences > 0 && (\n                    <>\n                      <br />\n                      <FormattedMessage\n                        id=\"Some items are referenced by other contents. By deleting them {brokenReferences} {variation} will be broken.\"\n                        defaultMessage=\"Some items are referenced by other contents. By deleting them {brokenReferences} {variation} will be broken.\"\n                        values={{\n                          brokenReferences: <span>{brokenReferences}</span>,\n                          variation: (\n                            <span>\n                              {brokenReferences === 1 ? (\n                                <FormattedMessage\n                                  id=\"reference\"\n                                  defaultMessage=\"reference\"\n                                />\n                              ) : (\n                                <FormattedMessage\n                                  id=\"references\"\n                                  defaultMessage=\"references\"\n                                />\n                              )}\n                            </span>\n                          ),\n                        }}\n                      />\n                    </>\n                  )}\n                </>\n              ) : (\n                <>\n                  {brokenReferences > 0 && (\n                    <>\n                      <FormattedMessage\n                        id=\"Some items are referenced by other contents. By deleting them {brokenReferences} {variation} will be broken.\"\n                        defaultMessage=\"Some items are referenced by other contents. By deleting them {brokenReferences} {variation} will be broken.\"\n                        values={{\n                          brokenReferences: <span>{brokenReferences}</span>,\n                          variation: (\n                            <span>\n                              {brokenReferences === 1 ? (\n                                <FormattedMessage\n                                  id=\"reference\"\n                                  defaultMessage=\"reference\"\n                                />\n                              ) : (\n                                <FormattedMessage\n                                  id=\"references\"\n                                  defaultMessage=\"references\"\n                                />\n                              )}\n                            </span>\n                          ),\n                        }}\n                      />\n                    </>\n                  )}\n                </>\n              )\n            ) : containedItemsToDelete > 0 ? (\n              <>\n                <FormattedMessage\n                  id=\"This item is also a folder. By deleting it you will delete {containedItemsToDelete} {variation} inside the folder.\"\n                  defaultMessage=\"This item is also a folder. By deleting it you will delete {containedItemsToDelete} {variation} inside the folder.\"\n                  values={{\n                    containedItemsToDelete: (\n                      <span>{containedItemsToDelete}</span>\n                    ),\n                    variation: (\n                      <span>\n                        {containedItemsToDelete === 1 ? (\n                          <FormattedMessage id=\"item\" defaultMessage=\"item\" />\n                        ) : (\n                          <FormattedMessage id=\"items\" defaultMessage=\"items\" />\n                        )}\n                      </span>\n                    ),\n                  }}\n                />\n                {brokenReferences > 0 && (\n                  <>\n                    <br />\n                    <FormattedMessage\n                      id=\"Deleting this item breaks {brokenReferences} {variation}.\"\n                      defaultMessage=\"Deleting this item breaks {brokenReferences} {variation}.\"\n                      values={{\n                        brokenReferences: <span>{brokenReferences}</span>,\n                        variation: (\n                          <span>\n                            {brokenReferences === 1 ? (\n                              <FormattedMessage\n                                id=\"reference\"\n                                defaultMessage=\"reference\"\n                              />\n                            ) : (\n                              <FormattedMessage\n                                id=\"references\"\n                                defaultMessage=\"references\"\n                              />\n                            )}\n                          </span>\n                        ),\n                      }}\n                    />\n                    <BrokenLinksList\n                      intl={intl}\n                      breaches={breaches}\n                      linksAndReferencesViewLink={linksAndReferencesViewLink}\n                    />\n                  </>\n                )}\n              </>\n            ) : brokenReferences > 0 ? (\n              <>\n                <FormattedMessage\n                  id=\"Deleting this item breaks {brokenReferences} {variation}.\"\n                  defaultMessage=\"Deleting this item breaks {brokenReferences} {variation}.\"\n                  values={{\n                    brokenReferences: <span>{brokenReferences}</span>,\n                    variation: (\n                      <span>\n                        {brokenReferences === 1 ? (\n                          <FormattedMessage\n                            id=\"reference\"\n                            defaultMessage=\"reference\"\n                          />\n                        ) : (\n                          <FormattedMessage\n                            id=\"references\"\n                            defaultMessage=\"references\"\n                          />\n                        )}\n                      </span>\n                    ),\n                  }}\n                />\n                <BrokenLinksList\n                  intl={intl}\n                  breaches={breaches}\n                  linksAndReferencesViewLink={linksAndReferencesViewLink}\n                />\n              </>\n            ) : null}\n          </div>\n        }\n        onCancel={onCancel}\n        onConfirm={onOk}\n        size=\"medium\"\n      />\n    )\n  );\n};\n\nconst BrokenLinksList = ({ intl, breaches, linksAndReferencesViewLink }) => {\n  return (\n    <div className=\"broken-links-list\">\n      <FormattedMessage\n        id=\"These items will have broken links\"\n        defaultMessage=\"These items will have broken links\"\n      />\n      :\n      <Table compact>\n        <Table.Body>\n          {breaches.map((breach) => (\n            <Table.Row key={breach.source['@id']} verticalAlign=\"top\">\n              <Table.Cell>\n                <Link\n                  to={flattenToAppURL(breach.source['@id'])}\n                  title={intl.formatMessage(messages.navigate_to_this_item)}\n                >\n                  {breach.source.title}\n                </Link>\n              </Table.Cell>\n              <Table.Cell style={{ minWidth: '140px' }}>\n                <FormattedMessage id=\"refers to\" defaultMessage=\"refers to\" />:\n              </Table.Cell>\n              <Table.Cell>\n                <ul style={{ margin: 0 }}>\n                  {breach.targets.map((target) => (\n                    <li key={target['@id']}>\n                      <Link\n                        to={flattenToAppURL(target['@id'])}\n                        title={intl.formatMessage(\n                          messages.navigate_to_this_item,\n                        )}\n                      >\n                        {target.title}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n      {linksAndReferencesViewLink && (\n        <Link to={flattenToAppURL(linksAndReferencesViewLink)}>\n          <FormattedMessage\n            id=\"View links and references to this item\"\n            defaultMessage=\"View links and references to this item\"\n          />\n        </Link>\n      )}\n    </div>\n  );\n};\nContentsDeleteModal.propTypes = {\n  itemsToDelete: PropTypes.arrayOf(\n    PropTypes.shape({\n      UID: PropTypes.string,\n    }),\n  ).isRequired,\n  open: PropTypes.bool.isRequired,\n  onOk: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n};\nexport default ContentsDeleteModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Delete this item?","defaultMessage":"Delete this item?"},{"id":"Delete selected items?","defaultMessage":"Delete selected items?"},{"id":"Navigate to this item","defaultMessage":"Navigate to this item"},{"id":"link-integrity: loading references","defaultMessage":"Checking references..."},{"id":"link-integrity: Delete","defaultMessage":"Delete"},{"id":"link-integrity: Delete item and break links","defaultMessage":"Delete item and break links"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Some items are also a folder. By deleting them you will delete {containedItemsToDelete} {variation} inside the folders.","defaultMessage":"Some items are also a folder. By deleting them you will delete {containedItemsToDelete} {variation} inside the folders."},{"id":"item","defaultMessage":"item"},{"id":"items","defaultMessage":"items"},{"id":"Some items are referenced by other contents. By deleting them {brokenReferences} {variation} will be broken.","defaultMessage":"Some items are referenced by other contents. By deleting them {brokenReferences} {variation} will be broken."},{"id":"reference","defaultMessage":"reference"},{"id":"references","defaultMessage":"references"},{"id":"This item is also a folder. By deleting it you will delete {containedItemsToDelete} {variation} inside the folder.","defaultMessage":"This item is also a folder. By deleting it you will delete {containedItemsToDelete} {variation} inside the folder."},{"id":"Deleting this item breaks {brokenReferences} {variation}.","defaultMessage":"Deleting this item breaks {brokenReferences} {variation}."},{"id":"These items will have broken links","defaultMessage":"These items will have broken links"},{"id":"refers to","defaultMessage":"refers to"},{"id":"View links and references to this item","defaultMessage":"View links and references to this item"}]}},"sourceType":"module","externalDependencies":[]}