{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Controlpanels/Users/RenderUsers.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * Users controlpanel user.\n * @module components/manage/Controlpanels/UsersControlpanelUser\n */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Dropdown, Table, Checkbox } from 'semantic-ui-react';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nimport editSVG from '@plone/volto/icons/editing.svg';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport { ModalForm } from '@plone/volto/components/manage/Form';\nimport { updateUser } from '@plone/volto/actions/users/users';\nimport ploneSVG from '@plone/volto/icons/plone.svg';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { messages } from '@plone/volto/helpers/MessageLabels/MessageLabels';\nimport { canAssignRole } from '@plone/volto/helpers/User/User';\nimport { toast } from 'react-toastify';\n\n/**\n * UsersControlpanelUser class.\n * @class UsersControlpanelUser\n * @extends Component\n */\nclass RenderUsers extends Component {\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onEditUserError = this.onEditUserError.bind(this);\n    this.onEditUserSubmit = this.onEditUserSubmit.bind(this);\n  }\n\n  /**\n   * @param {*} event\n   * @param {*} { value }\n   * @memberof UsersControlpanelUser\n   */\n\n  onChange(event, {\n    value\n  }) {\n    const [user, role] = value.split('&role=');\n    this.props.updateUser(user, role);\n  }\n  componentDidUpdate(prevProps) {\n    var _this$state, _this$state$user, _this$props, _this$props$user;\n    if (prevProps.updateRequest.loading && this.props.updateRequest.loaded && ((_this$state = this.state) === null || _this$state === void 0 ? void 0 : (_this$state$user = _this$state.user) === null || _this$state$user === void 0 ? void 0 : _this$state$user.id) === ((_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$user = _this$props.user) === null || _this$props$user === void 0 ? void 0 : _this$props$user.id)) {\n      this.setState({\n        user: {}\n      });\n      this.props.listUsers();\n      return toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.updateUserSuccess),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }));\n    }\n  }\n  onEditUserSubmit(data, callback) {\n    // Do not handle groups and roles in this form\n    delete data.groups;\n    delete data.roles;\n    this.props.updateUserData(data.id, data);\n  }\n  onEditUserError() {\n    return toast.error(__jsx(Toast, {\n      error: true,\n      title: this.props.intl.formatMessage(messages.error),\n      content: this.props.intl.formatMessage(messages.addUserFormPasswordAndSendPasswordTogetherNotAllowed),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }));\n  }\n  onClickEdit(props) {\n    const {\n      formData\n    } = props;\n    this.setState({\n      user: _objectSpread({}, formData)\n    });\n  }\n  canDeleteUser() {\n    if (this.props.isUserManager) return true;\n    return !this.props.user.roles.includes('Manager');\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return __jsx(Table.Row, {\n      key: this.props.user.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, __jsx(Table.Cell, {\n      className: \"fullname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, this.props.user.fullname ? this.props.user.fullname : this.props.user.username, ' ', \"(\", this.props.user.username, \")\"), this.props.roles.map(role => __jsx(Table.Cell, {\n      key: role.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, this.props.inheritedRole && this.props.inheritedRole.includes(role.id) ? __jsx(Icon, {\n      name: ploneSVG,\n      size: \"20px\",\n      color: \"#007EB1\",\n      title: 'plone-svg',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }) : __jsx(Checkbox, {\n      checked: this.props.user.roles.includes(role.id),\n      onChange: this.onChange,\n      value: `${this.props.user.id}&role=${role.id}`,\n      disabled: !canAssignRole(this.props.isUserManager, role),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }))), __jsx(Table.Cell, {\n      textAlign: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, this.canDeleteUser() && __jsx(Dropdown, {\n      icon: \"ellipsis horizontal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, __jsx(Dropdown.Menu, {\n      className: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, this.props.userschema && __jsx(Dropdown.Item, {\n      id: \"edit-user-button\",\n      onClick: () => {\n        this.onClickEdit({\n          formData: this.props.user\n        });\n      },\n      value: this.props.user['@id'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 19\n      }\n    }, __jsx(Icon, {\n      name: editSVG,\n      size: \"15px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }), __jsx(FormattedMessage, {\n      id: \"Edit\",\n      defaultMessage: \"Edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    })), __jsx(Dropdown.Item, {\n      id: \"delete-user-button\",\n      onClick: this.props.onDelete,\n      value: this.props.user['@id'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      name: trashSVG,\n      size: \"15px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    }), __jsx(FormattedMessage, {\n      id: \"Delete\",\n      defaultMessage: \"Delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }))))), Object.keys(this.state.user).length > 0 && this.props.userschema.loaded && __jsx(ModalForm, {\n      className: \"modal\",\n      onSubmit: this.onEditUserSubmit,\n      submitError: this.state.editUserError,\n      formData: this.state.user,\n      onCancel: () => this.setState({\n        user: {}\n      }),\n      title: this.props.intl.formatMessage(messages.updateUserFormTitle),\n      loading: this.props.updateRequest.loading,\n      schema: this.props.userschema.userschema,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }));\n  }\n}\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_defineProperty(RenderUsers, \"propTypes\", {\n  user: PropTypes.shape({\n    username: PropTypes.string,\n    fullname: PropTypes.string,\n    roles: PropTypes.arrayOf(PropTypes.string)\n  }).isRequired,\n  roles: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string\n  })).isRequired,\n  onDelete: PropTypes.func.isRequired,\n  isUserManager: PropTypes.bool.isRequired\n});\nexport default compose(injectIntl, connect((state, props) => {\n  var _state$users;\n  return {\n    updateRequest: (_state$users = state.users) === null || _state$users === void 0 ? void 0 : _state$users.update\n  };\n}, {\n  updateUserData: updateUser\n}))(RenderUsers);","map":{"version":3,"names":["PropTypes","React","Component","FormattedMessage","injectIntl","Dropdown","Table","Checkbox","trashSVG","editSVG","Icon","Toast","ModalForm","updateUser","ploneSVG","compose","connect","messages","canAssignRole","toast","RenderUsers","constructor","props","state","user","onChange","bind","onEditUserError","onEditUserSubmit","event","value","role","split","componentDidUpdate","prevProps","_this$state","_this$state$user","_this$props","_this$props$user","updateRequest","loading","loaded","id","setState","listUsers","success","__jsx","title","intl","formatMessage","content","updateUserSuccess","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","data","callback","groups","roles","updateUserData","error","addUserFormPasswordAndSendPasswordTogetherNotAllowed","onClickEdit","formData","_objectSpread","canDeleteUser","isUserManager","includes","render","Row","key","username","Cell","className","fullname","map","inheritedRole","name","size","color","checked","disabled","textAlign","icon","Menu","userschema","Item","onClick","defaultMessage","onDelete","Object","keys","length","onSubmit","submitError","editUserError","onCancel","updateUserFormTitle","schema","_defineProperty","shape","string","arrayOf","isRequired","func","bool","_state$users","users","update"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Controlpanels/Users/RenderUsers.jsx"],"sourcesContent":["/**\n * Users controlpanel user.\n * @module components/manage/Controlpanels/UsersControlpanelUser\n */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Dropdown, Table, Checkbox } from 'semantic-ui-react';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nimport editSVG from '@plone/volto/icons/editing.svg';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Toast from '@plone/volto/components/manage/Toast/Toast';\nimport { ModalForm } from '@plone/volto/components/manage/Form';\nimport { updateUser } from '@plone/volto/actions/users/users';\nimport ploneSVG from '@plone/volto/icons/plone.svg';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { messages } from '@plone/volto/helpers/MessageLabels/MessageLabels';\nimport { canAssignRole } from '@plone/volto/helpers/User/User';\nimport { toast } from 'react-toastify';\n\n/**\n * UsersControlpanelUser class.\n * @class UsersControlpanelUser\n * @extends Component\n */\nclass RenderUsers extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    user: PropTypes.shape({\n      username: PropTypes.string,\n      fullname: PropTypes.string,\n      roles: PropTypes.arrayOf(PropTypes.string),\n    }).isRequired,\n    roles: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n      }),\n    ).isRequired,\n    onDelete: PropTypes.func.isRequired,\n    isUserManager: PropTypes.bool.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onEditUserError = this.onEditUserError.bind(this);\n    this.onEditUserSubmit = this.onEditUserSubmit.bind(this);\n  }\n\n  /**\n   * @param {*} event\n   * @param {*} { value }\n   * @memberof UsersControlpanelUser\n   */\n\n  onChange(event, { value }) {\n    const [user, role] = value.split('&role=');\n    this.props.updateUser(user, role);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.updateRequest.loading &&\n      this.props.updateRequest.loaded &&\n      this.state?.user?.id === this.props?.user?.id\n    ) {\n      this.setState({ user: {} });\n      this.props.listUsers();\n      return toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.updateUserSuccess)}\n        />,\n      );\n    }\n  }\n\n  onEditUserSubmit(data, callback) {\n    // Do not handle groups and roles in this form\n    delete data.groups;\n    delete data.roles;\n    this.props.updateUserData(data.id, data);\n  }\n\n  onEditUserError() {\n    return toast.error(\n      <Toast\n        error\n        title={this.props.intl.formatMessage(messages.error)}\n        content={this.props.intl.formatMessage(\n          messages.addUserFormPasswordAndSendPasswordTogetherNotAllowed,\n        )}\n      />,\n    );\n  }\n\n  onClickEdit(props) {\n    const { formData } = props;\n    this.setState({ user: { ...formData } });\n  }\n\n  canDeleteUser() {\n    if (this.props.isUserManager) return true;\n    return !this.props.user.roles.includes('Manager');\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Table.Row key={this.props.user.username}>\n        <Table.Cell className=\"fullname\">\n          {this.props.user.fullname\n            ? this.props.user.fullname\n            : this.props.user.username}{' '}\n          ({this.props.user.username})\n        </Table.Cell>\n        {this.props.roles.map((role) => (\n          <Table.Cell key={role.id}>\n            {this.props.inheritedRole &&\n            this.props.inheritedRole.includes(role.id) ? (\n              <Icon\n                name={ploneSVG}\n                size=\"20px\"\n                color=\"#007EB1\"\n                title={'plone-svg'}\n              />\n            ) : (\n              <Checkbox\n                checked={this.props.user.roles.includes(role.id)}\n                onChange={this.onChange}\n                value={`${this.props.user.id}&role=${role.id}`}\n                disabled={!canAssignRole(this.props.isUserManager, role)}\n              />\n            )}\n          </Table.Cell>\n        ))}\n        <Table.Cell textAlign=\"right\">\n          {this.canDeleteUser() && (\n            <Dropdown icon=\"ellipsis horizontal\">\n              <Dropdown.Menu className=\"left\">\n                {this.props.userschema && (\n                  <Dropdown.Item\n                    id=\"edit-user-button\"\n                    onClick={() => {\n                      this.onClickEdit({ formData: this.props.user });\n                    }}\n                    value={this.props.user['@id']}\n                  >\n                    <Icon name={editSVG} size=\"15px\" />\n                    <FormattedMessage id=\"Edit\" defaultMessage=\"Edit\" />\n                  </Dropdown.Item>\n                )}\n                <Dropdown.Item\n                  id=\"delete-user-button\"\n                  onClick={this.props.onDelete}\n                  value={this.props.user['@id']}\n                >\n                  <Icon name={trashSVG} size=\"15px\" />\n                  <FormattedMessage id=\"Delete\" defaultMessage=\"Delete\" />\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          )}\n        </Table.Cell>\n        {Object.keys(this.state.user).length > 0 &&\n          this.props.userschema.loaded && (\n            <ModalForm\n              className=\"modal\"\n              onSubmit={this.onEditUserSubmit}\n              submitError={this.state.editUserError}\n              formData={this.state.user}\n              onCancel={() => this.setState({ user: {} })}\n              title={this.props.intl.formatMessage(\n                messages.updateUserFormTitle,\n              )}\n              loading={this.props.updateRequest.loading}\n              schema={this.props.userschema.userschema}\n            />\n          )}\n      </Table.Row>\n    );\n  }\n}\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      updateRequest: state.users?.update,\n    }),\n    { updateUserData: updateUser },\n  ),\n)(RenderUsers);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Edit","defaultMessage":"Edit"},{"id":"Delete","defaultMessage":"Delete"}]}},"sourceType":"module","externalDependencies":[]}