{"ast":null,"code":"import _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/**\n * Groups reducer.\n * @module reducers/groups/groups\n */\n\nimport { CREATE_GROUP, DELETE_GROUP, GET_GROUP, LIST_GROUPS, LIST_FILTER_GROUPS, UPDATE_GROUP } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  create: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  delete: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  get: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  list: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  update: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  groups: [],\n  group: {}\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Groups reducer.\n * @function groups\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function groups(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${CREATE_GROUP}_PENDING`:\n    case `${DELETE_GROUP}_PENDING`:\n    case `${GET_GROUP}_PENDING`:\n    case `${LIST_GROUPS}_PENDING`:\n    case `${LIST_FILTER_GROUPS}_PENDING`:\n    case `${UPDATE_GROUP}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null\n        }\n      });\n    case `${GET_GROUP}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        group: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n    case `${LIST_GROUPS}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        groups: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n    case `${LIST_FILTER_GROUPS}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filter_groups: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n    case `${CREATE_GROUP}_SUCCESS`:\n    case `${DELETE_GROUP}_SUCCESS`:\n    case `${UPDATE_GROUP}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n    case `${CREATE_GROUP}_FAIL`:\n    case `${DELETE_GROUP}_FAIL`:\n    case `${UPDATE_GROUP}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n    case `${GET_GROUP}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        group: {},\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n    case `${LIST_GROUPS}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        groups: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n    case `${LIST_FILTER_GROUPS}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filter_groups: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["CREATE_GROUP","DELETE_GROUP","GET_GROUP","LIST_GROUPS","LIST_FILTER_GROUPS","UPDATE_GROUP","initialState","create","loaded","loading","error","delete","get","list","update","groups","group","getRequestKey","actionType","split","toLowerCase","state","action","type","_objectSpread","result","filter_groups"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/reducers/groups/groups.js"],"sourcesContent":["/**\n * Groups reducer.\n * @module reducers/groups/groups\n */\n\nimport {\n  CREATE_GROUP,\n  DELETE_GROUP,\n  GET_GROUP,\n  LIST_GROUPS,\n  LIST_FILTER_GROUPS,\n  UPDATE_GROUP,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  create: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  delete: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  get: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  list: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  update: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  groups: [],\n  group: {},\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Groups reducer.\n * @function groups\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function groups(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${CREATE_GROUP}_PENDING`:\n    case `${DELETE_GROUP}_PENDING`:\n    case `${GET_GROUP}_PENDING`:\n    case `${LIST_GROUPS}_PENDING`:\n    case `${LIST_FILTER_GROUPS}_PENDING`:\n    case `${UPDATE_GROUP}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${GET_GROUP}_SUCCESS`:\n      return {\n        ...state,\n        group: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${LIST_GROUPS}_SUCCESS`:\n      return {\n        ...state,\n        groups: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${LIST_FILTER_GROUPS}_SUCCESS`:\n      return {\n        ...state,\n        filter_groups: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${CREATE_GROUP}_SUCCESS`:\n    case `${DELETE_GROUP}_SUCCESS`:\n    case `${UPDATE_GROUP}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${CREATE_GROUP}_FAIL`:\n    case `${DELETE_GROUP}_FAIL`:\n    case `${UPDATE_GROUP}_FAIL`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${GET_GROUP}_FAIL`:\n      return {\n        ...state,\n        group: {},\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${LIST_GROUPS}_FAIL`:\n      return {\n        ...state,\n        groups: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${LIST_FILTER_GROUPS}_FAIL`:\n      return {\n        ...state,\n        filter_groups: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}