{"ast":null,"code":"import _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport map from 'lodash/map';\nimport omit from 'lodash/omit';\nimport { flattenToAppURL } from '@plone/volto/helpers/Url/Url';\nconst GET_QUERYSTRING_RESULTS = 'GET_QUERYSTRING_RESULTS';\nconst RESET_QUERYSTRING_RESULTS = 'RESET_QUERYSTRING_RESULTS';\nconst initialState = {\n  error: null,\n  items: [],\n  total: 0,\n  loaded: false,\n  loading: false,\n  batching: {},\n  subrequests: {}\n};\n\n/**\n * querystringsearch reducer.\n * @function querystring\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function querystringsearch(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_QUERYSTRING_RESULTS}_PENDING`:\n      return action.subrequest ? _objectSpread(_objectSpread({}, state), {}, {\n        subrequests: _objectSpread(_objectSpread({}, state.subrequests), {}, {\n          [action.subrequest]: _objectSpread(_objectSpread({}, state.subrequests[action.subrequest] || {\n            items: [],\n            total: 0,\n            batching: {}\n          }), {}, {\n            items: [],\n            total: 0,\n            error: null,\n            loaded: false,\n            loading: true\n          })\n        })\n      }) : _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loading: true,\n        loaded: false\n      });\n    case `${GET_QUERYSTRING_RESULTS}_SUCCESS`:\n      return action.subrequest ? _objectSpread(_objectSpread({}, state), {}, {\n        subrequests: _objectSpread(_objectSpread({}, state.subrequests), {}, {\n          [action.subrequest]: {\n            error: null,\n            items: map(action.result.items, item => _objectSpread(_objectSpread({}, item), {}, {\n              '@id': flattenToAppURL(item['@id'])\n            })),\n            total: action.result.items_total,\n            loaded: true,\n            loading: false,\n            batching: _objectSpread({}, action.result.batching)\n          }\n        })\n      }) : _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        items: map(action.result.items, item => _objectSpread(_objectSpread({}, item), {}, {\n          '@id': flattenToAppURL(item['@id'])\n        })),\n        total: action.result.items_total,\n        loaded: true,\n        loading: false,\n        batching: _objectSpread({}, action.result.batching)\n      });\n    case `${GET_QUERYSTRING_RESULTS}_FAIL`:\n      return action.subrequest ? _objectSpread(_objectSpread({}, state), {}, {\n        subrequests: _objectSpread(_objectSpread({}, state.subrequests), {}, {\n          [action.subrequest]: {\n            error: action.error,\n            items: [],\n            total: 0,\n            loading: false,\n            loaded: false,\n            batching: {}\n          }\n        })\n      }) : _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        items: [],\n        total: 0,\n        loading: false,\n        loaded: false,\n        batching: {}\n      });\n    case RESET_QUERYSTRING_RESULTS:\n      return action.subrequest ? _objectSpread(_objectSpread({}, state), {}, {\n        subrequests: omit(state.subrequests, [action.subrequest])\n      }) : _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        items: [],\n        total: 0,\n        loading: false,\n        loaded: false,\n        batching: {}\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["map","omit","flattenToAppURL","GET_QUERYSTRING_RESULTS","RESET_QUERYSTRING_RESULTS","initialState","error","items","total","loaded","loading","batching","subrequests","querystringsearch","state","action","type","subrequest","_objectSpread","result","item","items_total"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/reducers/querystringsearch/querystringsearch.js"],"sourcesContent":["import map from 'lodash/map';\nimport omit from 'lodash/omit';\nimport { flattenToAppURL } from '@plone/volto/helpers/Url/Url';\n\nconst GET_QUERYSTRING_RESULTS = 'GET_QUERYSTRING_RESULTS';\nconst RESET_QUERYSTRING_RESULTS = 'RESET_QUERYSTRING_RESULTS';\n\nconst initialState = {\n  error: null,\n  items: [],\n  total: 0,\n  loaded: false,\n  loading: false,\n  batching: {},\n  subrequests: {},\n};\n\n/**\n * querystringsearch reducer.\n * @function querystring\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function querystringsearch(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_QUERYSTRING_RESULTS}_PENDING`:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                ...(state.subrequests[action.subrequest] || {\n                  items: [],\n                  total: 0,\n                  batching: {},\n                }),\n                items: [],\n                total: 0,\n                error: null,\n                loaded: false,\n                loading: true,\n              },\n            },\n          }\n        : {\n            ...state,\n            error: null,\n            loading: true,\n            loaded: false,\n          };\n    case `${GET_QUERYSTRING_RESULTS}_SUCCESS`:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                error: null,\n                items: map(action.result.items, (item) => ({\n                  ...item,\n                  '@id': flattenToAppURL(item['@id']),\n                })),\n                total: action.result.items_total,\n                loaded: true,\n                loading: false,\n                batching: { ...action.result.batching },\n              },\n            },\n          }\n        : {\n            ...state,\n            error: null,\n            items: map(action.result.items, (item) => ({\n              ...item,\n              '@id': flattenToAppURL(item['@id']),\n            })),\n            total: action.result.items_total,\n            loaded: true,\n            loading: false,\n            batching: { ...action.result.batching },\n          };\n    case `${GET_QUERYSTRING_RESULTS}_FAIL`:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                error: action.error,\n                items: [],\n                total: 0,\n                loading: false,\n                loaded: false,\n                batching: {},\n              },\n            },\n          }\n        : {\n            ...state,\n            error: action.error,\n            items: [],\n            total: 0,\n            loading: false,\n            loaded: false,\n            batching: {},\n          };\n    case RESET_QUERYSTRING_RESULTS:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: omit(state.subrequests, [action.subrequest]),\n          }\n        : {\n            ...state,\n            error: null,\n            items: [],\n            total: 0,\n            loading: false,\n            loaded: false,\n            batching: {},\n          };\n    default:\n      return state;\n  }\n}\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,YAAY;AAC5B,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,eAAe,QAAQ,8BAA8B;AAE9D,MAAMC,uBAAuB,GAAG,yBAAyB;AACzD,MAAMC,yBAAyB,GAAG,2BAA2B;AAE7D,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE,CAAC;EACRC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE,KAAK;EACdC,QAAQ,EAAE,CAAC,CAAC;EACZC,WAAW,EAAE,CAAC;AAChB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,iBAAiBA,CAACC,KAAK,GAAGT,YAAY,EAAEU,MAAM,GAAG,CAAC,CAAC,EAAE;EAC3E,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,GAAGb,uBAAuB,UAAU;MACvC,OAAOY,MAAM,CAACE,UAAU,GAAAC,aAAA,CAAAA,aAAA,KAEfJ,KAAK;QACRF,WAAW,EAAAM,aAAA,CAAAA,aAAA,KACNJ,KAAK,CAACF,WAAW;UACpB,CAACG,MAAM,CAACE,UAAU,GAAAC,aAAA,CAAAA,aAAA,KACZJ,KAAK,CAACF,WAAW,CAACG,MAAM,CAACE,UAAU,CAAC,IAAI;YAC1CV,KAAK,EAAE,EAAE;YACTC,KAAK,EAAE,CAAC;YACRG,QAAQ,EAAE,CAAC;UACb,CAAC;YACDJ,KAAK,EAAE,EAAE;YACTC,KAAK,EAAE,CAAC;YACRF,KAAK,EAAE,IAAI;YACXG,MAAM,EAAE,KAAK;YACbC,OAAO,EAAE;UAAI;QACd;MACF,KAAAQ,aAAA,CAAAA,aAAA,KAGEJ,KAAK;QACRR,KAAK,EAAE,IAAI;QACXI,OAAO,EAAE,IAAI;QACbD,MAAM,EAAE;MAAK,EACd;IACP,KAAK,GAAGN,uBAAuB,UAAU;MACvC,OAAOY,MAAM,CAACE,UAAU,GAAAC,aAAA,CAAAA,aAAA,KAEfJ,KAAK;QACRF,WAAW,EAAAM,aAAA,CAAAA,aAAA,KACNJ,KAAK,CAACF,WAAW;UACpB,CAACG,MAAM,CAACE,UAAU,GAAG;YACnBX,KAAK,EAAE,IAAI;YACXC,KAAK,EAAEP,GAAG,CAACe,MAAM,CAACI,MAAM,CAACZ,KAAK,EAAGa,IAAI,IAAAF,aAAA,CAAAA,aAAA,KAChCE,IAAI;cACP,KAAK,EAAElB,eAAe,CAACkB,IAAI,CAAC,KAAK,CAAC;YAAC,EACnC,CAAC;YACHZ,KAAK,EAAEO,MAAM,CAACI,MAAM,CAACE,WAAW;YAChCZ,MAAM,EAAE,IAAI;YACZC,OAAO,EAAE,KAAK;YACdC,QAAQ,EAAAO,aAAA,KAAOH,MAAM,CAACI,MAAM,CAACR,QAAQ;UACvC;QAAC;MACF,KAAAO,aAAA,CAAAA,aAAA,KAGEJ,KAAK;QACRR,KAAK,EAAE,IAAI;QACXC,KAAK,EAAEP,GAAG,CAACe,MAAM,CAACI,MAAM,CAACZ,KAAK,EAAGa,IAAI,IAAAF,aAAA,CAAAA,aAAA,KAChCE,IAAI;UACP,KAAK,EAAElB,eAAe,CAACkB,IAAI,CAAC,KAAK,CAAC;QAAC,EACnC,CAAC;QACHZ,KAAK,EAAEO,MAAM,CAACI,MAAM,CAACE,WAAW;QAChCZ,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE,KAAK;QACdC,QAAQ,EAAAO,aAAA,KAAOH,MAAM,CAACI,MAAM,CAACR,QAAQ;MAAE,EACxC;IACP,KAAK,GAAGR,uBAAuB,OAAO;MACpC,OAAOY,MAAM,CAACE,UAAU,GAAAC,aAAA,CAAAA,aAAA,KAEfJ,KAAK;QACRF,WAAW,EAAAM,aAAA,CAAAA,aAAA,KACNJ,KAAK,CAACF,WAAW;UACpB,CAACG,MAAM,CAACE,UAAU,GAAG;YACnBX,KAAK,EAAES,MAAM,CAACT,KAAK;YACnBC,KAAK,EAAE,EAAE;YACTC,KAAK,EAAE,CAAC;YACRE,OAAO,EAAE,KAAK;YACdD,MAAM,EAAE,KAAK;YACbE,QAAQ,EAAE,CAAC;UACb;QAAC;MACF,KAAAO,aAAA,CAAAA,aAAA,KAGEJ,KAAK;QACRR,KAAK,EAAES,MAAM,CAACT,KAAK;QACnBC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,CAAC;QACRE,OAAO,EAAE,KAAK;QACdD,MAAM,EAAE,KAAK;QACbE,QAAQ,EAAE,CAAC;MAAC,EACb;IACP,KAAKP,yBAAyB;MAC5B,OAAOW,MAAM,CAACE,UAAU,GAAAC,aAAA,CAAAA,aAAA,KAEfJ,KAAK;QACRF,WAAW,EAAEX,IAAI,CAACa,KAAK,CAACF,WAAW,EAAE,CAACG,MAAM,CAACE,UAAU,CAAC;MAAC,KAAAC,aAAA,CAAAA,aAAA,KAGtDJ,KAAK;QACRR,KAAK,EAAE,IAAI;QACXC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,CAAC;QACRE,OAAO,EAAE,KAAK;QACdD,MAAM,EAAE,KAAK;QACbE,QAAQ,EAAE,CAAC;MAAC,EACb;IACP;MACE,OAAOG,KAAK;EAChB;AACF","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}