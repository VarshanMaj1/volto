{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n// Internal proxy to bypass CORS while developing.\n\nimport express from 'express';\nimport config from '@plone/volto/registry';\nimport { createProxyMiddleware, responseInterceptor } from 'http-proxy-middleware';\nimport querystring from 'querystring';\nimport { parse as parseUrl } from 'url';\nconst filter = function (pathname, req) {\n  // This is the proxy to the API in case the accept header is 'application/json'\n  return config.settings.devProxyToApiPath && pathname.startsWith('/++api++');\n};\nlet _env = null;\n\n// the config is not available at the middleware creation time, so it needs to\n// read/cache the global configuration on first request.\nfunction getEnv() {\n  if (_env) {\n    return _env;\n  }\n  const apiPathURL = parseUrl(config.settings.apiPath);\n  const proxyURL = parseUrl(config.settings.devProxyToApiPath);\n  const serverURL = `${proxyURL.protocol}//${proxyURL.host}`;\n  const instancePath = proxyURL.pathname;\n  _env = {\n    apiPathURL,\n    serverURL,\n    instancePath\n  };\n  return _env;\n}\nexport default function devProxyMiddleware() {\n  const middleware = express.Router();\n  const devProxy = createProxyMiddleware(filter, _objectSpread({\n    selfHandleResponse: true,\n    onProxyRes: responseInterceptor(async (responseBuffer, proxyRes, req, res) => {\n      return responseBuffer;\n    }),\n    onProxyReq: (proxyReq, req, res) => {\n      // Fixes https://github.com/chimurai/http-proxy-middleware/issues/320\n      if (!req.body || !Object.keys(req.body).length) {\n        return;\n      }\n      const contentType = proxyReq.getHeader('Content-Type');\n      const writeBody = bodyData => {\n        proxyReq.setHeader('Content-Length', Buffer.byteLength(bodyData));\n        proxyReq.write(bodyData);\n      };\n      if (contentType.includes('application/json')) {\n        writeBody(JSON.stringify(req.body));\n      }\n      if (contentType.includes('application/x-www-form-urlencoded')) {\n        writeBody(querystring.stringify(req.body));\n      }\n    },\n    // target: serverURL,\n    router: req => {\n      const {\n        serverURL\n      } = getEnv();\n      return serverURL;\n    },\n    pathRewrite: (path, req) => {\n      const {\n        apiPathURL,\n        instancePath\n      } = getEnv();\n      const target = config.settings.proxyRewriteTarget || `/VirtualHostBase/${apiPathURL.protocol.slice(0, -1)}/${apiPathURL.hostname}:${apiPathURL.port}${instancePath}/++api++/VirtualHostRoot`;\n      return `${target}${path.replace('/++api++', '')}`;\n    },\n    logLevel: process.env.DEBUG_HPM ? 'debug' : 'silent'\n  }, process.env.RAZZLE_DEV_PROXY_INSECURE && {\n    changeOrigin: true,\n    secure: false\n  }));\n  middleware.all('*', devProxy);\n  middleware.id = 'devProxy';\n  return middleware;\n}","map":{"version":3,"names":["express","config","createProxyMiddleware","responseInterceptor","querystring","parse","parseUrl","filter","pathname","req","settings","devProxyToApiPath","startsWith","_env","getEnv","apiPathURL","apiPath","proxyURL","serverURL","protocol","host","instancePath","devProxyMiddleware","middleware","Router","devProxy","_objectSpread","selfHandleResponse","onProxyRes","responseBuffer","proxyRes","res","onProxyReq","proxyReq","body","Object","keys","length","contentType","getHeader","writeBody","bodyData","setHeader","Buffer","byteLength","write","includes","JSON","stringify","router","pathRewrite","path","target","proxyRewriteTarget","slice","hostname","port","replace","logLevel","process","env","DEBUG_HPM","RAZZLE_DEV_PROXY_INSECURE","changeOrigin","secure","all","id"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/express-middleware/devproxy.js"],"sourcesContent":["// Internal proxy to bypass CORS while developing.\n\nimport express from 'express';\nimport config from '@plone/volto/registry';\nimport {\n  createProxyMiddleware,\n  responseInterceptor,\n} from 'http-proxy-middleware';\nimport querystring from 'querystring';\nimport { parse as parseUrl } from 'url';\n\nconst filter = function (pathname, req) {\n  // This is the proxy to the API in case the accept header is 'application/json'\n  return config.settings.devProxyToApiPath && pathname.startsWith('/++api++');\n};\n\nlet _env = null;\n\n// the config is not available at the middleware creation time, so it needs to\n// read/cache the global configuration on first request.\nfunction getEnv() {\n  if (_env) {\n    return _env;\n  }\n\n  const apiPathURL = parseUrl(config.settings.apiPath);\n  const proxyURL = parseUrl(config.settings.devProxyToApiPath);\n  const serverURL = `${proxyURL.protocol}//${proxyURL.host}`;\n  const instancePath = proxyURL.pathname;\n\n  _env = {\n    apiPathURL,\n    serverURL,\n    instancePath,\n  };\n\n  return _env;\n}\n\nexport default function devProxyMiddleware() {\n  const middleware = express.Router();\n  const devProxy = createProxyMiddleware(filter, {\n    selfHandleResponse: true,\n    onProxyRes: responseInterceptor(\n      async (responseBuffer, proxyRes, req, res) => {\n        return responseBuffer;\n      },\n    ),\n    onProxyReq: (proxyReq, req, res) => {\n      // Fixes https://github.com/chimurai/http-proxy-middleware/issues/320\n      if (!req.body || !Object.keys(req.body).length) {\n        return;\n      }\n\n      const contentType = proxyReq.getHeader('Content-Type');\n      const writeBody = (bodyData) => {\n        proxyReq.setHeader('Content-Length', Buffer.byteLength(bodyData));\n        proxyReq.write(bodyData);\n      };\n\n      if (contentType.includes('application/json')) {\n        writeBody(JSON.stringify(req.body));\n      }\n\n      if (contentType.includes('application/x-www-form-urlencoded')) {\n        writeBody(querystring.stringify(req.body));\n      }\n    },\n    // target: serverURL,\n    router: (req) => {\n      const { serverURL } = getEnv();\n      return serverURL;\n    },\n    pathRewrite: (path, req) => {\n      const { apiPathURL, instancePath } = getEnv();\n      const target =\n        config.settings.proxyRewriteTarget ||\n        `/VirtualHostBase/${apiPathURL.protocol.slice(0, -1)}/${\n          apiPathURL.hostname\n        }:${apiPathURL.port}${instancePath}/++api++/VirtualHostRoot`;\n\n      return `${target}${path.replace('/++api++', '')}`;\n    },\n    logLevel: process.env.DEBUG_HPM ? 'debug' : 'silent',\n    ...(process.env.RAZZLE_DEV_PROXY_INSECURE && {\n      changeOrigin: true,\n      secure: false,\n    }),\n  });\n\n  middleware.all('*', devProxy);\n  middleware.id = 'devProxy';\n\n  return middleware;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}