{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Contents/ContentsUploadModal.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { Button, Dimmer, Header, Icon, Image, Modal, Table, Segment, Input, Progress } from 'semantic-ui-react';\nimport loadable from '@loadable/component';\nimport concat from 'lodash/concat';\nimport filter from 'lodash/filter';\nimport map from 'lodash/map';\nimport filesize from 'filesize';\nimport { readAsDataURL } from 'promise-file-reader';\nimport { FormattedMessage, defineMessages, useIntl } from 'react-intl';\nimport FormattedRelativeDate from '@plone/volto/components/theme/FormattedDate/FormattedRelativeDate';\nimport { createContent } from '@plone/volto/actions/content/content';\nimport { validateFileUploadSize } from '@plone/volto/helpers/FormValidation/FormValidation';\nimport { usePrevious } from '@plone/volto/helpers/Utils/usePrevious';\nconst Dropzone = loadable({\n  resolved: {},\n  chunkName() {\n    return \"react-dropzone\";\n  },\n  isReady(props) {\n    const key = this.resolve(props);\n    if (this.resolved[key] !== true) {\n      return false;\n    }\n    if (typeof __webpack_modules__ !== 'undefined') {\n      return !!__webpack_modules__[key];\n    }\n    return false;\n  },\n  importAsync: () => import(/* webpackChunkName: \"react-dropzone\" */'react-dropzone'),\n  requireAsync(props) {\n    const key = this.resolve(props);\n    this.resolved[key] = false;\n    return this.importAsync(props).then(resolved => {\n      this.resolved[key] = true;\n      return resolved;\n    });\n  },\n  requireSync(props) {\n    const id = this.resolve(props);\n    if (typeof __webpack_require__ !== 'undefined') {\n      return __webpack_require__(id);\n    }\n    return eval('module.require')(id);\n  },\n  resolve() {\n    if (require.resolveWeak) {\n      return require.resolveWeak(\"react-dropzone\");\n    }\n    return eval('require.resolve')(\"react-dropzone\");\n  }\n});\nconst messages = defineMessages({\n  cancel: {\n    \"id\": \"Cancel\",\n    \"defaultMessage\": \"Cancel\"\n  },\n  upload: {\n    \"id\": \"{count, plural, one {Upload {count} file} other {Upload {count} files}}\",\n    \"defaultMessage\": \"{count, plural, one {Upload {count} file} other {Upload {count} files}}\"\n  },\n  filesUploaded: {\n    \"id\": \"Files uploaded: {uploadedFiles}\",\n    \"defaultMessage\": \"Files uploaded: {uploadedFiles}\"\n  },\n  totalFilesToUpload: {\n    \"id\": \"Total files to upload: {totalFiles}\",\n    \"defaultMessage\": \"Total files to upload: {totalFiles}\"\n  }\n});\nconst SUBREQUEST = 'batch-upload';\nconst ContentsUploadModal = props => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const request = useSelector(state => {\n    var _state$content$subreq;\n    return ((_state$content$subreq = state.content.subrequests) === null || _state$content$subreq === void 0 ? void 0 : _state$content$subreq[SUBREQUEST]) || {};\n  }, shallowEqual);\n  const uploadedFiles = useSelector(state => state.content.uploadedFiles);\n  const prevrequestloading = usePrevious(request.loading);\n  const {\n    0: files,\n    1: setFiles\n  } = useState([]);\n  const {\n    0: totalFiles,\n    1: setTotalFiles\n  } = useState(0);\n  const {\n    onOk\n  } = props;\n  useEffect(() => {\n    if (prevrequestloading && request.loaded) {\n      onOk();\n      setFiles([]);\n    }\n  }, [prevrequestloading, request.loaded, onOk]);\n  const onRemoveFile = event => {\n    setFiles(filter(files, (file, index) => index !== parseInt(event.target.getAttribute('value'), 10)));\n    setTotalFiles(totalFiles - 1);\n  };\n  const onDrop = async newFiles => {\n    const validFiles = [];\n    for (let i = 0; i < newFiles.length; i++) {\n      if (validateFileUploadSize(newFiles[i], intl.formatMessage)) {\n        await readAsDataURL(newFiles[i]).then(data => {\n          const fields = data.match(/^data:(.*);(.*),(.*)$/);\n          newFiles[i].preview = fields[0];\n        });\n        validFiles.push(newFiles[i]);\n      }\n    }\n    setFiles(concat(files, validFiles));\n    setTotalFiles(validFiles.length);\n  };\n  const onCancel = () => {\n    props.onCancel();\n    setFiles([]);\n    setTotalFiles(0);\n  };\n  const onChangeFileName = (e, index) => {\n    let copyOfFiles = [...files];\n    let originalFile = files[index];\n    let newFile = new File([originalFile], e.target.value, {\n      type: originalFile.type\n    });\n    newFile.preview = originalFile.preview;\n    newFile.path = e.target.value;\n    copyOfFiles[index] = newFile;\n    setFiles(copyOfFiles);\n  };\n  const onSubmit = () => {\n    Promise.all(map(files, file => readAsDataURL(file))).then(dataUrls => {\n      dispatch(createContent(props.pathname, map(files, (file, index) => {\n        const fields = dataUrls[index].match(/^data:(.*);(.*),(.*)$/);\n        const image = fields[1].split('/')[0] === 'image';\n        return {\n          '@type': image ? 'Image' : 'File',\n          title: file.name,\n          [image ? 'image' : 'file']: {\n            data: fields[3],\n            encoding: fields[2],\n            'content-type': fields[1],\n            filename: file.name\n          }\n        };\n      }), SUBREQUEST));\n    });\n  };\n  const {\n    multiple = true,\n    minSize = null,\n    maxSize = null,\n    accept = null,\n    disabled = false\n  } = props;\n  const dropzoneOptions = {\n    multiple,\n    minSize,\n    maxSize,\n    accept,\n    disabled\n  };\n  return props.open && __jsx(Modal, {\n    className: \"contents-upload-modal\",\n    open: props.open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Upload files\",\n    defaultMessage: \"Upload files\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  })), __jsx(Dimmer, {\n    active: request.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"progress-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, __jsx(Progress, {\n    className: \"progress-bar\",\n    value: uploadedFiles,\n    total: totalFiles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, intl.formatMessage(messages.filesUploaded, {\n    uploadedFiles\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }), intl.formatMessage(messages.totalFilesToUpload, {\n    totalFiles\n  })))), __jsx(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, __jsx(Dropzone, _extends({\n    onDrop: onDrop,\n    className: \"dropzone\",\n    noDragEventsBubbling: true\n  }, dropzoneOptions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }), ({\n    getRootProps,\n    getInputProps\n  }) => __jsx(\"div\", _extends({}, getRootProps({\n    className: 'dashed'\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }), __jsx(Segment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, __jsx(Table, {\n    basic: \"very\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 19\n    }\n  }, __jsx(Table.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, __jsx(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 23\n    }\n  }, __jsx(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Drag and drop files from your computer onto this area or click the \\u201CBrowse\\u201D button.\",\n    defaultMessage: \"Drag and drop files from your computer onto this area or click the \\u201CBrowse\\u201D button.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 27\n    }\n  })), __jsx(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    className: \"ui button primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 27\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Browse\",\n    defaultMessage: \"Browse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 29\n    }\n  })), __jsx(\"input\", _extends({}, getInputProps({\n    type: 'file',\n    style: {\n      display: 'none'\n    }\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 27\n    }\n  }))))))))), files.length > 0 && __jsx(Table, {\n    compact: true,\n    singleLine: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, __jsx(Table.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, __jsx(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, __jsx(Table.HeaderCell, {\n    width: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 19\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Filename\",\n    defaultMessage: \"Filename\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  })), __jsx(Table.HeaderCell, {\n    width: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 19\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Last modified\",\n    defaultMessage: \"Last modified\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 21\n    }\n  })), __jsx(Table.HeaderCell, {\n    width: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 19\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"File size\",\n    defaultMessage: \"File size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  })), __jsx(Table.HeaderCell, {\n    width: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 19\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Preview\",\n    defaultMessage: \"Preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  })), __jsx(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 19\n    }\n  }))), __jsx(Table.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  }, map(files, (file, index) => __jsx(Table.Row, {\n    className: \"upload-row\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 19\n    }\n  }, __jsx(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 21\n    }\n  }, __jsx(Input, {\n    className: \"file-name\",\n    value: file.name,\n    onChange: e => onChangeFileName(e, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 23\n    }\n  })), __jsx(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 21\n    }\n  }, file.lastModifiedDate && __jsx(FormattedRelativeDate, {\n    date: file.lastModifiedDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 25\n    }\n  })), __jsx(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }, filesize(file.size, {\n    round: 0\n  })), __jsx(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }, file.type.split('/')[0] === 'image' && __jsx(Image, {\n    src: file.preview,\n    height: 60,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  })), __jsx(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }\n  }, __jsx(Icon, {\n    name: \"close\",\n    value: index,\n    link: true,\n    onClick: onRemoveFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 23\n    }\n  }))))))), __jsx(Modal.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }\n  }, files.length > 0 && __jsx(Button, {\n    basic: true,\n    circular: true,\n    primary: true,\n    floated: \"right\",\n    icon: \"arrow right\",\n    \"aria-label\": intl.formatMessage(messages.upload, {\n      count: files.length\n    }),\n    onClick: onSubmit,\n    title: intl.formatMessage(messages.upload, {\n      count: files.length\n    }),\n    size: \"big\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    basic: true,\n    circular: true,\n    secondary: true,\n    icon: \"remove\",\n    \"aria-label\": intl.formatMessage(messages.cancel),\n    title: intl.formatMessage(messages.cancel),\n    floated: \"right\",\n    size: \"big\",\n    onClick: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  })));\n};\nContentsUploadModal.propTypes = {\n  pathname: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  onOk: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  multiple: PropTypes.bool,\n  minSize: PropTypes.number,\n  maxSize: PropTypes.number,\n  accept: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)])\n};\nexport default ContentsUploadModal;","map":{"version":3,"names":["useState","useEffect","PropTypes","shallowEqual","useDispatch","useSelector","Button","Dimmer","Header","Icon","Image","Modal","Table","Segment","Input","Progress","loadable","concat","filter","map","filesize","readAsDataURL","FormattedMessage","defineMessages","useIntl","FormattedRelativeDate","createContent","validateFileUploadSize","usePrevious","Dropzone","resolved","chunkName","isReady","props","key","resolve","__webpack_modules__","importAsync","requireAsync","then","requireSync","id","__webpack_require__","eval","require","resolveWeak","messages","cancel","upload","filesUploaded","totalFilesToUpload","SUBREQUEST","ContentsUploadModal","intl","dispatch","request","state","_state$content$subreq","content","subrequests","uploadedFiles","prevrequestloading","loading","files","setFiles","totalFiles","setTotalFiles","onOk","loaded","onRemoveFile","event","file","index","parseInt","target","getAttribute","onDrop","newFiles","validFiles","i","length","formatMessage","data","fields","match","preview","push","onCancel","onChangeFileName","e","copyOfFiles","originalFile","newFile","File","value","type","path","onSubmit","Promise","all","dataUrls","pathname","image","split","title","name","encoding","filename","multiple","minSize","maxSize","accept","disabled","dropzoneOptions","open","__jsx","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","defaultMessage","active","total","Content","_extends","noDragEventsBubbling","getRootProps","getInputProps","basic","Body","Row","Cell","style","display","compact","singleLine","HeaderCell","width","onChange","lastModifiedDate","date","size","round","src","height","link","onClick","Actions","circular","primary","floated","icon","count","secondary","propTypes","string","isRequired","bool","func","number","oneOfType","arrayOf"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Contents/ContentsUploadModal.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport {\n  Button,\n  Dimmer,\n  Header,\n  Icon,\n  Image,\n  Modal,\n  Table,\n  Segment,\n  Input,\n  Progress,\n} from 'semantic-ui-react';\nimport loadable from '@loadable/component';\nimport concat from 'lodash/concat';\nimport filter from 'lodash/filter';\nimport map from 'lodash/map';\nimport filesize from 'filesize';\nimport { readAsDataURL } from 'promise-file-reader';\nimport { FormattedMessage, defineMessages, useIntl } from 'react-intl';\nimport FormattedRelativeDate from '@plone/volto/components/theme/FormattedDate/FormattedRelativeDate';\nimport { createContent } from '@plone/volto/actions/content/content';\nimport { validateFileUploadSize } from '@plone/volto/helpers/FormValidation/FormValidation';\nimport { usePrevious } from '@plone/volto/helpers/Utils/usePrevious';\n\nconst Dropzone = loadable(() => import('react-dropzone'));\n\nconst messages = defineMessages({\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  upload: {\n    id: '{count, plural, one {Upload {count} file} other {Upload {count} files}}',\n    defaultMessage:\n      '{count, plural, one {Upload {count} file} other {Upload {count} files}}',\n  },\n  filesUploaded: {\n    id: 'Files uploaded: {uploadedFiles}',\n    defaultMessage: 'Files uploaded: {uploadedFiles}',\n  },\n  totalFilesToUpload: {\n    id: 'Total files to upload: {totalFiles}',\n    defaultMessage: 'Total files to upload: {totalFiles}',\n  },\n});\n\nconst SUBREQUEST = 'batch-upload';\n\nconst ContentsUploadModal = (props) => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const request = useSelector(\n    (state) => state.content.subrequests?.[SUBREQUEST] || {},\n    shallowEqual,\n  );\n  const uploadedFiles = useSelector((state) => state.content.uploadedFiles);\n\n  const prevrequestloading = usePrevious(request.loading);\n  const [files, setFiles] = useState([]);\n  const [totalFiles, setTotalFiles] = useState(0);\n  const { onOk } = props;\n  useEffect(() => {\n    if (prevrequestloading && request.loaded) {\n      onOk();\n      setFiles([]);\n    }\n  }, [prevrequestloading, request.loaded, onOk]);\n\n  const onRemoveFile = (event) => {\n    setFiles(\n      filter(\n        files,\n        (file, index) =>\n          index !== parseInt(event.target.getAttribute('value'), 10),\n      ),\n    );\n    setTotalFiles(totalFiles - 1);\n  };\n\n  const onDrop = async (newFiles) => {\n    const validFiles = [];\n    for (let i = 0; i < newFiles.length; i++) {\n      if (validateFileUploadSize(newFiles[i], intl.formatMessage)) {\n        await readAsDataURL(newFiles[i]).then((data) => {\n          const fields = data.match(/^data:(.*);(.*),(.*)$/);\n          newFiles[i].preview = fields[0];\n        });\n        validFiles.push(newFiles[i]);\n      }\n    }\n    setFiles(concat(files, validFiles));\n    setTotalFiles(validFiles.length);\n  };\n\n  const onCancel = () => {\n    props.onCancel();\n    setFiles([]);\n    setTotalFiles(0);\n  };\n\n  const onChangeFileName = (e, index) => {\n    let copyOfFiles = [...files];\n    let originalFile = files[index];\n    let newFile = new File([originalFile], e.target.value, {\n      type: originalFile.type,\n    });\n    newFile.preview = originalFile.preview;\n    newFile.path = e.target.value;\n    copyOfFiles[index] = newFile;\n    setFiles(copyOfFiles);\n  };\n\n  const onSubmit = () => {\n    Promise.all(map(files, (file) => readAsDataURL(file))).then((dataUrls) => {\n      dispatch(\n        createContent(\n          props.pathname,\n          map(files, (file, index) => {\n            const fields = dataUrls[index].match(/^data:(.*);(.*),(.*)$/);\n            const image = fields[1].split('/')[0] === 'image';\n            return {\n              '@type': image ? 'Image' : 'File',\n              title: file.name,\n              [image ? 'image' : 'file']: {\n                data: fields[3],\n                encoding: fields[2],\n                'content-type': fields[1],\n                filename: file.name,\n              },\n            };\n          }),\n          SUBREQUEST,\n        ),\n      );\n    });\n  };\n\n  const {\n    multiple = true,\n    minSize = null,\n    maxSize = null,\n    accept = null,\n    disabled = false,\n  } = props;\n  const dropzoneOptions = {\n    multiple,\n    minSize,\n    maxSize,\n    accept,\n    disabled,\n  };\n\n  return (\n    props.open && (\n      <Modal className=\"contents-upload-modal\" open={props.open}>\n        <Header>\n          <FormattedMessage id=\"Upload files\" defaultMessage=\"Upload files\" />\n        </Header>\n        <Dimmer active={request.loading}>\n          <div className=\"progress-container\">\n            <Progress\n              className=\"progress-bar\"\n              value={uploadedFiles}\n              total={totalFiles}\n            >\n              {intl.formatMessage(messages.filesUploaded, {\n                uploadedFiles,\n              })}\n              <br />\n              {intl.formatMessage(messages.totalFilesToUpload, {\n                totalFiles,\n              })}\n            </Progress>\n          </div>\n        </Dimmer>\n        <Modal.Content>\n          <Dropzone\n            onDrop={onDrop}\n            className=\"dropzone\"\n            noDragEventsBubbling={true}\n            {...dropzoneOptions}\n          >\n            {({ getRootProps, getInputProps }) => (\n              <div {...getRootProps({ className: 'dashed' })}>\n                <Segment>\n                  <Table basic=\"very\">\n                    <Table.Body>\n                      <Table.Row>\n                        <Table.Cell>\n                          <FormattedMessage\n                            id=\"Drag and drop files from your computer onto this area or click the “Browse” button.\"\n                            defaultMessage=\"Drag and drop files from your computer onto this area or click the “Browse” button.\"\n                          />\n                        </Table.Cell>\n                        <Table.Cell>\n                          <Button className=\"ui button primary\">\n                            <FormattedMessage\n                              id=\"Browse\"\n                              defaultMessage=\"Browse\"\n                            />\n                          </Button>\n                          <input\n                            {...getInputProps({\n                              type: 'file',\n                              style: { display: 'none' },\n                            })}\n                          />\n                        </Table.Cell>\n                      </Table.Row>\n                    </Table.Body>\n                  </Table>\n                </Segment>\n              </div>\n            )}\n          </Dropzone>\n          {files.length > 0 && (\n            <Table compact singleLine>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell width={8}>\n                    <FormattedMessage id=\"Filename\" defaultMessage=\"Filename\" />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell width={4}>\n                    <FormattedMessage\n                      id=\"Last modified\"\n                      defaultMessage=\"Last modified\"\n                    />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell width={4}>\n                    <FormattedMessage\n                      id=\"File size\"\n                      defaultMessage=\"File size\"\n                    />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell width={4}>\n                    <FormattedMessage id=\"Preview\" defaultMessage=\"Preview\" />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell />\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {map(files, (file, index) => (\n                  <Table.Row className=\"upload-row\" key={index}>\n                    <Table.Cell>\n                      <Input\n                        className=\"file-name\"\n                        value={file.name}\n                        onChange={(e) => onChangeFileName(e, index)}\n                      />\n                    </Table.Cell>\n                    <Table.Cell>\n                      {file.lastModifiedDate && (\n                        <FormattedRelativeDate date={file.lastModifiedDate} />\n                      )}\n                    </Table.Cell>\n                    <Table.Cell>{filesize(file.size, { round: 0 })}</Table.Cell>\n                    <Table.Cell>\n                      {file.type.split('/')[0] === 'image' && (\n                        <Image src={file.preview} height={60} />\n                      )}\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Icon\n                        name=\"close\"\n                        value={index}\n                        link\n                        onClick={onRemoveFile}\n                      />\n                    </Table.Cell>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          )}\n        </Modal.Content>\n        <Modal.Actions>\n          {files.length > 0 && (\n            <Button\n              basic\n              circular\n              primary\n              floated=\"right\"\n              icon=\"arrow right\"\n              aria-label={intl.formatMessage(messages.upload, {\n                count: files.length,\n              })}\n              onClick={onSubmit}\n              title={intl.formatMessage(messages.upload, {\n                count: files.length,\n              })}\n              size=\"big\"\n            />\n          )}\n          <Button\n            basic\n            circular\n            secondary\n            icon=\"remove\"\n            aria-label={intl.formatMessage(messages.cancel)}\n            title={intl.formatMessage(messages.cancel)}\n            floated=\"right\"\n            size=\"big\"\n            onClick={onCancel}\n          />\n        </Modal.Actions>\n      </Modal>\n    )\n  );\n};\n\nContentsUploadModal.propTypes = {\n  pathname: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  onOk: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  multiple: PropTypes.bool,\n  minSize: PropTypes.number,\n  maxSize: PropTypes.number,\n  accept: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\nexport default ContentsUploadModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Cancel","defaultMessage":"Cancel"},{"id":"{count, plural, one {Upload {count} file} other {Upload {count} files}}","defaultMessage":"{count, plural, one {Upload {count} file} other {Upload {count} files}}"},{"id":"Files uploaded: {uploadedFiles}","defaultMessage":"Files uploaded: {uploadedFiles}"},{"id":"Total files to upload: {totalFiles}","defaultMessage":"Total files to upload: {totalFiles}"},{"id":"Upload files","defaultMessage":"Upload files"},{"id":"Drag and drop files from your computer onto this area or click the “Browse” button.","defaultMessage":"Drag and drop files from your computer onto this area or click the “Browse” button."},{"id":"Browse","defaultMessage":"Browse"},{"id":"Filename","defaultMessage":"Filename"},{"id":"Last modified","defaultMessage":"Last modified"},{"id":"File size","defaultMessage":"File size"},{"id":"Preview","defaultMessage":"Preview"}]}},"sourceType":"module","externalDependencies":[]}