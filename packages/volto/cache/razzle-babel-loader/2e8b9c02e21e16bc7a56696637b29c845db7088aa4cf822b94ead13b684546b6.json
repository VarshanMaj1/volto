{"ast":null,"code":"import _extends from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Contents/ContentsItem.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nvar __jsx = React.createElement;\n/**\n * Contents item component.\n * @module components/manage/Contents/ContentsItem\n */\n\nimport React from 'react';\nimport { Button, Table, Menu, Divider } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport map from 'lodash/map';\nimport { useIntl, defineMessages, FormattedMessage } from 'react-intl';\nimport Circle from '@plone/volto/components/manage/Contents/circle';\nimport FormattedDate from '@plone/volto/components/theme/FormattedDate/FormattedDate';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Popup from '@plone/volto/components/theme/Popup/Popup';\nimport { getContentIcon } from '@plone/volto/helpers/Content/Content';\nimport moreSVG from '@plone/volto/icons/more.svg';\nimport checkboxUncheckedSVG from '@plone/volto/icons/checkbox-unchecked.svg';\nimport checkboxCheckedSVG from '@plone/volto/icons/checkbox-checked.svg';\nimport cutSVG from '@plone/volto/icons/cut.svg';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport copySVG from '@plone/volto/icons/copy.svg';\nimport showSVG from '@plone/volto/icons/show.svg';\nimport moveUpSVG from '@plone/volto/icons/move-up.svg';\nimport moveDownSVG from '@plone/volto/icons/move-down.svg';\nimport editingSVG from '@plone/volto/icons/editing.svg';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport cx from 'classnames';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nconst messages = defineMessages({\n  private: {\n    \"id\": \"private\",\n    \"defaultMessage\": \"Private\"\n  },\n  pending: {\n    \"id\": \"pending\",\n    \"defaultMessage\": \"Pending\"\n  },\n  published: {\n    \"id\": \"published\",\n    \"defaultMessage\": \"Published\"\n  },\n  intranet: {\n    \"id\": \"intranet\",\n    \"defaultMessage\": \"Intranet\"\n  },\n  draft: {\n    \"id\": \"draft\",\n    \"defaultMessage\": \"Draft\"\n  },\n  no_workflow_state: {\n    \"id\": \"no workflow state\",\n    \"defaultMessage\": \"No workflow state\"\n  },\n  none: {\n    \"id\": \"None\",\n    \"defaultMessage\": \"None\"\n  }\n});\nfunction getColor(string) {\n  switch (string) {\n    case 'private':\n      return '#ed4033';\n    case 'published':\n      return '#007bc1';\n    case 'intranet':\n      return '#51aa55';\n    case 'draft':\n      return '#f6a808';\n    default:\n      return 'grey';\n  }\n}\n\n/**\n * Contents item component class.\n * @function ContentsItemComponent\n * @returns {string} Markup of the component.\n */\nexport const ContentsItemComponent = ({\n  item,\n  selected,\n  onClick,\n  indexes,\n  onCut,\n  onCopy,\n  onDelete,\n  onMoveToTop,\n  onMoveToBottom,\n  connectDragPreview,\n  connectDragSource,\n  connectDropTarget,\n  isDragging,\n  order\n}) => {\n  _s();\n  const intl = useIntl();\n  return connectDropTarget(connectDragPreview(__jsx(\"tr\", {\n    key: item['@id'],\n    className: cx('', {\n      'dragging-row': isDragging\n    }),\n    \"aria-label\": item['@id'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, __jsx(Table.Cell, {\n    className: cx('', {\n      'dragging-cell': isDragging\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, connectDragSource(__jsx(\"div\", {\n    style: {\n      display: 'inline-block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    icon: true,\n    basic: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: dragSVG,\n    size: \"20px\",\n    color: \"#878f93\",\n    className: \"content drag handle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }))))), __jsx(Table.Cell, {\n    className: cx('', {\n      'dragging-cell': isDragging\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, selected ? __jsx(Button, {\n    icon: true,\n    basic: true,\n    \"aria-label\": \"Unchecked\",\n    onClick: e => onClick(e, item['@id']),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    name: checkboxCheckedSVG,\n    color: \"#007eb1\",\n    size: \"24px\",\n    className: \"checked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  })) : __jsx(Button, {\n    icon: true,\n    basic: true,\n    \"aria-label\": \"Checked\",\n    onClick: e => onClick(e, item['@id']),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    name: checkboxUncheckedSVG,\n    color: \"#826a6a\",\n    size: \"24px\",\n    className: \"unchecked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }))), __jsx(Table.Cell, {\n    className: cx('', {\n      'dragging-cell': isDragging\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    className: \"icon-align-name\",\n    to: `${item['@id']}${item.is_folderish ? '/contents' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"expire-align\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    name: getContentIcon(item['@type'], item.is_folderish),\n    size: \"20px\",\n    className: \"icon-margin\",\n    color: \"#878f93\",\n    title: item['Type'] || item['@type'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }), ' ', __jsx(\"span\", {\n    title: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, \" \", item.title)), item.ExpirationDate !== 'None' && new Date(item.ExpirationDate).getTime() < new Date().getTime() && __jsx(Button, {\n    className: \"button-margin\",\n    size: \"mini\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Expired\",\n    defaultMessage: \"Expired\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  })), item.EffectiveDate !== 'None' && new Date(item.EffectiveDate).getTime() > new Date().getTime() && __jsx(Button, {\n    className: \"button-margin effective-future\",\n    size: \"mini\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Scheduled\",\n    defaultMessage: \"Scheduled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  })))), map(indexes, index => {\n    var _item$index$id;\n    return __jsx(Table.Cell, {\n      className: cx('', {\n        'dragging-cell': isDragging\n      }),\n      key: index.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, index.type === 'boolean' && (item[index.id] ? __jsx(FormattedMessage, {\n      id: \"Yes\",\n      defaultMessage: \"Yes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }) : __jsx(FormattedMessage, {\n      id: \"No\",\n      defaultMessage: \"No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    })), index.type === 'string' && index.id !== 'review_state' && item[index.id], index.id === 'review_state' && __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, __jsx(Circle, {\n      color: getColor(item[index.id]),\n      size: \"15px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 19\n      }\n    })), messages[item[index.id]] ? intl.formatMessage(messages[item[index.id]]) : item['review_title'] || item['review_state'] || intl.formatMessage(messages.no_workflow_state)), index.type === 'date' && __jsx(React.Fragment, null, item[index === null || index === void 0 ? void 0 : index.id] && item[index.id] !== 'None' ? __jsx(FormattedDate, {\n      date: item[index.id],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 19\n      }\n    }) : intl.formatMessage(messages.none)), index.type === 'array' && __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 15\n      }\n    }, (_item$index$id = item[index.id]) === null || _item$index$id === void 0 ? void 0 : _item$index$id.join(', ')));\n  }), __jsx(Table.Cell, {\n    className: cx('', {\n      'dragging-cell': isDragging\n    }),\n    textAlign: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, __jsx(Popup, {\n    menu: true,\n    position: \"bottom right\",\n    flowing: true,\n    basic: true,\n    on: \"click\",\n    popper: {\n      className: 'dropdown-popup'\n    },\n    trigger: __jsx(Icon, {\n      name: moreSVG,\n      className: \"dropdown-popup-trigger\",\n      size: \"24px\",\n      color: \"#007eb1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }, __jsx(Menu, {\n    vertical: true,\n    borderless: true,\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    className: \"item icon-align\",\n    to: `${item['@id']}/edit`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: editingSVG,\n    color: \"#007eb1\",\n    size: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }\n  }), ' ', __jsx(FormattedMessage, {\n    id: \"Edit\",\n    defaultMessage: \"Edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  })), __jsx(Link, {\n    className: \"item right-dropdown icon-align\",\n    to: item['@id'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: showSVG,\n    color: \"#007eb1\",\n    size: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }), ' ', __jsx(FormattedMessage, {\n    id: \"View\",\n    defaultMessage: \"View\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  })), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }), __jsx(Menu.Item, {\n    onClick: onCut,\n    value: item['@id'],\n    className: \"right-dropdown icon-align\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: cutSVG,\n    color: \"#007eb1\",\n    size: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }\n  }), ' ', __jsx(FormattedMessage, {\n    id: \"Cut\",\n    defaultMessage: \"Cut\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 17\n    }\n  })), __jsx(Menu.Item, {\n    onClick: onCopy,\n    value: item['@id'],\n    className: \"right-dropdown icon-align\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: copySVG,\n    color: \"#007eb1\",\n    size: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }), ' ', __jsx(FormattedMessage, {\n    id: \"Copy\",\n    defaultMessage: \"Copy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  })), __jsx(Menu.Item, {\n    onClick: onDelete,\n    value: item['@id'],\n    className: \"right-dropdown icon-align\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: deleteSVG,\n    color: \"#e40166\",\n    size: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }), ' ', __jsx(FormattedMessage, {\n    id: \"Delete\",\n    defaultMessage: \"Delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }\n  })), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }), __jsx(Menu.Item, {\n    onClick: onMoveToTop,\n    value: order,\n    className: \"right-dropdown icon-align\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: moveUpSVG,\n    color: \"#007eb1\",\n    size: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }\n  }), ' ', __jsx(FormattedMessage, {\n    id: \"Move to top of folder\",\n    defaultMessage: \"Move to top of folder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }\n  })), __jsx(Menu.Item, {\n    onClick: onMoveToBottom,\n    value: order,\n    className: \"right-dropdown icon-align\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: moveDownSVG,\n    color: \"#007eb1\",\n    size: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 17\n    }\n  }), ' ', __jsx(FormattedMessage, {\n    id: \"Move to bottom of folder\",\n    defaultMessage: \"Move to bottom of folder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }\n  }))))))));\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_s(ContentsItemComponent, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n_c = ContentsItemComponent;\nContentsItemComponent.propTypes = {\n  item: PropTypes.shape({\n    '@id': PropTypes.string,\n    title: PropTypes.string,\n    is_folderish: PropTypes.bool,\n    '@type': PropTypes.string\n  }).isRequired,\n  selected: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  indexes: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    type: PropTypes.string\n  })).isRequired,\n  onCut: PropTypes.func.isRequired,\n  onCopy: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onMoveToTop: PropTypes.func.isRequired,\n  onMoveToBottom: PropTypes.func.isRequired,\n  connectDragPreview: PropTypes.func.isRequired,\n  connectDragSource: PropTypes.func.isRequired,\n  connectDropTarget: PropTypes.func.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  order: PropTypes.number.isRequired,\n  onOrderItem: PropTypes.func.isRequired\n};\nconst DragDropConnector = props => {\n  _s2();\n  const {\n    DropTarget,\n    DragSource\n  } = props.reactDnd;\n  const DndConnectedContentsItem = React.useMemo(() => DropTarget('item', {\n    hover(props, monitor) {\n      const id = monitor.getItem().id;\n      const dragOrder = monitor.getItem().order;\n      const hoverOrder = props.order;\n      if (dragOrder === hoverOrder) {\n        return;\n      }\n      props.onOrderItem(id, dragOrder, hoverOrder - dragOrder, false);\n      monitor.getItem().order = hoverOrder;\n    },\n    drop(props, monitor) {\n      const id = monitor.getItem().id;\n      const dragOrder = monitor.getItem().startOrder;\n      const dropOrder = props.order;\n      if (dragOrder === dropOrder) {\n        return;\n      }\n      props.onOrderItem(id, dragOrder, dropOrder - dragOrder, true);\n      monitor.getItem().order = dropOrder;\n    }\n  }, connect => ({\n    connectDropTarget: connect.dropTarget()\n  }))(DragSource('item', {\n    beginDrag(props) {\n      return {\n        id: props.item['@id'],\n        order: props.order,\n        startOrder: props.order\n      };\n    }\n  }, (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: monitor.isDragging()\n  }))(ContentsItemComponent)), [DragSource, DropTarget]);\n  return __jsx(DndConnectedContentsItem, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 10\n    }\n  }));\n};\n_s2(DragDropConnector, \"QU49Dd/8PiRoN0uSZ9ShTLalCpo=\");\n_c2 = DragDropConnector;\nexport default injectLazyLibs('reactDnd')(DragDropConnector);\nvar _c, _c2;\n$RefreshReg$(_c, \"ContentsItemComponent\");\n$RefreshReg$(_c2, \"DragDropConnector\");","map":{"version":3,"names":["React","Button","Table","Menu","Divider","Link","PropTypes","map","useIntl","defineMessages","FormattedMessage","Circle","FormattedDate","Icon","Popup","getContentIcon","moreSVG","checkboxUncheckedSVG","checkboxCheckedSVG","cutSVG","deleteSVG","copySVG","showSVG","moveUpSVG","moveDownSVG","editingSVG","dragSVG","cx","injectLazyLibs","messages","private","pending","published","intranet","draft","no_workflow_state","none","getColor","string","ContentsItemComponent","item","selected","onClick","indexes","onCut","onCopy","onDelete","onMoveToTop","onMoveToBottom","connectDragPreview","connectDragSource","connectDropTarget","isDragging","order","_s","intl","__jsx","key","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Cell","style","display","icon","basic","name","size","color","e","to","is_folderish","title","ExpirationDate","Date","getTime","id","defaultMessage","EffectiveDate","index","_item$index$id","type","formatMessage","Fragment","date","join","textAlign","menu","position","flowing","on","popper","trigger","vertical","borderless","fluid","Item","value","_c","propTypes","shape","bool","isRequired","func","arrayOf","number","onOrderItem","DragDropConnector","props","_s2","DropTarget","DragSource","reactDnd","DndConnectedContentsItem","useMemo","hover","monitor","getItem","dragOrder","hoverOrder","drop","startOrder","dropOrder","connect","dropTarget","beginDrag","dragSource","dragPreview","_extends","_c2","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Contents/ContentsItem.jsx"],"sourcesContent":["/**\n * Contents item component.\n * @module components/manage/Contents/ContentsItem\n */\n\nimport React from 'react';\nimport { Button, Table, Menu, Divider } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport map from 'lodash/map';\nimport { useIntl, defineMessages, FormattedMessage } from 'react-intl';\nimport Circle from '@plone/volto/components/manage/Contents/circle';\nimport FormattedDate from '@plone/volto/components/theme/FormattedDate/FormattedDate';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport Popup from '@plone/volto/components/theme/Popup/Popup';\nimport { getContentIcon } from '@plone/volto/helpers/Content/Content';\nimport moreSVG from '@plone/volto/icons/more.svg';\nimport checkboxUncheckedSVG from '@plone/volto/icons/checkbox-unchecked.svg';\nimport checkboxCheckedSVG from '@plone/volto/icons/checkbox-checked.svg';\nimport cutSVG from '@plone/volto/icons/cut.svg';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport copySVG from '@plone/volto/icons/copy.svg';\nimport showSVG from '@plone/volto/icons/show.svg';\nimport moveUpSVG from '@plone/volto/icons/move-up.svg';\nimport moveDownSVG from '@plone/volto/icons/move-down.svg';\nimport editingSVG from '@plone/volto/icons/editing.svg';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport cx from 'classnames';\n\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nconst messages = defineMessages({\n  private: {\n    id: 'private',\n    defaultMessage: 'Private',\n  },\n  pending: {\n    id: 'pending',\n    defaultMessage: 'Pending',\n  },\n  published: {\n    id: 'published',\n    defaultMessage: 'Published',\n  },\n  intranet: {\n    id: 'intranet',\n    defaultMessage: 'Intranet',\n  },\n  draft: {\n    id: 'draft',\n    defaultMessage: 'Draft',\n  },\n  no_workflow_state: {\n    id: 'no workflow state',\n    defaultMessage: 'No workflow state',\n  },\n  none: {\n    id: 'None',\n    defaultMessage: 'None',\n  },\n});\n\nfunction getColor(string) {\n  switch (string) {\n    case 'private':\n      return '#ed4033';\n    case 'published':\n      return '#007bc1';\n    case 'intranet':\n      return '#51aa55';\n    case 'draft':\n      return '#f6a808';\n    default:\n      return 'grey';\n  }\n}\n\n/**\n * Contents item component class.\n * @function ContentsItemComponent\n * @returns {string} Markup of the component.\n */\nexport const ContentsItemComponent = ({\n  item,\n  selected,\n  onClick,\n  indexes,\n  onCut,\n  onCopy,\n  onDelete,\n  onMoveToTop,\n  onMoveToBottom,\n  connectDragPreview,\n  connectDragSource,\n  connectDropTarget,\n  isDragging,\n  order,\n}) => {\n  const intl = useIntl();\n\n  return connectDropTarget(\n    connectDragPreview(\n      <tr\n        key={item['@id']}\n        className={cx('', { 'dragging-row': isDragging })}\n        aria-label={item['@id']}\n      >\n        <Table.Cell className={cx('', { 'dragging-cell': isDragging })}>\n          {connectDragSource(\n            <div style={{ display: 'inline-block' }}>\n              <Button icon basic>\n                <Icon\n                  name={dragSVG}\n                  size=\"20px\"\n                  color=\"#878f93\"\n                  className=\"content drag handle\"\n                />\n              </Button>\n            </div>,\n          )}\n        </Table.Cell>\n        <Table.Cell className={cx('', { 'dragging-cell': isDragging })}>\n          {selected ? (\n            <Button\n              icon\n              basic\n              aria-label=\"Unchecked\"\n              onClick={(e) => onClick(e, item['@id'])}\n            >\n              <Icon\n                name={checkboxCheckedSVG}\n                color=\"#007eb1\"\n                size=\"24px\"\n                className=\"checked\"\n              />\n            </Button>\n          ) : (\n            <Button\n              icon\n              basic\n              aria-label=\"Checked\"\n              onClick={(e) => onClick(e, item['@id'])}\n            >\n              <Icon\n                name={checkboxUncheckedSVG}\n                color=\"#826a6a\"\n                size=\"24px\"\n                className=\"unchecked\"\n              />\n            </Button>\n          )}\n        </Table.Cell>\n        <Table.Cell className={cx('', { 'dragging-cell': isDragging })}>\n          <Link\n            className=\"icon-align-name\"\n            to={`${item['@id']}${item.is_folderish ? '/contents' : ''}`}\n          >\n            <div className=\"expire-align\">\n              <Icon\n                name={getContentIcon(item['@type'], item.is_folderish)}\n                size=\"20px\"\n                className=\"icon-margin\"\n                color=\"#878f93\"\n                title={item['Type'] || item['@type']}\n              />{' '}\n              <span title={item.title}> {item.title}</span>\n            </div>\n            {item.ExpirationDate !== 'None' &&\n              new Date(item.ExpirationDate).getTime() <\n                new Date().getTime() && (\n                <Button className=\"button-margin\" size=\"mini\">\n                  <FormattedMessage id=\"Expired\" defaultMessage=\"Expired\" />\n                </Button>\n              )}\n            {item.EffectiveDate !== 'None' &&\n              new Date(item.EffectiveDate).getTime() > new Date().getTime() && (\n                <Button className=\"button-margin effective-future\" size=\"mini\">\n                  <FormattedMessage id=\"Scheduled\" defaultMessage=\"Scheduled\" />\n                </Button>\n              )}\n          </Link>\n        </Table.Cell>\n        {map(indexes, (index) => (\n          <Table.Cell\n            className={cx('', { 'dragging-cell': isDragging })}\n            key={index.id}\n          >\n            {index.type === 'boolean' &&\n              (item[index.id] ? (\n                <FormattedMessage id=\"Yes\" defaultMessage=\"Yes\" />\n              ) : (\n                <FormattedMessage id=\"No\" defaultMessage=\"No\" />\n              ))}\n            {index.type === 'string' &&\n              index.id !== 'review_state' &&\n              item[index.id]}\n            {index.id === 'review_state' && (\n              <div>\n                <span>\n                  <Circle color={getColor(item[index.id])} size=\"15px\" />\n                </span>\n                {messages[item[index.id]]\n                  ? intl.formatMessage(messages[item[index.id]])\n                  : item['review_title'] ||\n                    item['review_state'] ||\n                    intl.formatMessage(messages.no_workflow_state)}\n              </div>\n            )}\n            {index.type === 'date' && (\n              <>\n                {item[index?.id] && item[index.id] !== 'None' ? (\n                  <FormattedDate date={item[index.id]} />\n                ) : (\n                  intl.formatMessage(messages.none)\n                )}\n              </>\n            )}\n            {index.type === 'array' && (\n              <span>{item[index.id]?.join(', ')}</span>\n            )}\n          </Table.Cell>\n        ))}\n        <Table.Cell\n          className={cx('', { 'dragging-cell': isDragging })}\n          textAlign=\"right\"\n        >\n          <Popup\n            menu={true}\n            position=\"bottom right\"\n            flowing={true}\n            basic={true}\n            on=\"click\"\n            popper={{\n              className: 'dropdown-popup',\n            }}\n            trigger={\n              <Icon\n                name={moreSVG}\n                className=\"dropdown-popup-trigger\"\n                size=\"24px\"\n                color=\"#007eb1\"\n              />\n            }\n          >\n            <Menu vertical borderless fluid>\n              <Link className=\"item icon-align\" to={`${item['@id']}/edit`}>\n                <Icon name={editingSVG} color=\"#007eb1\" size=\"24px\" />{' '}\n                <FormattedMessage id=\"Edit\" defaultMessage=\"Edit\" />\n              </Link>\n              <Link className=\"item right-dropdown icon-align\" to={item['@id']}>\n                <Icon name={showSVG} color=\"#007eb1\" size=\"24px\" />{' '}\n                <FormattedMessage id=\"View\" defaultMessage=\"View\" />\n              </Link>\n              <Divider />\n              <Menu.Item\n                onClick={onCut}\n                value={item['@id']}\n                className=\"right-dropdown icon-align\"\n              >\n                <Icon name={cutSVG} color=\"#007eb1\" size=\"24px\" />{' '}\n                <FormattedMessage id=\"Cut\" defaultMessage=\"Cut\" />\n              </Menu.Item>\n              <Menu.Item\n                onClick={onCopy}\n                value={item['@id']}\n                className=\"right-dropdown icon-align\"\n              >\n                <Icon name={copySVG} color=\"#007eb1\" size=\"24px\" />{' '}\n                <FormattedMessage id=\"Copy\" defaultMessage=\"Copy\" />\n              </Menu.Item>\n              <Menu.Item\n                onClick={onDelete}\n                value={item['@id']}\n                className=\"right-dropdown icon-align\"\n              >\n                <Icon name={deleteSVG} color=\"#e40166\" size=\"24px\" />{' '}\n                <FormattedMessage id=\"Delete\" defaultMessage=\"Delete\" />\n              </Menu.Item>\n              <Divider />\n              <Menu.Item\n                onClick={onMoveToTop}\n                value={order}\n                className=\"right-dropdown icon-align\"\n              >\n                <Icon name={moveUpSVG} color=\"#007eb1\" size=\"24px\" />{' '}\n                <FormattedMessage\n                  id=\"Move to top of folder\"\n                  defaultMessage=\"Move to top of folder\"\n                />\n              </Menu.Item>\n              <Menu.Item\n                onClick={onMoveToBottom}\n                value={order}\n                className=\"right-dropdown icon-align\"\n              >\n                <Icon name={moveDownSVG} color=\"#007eb1\" size=\"24px\" />{' '}\n                <FormattedMessage\n                  id=\"Move to bottom of folder\"\n                  defaultMessage=\"Move to bottom of folder\"\n                />\n              </Menu.Item>\n            </Menu>\n          </Popup>\n        </Table.Cell>\n      </tr>,\n    ),\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nContentsItemComponent.propTypes = {\n  item: PropTypes.shape({\n    '@id': PropTypes.string,\n    title: PropTypes.string,\n    is_folderish: PropTypes.bool,\n    '@type': PropTypes.string,\n  }).isRequired,\n  selected: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  indexes: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.string,\n    }),\n  ).isRequired,\n  onCut: PropTypes.func.isRequired,\n  onCopy: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onMoveToTop: PropTypes.func.isRequired,\n  onMoveToBottom: PropTypes.func.isRequired,\n  connectDragPreview: PropTypes.func.isRequired,\n  connectDragSource: PropTypes.func.isRequired,\n  connectDropTarget: PropTypes.func.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  order: PropTypes.number.isRequired,\n  onOrderItem: PropTypes.func.isRequired,\n};\n\nconst DragDropConnector = (props) => {\n  const { DropTarget, DragSource } = props.reactDnd;\n\n  const DndConnectedContentsItem = React.useMemo(\n    () =>\n      DropTarget(\n        'item',\n        {\n          hover(props, monitor) {\n            const id = monitor.getItem().id;\n            const dragOrder = monitor.getItem().order;\n            const hoverOrder = props.order;\n\n            if (dragOrder === hoverOrder) {\n              return;\n            }\n\n            props.onOrderItem(id, dragOrder, hoverOrder - dragOrder, false);\n\n            monitor.getItem().order = hoverOrder;\n          },\n          drop(props, monitor) {\n            const id = monitor.getItem().id;\n            const dragOrder = monitor.getItem().startOrder;\n            const dropOrder = props.order;\n\n            if (dragOrder === dropOrder) {\n              return;\n            }\n\n            props.onOrderItem(id, dragOrder, dropOrder - dragOrder, true);\n\n            monitor.getItem().order = dropOrder;\n          },\n        },\n        (connect) => ({\n          connectDropTarget: connect.dropTarget(),\n        }),\n      )(\n        DragSource(\n          'item',\n          {\n            beginDrag(props) {\n              return {\n                id: props.item['@id'],\n                order: props.order,\n                startOrder: props.order,\n              };\n            },\n          },\n          (connect, monitor) => ({\n            connectDragSource: connect.dragSource(),\n            connectDragPreview: connect.dragPreview(),\n            isDragging: monitor.isDragging(),\n          }),\n        )(ContentsItemComponent),\n      ),\n    [DragSource, DropTarget],\n  );\n\n  return <DndConnectedContentsItem {...props} />;\n};\n\nexport default injectLazyLibs('reactDnd')(DragDropConnector);\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"private","defaultMessage":"Private"},{"id":"pending","defaultMessage":"Pending"},{"id":"published","defaultMessage":"Published"},{"id":"intranet","defaultMessage":"Intranet"},{"id":"draft","defaultMessage":"Draft"},{"id":"no workflow state","defaultMessage":"No workflow state"},{"id":"None","defaultMessage":"None"},{"id":"Expired","defaultMessage":"Expired"},{"id":"Scheduled","defaultMessage":"Scheduled"},{"id":"Yes","defaultMessage":"Yes"},{"id":"No","defaultMessage":"No"},{"id":"Edit","defaultMessage":"Edit"},{"id":"View","defaultMessage":"View"},{"id":"Cut","defaultMessage":"Cut"},{"id":"Copy","defaultMessage":"Copy"},{"id":"Delete","defaultMessage":"Delete"},{"id":"Move to top of folder","defaultMessage":"Move to top of folder"},{"id":"Move to bottom of folder","defaultMessage":"Move to bottom of folder"}]}},"sourceType":"module","externalDependencies":[]}