{"ast":null,"code":"import _extends from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Listing/Edit.jsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, useIntl } from 'react-intl';\nimport isEqual from 'lodash/isEqual';\nimport SidebarPortal from '@plone/volto/components/manage/Sidebar/SidebarPortal';\nimport { default as ListingBody } from '@plone/volto/components/manage/Blocks/Listing/ListingBody';\nimport ListingData from './ListingData';\nimport { withBlockExtensions } from '@plone/volto/helpers/Extensions';\nimport { getBaseUrl } from '@plone/volto/helpers/Url/Url';\nconst messages = defineMessages({\n  results: {\n    \"id\": \"Results preview\",\n    \"defaultMessage\": \"Results preview\"\n  },\n  items: {\n    \"id\": \"Contained items\",\n    \"defaultMessage\": \"Contained items\"\n  }\n});\nconst Edit = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_c = _s(props => {\n  var _data$querystring, _data$querystring$que;\n  _s();\n  const {\n    data,\n    onChangeBlock,\n    block,\n    selected,\n    pathname\n  } = props;\n  const intl = useIntl();\n  const placeholder = data.placeholder || (data !== null && data !== void 0 && (_data$querystring = data.querystring) !== null && _data$querystring !== void 0 && (_data$querystring$que = _data$querystring.query) !== null && _data$querystring$que !== void 0 && _data$querystring$que.length ? intl.formatMessage(messages.results) : intl.formatMessage(messages.items));\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"items-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, placeholder), __jsx(ListingBody, _extends({}, props, {\n    path: getBaseUrl(pathname),\n    isEditMode: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), __jsx(SidebarPortal, {\n    selected: selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(ListingData, _extends({\n    key: block\n  }, props, {\n    data: data,\n    block: block,\n    onChangeBlock: onChangeBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }))));\n}, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n}), function areEquals(prevProps, nextProps) {\n  return !(nextProps.selected !== prevProps.selected || !isEqual(prevProps.data, nextProps.data));\n}), \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n_c2 = Edit;\nEdit.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  index: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n  block: PropTypes.string.isRequired,\n  onSelectBlock: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.any),\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n  pathname: PropTypes.string.isRequired\n};\nexport default _c3 = withBlockExtensions(Edit);\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Edit$React.memo\");\n$RefreshReg$(_c2, \"Edit\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"names":["React","PropTypes","defineMessages","useIntl","isEqual","SidebarPortal","default","ListingBody","ListingData","withBlockExtensions","getBaseUrl","messages","results","items","Edit","_s","memo","_c","props","_data$querystring","_data$querystring$que","data","onChangeBlock","block","selected","pathname","intl","placeholder","querystring","query","length","formatMessage","__jsx","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_extends","path","isEditMode","key","areEquals","prevProps","nextProps","_c2","propTypes","objectOf","any","isRequired","index","number","bool","string","onSelectBlock","func","arrayOf","properties","_c3","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Listing/Edit.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, useIntl } from 'react-intl';\nimport isEqual from 'lodash/isEqual';\n\nimport SidebarPortal from '@plone/volto/components/manage/Sidebar/SidebarPortal';\nimport { default as ListingBody } from '@plone/volto/components/manage/Blocks/Listing/ListingBody';\nimport ListingData from './ListingData';\n\nimport { withBlockExtensions } from '@plone/volto/helpers/Extensions';\nimport { getBaseUrl } from '@plone/volto/helpers/Url/Url';\n\nconst messages = defineMessages({\n  results: {\n    id: 'Results preview',\n    defaultMessage: 'Results preview',\n  },\n  items: {\n    id: 'Contained items',\n    defaultMessage: 'Contained items',\n  },\n});\n\nconst Edit = React.memo(\n  (props) => {\n    const { data, onChangeBlock, block, selected, pathname } = props;\n    const intl = useIntl();\n    const placeholder =\n      data.placeholder ||\n      (data?.querystring?.query?.length\n        ? intl.formatMessage(messages.results)\n        : intl.formatMessage(messages.items));\n\n    return (\n      <>\n        <p className=\"items-preview\">{placeholder}</p>\n        <ListingBody {...props} path={getBaseUrl(pathname)} isEditMode />\n        <SidebarPortal selected={selected}>\n          <ListingData\n            key={block}\n            {...props}\n            data={data}\n            block={block}\n            onChangeBlock={onChangeBlock}\n          />\n        </SidebarPortal>\n      </>\n    );\n  },\n  function areEquals(prevProps, nextProps) {\n    return !(\n      nextProps.selected !== prevProps.selected ||\n      !isEqual(prevProps.data, nextProps.data)\n    );\n  },\n);\n\nEdit.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  index: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n  block: PropTypes.string.isRequired,\n  onSelectBlock: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.any),\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n  pathname: PropTypes.string.isRequired,\n};\n\nexport default withBlockExtensions(Edit);\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,cAAc,EAAEC,OAAO,QAAQ,YAAY;AACpD,OAAOC,OAAO,MAAM,gBAAgB;AAEpC,OAAOC,aAAa,MAAM,sDAAsD;AAChF,SAASC,OAAO,IAAIC,WAAW,QAAQ,2DAA2D;AAClG,OAAOC,WAAW,MAAM,eAAe;AAEvC,SAASC,mBAAmB,QAAQ,iCAAiC;AACrE,SAASC,UAAU,QAAQ,8BAA8B;AAEzD,MAAMC,QAAQ,GAAGT,cAAc,CAAC;EAC9BU,OAAO;IAAA;IAAA;EAAA,CAGN;EACDC,KAAK;IAAA;IAAA;EAAA;AAIP,CAAC,CAAC;AAEF,MAAMC,IAAI,gBAAAC,EAAA,cAAGf,KAAK,CAACgB,IAAI,CAAAC,EAAA,GAAAF,EAAA,CACpBG,KAAK,IAAK;EAAA,IAAAC,iBAAA,EAAAC,qBAAA;EAAAL,EAAA;EACT,MAAM;IAAEM,IAAI;IAAEC,aAAa;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGP,KAAK;EAChE,MAAMQ,IAAI,GAAGvB,OAAO,CAAC,CAAC;EACtB,MAAMwB,WAAW,GACfN,IAAI,CAACM,WAAW,KACfN,IAAI,aAAJA,IAAI,gBAAAF,iBAAA,GAAJE,IAAI,CAAEO,WAAW,cAAAT,iBAAA,gBAAAC,qBAAA,GAAjBD,iBAAA,CAAmBU,KAAK,cAAAT,qBAAA,eAAxBA,qBAAA,CAA0BU,MAAM,GAC7BJ,IAAI,CAACK,aAAa,CAACpB,QAAQ,CAACC,OAAO,CAAC,GACpCc,IAAI,CAACK,aAAa,CAACpB,QAAQ,CAACE,KAAK,CAAC,CAAC;EAEzC,OACEmB,KAAA,CAAAhC,KAAA,CAAAiC,QAAA,QACED,KAAA;IAAGE,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEb,WAAe,CAAC,EAC9CK,KAAA,CAACzB,WAAW,EAAAkC,QAAA,KAAKvB,KAAK;IAAEwB,IAAI,EAAEhC,UAAU,CAACe,QAAQ,CAAE;IAACkB,UAAU;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAE,CAAC,EACjER,KAAA,CAAC3B,aAAa;IAACmB,QAAQ,EAAEA,QAAS;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAChCR,KAAA,CAACxB,WAAW,EAAAiC,QAAA;IACVG,GAAG,EAAErB;EAAM,GACPL,KAAK;IACTG,IAAI,EAAEA,IAAK;IACXE,KAAK,EAAEA,KAAM;IACbD,aAAa,EAAEA,aAAc;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAC9B,CACY,CACf,CAAC;AAEP,CAAC;EAAA,QAtBcrC,OAAO;AAAA,IAuBtB,SAAS0C,SAASA,CAACC,SAAS,EAAEC,SAAS,EAAE;EACvC,OAAO,EACLA,SAAS,CAACvB,QAAQ,KAAKsB,SAAS,CAACtB,QAAQ,IACzC,CAACpB,OAAO,CAAC0C,SAAS,CAACzB,IAAI,EAAE0B,SAAS,CAAC1B,IAAI,CAAC,CACzC;AACH,CACF,CAAC;EAAA,QA7BgBlB,OAAO;AAAA,EA6BvB;AAAC6C,GAAA,GAhCIlC,IAAI;AAkCVA,IAAI,CAACmC,SAAS,GAAG;EACf5B,IAAI,EAAEpB,SAAS,CAACiD,QAAQ,CAACjD,SAAS,CAACkD,GAAG,CAAC,CAACC,UAAU;EAClDC,KAAK,EAAEpD,SAAS,CAACqD,MAAM,CAACF,UAAU;EAClC5B,QAAQ,EAAEvB,SAAS,CAACsD,IAAI,CAACH,UAAU;EACnC7B,KAAK,EAAEtB,SAAS,CAACuD,MAAM,CAACJ,UAAU;EAClCK,aAAa,EAAExD,SAAS,CAACyD,IAAI,CAACN,UAAU;EACxCvC,KAAK,EAAEZ,SAAS,CAAC0D,OAAO,CAAC1D,SAAS,CAACkD,GAAG,CAAC;EACvCS,UAAU,EAAE3D,SAAS,CAACiD,QAAQ,CAACjD,SAAS,CAACkD,GAAG,CAAC,CAACC,UAAU;EACxD3B,QAAQ,EAAExB,SAAS,CAACuD,MAAM,CAACJ;AAC7B,CAAC;AAED,eAAAS,GAAA,GAAepD,mBAAmB,CAACK,IAAI,CAAC;AAAC,IAAAG,EAAA,EAAA+B,GAAA,EAAAa,GAAA;AAAAC,YAAA,CAAA7C,EAAA;AAAA6C,YAAA,CAAAd,GAAA;AAAAc,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Results preview","defaultMessage":"Results preview"},{"id":"Contained items","defaultMessage":"Contained items"}]}},"sourceType":"module","externalDependencies":[]}