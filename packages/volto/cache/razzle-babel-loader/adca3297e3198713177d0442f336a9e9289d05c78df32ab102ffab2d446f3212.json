{"ast":null,"code":"var _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Search/components/FilterList.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport { Accordion, Button, Icon } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport isEmpty from 'lodash/isEmpty';\nimport { default as VoltoIcon } from '@plone/volto/components/theme/Icon/Icon';\nimport { resolveExtension } from '@plone/volto/helpers/Extensions';\nimport config from '@plone/volto/registry';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nconst messages = defineMessages({\n  currentFilters: {\n    \"id\": \"Current filters applied\",\n    \"defaultMessage\": \"Current filters applied\"\n  },\n  clearFilters: {\n    \"id\": \"Clear filters\",\n    \"defaultMessage\": \"Clear filters\"\n  }\n});\n\n/**\n * A list of active filtered values and controls to clear those filters.\n *\n */\nconst FilterList = props => {\n  var _data$facets;\n  const {\n    data = {},\n    facets = {},\n    setFacets,\n    isEditMode\n  } = props;\n  const definedFacets = data.facets || [];\n  const [isOpened, setIsOpened] = React.useState(false);\n  const totalFilters = definedFacets.filter(({\n    field\n  }) => field && Object.keys(facets).includes(field.value) && !isEmpty(facets[field.value])).length;\n  const {\n    types: facetWidgetTypes\n  } = config.blocks.blocksConfig.search.extensions.facetWidgets;\n  const intl = useIntl();\n  return totalFilters ? __jsx(Accordion, {\n    className: \"filter-listing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(Accordion.Title, {\n    className: \"filter-list-header\",\n    active: isOpened,\n    onClick: () => setIsOpened(!isOpened),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"filter-list-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(VoltoIcon, {\n    name: downSVG,\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), intl.formatMessage(messages.currentFilters), \": \", totalFilters), __jsx(Button, {\n    icon: true,\n    basic: true,\n    compact: true,\n    size: \"small\",\n    onClick: e => {\n      e.stopPropagation();\n      !isEditMode && setFacets({});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: \"trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), intl.formatMessage(messages.clearFilters))), __jsx(Accordion.Content, {\n    className: \"filter-list-content\",\n    active: isOpened,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"filter-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, (_data$facets = data.facets) === null || _data$facets === void 0 ? void 0 : _data$facets.map((facetSettings, i) => {\n    var _facetSettings$field, _facetSettings$title, _facetSettings$field2;\n    const {\n      filterListComponent: FilterListComponent\n    } = resolveExtension('type', facetWidgetTypes, facetSettings);\n    const facet = facetSettings === null || facetSettings === void 0 ? void 0 : (_facetSettings$field = facetSettings.field) === null || _facetSettings$field === void 0 ? void 0 : _facetSettings$field.value;\n    if (!facet) return null;\n    return __jsx(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, Object.keys(facets).includes(facet) && !!facets[facet] && __jsx(\"div\", {\n      className: \"filter-list-group\",\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, __jsx(\"span\", {\n      className: \"label-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, (_facetSettings$title = facetSettings.title) !== null && _facetSettings$title !== void 0 ? _facetSettings$title : facetSettings === null || facetSettings === void 0 ? void 0 : (_facetSettings$field2 = facetSettings.field) === null || _facetSettings$field2 === void 0 ? void 0 : _facetSettings$field2.label), __jsx(FilterListComponent, _extends({}, props, {\n      facet: facet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }))));\n  })))) : null;\n};\nexport default FilterList;","map":{"version":3,"names":["React","Accordion","Button","Icon","defineMessages","useIntl","isEmpty","default","VoltoIcon","resolveExtension","config","downSVG","messages","currentFilters","clearFilters","FilterList","props","_data$facets","data","facets","setFacets","isEditMode","definedFacets","isOpened","setIsOpened","useState","totalFilters","filter","field","Object","keys","includes","value","length","types","facetWidgetTypes","blocks","blocksConfig","search","extensions","facetWidgets","intl","__jsx","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Title","active","onClick","name","size","formatMessage","icon","basic","compact","e","stopPropagation","Content","map","facetSettings","i","_facetSettings$field","_facetSettings$title","_facetSettings$field2","filterListComponent","FilterListComponent","facet","key","title","label","_extends"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/manage/Blocks/Search/components/FilterList.jsx"],"sourcesContent":["import React from 'react';\nimport { Accordion, Button, Icon } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport isEmpty from 'lodash/isEmpty';\n\nimport { default as VoltoIcon } from '@plone/volto/components/theme/Icon/Icon';\nimport { resolveExtension } from '@plone/volto/helpers/Extensions';\nimport config from '@plone/volto/registry';\n\nimport downSVG from '@plone/volto/icons/down-key.svg';\n\nconst messages = defineMessages({\n  currentFilters: {\n    id: 'Current filters applied',\n    defaultMessage: 'Current filters applied',\n  },\n  clearFilters: {\n    id: 'Clear filters',\n    defaultMessage: 'Clear filters',\n  },\n});\n\n/**\n * A list of active filtered values and controls to clear those filters.\n *\n */\nconst FilterList = (props) => {\n  const { data = {}, facets = {}, setFacets, isEditMode } = props;\n  const definedFacets = data.facets || [];\n  const [isOpened, setIsOpened] = React.useState(false);\n\n  const totalFilters = definedFacets.filter(\n    ({ field }) =>\n      field &&\n      Object.keys(facets).includes(field.value) &&\n      !isEmpty(facets[field.value]),\n  ).length;\n\n  const { types: facetWidgetTypes } =\n    config.blocks.blocksConfig.search.extensions.facetWidgets;\n\n  const intl = useIntl();\n\n  return totalFilters ? (\n    <Accordion className=\"filter-listing\">\n      <Accordion.Title\n        className=\"filter-list-header\"\n        active={isOpened}\n        onClick={() => setIsOpened(!isOpened)}\n      >\n        <div className=\"filter-list-title\">\n          <VoltoIcon name={downSVG} size=\"18px\" />\n          {intl.formatMessage(messages.currentFilters)}: {totalFilters}\n        </div>\n        <Button\n          icon\n          basic\n          compact\n          size=\"small\"\n          onClick={(e) => {\n            e.stopPropagation();\n            !isEditMode && setFacets({});\n          }}\n        >\n          <Icon name=\"trash\" />\n          {intl.formatMessage(messages.clearFilters)}\n        </Button>\n      </Accordion.Title>\n      <Accordion.Content className=\"filter-list-content\" active={isOpened}>\n        <div className=\"filter-list\">\n          {data.facets?.map((facetSettings, i) => {\n            const { filterListComponent: FilterListComponent } =\n              resolveExtension('type', facetWidgetTypes, facetSettings);\n            const facet = facetSettings?.field?.value;\n            if (!facet) return null;\n\n            return (\n              <div key={i}>\n                {Object.keys(facets).includes(facet) && !!facets[facet] && (\n                  <div className=\"filter-list-group\" key={i}>\n                    <span className=\"label-title\">\n                      {facetSettings.title ?? facetSettings?.field?.label}\n                    </span>\n                    <FilterListComponent {...props} facet={facet} />\n                  </div>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </Accordion.Content>\n    </Accordion>\n  ) : null;\n};\n\nexport default FilterList;\n"],"mappings":"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","ignoreList":[]},"metadata":{"react-intl":{"messages":[{"id":"Current filters applied","defaultMessage":"Current filters applied"},{"id":"Clear filters","defaultMessage":"Clear filters"}]}},"sourceType":"module","externalDependencies":[]}