{"ast":null,"code":"import _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/Icon/Icon.jsx\";\nvar __jsx = React.createElement;\n/**\n * Icon component.\n * @module components/theme/Icon/Icon\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nconst defaultSize = '36px';\n\n/**\n * Component to display an SVG as Icon.\n * @function Field\n * @param {Object} props Component properties.\n * @param {string} props.name Name source object.\n * @param {string} [props.size] Size of the Icon (in px).\n * @param {string} [props.color] Color of the Icon.\n * @param {string} [props.className] className to add to the component.\n * @param {string} [props.title] Title (a11y).\n * @returns {string} Markup of the component.\n *\n * Use:\n * drop icon to the icons folder (\"src/icons\")\n * import svg into the file\n * import this Icon component\n * add icon component with name = your imported svg\n *\n * Reasoning:\n * add a11y title to SVGs\n * load svg via webpack for optimization\n * Zero conf Inlined SVGs, as it is the best option when working with SVG\n * see razzle.config.js\n *\n * for further reference see {@link https://kitconcept.com/blog/pastanaga-icon-system/ | here}\n */\nconst Icon = ({\n  name,\n  size,\n  color,\n  className,\n  title,\n  onClick,\n  style = {},\n  id,\n  ariaHidden\n}) => {\n  var _name$attributes, _name$attributes2;\n  return __jsx(\"svg\", {\n    xmlns: name === null || name === void 0 ? void 0 : (_name$attributes = name.attributes) === null || _name$attributes === void 0 ? void 0 : _name$attributes.xmlns,\n    viewBox: name === null || name === void 0 ? void 0 : (_name$attributes2 = name.attributes) === null || _name$attributes2 === void 0 ? void 0 : _name$attributes2.viewBox,\n    style: _objectSpread({\n      height: size,\n      width: 'auto',\n      fill: color || 'currentColor'\n    }, style),\n    className: className ? `icon ${className}` : 'icon',\n    onClick: onClick,\n    id: id,\n    \"aria-hidden\": ariaHidden,\n    dangerouslySetInnerHTML: {\n      __html: title ? `<title>${title}</title>${name.content}` : name.content\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  });\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_c = Icon;\nIcon.propTypes = {\n  name: PropTypes.shape({\n    xmlns: PropTypes.string,\n    viewBox: PropTypes.string,\n    content: PropTypes.string\n  }).isRequired,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  title: PropTypes.string,\n  onClick: PropTypes.func\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nIcon.defaultProps = {\n  size: defaultSize,\n  color: null,\n  className: null,\n  title: null,\n  onClick: null\n};\nexport default Icon;\nvar _c;\n$RefreshReg$(_c, \"Icon\");","map":{"version":3,"names":["React","PropTypes","defaultSize","Icon","name","size","color","className","title","onClick","style","id","ariaHidden","_name$attributes","_name$attributes2","__jsx","xmlns","attributes","viewBox","_objectSpread","height","width","fill","dangerouslySetInnerHTML","__html","content","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","shape","string","isRequired","func","defaultProps","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/Icon/Icon.jsx"],"sourcesContent":["/**\n * Icon component.\n * @module components/theme/Icon/Icon\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst defaultSize = '36px';\n\n/**\n * Component to display an SVG as Icon.\n * @function Field\n * @param {Object} props Component properties.\n * @param {string} props.name Name source object.\n * @param {string} [props.size] Size of the Icon (in px).\n * @param {string} [props.color] Color of the Icon.\n * @param {string} [props.className] className to add to the component.\n * @param {string} [props.title] Title (a11y).\n * @returns {string} Markup of the component.\n *\n * Use:\n * drop icon to the icons folder (\"src/icons\")\n * import svg into the file\n * import this Icon component\n * add icon component with name = your imported svg\n *\n * Reasoning:\n * add a11y title to SVGs\n * load svg via webpack for optimization\n * Zero conf Inlined SVGs, as it is the best option when working with SVG\n * see razzle.config.js\n *\n * for further reference see {@link https://kitconcept.com/blog/pastanaga-icon-system/ | here}\n */\nconst Icon = ({\n  name,\n  size,\n  color,\n  className,\n  title,\n  onClick,\n  style = {},\n  id,\n  ariaHidden,\n}) => (\n  <svg\n    xmlns={name?.attributes?.xmlns}\n    viewBox={name?.attributes?.viewBox}\n    style={{\n      height: size,\n      width: 'auto',\n      fill: color || 'currentColor',\n      ...style,\n    }}\n    className={className ? `icon ${className}` : 'icon'}\n    onClick={onClick}\n    id={id}\n    aria-hidden={ariaHidden}\n    dangerouslySetInnerHTML={{\n      __html: title ? `<title>${title}</title>${name.content}` : name.content,\n    }}\n  />\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nIcon.propTypes = {\n  name: PropTypes.shape({\n    xmlns: PropTypes.string,\n    viewBox: PropTypes.string,\n    content: PropTypes.string,\n  }).isRequired,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  title: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nIcon.defaultProps = {\n  size: defaultSize,\n  color: null,\n  className: null,\n  title: null,\n  onClick: null,\n};\n\nexport default Icon;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAElC,MAAMC,WAAW,GAAG,MAAM;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,IAAI,GAAGA,CAAC;EACZC,IAAI;EACJC,IAAI;EACJC,KAAK;EACLC,SAAS;EACTC,KAAK;EACLC,OAAO;EACPC,KAAK,GAAG,CAAC,CAAC;EACVC,EAAE;EACFC;AACF,CAAC;EAAA,IAAAC,gBAAA,EAAAC,iBAAA;EAAA,OACCC,KAAA;IACEC,KAAK,EAAEZ,IAAI,aAAJA,IAAI,wBAAAS,gBAAA,GAAJT,IAAI,CAAEa,UAAU,cAAAJ,gBAAA,uBAAhBA,gBAAA,CAAkBG,KAAM;IAC/BE,OAAO,EAAEd,IAAI,aAAJA,IAAI,wBAAAU,iBAAA,GAAJV,IAAI,CAAEa,UAAU,cAAAH,iBAAA,uBAAhBA,iBAAA,CAAkBI,OAAQ;IACnCR,KAAK,EAAAS,aAAA;MACHC,MAAM,EAAEf,IAAI;MACZgB,KAAK,EAAE,MAAM;MACbC,IAAI,EAAEhB,KAAK,IAAI;IAAc,GAC1BI,KAAK,CACR;IACFH,SAAS,EAAEA,SAAS,GAAG,QAAQA,SAAS,EAAE,GAAG,MAAO;IACpDE,OAAO,EAAEA,OAAQ;IACjBE,EAAE,EAAEA,EAAG;IACP,eAAaC,UAAW;IACxBW,uBAAuB,EAAE;MACvBC,MAAM,EAAEhB,KAAK,GAAG,UAAUA,KAAK,WAAWJ,IAAI,CAACqB,OAAO,EAAE,GAAGrB,IAAI,CAACqB;IAClE,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CAAC;AAAA,CACH;;AAED;AACA;AACA;AACA;AACA;AAJAC,EAAA,GA9BM7B,IAAI;AAmCVA,IAAI,CAAC8B,SAAS,GAAG;EACf7B,IAAI,EAAEH,SAAS,CAACiC,KAAK,CAAC;IACpBlB,KAAK,EAAEf,SAAS,CAACkC,MAAM;IACvBjB,OAAO,EAAEjB,SAAS,CAACkC,MAAM;IACzBV,OAAO,EAAExB,SAAS,CAACkC;EACrB,CAAC,CAAC,CAACC,UAAU;EACb/B,IAAI,EAAEJ,SAAS,CAACkC,MAAM;EACtB7B,KAAK,EAAEL,SAAS,CAACkC,MAAM;EACvB5B,SAAS,EAAEN,SAAS,CAACkC,MAAM;EAC3B3B,KAAK,EAAEP,SAAS,CAACkC,MAAM;EACvB1B,OAAO,EAAER,SAAS,CAACoC;AACrB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAlC,IAAI,CAACmC,YAAY,GAAG;EAClBjC,IAAI,EAAEH,WAAW;EACjBI,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE,IAAI;EACfC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE;AACX,CAAC;AAED,eAAeN,IAAI;AAAC,IAAA6B,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}