{"ast":null,"code":"import _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/FormattedDate/FormattedRelativeDate.jsx\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { formatRelativeDate, long_date_format, toDate } from '@plone/volto/helpers/Utils/Date';\nimport { useSelector } from 'react-redux';\nconst FormattedRelativeDate = ({\n  date,\n  style,\n  relativeTo,\n  className,\n  locale,\n  children,\n  live = false,\n  refresh = 5000\n}) => {\n  _s();\n  const language = useSelector(state => locale || state.intl.locale);\n  const [liveRelativeTo, setLiveRelativeTo] = React.useState(relativeTo ? toDate(relativeTo) : new Date());\n  const interval = React.useRef();\n  React.useEffect(() => {\n    if (live) {\n      interval.current = setInterval(() => {\n        setLiveRelativeTo(new Date());\n      }, refresh);\n    }\n    return () => interval.current && clearInterval(interval.current);\n  }, [refresh, live]);\n  const args = {\n    locale: language,\n    date,\n    style,\n    relativeTo: liveRelativeTo\n  };\n  return __jsx(\"time\", {\n    className: className,\n    dateTime: date,\n    title: new Intl.DateTimeFormat(language, long_date_format).format(new Date(date)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, children ? children(formatRelativeDate(_objectSpread(_objectSpread({}, args), {}, {\n    formatToParts: true\n  }))) : formatRelativeDate(args));\n};\n_s(FormattedRelativeDate, \"0sbBF94eOrnShQD000G+l5tKXYU=\", false, function () {\n  return [useSelector];\n});\n_c = FormattedRelativeDate;\nexport default FormattedRelativeDate;\nvar _c;\n$RefreshReg$(_c, \"FormattedRelativeDate\");","map":{"version":3,"names":["React","formatRelativeDate","long_date_format","toDate","useSelector","FormattedRelativeDate","date","style","relativeTo","className","locale","children","live","refresh","_s","language","state","intl","liveRelativeTo","setLiveRelativeTo","useState","Date","interval","useRef","useEffect","current","setInterval","clearInterval","args","__jsx","dateTime","title","Intl","DateTimeFormat","format","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_objectSpread","formatToParts","_c","$RefreshReg$"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/components/theme/FormattedDate/FormattedRelativeDate.jsx"],"sourcesContent":["import React from 'react';\nimport {\n  formatRelativeDate,\n  long_date_format,\n  toDate,\n} from '@plone/volto/helpers/Utils/Date';\nimport { useSelector } from 'react-redux';\n\nconst FormattedRelativeDate = ({\n  date,\n  style,\n  relativeTo,\n  className,\n  locale,\n  children,\n  live = false,\n  refresh = 5000,\n}) => {\n  const language = useSelector((state) => locale || state.intl.locale);\n  const [liveRelativeTo, setLiveRelativeTo] = React.useState(\n    relativeTo ? toDate(relativeTo) : new Date(),\n  );\n\n  const interval = React.useRef();\n\n  React.useEffect(() => {\n    if (live) {\n      interval.current = setInterval(() => {\n        setLiveRelativeTo(new Date());\n      }, refresh);\n    }\n    return () => interval.current && clearInterval(interval.current);\n  }, [refresh, live]);\n\n  const args = { locale: language, date, style, relativeTo: liveRelativeTo };\n\n  return (\n    <time\n      className={className}\n      dateTime={date}\n      title={new Intl.DateTimeFormat(language, long_date_format).format(\n        new Date(date),\n      )}\n    >\n      {children\n        ? children(\n            formatRelativeDate({\n              ...args,\n              formatToParts: true,\n            }),\n          )\n        : formatRelativeDate(args)}\n    </time>\n  );\n};\n\nexport default FormattedRelativeDate;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,kBAAkB,EAClBC,gBAAgB,EAChBC,MAAM,QACD,iCAAiC;AACxC,SAASC,WAAW,QAAQ,aAAa;AAEzC,MAAMC,qBAAqB,GAAGA,CAAC;EAC7BC,IAAI;EACJC,KAAK;EACLC,UAAU;EACVC,SAAS;EACTC,MAAM;EACNC,QAAQ;EACRC,IAAI,GAAG,KAAK;EACZC,OAAO,GAAG;AACZ,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,QAAQ,GAAGX,WAAW,CAAEY,KAAK,IAAKN,MAAM,IAAIM,KAAK,CAACC,IAAI,CAACP,MAAM,CAAC;EACpE,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,KAAK,CAACoB,QAAQ,CACxDZ,UAAU,GAAGL,MAAM,CAACK,UAAU,CAAC,GAAG,IAAIa,IAAI,CAAC,CAC7C,CAAC;EAED,MAAMC,QAAQ,GAAGtB,KAAK,CAACuB,MAAM,CAAC,CAAC;EAE/BvB,KAAK,CAACwB,SAAS,CAAC,MAAM;IACpB,IAAIZ,IAAI,EAAE;MACRU,QAAQ,CAACG,OAAO,GAAGC,WAAW,CAAC,MAAM;QACnCP,iBAAiB,CAAC,IAAIE,IAAI,CAAC,CAAC,CAAC;MAC/B,CAAC,EAAER,OAAO,CAAC;IACb;IACA,OAAO,MAAMS,QAAQ,CAACG,OAAO,IAAIE,aAAa,CAACL,QAAQ,CAACG,OAAO,CAAC;EAClE,CAAC,EAAE,CAACZ,OAAO,EAAED,IAAI,CAAC,CAAC;EAEnB,MAAMgB,IAAI,GAAG;IAAElB,MAAM,EAAEK,QAAQ;IAAET,IAAI;IAAEC,KAAK;IAAEC,UAAU,EAAEU;EAAe,CAAC;EAE1E,OACEW,KAAA;IACEpB,SAAS,EAAEA,SAAU;IACrBqB,QAAQ,EAAExB,IAAK;IACfyB,KAAK,EAAE,IAAIC,IAAI,CAACC,cAAc,CAAClB,QAAQ,EAAEb,gBAAgB,CAAC,CAACgC,MAAM,CAC/D,IAAIb,IAAI,CAACf,IAAI,CACf,CAAE;IAAA6B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAED7B,QAAQ,GACLA,QAAQ,CACNV,kBAAkB,CAAAwC,aAAA,CAAAA,aAAA,KACbb,IAAI;IACPc,aAAa,EAAE;EAAI,EACpB,CACH,CAAC,GACDzC,kBAAkB,CAAC2B,IAAI,CACvB,CAAC;AAEX,CAAC;AAACd,EAAA,CA9CIT,qBAAqB;EAAA,QAURD,WAAW;AAAA;AAAAuC,EAAA,GAVxBtC,qBAAqB;AAgD3B,eAAeA,qBAAqB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}