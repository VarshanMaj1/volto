{"ast":null,"code":"import _objectSpread from \"/Users/varshanmaji/Projects/volto/node_modules/.pnpm/@babel+runtime@7.20.6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { SET_BLOCKS_CLIPBOARD, RESET_BLOCKS_CLIPBOARD } from '@plone/volto/constants/ActionTypes';\nconst initialState = {};\nexport default function blocks(state = initialState, action = {}) {\n  switch (action.type) {\n    case RESET_BLOCKS_CLIPBOARD:\n      return initialState;\n    case SET_BLOCKS_CLIPBOARD:\n      return _objectSpread({}, Object.assign({}, action.cut ? {\n        cut: action.cut\n      } : {}, action.copy ? {\n        copy: action.copy\n      } : {}));\n    default:\n      break;\n  }\n  return state;\n}","map":{"version":3,"names":["SET_BLOCKS_CLIPBOARD","RESET_BLOCKS_CLIPBOARD","initialState","blocks","state","action","type","_objectSpread","Object","assign","cut","copy"],"sources":["/Users/varshanmaji/Projects/volto/packages/volto/src/reducers/blocksClipboard/blocksClipboard.js"],"sourcesContent":["import {\n  SET_BLOCKS_CLIPBOARD,\n  RESET_BLOCKS_CLIPBOARD,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {};\n\nexport default function blocks(state = initialState, action = {}) {\n  switch (action.type) {\n    case RESET_BLOCKS_CLIPBOARD:\n      return initialState;\n    case SET_BLOCKS_CLIPBOARD:\n      return {\n        ...Object.assign(\n          {},\n          action.cut ? { cut: action.cut } : {},\n          action.copy ? { copy: action.copy } : {},\n        ),\n      };\n    default:\n      break;\n  }\n  return state;\n}\n"],"mappings":";AAAA,SACEA,oBAAoB,EACpBC,sBAAsB,QACjB,oCAAoC;AAE3C,MAAMC,YAAY,GAAG,CAAC,CAAC;AAEvB,eAAe,SAASC,MAAMA,CAACC,KAAK,GAAGF,YAAY,EAAEG,MAAM,GAAG,CAAC,CAAC,EAAE;EAChE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKL,sBAAsB;MACzB,OAAOC,YAAY;IACrB,KAAKF,oBAAoB;MACvB,OAAAO,aAAA,KACKC,MAAM,CAACC,MAAM,CACd,CAAC,CAAC,EACFJ,MAAM,CAACK,GAAG,GAAG;QAAEA,GAAG,EAAEL,MAAM,CAACK;MAAI,CAAC,GAAG,CAAC,CAAC,EACrCL,MAAM,CAACM,IAAI,GAAG;QAAEA,IAAI,EAAEN,MAAM,CAACM;MAAK,CAAC,GAAG,CAAC,CACzC,CAAC;IAEL;MACE;EACJ;EACA,OAAOP,KAAK;AACd","ignoreList":[]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}